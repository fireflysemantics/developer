(self.webpackChunkfs_developer_app=self.webpackChunkfs_developer_app||[]).push([[179],{255:e=>{function t(e){return Promise.resolve().then(()=>{var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t})}t.keys=()=>[],t.resolve=t,t.id=255,e.exports=t},325:(e,t,n)=>{var o,i;!function(){var r,a,s,l,c,d,p,u,h,m,g,f,b,y,v,w,k,S,_,T,A,C,x,I,E,D=function(e){var t=new D.Builder;return t.pipeline.add(D.trimmer,D.stopWordFilter,D.stemmer),t.searchPipeline.add(D.stemmer),e.call(t,t),t.build()};D.version="2.3.9",D.utils={},D.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),D.utils.asString=function(e){return null==e?"":e.toString()},D.utils.clone=function(e){if(null==e)return e;for(var t=Object.create(null),n=Object.keys(e),o=0;o<n.length;o++){var i=n[o],r=e[i];if(Array.isArray(r))t[i]=r.slice();else{if("string"!=typeof r&&"number"!=typeof r&&"boolean"!=typeof r)throw new TypeError("clone is not deep and does not support nested objects");t[i]=r}}return t},D.FieldRef=function(e,t,n){this.docRef=e,this.fieldName=t,this._stringValue=n},D.FieldRef.joiner="/",D.FieldRef.fromString=function(e){var t=e.indexOf(D.FieldRef.joiner);if(-1===t)throw"malformed field ref string";var n=e.slice(0,t),o=e.slice(t+1);return new D.FieldRef(o,n,e)},D.FieldRef.prototype.toString=function(){return null==this._stringValue&&(this._stringValue=this.fieldName+D.FieldRef.joiner+this.docRef),this._stringValue},D.Set=function(e){if(this.elements=Object.create(null),e){this.length=e.length;for(var t=0;t<this.length;t++)this.elements[e[t]]=!0}else this.length=0},D.Set.complete={intersect:function(e){return e},union:function(){return this},contains:function(){return!0}},D.Set.empty={intersect:function(){return this},union:function(e){return e},contains:function(){return!1}},D.Set.prototype.contains=function(e){return!!this.elements[e]},D.Set.prototype.intersect=function(e){var t,n,o,i=[];if(e===D.Set.complete)return this;if(e===D.Set.empty)return e;this.length<e.length?(t=this,n=e):(t=e,n=this),o=Object.keys(t.elements);for(var r=0;r<o.length;r++){var a=o[r];a in n.elements&&i.push(a)}return new D.Set(i)},D.Set.prototype.union=function(e){return e===D.Set.complete?D.Set.complete:e===D.Set.empty?this:new D.Set(Object.keys(this.elements).concat(Object.keys(e.elements)))},D.idf=function(e,t){var n=0;for(var o in e)"_index"!=o&&(n+=Object.keys(e[o]).length);return Math.log(1+Math.abs((t-n+.5)/(n+.5)))},D.Token=function(e,t){this.str=e||"",this.metadata=t||{}},D.Token.prototype.toString=function(){return this.str},D.Token.prototype.update=function(e){return this.str=e(this.str,this.metadata),this},D.Token.prototype.clone=function(e){return new D.Token((e=e||function(e){return e})(this.str,this.metadata),this.metadata)},D.tokenizer=function(e,t){if(null==e||null==e)return[];if(Array.isArray(e))return e.map(function(e){return new D.Token(D.utils.asString(e).toLowerCase(),D.utils.clone(t))});for(var n=e.toString().toLowerCase(),o=n.length,i=[],r=0,a=0;r<=o;r++){var s=r-a;if(n.charAt(r).match(D.tokenizer.separator)||r==o){if(s>0){var l=D.utils.clone(t)||{};l.position=[a,s],l.index=i.length,i.push(new D.Token(n.slice(a,r),l))}a=r+1}}return i},D.tokenizer.separator=/[\s\-]+/,D.Pipeline=function(){this._stack=[]},D.Pipeline.registeredFunctions=Object.create(null),D.Pipeline.registerFunction=function(e,t){t in this.registeredFunctions&&D.utils.warn("Overwriting existing registered function: "+t),e.label=t,D.Pipeline.registeredFunctions[e.label]=e},D.Pipeline.warnIfFunctionNotRegistered=function(e){e.label&&e.label in this.registeredFunctions||D.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},D.Pipeline.load=function(e){var t=new D.Pipeline;return e.forEach(function(e){var n=D.Pipeline.registeredFunctions[e];if(!n)throw new Error("Cannot load unregistered function: "+e);t.add(n)}),t},D.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){D.Pipeline.warnIfFunctionNotRegistered(e),this._stack.push(e)},this)},D.Pipeline.prototype.after=function(e,t){D.Pipeline.warnIfFunctionNotRegistered(t);var n=this._stack.indexOf(e);if(-1==n)throw new Error("Cannot find existingFn");this._stack.splice(n+=1,0,t)},D.Pipeline.prototype.before=function(e,t){D.Pipeline.warnIfFunctionNotRegistered(t);var n=this._stack.indexOf(e);if(-1==n)throw new Error("Cannot find existingFn");this._stack.splice(n,0,t)},D.Pipeline.prototype.remove=function(e){var t=this._stack.indexOf(e);-1!=t&&this._stack.splice(t,1)},D.Pipeline.prototype.run=function(e){for(var t=this._stack.length,n=0;n<t;n++){for(var o=this._stack[n],i=[],r=0;r<e.length;r++){var a=o(e[r],r,e);if(null!=a&&""!==a)if(Array.isArray(a))for(var s=0;s<a.length;s++)i.push(a[s]);else i.push(a)}e=i}return e},D.Pipeline.prototype.runString=function(e,t){var n=new D.Token(e,t);return this.run([n]).map(function(e){return e.toString()})},D.Pipeline.prototype.reset=function(){this._stack=[]},D.Pipeline.prototype.toJSON=function(){return this._stack.map(function(e){return D.Pipeline.warnIfFunctionNotRegistered(e),e.label})},D.Vector=function(e){this._magnitude=0,this.elements=e||[]},D.Vector.prototype.positionForIndex=function(e){if(0==this.elements.length)return 0;for(var t=0,n=this.elements.length/2,o=n-t,i=Math.floor(o/2),r=this.elements[2*i];o>1&&(r<e&&(t=i),r>e&&(n=i),r!=e);)o=n-t,i=t+Math.floor(o/2),r=this.elements[2*i];return r==e||r>e?2*i:r<e?2*(i+1):void 0},D.Vector.prototype.insert=function(e,t){this.upsert(e,t,function(){throw"duplicate index"})},D.Vector.prototype.upsert=function(e,t,n){this._magnitude=0;var o=this.positionForIndex(e);this.elements[o]==e?this.elements[o+1]=n(this.elements[o+1],t):this.elements.splice(o,0,e,t)},D.Vector.prototype.magnitude=function(){if(this._magnitude)return this._magnitude;for(var e=0,t=this.elements.length,n=1;n<t;n+=2){var o=this.elements[n];e+=o*o}return this._magnitude=Math.sqrt(e)},D.Vector.prototype.dot=function(e){for(var t=0,n=this.elements,o=e.elements,i=n.length,r=o.length,a=0,s=0,l=0,c=0;l<i&&c<r;)(a=n[l])<(s=o[c])?l+=2:a>s?c+=2:a==s&&(t+=n[l+1]*o[c+1],l+=2,c+=2);return t},D.Vector.prototype.similarity=function(e){return this.dot(e)/this.magnitude()||0},D.Vector.prototype.toArray=function(){for(var e=new Array(this.elements.length/2),t=1,n=0;t<this.elements.length;t+=2,n++)e[n]=this.elements[t];return e},D.Vector.prototype.toJSON=function(){return this.elements},D.stemmer=(r={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},a={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},s="[aeiouy]",l="[^aeiou][^aeiouy]*",c=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),d=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*[aeiouy][aeiou]*[^aeiou][^aeiouy]*"),p=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy][aeiou]*[^aeiou][^aeiouy]*([aeiouy][aeiou]*)?$"),u=new RegExp("^([^aeiou][^aeiouy]*)?[aeiouy]"),h=/^(.+?)(ss|i)es$/,m=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,f=/^(.+?)(ed|ing)$/,b=/.$/,y=/(at|bl|iz)$/,v=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+l+s+"[^aeiouwxy]$"),k=/^(.+?[^aeiou])y$/,S=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,_=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,T=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,A=/^(.+?)(s|t)(ion)$/,C=/^(.+?)e$/,x=/ll$/,I=new RegExp("^"+l+s+"[^aeiouwxy]$"),E=function(e){var t,n,o,i,s,l,E;if(e.length<3)return e;if("y"==(o=e.substr(0,1))&&(e=o.toUpperCase()+e.substr(1)),s=m,(i=h).test(e)?e=e.replace(i,"$1$2"):s.test(e)&&(e=e.replace(s,"$1$2")),s=f,(i=g).test(e)){var D=i.exec(e);(i=c).test(D[1])&&(e=e.replace(i=b,""))}else s.test(e)&&(D=s.exec(e),(s=u).test(t=D[1])&&(l=v,E=w,(s=y).test(e=t)?e+="e":l.test(e)?e=e.replace(i=b,""):E.test(e)&&(e+="e")));return(i=k).test(e)&&(e=(t=(D=i.exec(e))[1])+"i"),(i=S).test(e)&&(n=(D=i.exec(e))[2],(i=c).test(t=D[1])&&(e=t+r[n])),(i=_).test(e)&&(n=(D=i.exec(e))[2],(i=c).test(t=D[1])&&(e=t+a[n])),s=A,(i=T).test(e)?(D=i.exec(e),(i=d).test(t=D[1])&&(e=t)):s.test(e)&&(D=s.exec(e),(s=d).test(t=D[1]+D[2])&&(e=t)),(i=C).test(e)&&(D=i.exec(e),s=p,l=I,((i=d).test(t=D[1])||s.test(t)&&!l.test(t))&&(e=t)),s=d,(i=x).test(e)&&s.test(e)&&(e=e.replace(i=b,"")),"y"==o&&(e=o.toLowerCase()+e.substr(1)),e},function(e){return e.update(E)}),D.Pipeline.registerFunction(D.stemmer,"stemmer"),D.generateStopWordFilter=function(e){var t=e.reduce(function(e,t){return e[t]=t,e},{});return function(e){if(e&&t[e.toString()]!==e.toString())return e}},D.stopWordFilter=D.generateStopWordFilter(["a","able","about","across","after","all","almost","also","am","among","an","and","any","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","get","got","had","has","have","he","her","hers","him","his","how","however","i","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","off","often","on","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","this","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your"]),D.Pipeline.registerFunction(D.stopWordFilter,"stopWordFilter"),D.trimmer=function(e){return e.update(function(e){return e.replace(/^\W+/,"").replace(/\W+$/,"")})},D.Pipeline.registerFunction(D.trimmer,"trimmer"),D.TokenSet=function(){this.final=!1,this.edges={},this.id=D.TokenSet._nextId,D.TokenSet._nextId+=1},D.TokenSet._nextId=1,D.TokenSet.fromArray=function(e){for(var t=new D.TokenSet.Builder,n=0,o=e.length;n<o;n++)t.insert(e[n]);return t.finish(),t.root},D.TokenSet.fromClause=function(e){return"editDistance"in e?D.TokenSet.fromFuzzyString(e.term,e.editDistance):D.TokenSet.fromString(e.term)},D.TokenSet.fromFuzzyString=function(e,t){for(var n=new D.TokenSet,o=[{node:n,editsRemaining:t,str:e}];o.length;){var i=o.pop();if(i.str.length>0){var r,a=i.str.charAt(0);a in i.node.edges?r=i.node.edges[a]:(r=new D.TokenSet,i.node.edges[a]=r),1==i.str.length&&(r.final=!0),o.push({node:r,editsRemaining:i.editsRemaining,str:i.str.slice(1)})}if(0!=i.editsRemaining){if("*"in i.node.edges)var s=i.node.edges["*"];else s=new D.TokenSet,i.node.edges["*"]=s;if(0==i.str.length&&(s.final=!0),o.push({node:s,editsRemaining:i.editsRemaining-1,str:i.str}),i.str.length>1&&o.push({node:i.node,editsRemaining:i.editsRemaining-1,str:i.str.slice(1)}),1==i.str.length&&(i.node.final=!0),i.str.length>=1){if("*"in i.node.edges)var l=i.node.edges["*"];else l=new D.TokenSet,i.node.edges["*"]=l;1==i.str.length&&(l.final=!0),o.push({node:l,editsRemaining:i.editsRemaining-1,str:i.str.slice(1)})}if(i.str.length>1){var c,d=i.str.charAt(0),p=i.str.charAt(1);p in i.node.edges?c=i.node.edges[p]:(c=new D.TokenSet,i.node.edges[p]=c),1==i.str.length&&(c.final=!0),o.push({node:c,editsRemaining:i.editsRemaining-1,str:d+i.str.slice(2)})}}}return n},D.TokenSet.fromString=function(e){for(var t=new D.TokenSet,n=t,o=0,i=e.length;o<i;o++){var r=e[o],a=o==i-1;if("*"==r)t.edges[r]=t,t.final=a;else{var s=new D.TokenSet;s.final=a,t.edges[r]=s,t=s}}return n},D.TokenSet.prototype.toArray=function(){for(var e=[],t=[{prefix:"",node:this}];t.length;){var n=t.pop(),o=Object.keys(n.node.edges),i=o.length;n.node.final&&(n.prefix.charAt(0),e.push(n.prefix));for(var r=0;r<i;r++){var a=o[r];t.push({prefix:n.prefix.concat(a),node:n.node.edges[a]})}}return e},D.TokenSet.prototype.toString=function(){if(this._str)return this._str;for(var e=this.final?"1":"0",t=Object.keys(this.edges).sort(),n=t.length,o=0;o<n;o++){var i=t[o];e=e+i+this.edges[i].id}return e},D.TokenSet.prototype.intersect=function(e){for(var t=new D.TokenSet,n=void 0,o=[{qNode:e,output:t,node:this}];o.length;){n=o.pop();for(var i=Object.keys(n.qNode.edges),r=i.length,a=Object.keys(n.node.edges),s=a.length,l=0;l<r;l++)for(var c=i[l],d=0;d<s;d++){var p=a[d];if(p==c||"*"==c){var u=n.node.edges[p],h=n.qNode.edges[c],m=u.final&&h.final,g=void 0;p in n.output.edges?(g=n.output.edges[p]).final=g.final||m:((g=new D.TokenSet).final=m,n.output.edges[p]=g),o.push({qNode:h,output:g,node:u})}}}return t},D.TokenSet.Builder=function(){this.previousWord="",this.root=new D.TokenSet,this.uncheckedNodes=[],this.minimizedNodes={}},D.TokenSet.Builder.prototype.insert=function(e){var t,n=0;if(e<this.previousWord)throw new Error("Out of order word insertion");for(var o=0;o<e.length&&o<this.previousWord.length&&e[o]==this.previousWord[o];o++)n++;for(this.minimize(n),t=0==this.uncheckedNodes.length?this.root:this.uncheckedNodes[this.uncheckedNodes.length-1].child,o=n;o<e.length;o++){var i=new D.TokenSet,r=e[o];t.edges[r]=i,this.uncheckedNodes.push({parent:t,char:r,child:i}),t=i}t.final=!0,this.previousWord=e},D.TokenSet.Builder.prototype.finish=function(){this.minimize(0)},D.TokenSet.Builder.prototype.minimize=function(e){for(var t=this.uncheckedNodes.length-1;t>=e;t--){var n=this.uncheckedNodes[t],o=n.child.toString();o in this.minimizedNodes?n.parent.edges[n.char]=this.minimizedNodes[o]:(n.child._str=o,this.minimizedNodes[o]=n.child),this.uncheckedNodes.pop()}},D.Index=function(e){this.invertedIndex=e.invertedIndex,this.fieldVectors=e.fieldVectors,this.tokenSet=e.tokenSet,this.fields=e.fields,this.pipeline=e.pipeline},D.Index.prototype.search=function(e){return this.query(function(t){new D.QueryParser(e,t).parse()})},D.Index.prototype.query=function(e){for(var t=new D.Query(this.fields),n=Object.create(null),o=Object.create(null),i=Object.create(null),r=Object.create(null),a=Object.create(null),s=0;s<this.fields.length;s++)o[this.fields[s]]=new D.Vector;for(e.call(t,t),s=0;s<t.clauses.length;s++){var l,c=t.clauses[s],d=D.Set.empty;l=c.usePipeline?this.pipeline.runString(c.term,{fields:c.fields}):[c.term];for(var p=0;p<l.length;p++){c.term=l[p];var u=D.TokenSet.fromClause(c),h=this.tokenSet.intersect(u).toArray();if(0===h.length&&c.presence===D.Query.presence.REQUIRED){for(var m=0;m<c.fields.length;m++)r[O=c.fields[m]]=D.Set.empty;break}for(var g=0;g<h.length;g++){var f=h[g],b=this.invertedIndex[f],y=b._index;for(m=0;m<c.fields.length;m++){var v=b[O=c.fields[m]],w=Object.keys(v),k=f+"/"+O,S=new D.Set(w);if(c.presence==D.Query.presence.REQUIRED&&(d=d.union(S),void 0===r[O]&&(r[O]=D.Set.complete)),c.presence!=D.Query.presence.PROHIBITED){if(o[O].upsert(y,c.boost,function(e,t){return e+t}),!i[k]){for(var _=0;_<w.length;_++){var T,A=w[_],C=new D.FieldRef(A,O),x=v[A];void 0===(T=n[C])?n[C]=new D.MatchData(f,O,x):T.add(f,O,x)}i[k]=!0}}else void 0===a[O]&&(a[O]=D.Set.empty),a[O]=a[O].union(S)}}}if(c.presence===D.Query.presence.REQUIRED)for(m=0;m<c.fields.length;m++)r[O=c.fields[m]]=r[O].intersect(d)}var I=D.Set.complete,E=D.Set.empty;for(s=0;s<this.fields.length;s++){var O;r[O=this.fields[s]]&&(I=I.intersect(r[O])),a[O]&&(E=E.union(a[O]))}var j=Object.keys(n),R=[],q=Object.create(null);if(t.isNegated())for(j=Object.keys(this.fieldVectors),s=0;s<j.length;s++){var M=D.FieldRef.fromString(C=j[s]);n[C]=new D.MatchData}for(s=0;s<j.length;s++){var F=(M=D.FieldRef.fromString(j[s])).docRef;if(I.contains(F)&&!E.contains(F)){var P,L=o[M.fieldName].similarity(this.fieldVectors[M]);if(void 0!==(P=q[F]))P.score+=L,P.matchData.combine(n[M]);else{var z={ref:F,score:L,matchData:n[M]};q[F]=z,R.push(z)}}}return R.sort(function(e,t){return t.score-e.score})},D.Index.prototype.toJSON=function(){var e=Object.keys(this.invertedIndex).sort().map(function(e){return[e,this.invertedIndex[e]]},this),t=Object.keys(this.fieldVectors).map(function(e){return[e,this.fieldVectors[e].toJSON()]},this);return{version:D.version,fields:this.fields,fieldVectors:t,invertedIndex:e,pipeline:this.pipeline.toJSON()}},D.Index.load=function(e){var t={},n={},o=e.fieldVectors,i=Object.create(null),r=e.invertedIndex,a=new D.TokenSet.Builder,s=D.Pipeline.load(e.pipeline);e.version!=D.version&&D.utils.warn("Version mismatch when loading serialised index. Current version of lunr '"+D.version+"' does not match serialized index '"+e.version+"'");for(var l=0;l<o.length;l++)n[(c=o[l])[0]]=new D.Vector(c[1]);for(l=0;l<r.length;l++){var c,d=(c=r[l])[0],p=c[1];a.insert(d),i[d]=p}return a.finish(),t.fields=e.fields,t.fieldVectors=n,t.invertedIndex=i,t.tokenSet=a.root,t.pipeline=s,new D.Index(t)},D.Builder=function(){this._ref="id",this._fields=Object.create(null),this._documents=Object.create(null),this.invertedIndex=Object.create(null),this.fieldTermFrequencies={},this.fieldLengths={},this.tokenizer=D.tokenizer,this.pipeline=new D.Pipeline,this.searchPipeline=new D.Pipeline,this.documentCount=0,this._b=.75,this._k1=1.2,this.termIndex=0,this.metadataWhitelist=[]},D.Builder.prototype.ref=function(e){this._ref=e},D.Builder.prototype.field=function(e,t){if(/\//.test(e))throw new RangeError("Field '"+e+"' contains illegal character '/'");this._fields[e]=t||{}},D.Builder.prototype.b=function(e){this._b=e<0?0:e>1?1:e},D.Builder.prototype.k1=function(e){this._k1=e},D.Builder.prototype.add=function(e,t){var n=e[this._ref],o=Object.keys(this._fields);this._documents[n]=t||{},this.documentCount+=1;for(var i=0;i<o.length;i++){var r=o[i],a=this._fields[r].extractor,s=a?a(e):e[r],l=this.tokenizer(s,{fields:[r]}),c=this.pipeline.run(l),d=new D.FieldRef(n,r),p=Object.create(null);this.fieldTermFrequencies[d]=p,this.fieldLengths[d]=0,this.fieldLengths[d]+=c.length;for(var u=0;u<c.length;u++){var h=c[u];if(null==p[h]&&(p[h]=0),p[h]+=1,null==this.invertedIndex[h]){var m=Object.create(null);m._index=this.termIndex,this.termIndex+=1;for(var g=0;g<o.length;g++)m[o[g]]=Object.create(null);this.invertedIndex[h]=m}null==this.invertedIndex[h][r][n]&&(this.invertedIndex[h][r][n]=Object.create(null));for(var f=0;f<this.metadataWhitelist.length;f++){var b=this.metadataWhitelist[f],y=h.metadata[b];null==this.invertedIndex[h][r][n][b]&&(this.invertedIndex[h][r][n][b]=[]),this.invertedIndex[h][r][n][b].push(y)}}}},D.Builder.prototype.calculateAverageFieldLengths=function(){for(var e=Object.keys(this.fieldLengths),t=e.length,n={},o={},i=0;i<t;i++){var r=D.FieldRef.fromString(e[i]),a=r.fieldName;o[a]||(o[a]=0),o[a]+=1,n[a]||(n[a]=0),n[a]+=this.fieldLengths[r]}var s=Object.keys(this._fields);for(i=0;i<s.length;i++){var l=s[i];n[l]=n[l]/o[l]}this.averageFieldLength=n},D.Builder.prototype.createFieldVectors=function(){for(var e={},t=Object.keys(this.fieldTermFrequencies),n=t.length,o=Object.create(null),i=0;i<n;i++){for(var r=D.FieldRef.fromString(t[i]),a=r.fieldName,s=this.fieldLengths[r],l=new D.Vector,c=this.fieldTermFrequencies[r],d=Object.keys(c),p=d.length,u=this._fields[a].boost||1,h=this._documents[r.docRef].boost||1,m=0;m<p;m++){var g,f,b,y=d[m],v=c[y],w=this.invertedIndex[y]._index;void 0===o[y]?(g=D.idf(this.invertedIndex[y],this.documentCount),o[y]=g):g=o[y],f=g*((this._k1+1)*v)/(this._k1*(1-this._b+this._b*(s/this.averageFieldLength[a]))+v),f*=u,f*=h,b=Math.round(1e3*f)/1e3,l.insert(w,b)}e[r]=l}this.fieldVectors=e},D.Builder.prototype.createTokenSet=function(){this.tokenSet=D.TokenSet.fromArray(Object.keys(this.invertedIndex).sort())},D.Builder.prototype.build=function(){return this.calculateAverageFieldLengths(),this.createFieldVectors(),this.createTokenSet(),new D.Index({invertedIndex:this.invertedIndex,fieldVectors:this.fieldVectors,tokenSet:this.tokenSet,fields:Object.keys(this._fields),pipeline:this.searchPipeline})},D.Builder.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},D.MatchData=function(e,t,n){for(var o=Object.create(null),i=Object.keys(n||{}),r=0;r<i.length;r++){var a=i[r];o[a]=n[a].slice()}this.metadata=Object.create(null),void 0!==e&&(this.metadata[e]=Object.create(null),this.metadata[e][t]=o)},D.MatchData.prototype.combine=function(e){for(var t=Object.keys(e.metadata),n=0;n<t.length;n++){var o=t[n],i=Object.keys(e.metadata[o]);null==this.metadata[o]&&(this.metadata[o]=Object.create(null));for(var r=0;r<i.length;r++){var a=i[r],s=Object.keys(e.metadata[o][a]);null==this.metadata[o][a]&&(this.metadata[o][a]=Object.create(null));for(var l=0;l<s.length;l++){var c=s[l];this.metadata[o][a][c]=null==this.metadata[o][a][c]?e.metadata[o][a][c]:this.metadata[o][a][c].concat(e.metadata[o][a][c])}}}},D.MatchData.prototype.add=function(e,t,n){if(!(e in this.metadata))return this.metadata[e]=Object.create(null),void(this.metadata[e][t]=n);if(t in this.metadata[e])for(var o=Object.keys(n),i=0;i<o.length;i++){var r=o[i];this.metadata[e][t][r]=r in this.metadata[e][t]?this.metadata[e][t][r].concat(n[r]):n[r]}else this.metadata[e][t]=n},D.Query=function(e){this.clauses=[],this.allFields=e},D.Query.wildcard=new String("*"),D.Query.wildcard.NONE=0,D.Query.wildcard.LEADING=1,D.Query.wildcard.TRAILING=2,D.Query.presence={OPTIONAL:1,REQUIRED:2,PROHIBITED:3},D.Query.prototype.clause=function(e){return"fields"in e||(e.fields=this.allFields),"boost"in e||(e.boost=1),"usePipeline"in e||(e.usePipeline=!0),"wildcard"in e||(e.wildcard=D.Query.wildcard.NONE),e.wildcard&D.Query.wildcard.LEADING&&e.term.charAt(0)!=D.Query.wildcard&&(e.term="*"+e.term),e.wildcard&D.Query.wildcard.TRAILING&&e.term.slice(-1)!=D.Query.wildcard&&(e.term=e.term+"*"),"presence"in e||(e.presence=D.Query.presence.OPTIONAL),this.clauses.push(e),this},D.Query.prototype.isNegated=function(){for(var e=0;e<this.clauses.length;e++)if(this.clauses[e].presence!=D.Query.presence.PROHIBITED)return!1;return!0},D.Query.prototype.term=function(e,t){if(Array.isArray(e))return e.forEach(function(e){this.term(e,D.utils.clone(t))},this),this;var n=t||{};return n.term=e.toString(),this.clause(n),this},D.QueryParseError=function(e,t,n){this.name="QueryParseError",this.message=e,this.start=t,this.end=n},D.QueryParseError.prototype=new Error,D.QueryLexer=function(e){this.lexemes=[],this.str=e,this.length=e.length,this.pos=0,this.start=0,this.escapeCharPositions=[]},D.QueryLexer.prototype.run=function(){for(var e=D.QueryLexer.lexText;e;)e=e(this)},D.QueryLexer.prototype.sliceString=function(){for(var e=[],t=this.start,n=this.pos,o=0;o<this.escapeCharPositions.length;o++)e.push(this.str.slice(t,n=this.escapeCharPositions[o])),t=n+1;return e.push(this.str.slice(t,this.pos)),this.escapeCharPositions.length=0,e.join("")},D.QueryLexer.prototype.emit=function(e){this.lexemes.push({type:e,str:this.sliceString(),start:this.start,end:this.pos}),this.start=this.pos},D.QueryLexer.prototype.escapeCharacter=function(){this.escapeCharPositions.push(this.pos-1),this.pos+=1},D.QueryLexer.prototype.next=function(){if(this.pos>=this.length)return D.QueryLexer.EOS;var e=this.str.charAt(this.pos);return this.pos+=1,e},D.QueryLexer.prototype.width=function(){return this.pos-this.start},D.QueryLexer.prototype.ignore=function(){this.start==this.pos&&(this.pos+=1),this.start=this.pos},D.QueryLexer.prototype.backup=function(){this.pos-=1},D.QueryLexer.prototype.acceptDigitRun=function(){var e,t;do{t=(e=this.next()).charCodeAt(0)}while(t>47&&t<58);e!=D.QueryLexer.EOS&&this.backup()},D.QueryLexer.prototype.more=function(){return this.pos<this.length},D.QueryLexer.EOS="EOS",D.QueryLexer.FIELD="FIELD",D.QueryLexer.TERM="TERM",D.QueryLexer.EDIT_DISTANCE="EDIT_DISTANCE",D.QueryLexer.BOOST="BOOST",D.QueryLexer.PRESENCE="PRESENCE",D.QueryLexer.lexField=function(e){return e.backup(),e.emit(D.QueryLexer.FIELD),e.ignore(),D.QueryLexer.lexText},D.QueryLexer.lexTerm=function(e){if(e.width()>1&&(e.backup(),e.emit(D.QueryLexer.TERM)),e.ignore(),e.more())return D.QueryLexer.lexText},D.QueryLexer.lexEditDistance=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(D.QueryLexer.EDIT_DISTANCE),D.QueryLexer.lexText},D.QueryLexer.lexBoost=function(e){return e.ignore(),e.acceptDigitRun(),e.emit(D.QueryLexer.BOOST),D.QueryLexer.lexText},D.QueryLexer.lexEOS=function(e){e.width()>0&&e.emit(D.QueryLexer.TERM)},D.QueryLexer.termSeparator=D.tokenizer.separator,D.QueryLexer.lexText=function(e){for(;;){var t=e.next();if(t==D.QueryLexer.EOS)return D.QueryLexer.lexEOS;if(92!=t.charCodeAt(0)){if(":"==t)return D.QueryLexer.lexField;if("~"==t)return e.backup(),e.width()>0&&e.emit(D.QueryLexer.TERM),D.QueryLexer.lexEditDistance;if("^"==t)return e.backup(),e.width()>0&&e.emit(D.QueryLexer.TERM),D.QueryLexer.lexBoost;if("+"==t&&1===e.width())return e.emit(D.QueryLexer.PRESENCE),D.QueryLexer.lexText;if("-"==t&&1===e.width())return e.emit(D.QueryLexer.PRESENCE),D.QueryLexer.lexText;if(t.match(D.QueryLexer.termSeparator))return D.QueryLexer.lexTerm}else e.escapeCharacter()}},D.QueryParser=function(e,t){this.lexer=new D.QueryLexer(e),this.query=t,this.currentClause={},this.lexemeIdx=0},D.QueryParser.prototype.parse=function(){this.lexer.run(),this.lexemes=this.lexer.lexemes;for(var e=D.QueryParser.parseClause;e;)e=e(this);return this.query},D.QueryParser.prototype.peekLexeme=function(){return this.lexemes[this.lexemeIdx]},D.QueryParser.prototype.consumeLexeme=function(){var e=this.peekLexeme();return this.lexemeIdx+=1,e},D.QueryParser.prototype.nextClause=function(){this.query.clause(this.currentClause),this.currentClause={}},D.QueryParser.parseClause=function(e){var t=e.peekLexeme();if(null!=t)switch(t.type){case D.QueryLexer.PRESENCE:return D.QueryParser.parsePresence;case D.QueryLexer.FIELD:return D.QueryParser.parseField;case D.QueryLexer.TERM:return D.QueryParser.parseTerm;default:var n="expected either a field or a term, found "+t.type;throw t.str.length>=1&&(n+=" with value '"+t.str+"'"),new D.QueryParseError(n,t.start,t.end)}},D.QueryParser.parsePresence=function(e){var t=e.consumeLexeme();if(null!=t){switch(t.str){case"-":e.currentClause.presence=D.Query.presence.PROHIBITED;break;case"+":e.currentClause.presence=D.Query.presence.REQUIRED;break;default:throw new D.QueryParseError("unrecognised presence operator'"+t.str+"'",t.start,t.end)}var n=e.peekLexeme();if(null==n)throw new D.QueryParseError("expecting term or field, found nothing",t.start,t.end);switch(n.type){case D.QueryLexer.FIELD:return D.QueryParser.parseField;case D.QueryLexer.TERM:return D.QueryParser.parseTerm;default:throw new D.QueryParseError("expecting term or field, found '"+n.type+"'",n.start,n.end)}}},D.QueryParser.parseField=function(e){var t=e.consumeLexeme();if(null!=t){if(-1==e.query.allFields.indexOf(t.str)){var n=e.query.allFields.map(function(e){return"'"+e+"'"}).join(", ");throw new D.QueryParseError("unrecognised field '"+t.str+"', possible fields: "+n,t.start,t.end)}e.currentClause.fields=[t.str];var o=e.peekLexeme();if(null==o)throw new D.QueryParseError("expecting term, found nothing",t.start,t.end);switch(o.type){case D.QueryLexer.TERM:return D.QueryParser.parseTerm;default:throw new D.QueryParseError("expecting term, found '"+o.type+"'",o.start,o.end)}}},D.QueryParser.parseTerm=function(e){var t=e.consumeLexeme();if(null!=t){e.currentClause.term=t.str.toLowerCase(),-1!=t.str.indexOf("*")&&(e.currentClause.usePipeline=!1);var n=e.peekLexeme();if(null!=n)switch(n.type){case D.QueryLexer.TERM:return e.nextClause(),D.QueryParser.parseTerm;case D.QueryLexer.FIELD:return e.nextClause(),D.QueryParser.parseField;case D.QueryLexer.EDIT_DISTANCE:return D.QueryParser.parseEditDistance;case D.QueryLexer.BOOST:return D.QueryParser.parseBoost;case D.QueryLexer.PRESENCE:return e.nextClause(),D.QueryParser.parsePresence;default:throw new D.QueryParseError("Unexpected lexeme type '"+n.type+"'",n.start,n.end)}else e.nextClause()}},D.QueryParser.parseEditDistance=function(e){var t=e.consumeLexeme();if(null!=t){var n=parseInt(t.str,10);if(isNaN(n))throw new D.QueryParseError("edit distance must be numeric",t.start,t.end);e.currentClause.editDistance=n;var o=e.peekLexeme();if(null!=o)switch(o.type){case D.QueryLexer.TERM:return e.nextClause(),D.QueryParser.parseTerm;case D.QueryLexer.FIELD:return e.nextClause(),D.QueryParser.parseField;case D.QueryLexer.EDIT_DISTANCE:return D.QueryParser.parseEditDistance;case D.QueryLexer.BOOST:return D.QueryParser.parseBoost;case D.QueryLexer.PRESENCE:return e.nextClause(),D.QueryParser.parsePresence;default:throw new D.QueryParseError("Unexpected lexeme type '"+o.type+"'",o.start,o.end)}else e.nextClause()}},D.QueryParser.parseBoost=function(e){var t=e.consumeLexeme();if(null!=t){var n=parseInt(t.str,10);if(isNaN(n))throw new D.QueryParseError("boost must be numeric",t.start,t.end);e.currentClause.boost=n;var o=e.peekLexeme();if(null!=o)switch(o.type){case D.QueryLexer.TERM:return e.nextClause(),D.QueryParser.parseTerm;case D.QueryLexer.FIELD:return e.nextClause(),D.QueryParser.parseField;case D.QueryLexer.EDIT_DISTANCE:return D.QueryParser.parseEditDistance;case D.QueryLexer.BOOST:return D.QueryParser.parseBoost;case D.QueryLexer.PRESENCE:return e.nextClause(),D.QueryParser.parsePresence;default:throw new D.QueryParseError("Unexpected lexeme type '"+o.type+"'",o.start,o.end)}else e.nextClause()}},void 0===(i="function"==typeof(o=function(){return D})?o.call(t,n,t,e):o)||(e.exports=i)}()},417:(e,t,n)=>{"use strict";function o(e){return"function"==typeof e}let i=!1;const r={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){if(e){const e=new Error;console.warn("DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n"+e.stack)}else i&&console.log("RxJS: Back to a better error behavior. Thank you. <3");i=e},get useDeprecatedSynchronousErrorHandling(){return i}};function a(e){setTimeout(()=>{throw e},0)}const s={closed:!0,next(e){},error(e){if(r.useDeprecatedSynchronousErrorHandling)throw e;a(e)},complete(){}},l=(()=>Array.isArray||(e=>e&&"number"==typeof e.length))();function c(e){return null!==e&&"object"==typeof e}const d=(()=>{function e(e){return Error.call(this),this.message=e?`${e.length} errors occurred during unsubscription:\n${e.map((e,t)=>`${t+1}) ${e.toString()}`).join("\n  ")}`:"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e})();let p=(()=>{class e{constructor(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._ctorUnsubscribe=!0,this._unsubscribe=e)}unsubscribe(){let t;if(this.closed)return;let{_parentOrParents:n,_ctorUnsubscribe:i,_unsubscribe:r,_subscriptions:a}=this;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(let e=0;e<n.length;++e)n[e].remove(this);if(o(r)){i&&(this._unsubscribe=void 0);try{r.call(this)}catch(s){t=s instanceof d?u(s.errors):[s]}}if(l(a)){let e=-1,n=a.length;for(;++e<n;){const n=a[e];if(c(n))try{n.unsubscribe()}catch(s){t=t||[],s instanceof d?t=t.concat(u(s.errors)):t.push(s)}}}if(t)throw new d(t)}add(t){let n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){const t=n;n=new e,n._subscriptions=[t]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}let{_parentOrParents:o}=n;if(null===o)n._parentOrParents=this;else if(o instanceof e){if(o===this)return n;n._parentOrParents=[o,this]}else{if(-1!==o.indexOf(this))return n;o.push(this)}const i=this._subscriptions;return null===i?this._subscriptions=[n]:i.push(n),n}remove(e){const t=this._subscriptions;if(t){const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}}return e.EMPTY=function(e){return e.closed=!0,e}(new e),e})();function u(e){return e.reduce((e,t)=>e.concat(t instanceof d?t.errors:t),[])}const h=(()=>"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random())();class m extends p{constructor(e,t,n){switch(super(),this.syncErrorValue=null,this.syncErrorThrown=!1,this.syncErrorThrowable=!1,this.isStopped=!1,arguments.length){case 0:this.destination=s;break;case 1:if(!e){this.destination=s;break}if("object"==typeof e){e instanceof m?(this.syncErrorThrowable=e.syncErrorThrowable,this.destination=e,e.add(this)):(this.syncErrorThrowable=!0,this.destination=new g(this,e));break}default:this.syncErrorThrowable=!0,this.destination=new g(this,e,t,n)}}[h](){return this}static create(e,t,n){const o=new m(e,t,n);return o.syncErrorThrowable=!1,o}next(e){this.isStopped||this._next(e)}error(e){this.isStopped||(this.isStopped=!0,this._error(e))}complete(){this.isStopped||(this.isStopped=!0,this._complete())}unsubscribe(){this.closed||(this.isStopped=!0,super.unsubscribe())}_next(e){this.destination.next(e)}_error(e){this.destination.error(e),this.unsubscribe()}_complete(){this.destination.complete(),this.unsubscribe()}_unsubscribeAndRecycle(){const{_parentOrParents:e}=this;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this}}class g extends m{constructor(e,t,n,i){let r;super(),this._parentSubscriber=e;let a=this;o(t)?r=t:t&&(r=t.next,n=t.error,i=t.complete,t!==s&&(a=Object.create(t),o(a.unsubscribe)&&this.add(a.unsubscribe.bind(a)),a.unsubscribe=this.unsubscribe.bind(this))),this._context=a,this._next=r,this._error=n,this._complete=i}next(e){if(!this.isStopped&&this._next){const{_parentSubscriber:t}=this;r.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}}error(e){if(!this.isStopped){const{_parentSubscriber:t}=this,{useDeprecatedSynchronousErrorHandling:n}=r;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):a(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;a(e)}}}complete(){if(!this.isStopped){const{_parentSubscriber:e}=this;if(this._complete){const t=()=>this._complete.call(this._context);r.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,t),this.unsubscribe()):(this.__tryOrUnsub(t),this.unsubscribe())}else this.unsubscribe()}}__tryOrUnsub(e,t){try{e.call(this._context,t)}catch(n){if(this.unsubscribe(),r.useDeprecatedSynchronousErrorHandling)throw n;a(n)}}__tryOrSetError(e,t,n){if(!r.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(o){return r.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=o,e.syncErrorThrown=!0,!0):(a(o),!0)}return!1}_unsubscribe(){const{_parentSubscriber:e}=this;this._context=null,this._parentSubscriber=null,e.unsubscribe()}}const f=(()=>"function"==typeof Symbol&&Symbol.observable||"@@observable")();function b(e){return e}let y=(()=>{class e{constructor(e){this._isScalar=!1,e&&(this._subscribe=e)}lift(t){const n=new e;return n.source=this,n.operator=t,n}subscribe(e,t,n){const{operator:o}=this,i=function(e,t,n){if(e){if(e instanceof m)return e;if(e[h])return e[h]()}return e||t||n?new m(e,t,n):new m(s)}(e,t,n);if(i.add(o?o.call(i,this.source):this.source||r.useDeprecatedSynchronousErrorHandling&&!i.syncErrorThrowable?this._subscribe(i):this._trySubscribe(i)),r.useDeprecatedSynchronousErrorHandling&&i.syncErrorThrowable&&(i.syncErrorThrowable=!1,i.syncErrorThrown))throw i.syncErrorValue;return i}_trySubscribe(e){try{return this._subscribe(e)}catch(t){r.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){const{closed:t,destination:n,isStopped:o}=e;if(t||o)return!1;e=n&&n instanceof m?n:null}return!0}(e)?e.error(t):console.warn(t)}}forEach(e,t){return new(t=v(t))((t,n)=>{let o;o=this.subscribe(t=>{try{e(t)}catch(i){n(i),o&&o.unsubscribe()}},n,t)})}_subscribe(e){const{source:t}=this;return t&&t.subscribe(e)}[f](){return this}pipe(...e){return 0===e.length?this:(0===(t=e).length?b:1===t.length?t[0]:function(e){return t.reduce((e,t)=>t(e),e)})(this);var t}toPromise(e){return new(e=v(e))((e,t)=>{let n;this.subscribe(e=>n=e,e=>t(e),()=>e(n))})}}return e.create=t=>new e(t),e})();function v(e){if(e||(e=r.Promise||Promise),!e)throw new Error("no Promise impl found");return e}const w=(()=>{function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e})();class k extends p{constructor(e,t){super(),this.subject=e,this.subscriber=t,this.closed=!1}unsubscribe(){if(this.closed)return;this.closed=!0;const e=this.subject,t=e.observers;if(this.subject=null,!t||0===t.length||e.isStopped||e.closed)return;const n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}class S extends m{constructor(e){super(e),this.destination=e}}let _=(()=>{class e extends y{constructor(){super(),this.observers=[],this.closed=!1,this.isStopped=!1,this.hasError=!1,this.thrownError=null}[h](){return new S(this)}lift(e){const t=new T(this,this);return t.operator=e,t}next(e){if(this.closed)throw new w;if(!this.isStopped){const{observers:t}=this,n=t.length,o=t.slice();for(let i=0;i<n;i++)o[i].next(e)}}error(e){if(this.closed)throw new w;this.hasError=!0,this.thrownError=e,this.isStopped=!0;const{observers:t}=this,n=t.length,o=t.slice();for(let i=0;i<n;i++)o[i].error(e);this.observers.length=0}complete(){if(this.closed)throw new w;this.isStopped=!0;const{observers:e}=this,t=e.length,n=e.slice();for(let o=0;o<t;o++)n[o].complete();this.observers.length=0}unsubscribe(){this.isStopped=!0,this.closed=!0,this.observers=null}_trySubscribe(e){if(this.closed)throw new w;return super._trySubscribe(e)}_subscribe(e){if(this.closed)throw new w;return this.hasError?(e.error(this.thrownError),p.EMPTY):this.isStopped?(e.complete(),p.EMPTY):(this.observers.push(e),new k(this,e))}asObservable(){const e=new y;return e.source=this,e}}return e.create=(e,t)=>new T(e,t),e})();class T extends _{constructor(e,t){super(),this.destination=e,this.source=t}next(e){const{destination:t}=this;t&&t.next&&t.next(e)}error(e){const{destination:t}=this;t&&t.error&&this.destination.error(e)}complete(){const{destination:e}=this;e&&e.complete&&this.destination.complete()}_subscribe(e){const{source:t}=this;return t?this.source.subscribe(e):p.EMPTY}}function A(e){return e&&"function"==typeof e.schedule}function C(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new x(e,t))}}class x{constructor(e,t){this.project=e,this.thisArg=t}call(e,t){return t.subscribe(new I(e,this.project,this.thisArg))}}class I extends m{constructor(e,t,n){super(e),this.project=t,this.count=0,this.thisArg=n||this}_next(e){let t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const E=e=>t=>{for(let n=0,o=e.length;n<o&&!t.closed;n++)t.next(e[n]);t.complete()};function D(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}const O=D(),j=e=>e&&"number"==typeof e.length&&"function"!=typeof e;function R(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}const q=e=>{if(e&&"function"==typeof e[f])return n=e,e=>{const t=n[f]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(j(e))return E(e);if(R(e))return(e=>t=>(e.then(e=>{t.closed||(t.next(e),t.complete())},e=>t.error(e)).then(null,a),t))(e);if(e&&"function"==typeof e[O])return t=e,e=>{const n=t[O]();for(;;){let t;try{t=n.next()}catch(o){return e.error(o),e}if(t.done){e.complete();break}if(e.next(t.value),e.closed)break}return"function"==typeof n.return&&e.add(()=>{n.return&&n.return()}),e};{const t=c(e)?"an invalid object":`'${e}'`;throw new TypeError(`You provided ${t} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`)}var t,n};function M(e,t){return new y(n=>{const o=new p;let i=0;return o.add(t.schedule(function(){i!==e.length?(n.next(e[i++]),n.closed||o.add(this.schedule())):n.complete()})),o})}function F(e,t){return t?function(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[f]}(e))return function(e,t){return new y(n=>{const o=new p;return o.add(t.schedule(()=>{const i=e[f]();o.add(i.subscribe({next(e){o.add(t.schedule(()=>n.next(e)))},error(e){o.add(t.schedule(()=>n.error(e)))},complete(){o.add(t.schedule(()=>n.complete()))}}))})),o})}(e,t);if(R(e))return function(e,t){return new y(n=>{const o=new p;return o.add(t.schedule(()=>e.then(e=>{o.add(t.schedule(()=>{n.next(e),o.add(t.schedule(()=>n.complete()))}))},e=>{o.add(t.schedule(()=>n.error(e)))}))),o})}(e,t);if(j(e))return M(e,t);if(function(e){return e&&"function"==typeof e[O]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new y(n=>{const o=new p;let i;return o.add(()=>{i&&"function"==typeof i.return&&i.return()}),o.add(t.schedule(()=>{i=e[O](),o.add(t.schedule(function(){if(n.closed)return;let e,t;try{const n=i.next();e=n.value,t=n.done}catch(o){return void n.error(o)}t?n.complete():(n.next(e),this.schedule())}))})),o})}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}(e,t):e instanceof y?e:new y(q(e))}class P extends m{constructor(e){super(),this.parent=e}_next(e){this.parent.notifyNext(e)}_error(e){this.parent.notifyError(e),this.unsubscribe()}_complete(){this.parent.notifyComplete(),this.unsubscribe()}}class L extends m{notifyNext(e){this.destination.next(e)}notifyError(e){this.destination.error(e)}notifyComplete(){this.destination.complete()}}function z(e,t){if(t.closed)return;if(e instanceof y)return e.subscribe(t);let n;try{n=q(e)(t)}catch(o){t.error(o)}return n}function N(e,t,n=Number.POSITIVE_INFINITY){return"function"==typeof t?o=>o.pipe(N((n,o)=>F(e(n,o)).pipe(C((e,i)=>t(n,e,o,i))),n)):("number"==typeof t&&(n=t),t=>t.lift(new U(e,n)))}class U{constructor(e,t=Number.POSITIVE_INFINITY){this.project=e,this.concurrent=t}call(e,t){return t.subscribe(new B(e,this.project,this.concurrent))}}class B extends L{constructor(e,t,n=Number.POSITIVE_INFINITY){super(e),this.project=t,this.concurrent=n,this.hasCompleted=!1,this.buffer=[],this.active=0,this.index=0}_next(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)}_tryNext(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(o){return void this.destination.error(o)}this.active++,this._innerSub(t)}_innerSub(e){const t=new P(this),n=this.destination;n.add(t);const o=z(e,t);o!==t&&n.add(o)}_complete(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()}notifyNext(e){this.destination.next(e)}notifyComplete(){const e=this.buffer;this.active--,e.length>0?this._next(e.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()}}function W(e=Number.POSITIVE_INFINITY){return N(b,e)}function $(e,t){return t?M(e,t):new y(E(e))}function V(...e){let t=Number.POSITIVE_INFINITY,n=null,o=e[e.length-1];return A(o)?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(t=e.pop())):"number"==typeof o&&(t=e.pop()),null===n&&1===e.length&&e[0]instanceof y?e[0]:W(t)($(e,n))}function H(){return function(e){return e.lift(new G(e))}}class G{constructor(e){this.connectable=e}call(e,t){const{connectable:n}=this;n._refCount++;const o=new J(e,n),i=t.subscribe(o);return o.closed||(o.connection=n.connect()),i}}class J extends m{constructor(e,t){super(e),this.connectable=t}_unsubscribe(){const{connectable:e}=this;if(!e)return void(this.connection=null);this.connectable=null;const t=e._refCount;if(t<=0)return void(this.connection=null);if(e._refCount=t-1,t>1)return void(this.connection=null);const{connection:n}=this,o=e._connection;this.connection=null,!o||n&&o!==n||o.unsubscribe()}}class K extends y{constructor(e,t){super(),this.source=e,this.subjectFactory=t,this._refCount=0,this._isComplete=!1}_subscribe(e){return this.getSubject().subscribe(e)}getSubject(){const e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject}connect(){let e=this._connection;return e||(this._isComplete=!1,e=this._connection=new p,e.add(this.source.subscribe(new Q(this.getSubject(),this))),e.closed&&(this._connection=null,e=p.EMPTY)),e}refCount(){return H()(this)}}const Y=(()=>{const e=K.prototype;return{operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:e._subscribe},_isComplete:{value:e._isComplete,writable:!0},getSubject:{value:e.getSubject},connect:{value:e.connect},refCount:{value:e.refCount}}})();class Q extends S{constructor(e,t){super(e),this.connectable=t}_error(e){this._unsubscribe(),super._error(e)}_complete(){this.connectable._isComplete=!0,this._unsubscribe(),super._complete()}_unsubscribe(){const e=this.connectable;if(e){this.connectable=null;const t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}}}function Z(){return new _}function X(){return e=>{return H()((t=Z,function(e){let n;n="function"==typeof t?t:function(){return t};const o=Object.create(e,Y);return o.source=e,o.subjectFactory=n,o})(e));var t}}function ee(e){for(let t in e)if(e[t]===ee)return t;throw Error("Could not find renamed property on target object.")}function te(e,t){for(const n in t)t.hasOwnProperty(n)&&!e.hasOwnProperty(n)&&(e[n]=t[n])}function ne(e){if("string"==typeof e)return e;if(Array.isArray(e))return"["+e.map(ne).join(", ")+"]";if(null==e)return""+e;if(e.overriddenName)return`${e.overriddenName}`;if(e.name)return`${e.name}`;const t=e.toString();if(null==t)return""+t;const n=t.indexOf("\n");return-1===n?t:t.substring(0,n)}function oe(e,t){return null==e||""===e?null===t?"":t:null==t||""===t?e:e+" "+t}const ie=ee({__forward_ref__:ee});function re(e){return e.__forward_ref__=re,e.toString=function(){return ne(this())},e}function ae(e){return se(e)?e():e}function se(e){return"function"==typeof e&&e.hasOwnProperty(ie)&&e.__forward_ref__===re}class le extends Error{constructor(e,t){super(function(e,t){return`${e?`NG0${e}: `:""}${t}`}(e,t)),this.code=e}}function ce(e){return"string"==typeof e?e:null==e?"":String(e)}function de(e){return"function"==typeof e?e.name||e.toString():"object"==typeof e&&null!=e&&"function"==typeof e.type?e.type.name||e.type.toString():ce(e)}function pe(e,t){const n=t?` in ${t}`:"";throw new le("201",`No provider for ${de(e)} found${n}`)}function ue(e){return{token:e.token,providedIn:e.providedIn||null,factory:e.factory,value:void 0}}function he(e){return{providers:e.providers||[],imports:e.imports||[]}}function me(e){return ge(e,be)||ge(e,ve)}function ge(e,t){return e.hasOwnProperty(t)?e[t]:null}function fe(e){return e&&(e.hasOwnProperty(ye)||e.hasOwnProperty(we))?e[ye]:null}const be=ee({"\u0275prov":ee}),ye=ee({"\u0275inj":ee}),ve=ee({ngInjectableDef:ee}),we=ee({ngInjectorDef:ee});var ke=function(e){return e[e.Default=0]="Default",e[e.Host=1]="Host",e[e.Self=2]="Self",e[e.SkipSelf=4]="SkipSelf",e[e.Optional=8]="Optional",e}({});let Se;function _e(e){const t=Se;return Se=e,t}function Te(e,t,n){const o=me(e);return o&&"root"==o.providedIn?void 0===o.value?o.value=o.factory():o.value:n&ke.Optional?null:void 0!==t?t:void pe(ne(e),"Injector")}function Ae(e){return{toString:e}.toString()}var Ce=function(e){return e[e.OnPush=0]="OnPush",e[e.Default=1]="Default",e}({}),xe=function(e){return e[e.Emulated=0]="Emulated",e[e.None=2]="None",e[e.ShadowDom=3]="ShadowDom",e}({});const Ie="undefined"!=typeof globalThis&&globalThis,Ee="undefined"!=typeof window&&window,De="undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self,Oe="undefined"!=typeof global&&global,je=Ie||Oe||Ee||De,Re={},qe=[],Me=ee({"\u0275cmp":ee}),Fe=ee({"\u0275dir":ee}),Pe=ee({"\u0275pipe":ee}),Le=ee({"\u0275mod":ee}),ze=ee({"\u0275loc":ee}),Ne=ee({"\u0275fac":ee}),Ue=ee({__NG_ELEMENT_ID__:ee});let Be=0;function We(e){return Ae(()=>{const t={},n={type:e.type,providersResolver:null,decls:e.decls,vars:e.vars,factory:null,template:e.template||null,consts:e.consts||null,ngContentSelectors:e.ngContentSelectors,hostBindings:e.hostBindings||null,hostVars:e.hostVars||0,hostAttrs:e.hostAttrs||null,contentQueries:e.contentQueries||null,declaredInputs:t,inputs:null,outputs:null,exportAs:e.exportAs||null,onPush:e.changeDetection===Ce.OnPush,directiveDefs:null,pipeDefs:null,selectors:e.selectors||qe,viewQuery:e.viewQuery||null,features:e.features||null,data:e.data||{},encapsulation:e.encapsulation||xe.Emulated,id:"c",styles:e.styles||qe,_:null,setInput:null,schemas:e.schemas||null,tView:null},o=e.directives,i=e.features,r=e.pipes;return n.id+=Be++,n.inputs=Je(e.inputs,t),n.outputs=Je(e.outputs),i&&i.forEach(e=>e(n)),n.directiveDefs=o?()=>("function"==typeof o?o():o).map($e):null,n.pipeDefs=r?()=>("function"==typeof r?r():r).map(Ve):null,n})}function $e(e){return Qe(e)||function(e){return e[Fe]||null}(e)}function Ve(e){return function(e){return e[Pe]||null}(e)}const He={};function Ge(e){const t={type:e.type,bootstrap:e.bootstrap||qe,declarations:e.declarations||qe,imports:e.imports||qe,exports:e.exports||qe,transitiveCompileScopes:null,schemas:e.schemas||null,id:e.id||null};return null!=e.id&&Ae(()=>{He[e.id]=e.type}),t}function Je(e,t){if(null==e)return Re;const n={};for(const o in e)if(e.hasOwnProperty(o)){let i=e[o],r=i;Array.isArray(i)&&(r=i[1],i=i[0]),n[i]=o,t&&(t[i]=r)}return n}const Ke=We;function Ye(e){return{type:e.type,name:e.name,factory:null,pure:!1!==e.pure,onDestroy:e.type.prototype.ngOnDestroy||null}}function Qe(e){return e[Me]||null}function Ze(e,t){const n=e[Le]||null;if(!n&&!0===t)throw new Error(`Type ${ne(e)} does not have '\u0275mod' property.`);return n}const Xe=20,et=10;function tt(e){return Array.isArray(e)&&"object"==typeof e[1]}function nt(e){return Array.isArray(e)&&!0===e[1]}function ot(e){return 0!=(8&e.flags)}function it(e){return 2==(2&e.flags)}function rt(e){return 1==(1&e.flags)}function at(e){return null!==e.template}function st(e,t){return e.hasOwnProperty(Ne)?e[Ne]:null}class lt{constructor(e,t,n){this.previousValue=e,this.currentValue=t,this.firstChange=n}isFirstChange(){return this.firstChange}}function ct(){return dt}function dt(e){return e.type.prototype.ngOnChanges&&(e.setInput=ut),pt}function pt(){const e=ht(this),t=null==e?void 0:e.current;if(t){const n=e.previous;if(n===Re)e.previous=t;else for(let e in t)n[e]=t[e];e.current=null,this.ngOnChanges(t)}}function ut(e,t,n,o){const i=ht(e)||function(e,t){return e.__ngSimpleChanges__=t}(e,{previous:Re,current:null}),r=i.current||(i.current={}),a=i.previous,s=this.declaredInputs[n],l=a[s];r[s]=new lt(l&&l.currentValue,t,a===Re),e[o]=t}function ht(e){return e.__ngSimpleChanges__||null}let mt;function gt(){return void 0!==mt?mt:"undefined"!=typeof document?document:void 0}function ft(e){return!!e.listen}ct.ngInherit=!0;const bt={createRenderer:(e,t)=>gt()};function yt(e){for(;Array.isArray(e);)e=e[0];return e}function vt(e,t){return yt(t[e])}function wt(e,t){return yt(t[e.index])}function kt(e,t){return e.data[t]}function St(e,t){return e[t]}function _t(e,t){const n=t[e];return tt(n)?n:n[0]}function Tt(e){return 4==(4&e[2])}function At(e){return 128==(128&e[2])}function Ct(e,t){return null==t?null:e[t]}function xt(e){e[18]=0}function It(e,t){e[5]+=t;let n=e,o=e[3];for(;null!==o&&(1===t&&1===n[5]||-1===t&&0===n[5]);)o[5]+=t,n=o,o=o[3]}const Et={lFrame:en(null),bindingsEnabled:!0,isInCheckNoChangesMode:!1};function Dt(){return Et.bindingsEnabled}function Ot(){return Et.lFrame.lView}function jt(){return Et.lFrame.tView}function Rt(e){return Et.lFrame.contextLView=e,e[8]}function qt(){let e=Mt();for(;null!==e&&64===e.type;)e=e.parent;return e}function Mt(){return Et.lFrame.currentTNode}function Ft(e,t){const n=Et.lFrame;n.currentTNode=e,n.isParent=t}function Pt(){return Et.lFrame.isParent}function Lt(){Et.lFrame.isParent=!1}function zt(){return Et.isInCheckNoChangesMode}function Nt(e){Et.isInCheckNoChangesMode=e}function Ut(){const e=Et.lFrame;let t=e.bindingRootIndex;return-1===t&&(t=e.bindingRootIndex=e.tView.bindingStartIndex),t}function Bt(){return Et.lFrame.bindingIndex}function Wt(){return Et.lFrame.bindingIndex++}function $t(e){const t=Et.lFrame,n=t.bindingIndex;return t.bindingIndex=t.bindingIndex+e,n}function Vt(e,t){const n=Et.lFrame;n.bindingIndex=n.bindingRootIndex=e,Ht(t)}function Ht(e){Et.lFrame.currentDirectiveIndex=e}function Gt(e){const t=Et.lFrame.currentDirectiveIndex;return-1===t?null:e[t]}function Jt(){return Et.lFrame.currentQueryIndex}function Kt(e){Et.lFrame.currentQueryIndex=e}function Yt(e){const t=e[1];return 2===t.type?t.declTNode:1===t.type?e[6]:null}function Qt(e,t,n){if(n&ke.SkipSelf){let o=t,i=e;for(;o=o.parent,!(null!==o||n&ke.Host||(o=Yt(i),null===o)||(i=i[15],10&o.type)););if(null===o)return!1;t=o,e=i}const o=Et.lFrame=Xt();return o.currentTNode=t,o.lView=e,!0}function Zt(e){const t=Xt(),n=e[1];Et.lFrame=t,t.currentTNode=n.firstChild,t.lView=e,t.tView=n,t.contextLView=e,t.bindingIndex=n.bindingStartIndex,t.inI18n=!1}function Xt(){const e=Et.lFrame,t=null===e?null:e.child;return null===t?en(e):t}function en(e){const t={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:e,child:null,inI18n:!1};return null!==e&&(e.child=t),t}function tn(){const e=Et.lFrame;return Et.lFrame=e.parent,e.currentTNode=null,e.lView=null,e}const nn=tn;function on(){const e=tn();e.isParent=!0,e.tView=null,e.selectedIndex=-1,e.contextLView=null,e.elementDepthCount=0,e.currentDirectiveIndex=-1,e.currentNamespace=null,e.bindingRootIndex=-1,e.bindingIndex=-1,e.currentQueryIndex=0}function rn(){return Et.lFrame.selectedIndex}function an(e){Et.lFrame.selectedIndex=e}function sn(){const e=Et.lFrame;return kt(e.tView,e.selectedIndex)}function ln(e,t){for(let n=t.directiveStart,o=t.directiveEnd;n<o;n++){const t=e.data[n].type.prototype,{ngAfterContentInit:o,ngAfterContentChecked:i,ngAfterViewInit:r,ngAfterViewChecked:a,ngOnDestroy:s}=t;o&&(e.contentHooks||(e.contentHooks=[])).push(-n,o),i&&((e.contentHooks||(e.contentHooks=[])).push(n,i),(e.contentCheckHooks||(e.contentCheckHooks=[])).push(n,i)),r&&(e.viewHooks||(e.viewHooks=[])).push(-n,r),a&&((e.viewHooks||(e.viewHooks=[])).push(n,a),(e.viewCheckHooks||(e.viewCheckHooks=[])).push(n,a)),null!=s&&(e.destroyHooks||(e.destroyHooks=[])).push(n,s)}}function cn(e,t,n){un(e,t,3,n)}function dn(e,t,n,o){(3&e[2])===n&&un(e,t,n,o)}function pn(e,t){let n=e[2];(3&n)===t&&(n&=2047,n+=1,e[2]=n)}function un(e,t,n,o){const i=null!=o?o:-1,r=t.length-1;let a=0;for(let s=void 0!==o?65535&e[18]:0;s<r;s++)if("number"==typeof t[s+1]){if(a=t[s],null!=o&&a>=o)break}else t[s]<0&&(e[18]+=65536),(a<i||-1==i)&&(hn(e,n,t,s),e[18]=(4294901760&e[18])+s+2),s++}function hn(e,t,n,o){const i=n[o]<0,r=n[o+1],a=e[i?-n[o]:n[o]];if(i){if(e[2]>>11<e[18]>>16&&(3&e[2])===t){e[2]+=2048;try{r.call(a)}finally{}}}else try{r.call(a)}finally{}}const mn=-1;class gn{constructor(e,t,n){this.factory=e,this.resolving=!1,this.canSeeViewProviders=t,this.injectImpl=n}}function fn(e,t,n){const o=ft(e);let i=0;for(;i<n.length;){const r=n[i];if("number"==typeof r){if(0!==r)break;i++;const a=n[i++],s=n[i++],l=n[i++];o?e.setAttribute(t,s,l,a):t.setAttributeNS(a,s,l)}else{const a=r,s=n[++i];yn(a)?o&&e.setProperty(t,a,s):o?e.setAttribute(t,a,s):t.setAttribute(a,s),i++}}return i}function bn(e){return 3===e||4===e||6===e}function yn(e){return 64===e.charCodeAt(0)}function vn(e,t){if(null===t||0===t.length);else if(null===e||0===e.length)e=t.slice();else{let n=-1;for(let o=0;o<t.length;o++){const i=t[o];"number"==typeof i?n=i:0===n||wn(e,n,i,null,-1===n||2===n?t[++o]:null)}}return e}function wn(e,t,n,o,i){let r=0,a=e.length;if(-1===t)a=-1;else for(;r<e.length;){const n=e[r++];if("number"==typeof n){if(n===t){a=-1;break}if(n>t){a=r-1;break}}}for(;r<e.length;){const t=e[r];if("number"==typeof t)break;if(t===n){if(null===o)return void(null!==i&&(e[r+1]=i));if(o===e[r+1])return void(e[r+2]=i)}r++,null!==o&&r++,null!==i&&r++}-1!==a&&(e.splice(a,0,t),r=a+1),e.splice(r++,0,n),null!==o&&e.splice(r++,0,o),null!==i&&e.splice(r++,0,i)}function kn(e){return e!==mn}function Sn(e){return 32767&e}function _n(e,t){let n=e>>16,o=t;for(;n>0;)o=o[15],n--;return o}let Tn=!0;function An(e){const t=Tn;return Tn=e,t}let Cn=0;function xn(e,t){const n=En(e,t);if(-1!==n)return n;const o=t[1];o.firstCreatePass&&(e.injectorIndex=t.length,In(o.data,e),In(t,null),In(o.blueprint,null));const i=Dn(e,t),r=e.injectorIndex;if(kn(i)){const e=Sn(i),n=_n(i,t),o=n[1].data;for(let i=0;i<8;i++)t[r+i]=n[e+i]|o[e+i]}return t[r+8]=i,r}function In(e,t){e.push(0,0,0,0,0,0,0,0,t)}function En(e,t){return-1===e.injectorIndex||e.parent&&e.parent.injectorIndex===e.injectorIndex||null===t[e.injectorIndex+8]?-1:e.injectorIndex}function Dn(e,t){if(e.parent&&-1!==e.parent.injectorIndex)return e.parent.injectorIndex;let n=0,o=null,i=t;for(;null!==i;){const e=i[1],t=e.type;if(o=2===t?e.declTNode:1===t?i[6]:null,null===o)return mn;if(n++,i=i[15],-1!==o.injectorIndex)return o.injectorIndex|n<<16}return mn}function On(e,t,n){!function(e,t,n){let o;"string"==typeof n?o=n.charCodeAt(0)||0:n.hasOwnProperty(Ue)&&(o=n[Ue]),null==o&&(o=n[Ue]=Cn++);const i=255&o;t.data[e+(i>>5)]|=1<<i}(e,t,n)}function jn(e,t,n){if(n&ke.Optional)return e;pe(t,"NodeInjector")}function Rn(e,t,n,o){if(n&ke.Optional&&void 0===o&&(o=null),0==(n&(ke.Self|ke.Host))){const i=e[9],r=_e(void 0);try{return i?i.get(t,o,n&ke.Optional):Te(t,o,n&ke.Optional)}finally{_e(r)}}return jn(o,t,n)}function qn(e,t,n,o=ke.Default,i){if(null!==e){const r=function(e){if("string"==typeof e)return e.charCodeAt(0)||0;const t=e.hasOwnProperty(Ue)?e[Ue]:void 0;return"number"==typeof t?t>=0?255&t:Fn:t}(n);if("function"==typeof r){if(!Qt(t,e,o))return o&ke.Host?jn(i,n,o):Rn(t,n,o,i);try{const e=r(o);if(null!=e||o&ke.Optional)return e;pe(n)}finally{nn()}}else if("number"==typeof r){let i=null,a=En(e,t),s=mn,l=o&ke.Host?t[16][6]:null;for((-1===a||o&ke.SkipSelf)&&(s=-1===a?Dn(e,t):t[a+8],s!==mn&&Un(o,!1)?(i=t[1],a=Sn(s),t=_n(s,t)):a=-1);-1!==a;){const e=t[1];if(Nn(r,a,e.data)){const e=Pn(a,t,n,i,o,l);if(e!==Mn)return e}s=t[a+8],s!==mn&&Un(o,t[1].data[a+8]===l)&&Nn(r,a,t)?(i=e,a=Sn(s),t=_n(s,t)):a=-1}}}return Rn(t,n,o,i)}const Mn={};function Fn(){return new Bn(qt(),Ot())}function Pn(e,t,n,o,i,r){const a=t[1],s=a.data[e+8],l=Ln(s,a,n,null==o?it(s)&&Tn:o!=a&&0!=(3&s.type),i&ke.Host&&r===s);return null!==l?zn(t,a,l,s):Mn}function Ln(e,t,n,o,i){const r=e.providerIndexes,a=t.data,s=1048575&r,l=e.directiveStart,c=r>>20,d=i?s+c:e.directiveEnd;for(let p=o?s:s+c;p<d;p++){const e=a[p];if(p<l&&n===e||p>=l&&e.type===n)return p}if(i){const e=a[l];if(e&&at(e)&&e.type===n)return l}return null}function zn(e,t,n,o){let i=e[n];const r=t.data;if(i instanceof gn){const a=i;a.resolving&&function(e,t){throw new le("200",`Circular dependency in DI detected for ${e}`)}(de(r[n]));const s=An(a.canSeeViewProviders);a.resolving=!0;const l=a.injectImpl?_e(a.injectImpl):null;Qt(e,o,ke.Default);try{i=e[n]=a.factory(void 0,r,e,o),t.firstCreatePass&&n>=o.directiveStart&&function(e,t,n){const{ngOnChanges:o,ngOnInit:i,ngDoCheck:r}=t.type.prototype;if(o){const o=dt(t);(n.preOrderHooks||(n.preOrderHooks=[])).push(e,o),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,o)}i&&(n.preOrderHooks||(n.preOrderHooks=[])).push(0-e,i),r&&((n.preOrderHooks||(n.preOrderHooks=[])).push(e,r),(n.preOrderCheckHooks||(n.preOrderCheckHooks=[])).push(e,r))}(n,r[n],t)}finally{null!==l&&_e(l),An(s),a.resolving=!1,nn()}}return i}function Nn(e,t,n){return!!(n[t+(e>>5)]&1<<e)}function Un(e,t){return!(e&ke.Self||e&ke.Host&&t)}class Bn{constructor(e,t){this._tNode=e,this._lView=t}get(e,t){return qn(this._tNode,this._lView,e,void 0,t)}}function Wn(e){return Ae(()=>{const t=e.prototype.constructor,n=t[Ne]||$n(t),o=Object.prototype;let i=Object.getPrototypeOf(e.prototype).constructor;for(;i&&i!==o;){const e=i[Ne]||$n(i);if(e&&e!==n)return e;i=Object.getPrototypeOf(i)}return e=>new e})}function $n(e){return se(e)?()=>{const t=$n(ae(e));return t&&t()}:st(e)}function Vn(e){return function(e,t){if("class"===t)return e.classes;if("style"===t)return e.styles;const n=e.attrs;if(n){const e=n.length;let o=0;for(;o<e;){const i=n[o];if(bn(i))break;if(0===i)o+=2;else if("number"==typeof i)for(o++;o<e&&"string"==typeof n[o];)o++;else{if(i===t)return n[o+1];o+=2}}}return null}(qt(),e)}const Hn="__parameters__";function Gn(e,t,n){return Ae(()=>{const o=function(e){return function(...t){if(e){const n=e(...t);for(const e in n)this[e]=n[e]}}}(t);function i(...e){if(this instanceof i)return o.apply(this,e),this;const t=new i(...e);return n.annotation=t,n;function n(e,n,o){const i=e.hasOwnProperty(Hn)?e[Hn]:Object.defineProperty(e,Hn,{value:[]})[Hn];for(;i.length<=o;)i.push(null);return(i[o]=i[o]||[]).push(t),e}}return n&&(i.prototype=Object.create(n.prototype)),i.prototype.ngMetadataName=e,i.annotationCls=i,i})}class Jn{constructor(e,t){this._desc=e,this.ngMetadataName="InjectionToken",this.\u0275prov=void 0,"number"==typeof t?this.__NG_ELEMENT_ID__=t:void 0!==t&&(this.\u0275prov=ue({token:this,providedIn:t.providedIn||"root",factory:t.factory}))}toString(){return`InjectionToken ${this._desc}`}}const Kn=new Jn("AnalyzeForEntryComponents"),Yn=Function;function Qn(e,t){void 0===t&&(t=e);for(let n=0;n<e.length;n++){let o=e[n];Array.isArray(o)?(t===e&&(t=e.slice(0,n)),Qn(o,t)):t!==e&&t.push(o)}return t}function Zn(e,t){e.forEach(e=>Array.isArray(e)?Zn(e,t):t(e))}function Xn(e,t,n){t>=e.length?e.push(n):e.splice(t,0,n)}function eo(e,t){return t>=e.length-1?e.pop():e.splice(t,1)[0]}function to(e,t){const n=[];for(let o=0;o<e;o++)n.push(t);return n}function no(e,t,n){let o=io(e,t);return o>=0?e[1|o]=n:(o=~o,function(e,t,n,o){let i=e.length;if(i==t)e.push(n,o);else if(1===i)e.push(o,e[0]),e[0]=n;else{for(i--,e.push(e[i-1],e[i]);i>t;)e[i]=e[i-2],i--;e[t]=n,e[t+1]=o}}(e,o,t,n)),o}function oo(e,t){const n=io(e,t);if(n>=0)return e[1|n]}function io(e,t){return function(e,t,n){let o=0,i=e.length>>1;for(;i!==o;){const n=o+(i-o>>1),r=e[n<<1];if(t===r)return n<<1;r>t?i=n:o=n+1}return~(i<<1)}(e,t)}const ro={},ao=/\n/gm,so="__source",lo=ee({provide:String,useValue:ee});let co;function po(e){const t=co;return co=e,t}function uo(e,t=ke.Default){if(void 0===co)throw new Error("inject() must be called from an injection context");return null===co?Te(e,void 0,t):co.get(e,t&ke.Optional?null:void 0,t)}function ho(e,t=ke.Default){return(Se||uo)(ae(e),t)}const mo=ho;function go(e){const t=[];for(let n=0;n<e.length;n++){const o=ae(e[n]);if(Array.isArray(o)){if(0===o.length)throw new Error("Arguments array must have arguments.");let e,n=ke.Default;for(let t=0;t<o.length;t++){const i=o[t],r=i.__NG_DI_FLAG__;"number"==typeof r?-1===r?e=i.token:n|=r:e=i}t.push(ho(e,n))}else t.push(ho(o))}return t}function fo(e,t){return e.__NG_DI_FLAG__=t,e.prototype.__NG_DI_FLAG__=t,e}const bo=fo(Gn("Inject",e=>({token:e})),-1),yo=fo(Gn("Optional"),8),vo=fo(Gn("SkipSelf"),4);let wo,ko;function So(e){var t;return(null===(t=function(){if(void 0===wo&&(wo=null,je.trustedTypes))try{wo=je.trustedTypes.createPolicy("angular",{createHTML:e=>e,createScript:e=>e,createScriptURL:e=>e})}catch(t){}return wo}())||void 0===t?void 0:t.createHTML(e))||e}function _o(e){var t;return(null===(t=function(){if(void 0===ko&&(ko=null,je.trustedTypes))try{ko=je.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:e=>e,createScript:e=>e,createScriptURL:e=>e})}catch(t){}return ko}())||void 0===t?void 0:t.createHTML(e))||e}class To{constructor(e){this.changingThisBreaksApplicationSecurity=e}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}class Ao extends To{getTypeName(){return"HTML"}}class Co extends To{getTypeName(){return"Style"}}class xo extends To{getTypeName(){return"Script"}}class Io extends To{getTypeName(){return"URL"}}class Eo extends To{getTypeName(){return"ResourceURL"}}function Do(e){return e instanceof To?e.changingThisBreaksApplicationSecurity:e}function Oo(e,t){const n=jo(e);if(null!=n&&n!==t){if("ResourceURL"===n&&"URL"===t)return!0;throw new Error(`Required a safe ${t}, got a ${n} (see https://g.co/ng/security#xss)`)}return n===t}function jo(e){return e instanceof To&&e.getTypeName()||null}class Ro{constructor(e){this.inertDocumentHelper=e}getInertBodyElement(e){e="<body><remove></remove>"+e;try{const t=(new window.DOMParser).parseFromString(So(e),"text/html").body;return null===t?this.inertDocumentHelper.getInertBodyElement(e):(t.removeChild(t.firstChild),t)}catch(T_){return null}}}class qo{constructor(e){if(this.defaultDoc=e,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const e=this.inertDocument.createElement("html");this.inertDocument.appendChild(e);const t=this.inertDocument.createElement("body");e.appendChild(t)}}getInertBodyElement(e){const t=this.inertDocument.createElement("template");if("content"in t)return t.innerHTML=So(e),t;const n=this.inertDocument.createElement("body");return n.innerHTML=So(e),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(n),n}stripCustomNsAttrs(e){const t=e.attributes;for(let o=t.length-1;0<o;o--){const n=t.item(o).name;"xmlns:ns1"!==n&&0!==n.indexOf("ns1:")||e.removeAttribute(n)}let n=e.firstChild;for(;n;)n.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(n),n=n.nextSibling}}const Mo=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,Fo=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;function Po(e){return(e=String(e)).match(Mo)||e.match(Fo)?e:"unsafe:"+e}function Lo(e){const t={};for(const n of e.split(","))t[n]=!0;return t}function zo(...e){const t={};for(const n of e)for(const e in n)n.hasOwnProperty(e)&&(t[e]=!0);return t}const No=Lo("area,br,col,hr,img,wbr"),Uo=Lo("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),Bo=Lo("rp,rt"),Wo=zo(Bo,Uo),$o=zo(No,zo(Uo,Lo("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),zo(Bo,Lo("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),Wo),Vo=Lo("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),Ho=Lo("srcset"),Go=zo(Vo,Ho,Lo("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),Lo("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext")),Jo=Lo("script,style,template");class Ko{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(e){let t=e.firstChild,n=!0;for(;t;)if(t.nodeType===Node.ELEMENT_NODE?n=this.startElement(t):t.nodeType===Node.TEXT_NODE?this.chars(t.nodeValue):this.sanitizedSomething=!0,n&&t.firstChild)t=t.firstChild;else for(;t;){t.nodeType===Node.ELEMENT_NODE&&this.endElement(t);let e=this.checkClobberedElement(t,t.nextSibling);if(e){t=e;break}t=this.checkClobberedElement(t,t.parentNode)}return this.buf.join("")}startElement(e){const t=e.nodeName.toLowerCase();if(!$o.hasOwnProperty(t))return this.sanitizedSomething=!0,!Jo.hasOwnProperty(t);this.buf.push("<"),this.buf.push(t);const n=e.attributes;for(let i=0;i<n.length;i++){const e=n.item(i),t=e.name,r=t.toLowerCase();if(!Go.hasOwnProperty(r)){this.sanitizedSomething=!0;continue}let a=e.value;Vo[r]&&(a=Po(a)),Ho[r]&&(o=a,a=(o=String(o)).split(",").map(e=>Po(e.trim())).join(", ")),this.buf.push(" ",t,'="',Zo(a),'"')}var o;return this.buf.push(">"),!0}endElement(e){const t=e.nodeName.toLowerCase();$o.hasOwnProperty(t)&&!No.hasOwnProperty(t)&&(this.buf.push("</"),this.buf.push(t),this.buf.push(">"))}chars(e){this.buf.push(Zo(e))}checkClobberedElement(e,t){if(t&&(e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${e.outerHTML}`);return t}}const Yo=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,Qo=/([^\#-~ |!])/g;function Zo(e){return e.replace(/&/g,"&amp;").replace(Yo,function(e){return"&#"+(1024*(e.charCodeAt(0)-55296)+(e.charCodeAt(1)-56320)+65536)+";"}).replace(Qo,function(e){return"&#"+e.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let Xo;function ei(e,t){let n=null;try{Xo=Xo||function(e){const t=new qo(e);return function(){try{return!!(new window.DOMParser).parseFromString(So(""),"text/html")}catch(T_){return!1}}()?new Ro(t):t}(e);let o=t?String(t):"";n=Xo.getInertBodyElement(o);let i=5,r=o;do{if(0===i)throw new Error("Failed to sanitize html because the input is unstable");i--,o=r,r=n.innerHTML,n=Xo.getInertBodyElement(o)}while(o!==r);return So((new Ko).sanitizeChildren(ti(n)||n))}finally{if(n){const e=ti(n)||n;for(;e.firstChild;)e.removeChild(e.firstChild)}}}function ti(e){return"content"in e&&function(e){return e.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===e.nodeName}(e)?e.content:null}var ni=function(e){return e[e.NONE=0]="NONE",e[e.HTML=1]="HTML",e[e.STYLE=2]="STYLE",e[e.SCRIPT=3]="SCRIPT",e[e.URL=4]="URL",e[e.RESOURCE_URL=5]="RESOURCE_URL",e}({});function oi(e){const t=ri();return t?_o(t.sanitize(ni.HTML,e)||""):Oo(e,"HTML")?_o(Do(e)):ei(gt(),ce(e))}function ii(e){const t=ri();return t?t.sanitize(ni.URL,e)||"":Oo(e,"URL")?Do(e):Po(ce(e))}function ri(){const e=Ot();return e&&e[12]}function ai(e,t){e.__ngContext__=t}function si(e){const t=function(e){return e.__ngContext__||null}(e);return t?Array.isArray(t)?t:t.lView:null}function li(e){return e.ngDebugContext}function ci(e){return e.ngOriginalError}function di(e,...t){e.error(...t)}class pi{constructor(){this._console=console}handleError(e){const t=this._findOriginalError(e),n=this._findContext(e),o=function(e){return e.ngErrorLogger||di}(e);o(this._console,"ERROR",e),t&&o(this._console,"ORIGINAL ERROR",t),n&&o(this._console,"ERROR CONTEXT",n)}_findContext(e){return e?li(e)?li(e):this._findContext(ci(e)):null}_findOriginalError(e){let t=ci(e);for(;t&&ci(t);)t=ci(t);return t}}const ui=(()=>("undefined"!=typeof requestAnimationFrame&&requestAnimationFrame||setTimeout).bind(je))();function hi(e){return e instanceof Function?e():e}var mi=function(e){return e[e.Important=1]="Important",e[e.DashCase=2]="DashCase",e}({});function gi(e,t){return(void 0)(e,t)}function fi(e){const t=e[3];return nt(t)?t[3]:t}function bi(e){return vi(e[13])}function yi(e){return vi(e[4])}function vi(e){for(;null!==e&&!nt(e);)e=e[4];return e}function wi(e,t,n,o,i){if(null!=o){let r,a=!1;nt(o)?r=o:tt(o)&&(a=!0,o=o[0]);const s=yt(o);0===e&&null!==n?null==i?Ii(t,n,s):xi(t,n,s,i||null,!0):1===e&&null!==n?xi(t,n,s,i||null,!0):2===e?function(e,t,n){const o=Di(e,t);o&&function(e,t,n,o){ft(e)?e.removeChild(t,n,o):t.removeChild(n)}(e,o,t,n)}(t,s,a):3===e&&t.destroyNode(s),null!=r&&function(e,t,n,o,i){const r=n[7];r!==yt(n)&&wi(t,e,o,r,i);for(let a=et;a<n.length;a++){const i=n[a];Li(i[1],i,e,t,o,r)}}(t,e,r,n,i)}}function ki(e,t,n){return ft(e)?e.createElement(t,n):null===n?e.createElement(t):e.createElementNS(n,t)}function Si(e,t){const n=e[9],o=n.indexOf(t),i=t[3];1024&t[2]&&(t[2]&=-1025,It(i,-1)),n.splice(o,1)}function _i(e,t){if(e.length<=et)return;const n=et+t,o=e[n];if(o){const r=o[17];null!==r&&r!==e&&Si(r,o),t>0&&(e[n-1][4]=o[4]);const a=eo(e,et+t);Li(o[1],i=o,i[11],2,null,null),i[0]=null,i[6]=null;const s=a[19];null!==s&&s.detachView(a[1]),o[3]=null,o[4]=null,o[2]&=-129}var i;return o}function Ti(e,t){if(!(256&t[2])){const n=t[11];ft(n)&&n.destroyNode&&Li(e,t,n,3,null,null),function(e){let t=e[13];if(!t)return Ai(e[1],e);for(;t;){let n=null;if(tt(t))n=t[13];else{const e=t[10];e&&(n=e)}if(!n){for(;t&&!t[4]&&t!==e;)tt(t)&&Ai(t[1],t),t=t[3];null===t&&(t=e),tt(t)&&Ai(t[1],t),n=t&&t[4]}t=n}}(t)}}function Ai(e,t){if(!(256&t[2])){t[2]&=-129,t[2]|=256,function(e,t){let n;if(null!=e&&null!=(n=e.destroyHooks))for(let o=0;o<n.length;o+=2){const e=t[n[o]];if(!(e instanceof gn)){const t=n[o+1];if(Array.isArray(t))for(let n=0;n<t.length;n+=2){const o=e[t[n]],i=t[n+1];try{i.call(o)}finally{}}else try{t.call(e)}finally{}}}}(e,t),function(e,t){const n=e.cleanup,o=t[7];let i=-1;if(null!==n)for(let r=0;r<n.length-1;r+=2)if("string"==typeof n[r]){const e=n[r+1],a="function"==typeof e?e(t):yt(t[e]),s=o[i=n[r+2]],l=n[r+3];"boolean"==typeof l?a.removeEventListener(n[r],s,l):l>=0?o[i=l]():o[i=-l].unsubscribe(),r+=2}else{const e=o[i=n[r+1]];n[r].call(e)}if(null!==o){for(let e=i+1;e<o.length;e++)(0,o[e])();t[7]=null}}(e,t),1===t[1].type&&ft(t[11])&&t[11].destroy();const n=t[17];if(null!==n&&nt(t[3])){n!==t[3]&&Si(n,t);const o=t[19];null!==o&&o.detachView(e)}}}function Ci(e,t,n){return function(e,t,n){let o=t;for(;null!==o&&40&o.type;)o=(t=o).parent;if(null===o)return n[0];if(2&o.flags){const t=e.data[o.directiveStart].encapsulation;if(t===xe.None||t===xe.Emulated)return null}return wt(o,n)}(e,t.parent,n)}function xi(e,t,n,o,i){ft(e)?e.insertBefore(t,n,o,i):t.insertBefore(n,o,i)}function Ii(e,t,n){ft(e)?e.appendChild(t,n):t.appendChild(n)}function Ei(e,t,n,o,i){null!==o?xi(e,t,n,o,i):Ii(e,t,n)}function Di(e,t){return ft(e)?e.parentNode(t):t.parentNode}function Oi(e,t,n){return ji(e,t,n)}let ji=function(e,t,n){return 40&e.type?wt(e,n):null};function Ri(e,t,n,o){const i=Ci(e,o,t),r=t[11],a=Oi(o.parent||t[6],o,t);if(null!=i)if(Array.isArray(n))for(let s=0;s<n.length;s++)Ei(r,i,n[s],a,!1);else Ei(r,i,n,a,!1)}function qi(e,t){if(null!==t){const n=t.type;if(3&n)return wt(t,e);if(4&n)return Fi(-1,e[t.index]);if(8&n){const n=t.child;if(null!==n)return qi(e,n);{const n=e[t.index];return nt(n)?Fi(-1,n):yt(n)}}if(32&n)return gi(t,e)()||yt(e[t.index]);{const n=Mi(e,t);return null!==n?Array.isArray(n)?n[0]:qi(fi(e[16]),n):qi(e,t.next)}}return null}function Mi(e,t){return null!==t?e[16][6].projection[t.projection]:null}function Fi(e,t){const n=et+e+1;if(n<t.length){const e=t[n],o=e[1].firstChild;if(null!==o)return qi(e,o)}return t[7]}function Pi(e,t,n,o,i,r,a){for(;null!=n;){const s=o[n.index],l=n.type;if(a&&0===t&&(s&&ai(yt(s),o),n.flags|=4),64!=(64&n.flags))if(8&l)Pi(e,t,n.child,o,i,r,!1),wi(t,e,i,s,r);else if(32&l){const a=gi(n,o);let l;for(;l=a();)wi(t,e,i,l,r);wi(t,e,i,s,r)}else 16&l?zi(e,t,o,n,i,r):wi(t,e,i,s,r);n=a?n.projectionNext:n.next}}function Li(e,t,n,o,i,r){Pi(n,o,e.firstChild,t,i,r,!1)}function zi(e,t,n,o,i,r){const a=n[16],s=a[6].projection[o.projection];if(Array.isArray(s))for(let l=0;l<s.length;l++)wi(t,e,i,s[l],r);else Pi(e,t,s,a[3],i,r,!0)}function Ni(e,t,n){ft(e)?e.setAttribute(t,"style",n):t.style.cssText=n}function Ui(e,t,n){ft(e)?""===n?e.removeAttribute(t,"class"):e.setAttribute(t,"class",n):t.className=n}function Bi(e,t,n){let o=e.length;for(;;){const i=e.indexOf(t,n);if(-1===i)return i;if(0===i||e.charCodeAt(i-1)<=32){const n=t.length;if(i+n===o||e.charCodeAt(i+n)<=32)return i}n=i+1}}const Wi="ng-template";function $i(e,t,n){let o=0;for(;o<e.length;){let i=e[o++];if(n&&"class"===i){if(i=e[o],-1!==Bi(i.toLowerCase(),t,0))return!0}else if(1===i){for(;o<e.length&&"string"==typeof(i=e[o++]);)if(i.toLowerCase()===t)return!0;return!1}}return!1}function Vi(e){return 4===e.type&&e.value!==Wi}function Hi(e,t,n){return t===(4!==e.type||n?e.value:Wi)}function Gi(e,t,n){let o=4;const i=e.attrs||[],r=function(e){for(let t=0;t<e.length;t++)if(bn(e[t]))return t;return e.length}(i);let a=!1;for(let s=0;s<t.length;s++){const l=t[s];if("number"!=typeof l){if(!a)if(4&o){if(o=2|1&o,""!==l&&!Hi(e,l,n)||""===l&&1===t.length){if(Ji(o))return!1;a=!0}}else{const c=8&o?l:t[++s];if(8&o&&null!==e.attrs){if(!$i(e.attrs,c,n)){if(Ji(o))return!1;a=!0}continue}const d=Ki(8&o?"class":l,i,Vi(e),n);if(-1===d){if(Ji(o))return!1;a=!0;continue}if(""!==c){let e;e=d>r?"":i[d+1].toLowerCase();const t=8&o?e:null;if(t&&-1!==Bi(t,c,0)||2&o&&c!==e){if(Ji(o))return!1;a=!0}}}}else{if(!a&&!Ji(o)&&!Ji(l))return!1;if(a&&Ji(l))continue;a=!1,o=l|1&o}}return Ji(o)||a}function Ji(e){return 0==(1&e)}function Ki(e,t,n,o){if(null===t)return-1;let i=0;if(o||!n){let n=!1;for(;i<t.length;){const o=t[i];if(o===e)return i;if(3===o||6===o)n=!0;else{if(1===o||2===o){let e=t[++i];for(;"string"==typeof e;)e=t[++i];continue}if(4===o)break;if(0===o){i+=4;continue}}i+=n?1:2}return-1}return function(e,t){let n=e.indexOf(4);if(n>-1)for(n++;n<e.length;){const o=e[n];if("number"==typeof o)return-1;if(o===t)return n;n++}return-1}(t,e)}function Yi(e,t,n=!1){for(let o=0;o<t.length;o++)if(Gi(e,t[o],n))return!0;return!1}function Qi(e,t){e:for(let n=0;n<t.length;n++){const o=t[n];if(e.length===o.length){for(let t=0;t<e.length;t++)if(e[t]!==o[t])continue e;return!0}}return!1}function Zi(e,t){return e?":not("+t.trim()+")":t}function Xi(e){let t=e[0],n=1,o=2,i="",r=!1;for(;n<e.length;){let a=e[n];if("string"==typeof a)if(2&o){const t=e[++n];i+="["+a+(t.length>0?'="'+t+'"':"")+"]"}else 8&o?i+="."+a:4&o&&(i+=" "+a);else""===i||Ji(a)||(t+=Zi(r,i),i=""),o=a,r=r||!Ji(o);n++}return""!==i&&(t+=Zi(r,i)),t}const er={};function tr(e){nr(jt(),Ot(),rn()+e,zt())}function nr(e,t,n,o){if(!o)if(3==(3&t[2])){const o=e.preOrderCheckHooks;null!==o&&cn(t,o,n)}else{const o=e.preOrderHooks;null!==o&&dn(t,o,0,n)}an(n)}function or(e,t){return e<<17|t<<2}function ir(e){return e>>17&32767}function rr(e){return 2|e}function ar(e){return(131068&e)>>2}function sr(e,t){return-131069&e|t<<2}function lr(e){return 1|e}function cr(e,t){const n=e.contentQueries;if(null!==n)for(let o=0;o<n.length;o+=2){const i=n[o],r=n[o+1];if(-1!==r){const n=e.data[r];Kt(i),n.contentQueries(2,t[r],r)}}}function dr(e,t,n,o,i,r,a,s,l,c){const d=t.blueprint.slice();return d[0]=i,d[2]=140|o,xt(d),d[3]=d[15]=e,d[8]=n,d[10]=a||e&&e[10],d[11]=s||e&&e[11],d[12]=l||e&&e[12]||null,d[9]=c||e&&e[9]||null,d[6]=r,d[16]=2==t.type?e[16]:d,d}function pr(e,t,n,o,i){let r=e.data[t];if(null===r)r=function(e,t,n,o,i){const r=Mt(),a=Pt(),s=e.data[t]=function(e,t,n,o,i,r){return{type:n,index:o,insertBeforeIndex:null,injectorIndex:t?t.injectorIndex:-1,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:i,attrs:r,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:t,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0}}(0,a?r:r&&r.parent,n,t,o,i);return null===e.firstChild&&(e.firstChild=s),null!==r&&(a?null==r.child&&null!==s.parent&&(r.child=s):null===r.next&&(r.next=s)),s}(e,t,n,o,i),Et.lFrame.inI18n&&(r.flags|=64);else if(64&r.type){r.type=n,r.value=o,r.attrs=i;const e=function(){const e=Et.lFrame,t=e.currentTNode;return e.isParent?t:t.parent}();r.injectorIndex=null===e?-1:e.injectorIndex}return Ft(r,!0),r}function ur(e,t,n,o){if(0===n)return-1;const i=t.length;for(let r=0;r<n;r++)t.push(o),e.blueprint.push(o),e.data.push(null);return i}function hr(e,t,n){Zt(t);try{const o=e.viewQuery;null!==o&&Wr(1,o,n);const i=e.template;null!==i&&fr(e,t,i,1,n),e.firstCreatePass&&(e.firstCreatePass=!1),e.staticContentQueries&&cr(e,t),e.staticViewQueries&&Wr(2,e.viewQuery,n);const r=e.components;null!==r&&function(e,t){for(let n=0;n<t.length;n++)Lr(e,t[n])}(t,r)}catch(o){throw e.firstCreatePass&&(e.incompleteFirstPass=!0),o}finally{t[2]&=-5,on()}}function mr(e,t,n,o){const i=t[2];if(256==(256&i))return;Zt(t);const r=zt();try{xt(t),Et.lFrame.bindingIndex=e.bindingStartIndex,null!==n&&fr(e,t,n,2,o);const a=3==(3&i);if(!r)if(a){const n=e.preOrderCheckHooks;null!==n&&cn(t,n,null)}else{const n=e.preOrderHooks;null!==n&&dn(t,n,0,null),pn(t,0)}if(function(e){for(let t=bi(e);null!==t;t=yi(t)){if(!t[2])continue;const e=t[9];for(let t=0;t<e.length;t++){const n=e[t],o=n[3];0==(1024&n[2])&&It(o,1),n[2]|=1024}}}(t),function(e){for(let t=bi(e);null!==t;t=yi(t))for(let e=et;e<t.length;e++){const n=t[e],o=n[1];At(n)&&mr(o,n,o.template,n[8])}}(t),null!==e.contentQueries&&cr(e,t),!r)if(a){const n=e.contentCheckHooks;null!==n&&cn(t,n)}else{const n=e.contentHooks;null!==n&&dn(t,n,1),pn(t,1)}!function(e,t){const n=e.hostBindingOpCodes;if(null!==n)try{for(let e=0;e<n.length;e++){const o=n[e];if(o<0)an(~o);else{const i=o,r=n[++e],a=n[++e];Vt(r,i),a(2,t[i])}}}finally{an(-1)}}(e,t);const s=e.components;null!==s&&function(e,t){for(let n=0;n<t.length;n++)Fr(e,t[n])}(t,s);const l=e.viewQuery;if(null!==l&&Wr(2,l,o),!r)if(a){const n=e.viewCheckHooks;null!==n&&cn(t,n)}else{const n=e.viewHooks;null!==n&&dn(t,n,2),pn(t,2)}!0===e.firstUpdatePass&&(e.firstUpdatePass=!1),r||(t[2]&=-73),1024&t[2]&&(t[2]&=-1025,It(t[3],-1))}finally{on()}}function gr(e,t,n,o){const i=t[10],r=!zt(),a=Tt(t);try{r&&!a&&i.begin&&i.begin(),a&&hr(e,t,o),mr(e,t,n,o)}finally{r&&!a&&i.end&&i.end()}}function fr(e,t,n,o,i){const r=rn(),a=2&o;try{an(-1),a&&t.length>Xe&&nr(e,t,Xe,zt()),n(o,i)}finally{an(r)}}function br(e,t,n){if(ot(t)){const o=t.directiveEnd;for(let i=t.directiveStart;i<o;i++){const t=e.data[i];t.contentQueries&&t.contentQueries(1,n[i],i)}}}function yr(e,t,n){Dt()&&(function(e,t,n,o){const i=n.directiveStart,r=n.directiveEnd;e.firstCreatePass||xn(n,t),ai(o,t);const a=n.initialInputs;for(let s=i;s<r;s++){const o=e.data[s],r=at(o);r&&jr(t,n,o);const l=zn(t,e,s,n);ai(l,t),null!==a&&Rr(0,s-i,l,o,0,a),r&&(_t(n.index,t)[8]=l)}}(e,t,n,wt(n,t)),128==(128&n.flags)&&function(e,t,n){const o=n.directiveStart,i=n.directiveEnd,r=n.index,a=Et.lFrame.currentDirectiveIndex;try{an(r);for(let n=o;n<i;n++){const o=e.data[n],i=t[n];Ht(n),null===o.hostBindings&&0===o.hostVars&&null===o.hostAttrs||xr(o,i)}}finally{an(-1),Ht(a)}}(e,t,n))}function vr(e,t,n=wt){const o=t.localNames;if(null!==o){let i=t.index+1;for(let r=0;r<o.length;r+=2){const a=o[r+1],s=-1===a?n(t,e):e[a];e[i++]=s}}}function wr(e){const t=e.tView;return null===t||t.incompleteFirstPass?e.tView=kr(1,null,e.template,e.decls,e.vars,e.directiveDefs,e.pipeDefs,e.viewQuery,e.schemas,e.consts):t}function kr(e,t,n,o,i,r,a,s,l,c){const d=Xe+o,p=d+i,u=function(e,t){const n=[];for(let o=0;o<t;o++)n.push(o<e?null:er);return n}(d,p),h="function"==typeof c?c():c;return u[1]={type:e,blueprint:u,template:n,queries:null,viewQuery:s,declTNode:t,data:u.slice().fill(null,d),bindingStartIndex:d,expandoStartIndex:p,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof r?r():r,pipeRegistry:"function"==typeof a?a():a,firstChild:null,schemas:l,consts:h,incompleteFirstPass:!1}}function Sr(e,t,n,o){const i=Vr(t);null===n?i.push(o):(i.push(n),e.firstCreatePass&&Hr(e).push(o,i.length-1))}function _r(e,t,n){for(let o in e)if(e.hasOwnProperty(o)){const i=e[o];(n=null===n?{}:n).hasOwnProperty(o)?n[o].push(t,i):n[o]=[t,i]}return n}function Tr(e,t,n,o,i,r,a,s){const l=wt(t,n);let c,d=t.inputs;var p;!s&&null!=d&&(c=d[o])?(Kr(e,n,c,o,i),it(t)&&function(e,t){const n=_t(t,e);16&n[2]||(n[2]|=64)}(n,t.index)):3&t.type&&(o="class"===(p=o)?"className":"for"===p?"htmlFor":"formaction"===p?"formAction":"innerHtml"===p?"innerHTML":"readonly"===p?"readOnly":"tabindex"===p?"tabIndex":p,i=null!=a?a(i,t.value||"",o):i,ft(r)?r.setProperty(l,o,i):yn(o)||(l.setProperty?l.setProperty(o,i):l[o]=i))}function Ar(e,t,n,o){let i=!1;if(Dt()){const r=function(e,t,n){const o=e.directiveRegistry;let i=null;if(o)for(let r=0;r<o.length;r++){const a=o[r];Yi(n,a.selectors,!1)&&(i||(i=[]),On(xn(n,t),e,a.type),at(a)?(Ir(e,n),i.unshift(a)):i.push(a))}return i}(e,t,n),a=null===o?null:{"":-1};if(null!==r){i=!0,Dr(n,e.data.length,r.length);for(let e=0;e<r.length;e++){const t=r[e];t.providersResolver&&t.providersResolver(t)}let o=!1,s=!1,l=ur(e,t,r.length,null);for(let i=0;i<r.length;i++){const c=r[i];n.mergedAttrs=vn(n.mergedAttrs,c.hostAttrs),Or(e,n,t,l,c),Er(l,c,a),null!==c.contentQueries&&(n.flags|=8),null===c.hostBindings&&null===c.hostAttrs&&0===c.hostVars||(n.flags|=128);const d=c.type.prototype;!o&&(d.ngOnChanges||d.ngOnInit||d.ngDoCheck)&&((e.preOrderHooks||(e.preOrderHooks=[])).push(n.index),o=!0),s||!d.ngOnChanges&&!d.ngDoCheck||((e.preOrderCheckHooks||(e.preOrderCheckHooks=[])).push(n.index),s=!0),l++}!function(e,t){const n=t.directiveEnd,o=e.data,i=t.attrs,r=[];let a=null,s=null;for(let l=t.directiveStart;l<n;l++){const e=o[l],n=e.inputs,c=null===i||Vi(t)?null:qr(n,i);r.push(c),a=_r(n,l,a),s=_r(e.outputs,l,s)}null!==a&&(a.hasOwnProperty("class")&&(t.flags|=16),a.hasOwnProperty("style")&&(t.flags|=32)),t.initialInputs=r,t.inputs=a,t.outputs=s}(e,n)}a&&function(e,t,n){if(t){const o=e.localNames=[];for(let e=0;e<t.length;e+=2){const i=n[t[e+1]];if(null==i)throw new le("301",`Export of name '${t[e+1]}' not found!`);o.push(t[e],i)}}}(n,o,a)}return n.mergedAttrs=vn(n.mergedAttrs,n.attrs),i}function Cr(e,t,n,o,i,r){const a=r.hostBindings;if(a){let n=e.hostBindingOpCodes;null===n&&(n=e.hostBindingOpCodes=[]);const r=~t.index;(function(e){let t=e.length;for(;t>0;){const n=e[--t];if("number"==typeof n&&n<0)return n}return 0})(n)!=r&&n.push(r),n.push(o,i,a)}}function xr(e,t){null!==e.hostBindings&&e.hostBindings(1,t)}function Ir(e,t){t.flags|=2,(e.components||(e.components=[])).push(t.index)}function Er(e,t,n){if(n){if(t.exportAs)for(let o=0;o<t.exportAs.length;o++)n[t.exportAs[o]]=e;at(t)&&(n[""]=e)}}function Dr(e,t,n){e.flags|=1,e.directiveStart=t,e.directiveEnd=t+n,e.providerIndexes=t}function Or(e,t,n,o,i){e.data[o]=i;const r=i.factory||(i.factory=st(i.type)),a=new gn(r,at(i),null);e.blueprint[o]=a,n[o]=a,Cr(e,t,0,o,ur(e,n,i.hostVars,er),i)}function jr(e,t,n){const o=wt(t,e),i=wr(n),r=e[10],a=zr(e,dr(e,i,null,n.onPush?64:16,o,t,r,r.createRenderer(o,n),null,null));e[t.index]=a}function Rr(e,t,n,o,i,r){const a=r[t];if(null!==a){const e=o.setInput;for(let t=0;t<a.length;){const i=a[t++],r=a[t++],s=a[t++];null!==e?o.setInput(n,s,i,r):n[r]=s}}}function qr(e,t){let n=null,o=0;for(;o<t.length;){const i=t[o];if(0!==i)if(5!==i){if("number"==typeof i)break;e.hasOwnProperty(i)&&(null===n&&(n=[]),n.push(i,e[i],t[o+1])),o+=2}else o+=2;else o+=4}return n}function Mr(e,t,n,o){return new Array(e,!0,!1,t,null,0,o,n,null,null)}function Fr(e,t){const n=_t(t,e);if(At(n)){const e=n[1];80&n[2]?mr(e,n,e.template,n[8]):n[5]>0&&Pr(n)}}function Pr(e){for(let n=bi(e);null!==n;n=yi(n))for(let e=et;e<n.length;e++){const t=n[e];if(1024&t[2]){const e=t[1];mr(e,t,e.template,t[8])}else t[5]>0&&Pr(t)}const t=e[1].components;if(null!==t)for(let n=0;n<t.length;n++){const o=_t(t[n],e);At(o)&&o[5]>0&&Pr(o)}}function Lr(e,t){const n=_t(t,e),o=n[1];!function(e,t){for(let n=t.length;n<e.blueprint.length;n++)t.push(e.blueprint[n])}(o,n),hr(o,n,n[8])}function zr(e,t){return e[13]?e[14][4]=t:e[13]=t,e[14]=t,t}function Nr(e){for(;e;){e[2]|=64;const t=fi(e);if(0!=(512&e[2])&&!t)return e;e=t}return null}function Ur(e,t,n){const o=t[10];o.begin&&o.begin();try{mr(e,t,e.template,n)}catch(i){throw Jr(t,i),i}finally{o.end&&o.end()}}function Br(e){!function(e){for(let t=0;t<e.components.length;t++){const n=e.components[t],o=si(n),i=o[1];gr(i,o,i.template,n)}}(e[8])}function Wr(e,t,n){Kt(0),t(e,n)}const $r=(()=>Promise.resolve(null))();function Vr(e){return e[7]||(e[7]=[])}function Hr(e){return e.cleanup||(e.cleanup=[])}function Gr(e,t,n){return(null===e||at(e))&&(n=function(e){for(;Array.isArray(e);){if("object"==typeof e[1])return e;e=e[0]}return null}(n[t.index])),n[11]}function Jr(e,t){const n=e[9],o=n?n.get(pi,null):null;o&&o.handleError(t)}function Kr(e,t,n,o,i){for(let r=0;r<n.length;){const a=n[r++],s=n[r++],l=t[a],c=e.data[a];null!==c.setInput?c.setInput(l,i,o,s):l[s]=i}}function Yr(e,t,n){const o=vt(t,e);!function(e,t,n){ft(e)?e.setValue(t,n):t.textContent=n}(e[11],o,n)}function Qr(e,t,n){let o=n?e.styles:null,i=n?e.classes:null,r=0;if(null!==t)for(let a=0;a<t.length;a++){const e=t[a];"number"==typeof e?r=e:1==r?i=oe(i,e):2==r&&(o=oe(o,e+": "+t[++a]+";"))}n?e.styles=o:e.stylesWithoutHost=o,n?e.classes=i:e.classesWithoutHost=i}const Zr=new Jn("INJECTOR",-1);class Xr{get(e,t=ro){if(t===ro){const t=new Error(`NullInjectorError: No provider for ${ne(e)}!`);throw t.name="NullInjectorError",t}return t}}const ea=new Jn("Set Injector scope."),ta={},na={};let oa;function ia(){return void 0===oa&&(oa=new Xr),oa}function ra(e,t=null,n=null,o){return new aa(e,n,t||ia(),o)}class aa{constructor(e,t,n,o=null){this.parent=n,this.records=new Map,this.injectorDefTypes=new Set,this.onDestroy=new Set,this._destroyed=!1;const i=[];t&&Zn(t,n=>this.processProvider(n,e,t)),Zn([e],e=>this.processInjectorType(e,[],i)),this.records.set(Zr,ca(void 0,this));const r=this.records.get(ea);this.scope=null!=r?r.value:null,this.source=o||("object"==typeof e?null:ne(e))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{this.onDestroy.forEach(e=>e.ngOnDestroy())}finally{this.records.clear(),this.onDestroy.clear(),this.injectorDefTypes.clear()}}get(e,t=ro,n=ke.Default){this.assertNotDestroyed();const o=po(this);try{if(!(n&ke.SkipSelf)){let t=this.records.get(e);if(void 0===t){const n=("function"==typeof(i=e)||"object"==typeof i&&i instanceof Jn)&&me(e);t=n&&this.injectableDefInScope(n)?ca(sa(e),ta):null,this.records.set(e,t)}if(null!=t)return this.hydrate(e,t)}return(n&ke.Self?ia():this.parent).get(e,t=n&ke.Optional&&t===ro?null:t)}catch(r){if("NullInjectorError"===r.name){if((r.ngTempTokenPath=r.ngTempTokenPath||[]).unshift(ne(e)),o)throw r;return function(e,t,n,o){const i=e.ngTempTokenPath;throw t[so]&&i.unshift(t[so]),e.message=function(e,t,n,o=null){e=e&&"\n"===e.charAt(0)&&"\u0275"==e.charAt(1)?e.substr(2):e;let i=ne(t);if(Array.isArray(t))i=t.map(ne).join(" -> ");else if("object"==typeof t){let e=[];for(let n in t)if(t.hasOwnProperty(n)){let o=t[n];e.push(n+":"+("string"==typeof o?JSON.stringify(o):ne(o)))}i=`{${e.join(", ")}}`}return`${n}${o?"("+o+")":""}[${i}]: ${e.replace(ao,"\n  ")}`}("\n"+e.message,i,n,o),e.ngTokenPath=i,e.ngTempTokenPath=null,e}(r,e,"R3InjectorError",this.source)}throw r}finally{po(o)}var i}_resolveInjectorDefTypes(){this.injectorDefTypes.forEach(e=>this.get(e))}toString(){const e=[];return this.records.forEach((t,n)=>e.push(ne(n))),`R3Injector[${e.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new Error("Injector has already been destroyed.")}processInjectorType(e,t,n){if(!(e=ae(e)))return!1;let o=fe(e);const i=null==o&&e.ngModule||void 0,r=void 0===i?e:i,a=-1!==n.indexOf(r);if(void 0!==i&&(o=fe(i)),null==o)return!1;if(null!=o.imports&&!a){let e;n.push(r);try{Zn(o.imports,o=>{this.processInjectorType(o,t,n)&&(void 0===e&&(e=[]),e.push(o))})}finally{}if(void 0!==e)for(let t=0;t<e.length;t++){const{ngModule:n,providers:o}=e[t];Zn(o,e=>this.processProvider(e,n,o||qe))}}this.injectorDefTypes.add(r);const s=st(r)||(()=>new r);this.records.set(r,ca(s,ta));const l=o.providers;if(null!=l&&!a){const t=e;Zn(l,e=>this.processProvider(e,t,l))}return void 0!==i&&void 0!==e.providers}processProvider(e,t,n){let o=pa(e=ae(e))?e:ae(e&&e.provide);const i=function(e,t,n){return da(e)?ca(void 0,e.useValue):ca(la(e),ta)}(e);if(pa(e)||!0!==e.multi)this.records.get(o);else{let t=this.records.get(o);t||(t=ca(void 0,ta,!0),t.factory=()=>go(t.multi),this.records.set(o,t)),o=e,t.multi.push(e)}this.records.set(o,i)}hydrate(e,t){var n;return t.value===ta&&(t.value=na,t.value=t.factory()),"object"==typeof t.value&&t.value&&null!==(n=t.value)&&"object"==typeof n&&"function"==typeof n.ngOnDestroy&&this.onDestroy.add(t.value),t.value}injectableDefInScope(e){if(!e.providedIn)return!1;const t=ae(e.providedIn);return"string"==typeof t?"any"===t||t===this.scope:this.injectorDefTypes.has(t)}}function sa(e){const t=me(e),n=null!==t?t.factory:st(e);if(null!==n)return n;if(e instanceof Jn)throw new Error(`Token ${ne(e)} is missing a \u0275prov definition.`);if(e instanceof Function)return function(e){const t=e.length;if(t>0){const n=to(t,"?");throw new Error(`Can't resolve all parameters for ${ne(e)}: (${n.join(", ")}).`)}const n=function(e){const t=e&&(e[be]||e[ve]);if(t){const n=function(e){if(e.hasOwnProperty("name"))return e.name;const t=(""+e).match(/^function\s*([^\s(]+)/);return null===t?"":t[1]}(e);return console.warn(`DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`),t}return null}(e);return null!==n?()=>n.factory(e):()=>new e}(e);throw new Error("unreachable")}function la(e,t,n){let o;if(pa(e)){const t=ae(e);return st(t)||sa(t)}if(da(e))o=()=>ae(e.useValue);else if((i=e)&&i.useFactory)o=()=>e.useFactory(...go(e.deps||[]));else if(function(e){return!(!e||!e.useExisting)}(e))o=()=>ho(ae(e.useExisting));else{const t=ae(e&&(e.useClass||e.provide));if(!function(e){return!!e.deps}(e))return st(t)||sa(t);o=()=>new t(...go(e.deps))}var i;return o}function ca(e,t,n=!1){return{factory:e,value:t,multi:n?[]:void 0}}function da(e){return null!==e&&"object"==typeof e&&lo in e}function pa(e){return"function"==typeof e}const ua=function(e,t,n){return function(e,t=null,n=null,o){const i=ra(e,t,n,o);return i._resolveInjectorDefTypes(),i}({name:n},t,e,n)};let ha=(()=>{class e{static create(e,t){return Array.isArray(e)?ua(e,t,""):ua(e.providers,e.parent,e.name||"")}}return e.THROW_IF_NOT_FOUND=ro,e.NULL=new Xr,e.\u0275prov=ue({token:e,providedIn:"any",factory:()=>ho(Zr)}),e.__NG_ELEMENT_ID__=-1,e})();function ma(e,t){ln(si(e)[1],qt())}function ga(e){let t=Object.getPrototypeOf(e.type.prototype).constructor,n=!0;const o=[e];for(;t;){let i;if(at(e))i=t.\u0275cmp||t.\u0275dir;else{if(t.\u0275cmp)throw new Error("Directives cannot inherit Components");i=t.\u0275dir}if(i){if(n){o.push(i);const t=e;t.inputs=fa(e.inputs),t.declaredInputs=fa(e.declaredInputs),t.outputs=fa(e.outputs);const n=i.hostBindings;n&&va(e,n);const r=i.viewQuery,a=i.contentQueries;if(r&&ba(e,r),a&&ya(e,a),te(e.inputs,i.inputs),te(e.declaredInputs,i.declaredInputs),te(e.outputs,i.outputs),at(i)&&i.data.animation){const t=e.data;t.animation=(t.animation||[]).concat(i.data.animation)}}const t=i.features;if(t)for(let o=0;o<t.length;o++){const i=t[o];i&&i.ngInherit&&i(e),i===ga&&(n=!1)}}t=Object.getPrototypeOf(t)}!function(e){let t=0,n=null;for(let o=e.length-1;o>=0;o--){const i=e[o];i.hostVars=t+=i.hostVars,i.hostAttrs=vn(i.hostAttrs,n=vn(n,i.hostAttrs))}}(o)}function fa(e){return e===Re?{}:e===qe?[]:e}function ba(e,t){const n=e.viewQuery;e.viewQuery=n?(e,o)=>{t(e,o),n(e,o)}:t}function ya(e,t){const n=e.contentQueries;e.contentQueries=n?(e,o,i)=>{t(e,o,i),n(e,o,i)}:t}function va(e,t){const n=e.hostBindings;e.hostBindings=n?(e,o)=>{t(e,o),n(e,o)}:t}let wa=null;function ka(){if(!wa){const e=je.Symbol;if(e&&e.iterator)wa=e.iterator;else{const e=Object.getOwnPropertyNames(Map.prototype);for(let t=0;t<e.length;++t){const n=e[t];"entries"!==n&&"size"!==n&&Map.prototype[n]===Map.prototype.entries&&(wa=n)}}}return wa}class Sa{constructor(e){this.wrapped=e}static wrap(e){return new Sa(e)}static unwrap(e){return Sa.isWrapped(e)?e.wrapped:e}static isWrapped(e){return e instanceof Sa}}function _a(e){return!!Ta(e)&&(Array.isArray(e)||!(e instanceof Map)&&ka()in e)}function Ta(e){return null!==e&&("function"==typeof e||"object"==typeof e)}function Aa(e,t,n){return e[t]=n}function Ca(e,t,n){return!Object.is(e[t],n)&&(e[t]=n,!0)}function xa(e,t,n,o){const i=Ca(e,t,n);return Ca(e,t+1,o)||i}function Ia(e,t,n,o){const i=Ot();return Ca(i,Wt(),t)&&(jt(),function(e,t,n,o,i,r){const a=wt(e,t);!function(e,t,n,o,i,r,a){if(null==r)ft(e)?e.removeAttribute(t,i,n):t.removeAttribute(i);else{const s=null==a?ce(r):a(r,o||"",i);ft(e)?e.setAttribute(t,i,s,n):n?t.setAttributeNS(n,i,s):t.setAttribute(i,s)}}(t[11],a,r,e.value,n,o,i)}(sn(),i,e,t,n,o)),Ia}function Ea(e,t,n,o){return Ca(e,Wt(),n)?t+ce(n)+o:er}function Da(e,t,n,o,i,r,a,s){const l=Ot(),c=jt(),d=e+Xe,p=c.firstCreatePass?function(e,t,n,o,i,r,a,s,l){const c=t.consts,d=pr(t,e,4,a||null,Ct(c,s));Ar(t,n,d,Ct(c,l)),ln(t,d);const p=d.tViews=kr(2,d,o,i,r,t.directiveRegistry,t.pipeRegistry,null,t.schemas,c);return null!==t.queries&&(t.queries.template(t,d),p.queries=t.queries.embeddedTView(d)),d}(d,c,l,t,n,o,i,r,a):c.data[d];Ft(p,!1);const u=l[11].createComment("");Ri(c,l,u,p),ai(u,l),zr(l,l[d]=Mr(u,l,u,p)),rt(p)&&yr(c,l,p),null!=a&&vr(l,p,s)}function Oa(e){return St(Et.lFrame.contextLView,Xe+e)}function ja(e,t=ke.Default){const n=Ot();return null===n?ho(e,t):qn(qt(),n,ae(e),t)}function Ra(e,t,n){const o=Ot();return Ca(o,Wt(),t)&&Tr(jt(),sn(),o,e,t,o[11],n,!1),Ra}function qa(e,t,n,o,i){const r=i?"class":"style";Kr(e,n,t.inputs[r],r,o)}function Ma(e,t,n,o){const i=Ot(),r=jt(),a=Xe+e,s=i[11],l=i[a]=ki(s,t,Et.lFrame.currentNamespace),c=r.firstCreatePass?function(e,t,n,o,i,r,a){const s=t.consts,l=pr(t,e,2,i,Ct(s,r));return Ar(t,n,l,Ct(s,a)),null!==l.attrs&&Qr(l,l.attrs,!1),null!==l.mergedAttrs&&Qr(l,l.mergedAttrs,!0),null!==t.queries&&t.queries.elementStart(t,l),l}(a,r,i,0,t,n,o):r.data[a];Ft(c,!0);const d=c.mergedAttrs;null!==d&&fn(s,l,d);const p=c.classes;null!==p&&Ui(s,l,p);const u=c.styles;null!==u&&Ni(s,l,u),64!=(64&c.flags)&&Ri(r,i,l,c),0===Et.lFrame.elementDepthCount&&ai(l,i),Et.lFrame.elementDepthCount++,rt(c)&&(yr(r,i,c),br(r,c,i)),null!==o&&vr(i,c)}function Fa(){let e=qt();Pt()?Lt():(e=e.parent,Ft(e,!1));const t=e;Et.lFrame.elementDepthCount--;const n=jt();n.firstCreatePass&&(ln(n,e),ot(e)&&n.queries.elementEnd(e)),null!=t.classesWithoutHost&&function(e){return 0!=(16&e.flags)}(t)&&qa(n,t,Ot(),t.classesWithoutHost,!0),null!=t.stylesWithoutHost&&function(e){return 0!=(32&e.flags)}(t)&&qa(n,t,Ot(),t.stylesWithoutHost,!1)}function Pa(e,t,n,o){Ma(e,t,n,o),Fa()}function La(e,t,n){const o=Ot(),i=jt(),r=e+Xe,a=i.firstCreatePass?function(e,t,n,o,i){const r=t.consts,a=Ct(r,o),s=pr(t,e,8,"ng-container",a);return null!==a&&Qr(s,a,!0),Ar(t,n,s,Ct(r,i)),null!==t.queries&&t.queries.elementStart(t,s),s}(r,i,o,t,n):i.data[r];Ft(a,!0);const s=o[r]=o[11].createComment("");Ri(i,o,s,a),ai(s,o),rt(a)&&(yr(i,o,a),br(i,a,o)),null!=n&&vr(o,a)}function za(){let e=qt();const t=jt();Pt()?Lt():(e=e.parent,Ft(e,!1)),t.firstCreatePass&&(ln(t,e),ot(e)&&t.queries.elementEnd(e))}function Na(){return Ot()}function Ua(e){return!!e&&"function"==typeof e.then}function Ba(e){return!!e&&"function"==typeof e.subscribe}const Wa=Ba;function $a(e,t,n,o){const i=Ot(),r=jt(),a=qt();return Ha(r,i,i[11],a,e,t,!!n,o),$a}function Va(e,t){const n=qt(),o=Ot(),i=jt();return Ha(i,o,Gr(Gt(i.data),n,o),n,e,t,!1),Va}function Ha(e,t,n,o,i,r,a,s){const l=rt(o),c=e.firstCreatePass&&Hr(e),d=Vr(t);let p=!0;if(3&o.type||s){const u=wt(o,t),h=s?s(u):u,m=d.length,g=s?e=>s(yt(e[o.index])):o.index;if(ft(n)){let a=null;if(!s&&l&&(a=function(e,t,n,o){const i=e.cleanup;if(null!=i)for(let r=0;r<i.length-1;r+=2){const e=i[r];if(e===n&&i[r+1]===o){const e=t[7],n=i[r+2];return e.length>n?e[n]:null}"string"==typeof e&&(r+=2)}return null}(e,t,i,o.index)),null!==a)(a.__ngLastListenerFn__||a).__ngNextListenerFn__=r,a.__ngLastListenerFn__=r,p=!1;else{r=Ja(o,t,0,r,!1);const e=n.listen(h,i,r);d.push(r,e),c&&c.push(i,g,m,m+1)}}else r=Ja(o,t,0,r,!0),h.addEventListener(i,r,a),d.push(r),c&&c.push(i,g,m,a)}else r=Ja(o,t,0,r,!1);const u=o.outputs;let h;if(p&&null!==u&&(h=u[i])){const e=h.length;if(e)for(let n=0;n<e;n+=2){const e=t[h[n]][h[n+1]].subscribe(r),a=d.length;d.push(r,e),c&&c.push(i,o.index,a,-(a+1))}}}function Ga(e,t,n,o){try{return!1!==n(o)}catch(i){return Jr(e,i),!1}}function Ja(e,t,n,o,i){return function n(r){if(r===Function)return o;const a=2&e.flags?_t(e.index,t):t;0==(32&t[2])&&Nr(a);let s=Ga(t,0,o,r),l=n.__ngNextListenerFn__;for(;l;)s=Ga(t,0,l,r)&&s,l=l.__ngNextListenerFn__;return i&&!1===s&&(r.preventDefault(),r.returnValue=!1),s}}function Ka(e=1){return function(e){return(Et.lFrame.contextLView=function(e,t){for(;e>0;)t=t[15],e--;return t}(e,Et.lFrame.contextLView))[8]}(e)}function Ya(e,t){let n=null;const o=function(e){const t=e.attrs;if(null!=t){const e=t.indexOf(5);if(0==(1&e))return t[e+1]}return null}(e);for(let i=0;i<t.length;i++){const r=t[i];if("*"!==r){if(null===o?Yi(e,r,!0):Qi(o,r))return i}else n=i}return n}function Qa(e){const t=Ot()[16][6];if(!t.projection){const n=t.projection=to(e?e.length:1,null),o=n.slice();let i=t.child;for(;null!==i;){const t=e?Ya(i,e):0;null!==t&&(o[t]?o[t].projectionNext=i:n[t]=i,o[t]=i),i=i.next}}}function Za(e,t=0,n){const o=Ot(),i=jt(),r=pr(i,Xe+e,16,null,n||null);null===r.projection&&(r.projection=t),Lt(),64!=(64&r.flags)&&function(e,t,n){zi(t[11],0,t,n,Ci(e,n,t),Oi(n.parent||t[6],n,t))}(i,o,r)}function Xa(e,t,n,o,i){const r=e[n+1],a=null===t;let s=o?ir(r):ar(r),l=!1;for(;0!==s&&(!1===l||a);){const n=e[s+1];es(e[s],t)&&(l=!0,e[s+1]=o?lr(n):rr(n)),s=o?ir(n):ar(n)}l&&(e[n+1]=o?rr(r):lr(r))}function es(e,t){return null===e||null==t||(Array.isArray(e)?e[1]:e)===t||!(!Array.isArray(e)||"string"!=typeof t)&&io(e,t)>=0}const ts={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function ns(e){return e.substring(ts.key,ts.keyEnd)}function os(e,t){const n=ts.textEnd;return n===t?-1:(t=ts.keyEnd=function(e,t,n){for(;t<n&&e.charCodeAt(t)>32;)t++;return t}(e,ts.key=t,n),is(e,t,n))}function is(e,t,n){for(;t<n&&e.charCodeAt(t)<=32;)t++;return t}function rs(e,t){return function(e,t,n,o){const i=Ot(),r=jt(),a=$t(2);r.firstUpdatePass&&ls(r,e,a,true),t!==er&&Ca(i,a,t)&&ps(r,r.data[rn()],i,i[11],e,i[a+1]=function(e,t){return null==e||"object"==typeof e&&(e=ne(Do(e))),e}(t),true,a)}(e,t),rs}function as(e,t){for(let n=function(e){return function(e){ts.key=0,ts.keyEnd=0,ts.value=0,ts.valueEnd=0,ts.textEnd=e.length}(e),os(e,is(e,0,ts.textEnd))}(t);n>=0;n=os(t,n))no(e,ns(t),!0)}function ss(e,t){return t>=e.expandoStartIndex}function ls(e,t,n,o){const i=e.data;if(null===i[n+1]){const r=i[rn()],a=ss(e,n);ms(r,o)&&null===t&&!a&&(t=!1),t=function(e,t,n,o){const i=Gt(e);let r=o?t.residualClasses:t.residualStyles;if(null===i)0===(o?t.classBindings:t.styleBindings)&&(n=ds(n=cs(null,e,t,n,o),t.attrs,o),r=null);else{const a=t.directiveStylingLast;if(-1===a||e[a]!==i)if(n=cs(i,e,t,n,o),null===r){let n=function(e,t,n){const o=n?t.classBindings:t.styleBindings;if(0!==ar(o))return e[ir(o)]}(e,t,o);void 0!==n&&Array.isArray(n)&&(n=cs(null,e,t,n[1],o),n=ds(n,t.attrs,o),function(e,t,n,o){e[ir(n?t.classBindings:t.styleBindings)]=o}(e,t,o,n))}else r=function(e,t,n){let o;const i=t.directiveEnd;for(let r=1+t.directiveStylingLast;r<i;r++)o=ds(o,e[r].hostAttrs,n);return ds(o,t.attrs,n)}(e,t,o)}return void 0!==r&&(o?t.residualClasses=r:t.residualStyles=r),n}(i,r,t,o),function(e,t,n,o,i,r){let a=r?t.classBindings:t.styleBindings,s=ir(a),l=ar(a);e[o]=n;let c,d=!1;if(Array.isArray(n)){const e=n;c=e[1],(null===c||io(e,c)>0)&&(d=!0)}else c=n;if(i)if(0!==l){const t=ir(e[s+1]);e[o+1]=or(t,s),0!==t&&(e[t+1]=sr(e[t+1],o)),e[s+1]=131071&e[s+1]|o<<17}else e[o+1]=or(s,0),0!==s&&(e[s+1]=sr(e[s+1],o)),s=o;else e[o+1]=or(l,0),0===s?s=o:e[l+1]=sr(e[l+1],o),l=o;d&&(e[o+1]=rr(e[o+1])),Xa(e,c,o,!0),Xa(e,c,o,!1),function(e,t,n,o,i){const r=i?e.residualClasses:e.residualStyles;null!=r&&"string"==typeof t&&io(r,t)>=0&&(n[o+1]=lr(n[o+1]))}(t,c,e,o,r),a=or(s,l),r?t.classBindings=a:t.styleBindings=a}(i,r,t,n,a,o)}}function cs(e,t,n,o,i){let r=null;const a=n.directiveEnd;let s=n.directiveStylingLast;for(-1===s?s=n.directiveStart:s++;s<a&&(r=t[s],o=ds(o,r.hostAttrs,i),r!==e);)s++;return null!==e&&(n.directiveStylingLast=s),o}function ds(e,t,n){const o=n?1:2;let i=-1;if(null!==t)for(let r=0;r<t.length;r++){const a=t[r];"number"==typeof a?i=a:i===o&&(Array.isArray(e)||(e=void 0===e?[]:["",e]),no(e,a,!!n||t[++r]))}return void 0===e?null:e}function ps(e,t,n,o,i,r,a,s){if(!(3&t.type))return;const l=e.data,c=l[s+1];hs(1==(1&c)?us(l,t,n,i,ar(c),a):void 0)||(hs(r)||2==(2&c)&&(r=us(l,null,n,i,s,a)),function(e,t,n,o,i){const r=ft(e);if(t)i?r?e.addClass(n,o):n.classList.add(o):r?e.removeClass(n,o):n.classList.remove(o);else{let t=-1===o.indexOf("-")?void 0:mi.DashCase;if(null==i)r?e.removeStyle(n,o,t):n.style.removeProperty(o);else{const a="string"==typeof i&&i.endsWith("!important");a&&(i=i.slice(0,-10),t|=mi.Important),r?e.setStyle(n,o,i,t):n.style.setProperty(o,i,a?"important":"")}}}(o,a,vt(rn(),n),i,r))}function us(e,t,n,o,i,r){const a=null===t;let s;for(;i>0;){const t=e[i],r=Array.isArray(t),l=r?t[1]:t,c=null===l;let d=n[i+1];d===er&&(d=c?qe:void 0);let p=c?oo(d,o):l===o?d:void 0;if(r&&!hs(p)&&(p=oo(t,o)),hs(p)&&(s=p,a))return s;const u=e[i+1];i=a?ir(u):ar(u)}if(null!==t){let e=r?t.residualClasses:t.residualStyles;null!=e&&(s=oo(e,o))}return s}function hs(e){return void 0!==e}function ms(e,t){return 0!=(e.flags&(t?16:32))}function gs(e,t=""){const n=Ot(),o=jt(),i=e+Xe,r=o.firstCreatePass?pr(o,i,1,t,null):o.data[i],a=n[i]=function(e,t){return ft(e)?e.createText(t):e.createTextNode(t)}(n[11],t);Ri(o,n,a,r),Ft(r,!1)}function fs(e){return bs("",e,""),fs}function bs(e,t,n){const o=Ot(),i=Ea(o,e,t,n);return i!==er&&Yr(o,rn(),i),bs}function ys(e,t,n,o,i){const r=Ot(),a=function(e,t,n,o,i,r){const a=xa(e,Bt(),n,i);return $t(2),a?t+ce(n)+o+ce(i)+r:er}(r,e,t,n,o,i);return a!==er&&Yr(r,rn(),a),ys}function vs(e,t,n){const o=Ot();return Ca(o,Wt(),t)&&Tr(jt(),sn(),o,e,t,o[11],n,!0),vs}function ws(e,t,n){const o=Ot();if(Ca(o,Wt(),t)){const i=jt(),r=sn();Tr(i,r,o,e,t,Gr(Gt(i.data),r,o),n,!0)}return ws}const ks=void 0;var Ss=["en",[["a","p"],["AM","PM"],ks],[["AM","PM"],ks,ks],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],ks,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],ks,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",ks,"{1} 'at' {0}",ks],[".",",",";","%","+","-","E","\xd7","\u2030","\u221e","NaN",":"],["#,##0.###","#,##0%","\xa4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(e){let t=Math.floor(Math.abs(e)),n=e.toString().replace(/^[^.]*\.?/,"").length;return 1===t&&0===n?1:5}];let _s={};function Ts(e){const t=function(e){return e.toLowerCase().replace(/_/g,"-")}(e);let n=As(t);if(n)return n;const o=t.split("-")[0];if(n=As(o),n)return n;if("en"===o)return Ss;throw new Error(`Missing locale data for the locale "${e}".`)}function As(e){return e in _s||(_s[e]=je.ng&&je.ng.common&&je.ng.common.locales&&je.ng.common.locales[e]),_s[e]}var Cs=function(e){return e[e.LocaleId=0]="LocaleId",e[e.DayPeriodsFormat=1]="DayPeriodsFormat",e[e.DayPeriodsStandalone=2]="DayPeriodsStandalone",e[e.DaysFormat=3]="DaysFormat",e[e.DaysStandalone=4]="DaysStandalone",e[e.MonthsFormat=5]="MonthsFormat",e[e.MonthsStandalone=6]="MonthsStandalone",e[e.Eras=7]="Eras",e[e.FirstDayOfWeek=8]="FirstDayOfWeek",e[e.WeekendRange=9]="WeekendRange",e[e.DateFormat=10]="DateFormat",e[e.TimeFormat=11]="TimeFormat",e[e.DateTimeFormat=12]="DateTimeFormat",e[e.NumberSymbols=13]="NumberSymbols",e[e.NumberFormats=14]="NumberFormats",e[e.CurrencyCode=15]="CurrencyCode",e[e.CurrencySymbol=16]="CurrencySymbol",e[e.CurrencyName=17]="CurrencyName",e[e.Currencies=18]="Currencies",e[e.Directionality=19]="Directionality",e[e.PluralCase=20]="PluralCase",e[e.ExtraData=21]="ExtraData",e}({});const xs="en-US";let Is=xs;function Es(e){var t,n;n="Expected localeId to be defined",null==(t=e)&&function(e,t,n,o){throw new Error(`ASSERTION ERROR: ${e} [Expected=> null != ${t} <=Actual]`)}(n,t),"string"==typeof e&&(Is=e.toLowerCase().replace(/_/g,"-"))}function Ds(e,t,n,o,i){if(e=ae(e),Array.isArray(e))for(let r=0;r<e.length;r++)Ds(e[r],t,n,o,i);else{const r=jt(),a=Ot();let s=pa(e)?e:ae(e.provide),l=la(e);const c=qt(),d=1048575&c.providerIndexes,p=c.directiveStart,u=c.providerIndexes>>20;if(pa(e)||!e.multi){const o=new gn(l,i,ja),h=Rs(s,t,i?d:d+u,p);-1===h?(On(xn(c,a),r,s),Os(r,e,t.length),t.push(s),c.directiveStart++,c.directiveEnd++,i&&(c.providerIndexes+=1048576),n.push(o),a.push(o)):(n[h]=o,a[h]=o)}else{const h=Rs(s,t,d+u,p),m=Rs(s,t,d,d+u),g=h>=0&&n[h],f=m>=0&&n[m];if(i&&!f||!i&&!g){On(xn(c,a),r,s);const d=function(e,t,n,o,i){const r=new gn(e,n,ja);return r.multi=[],r.index=t,r.componentProviders=0,js(r,i,o&&!n),r}(i?Ms:qs,n.length,i,o,l);!i&&f&&(n[m].providerFactory=d),Os(r,e,t.length,0),t.push(s),c.directiveStart++,c.directiveEnd++,i&&(c.providerIndexes+=1048576),n.push(d),a.push(d)}else Os(r,e,h>-1?h:m,js(n[i?m:h],l,!i&&o));!i&&o&&f&&n[m].componentProviders++}}}function Os(e,t,n,o){const i=pa(t);if(i||t.useClass){const r=(t.useClass||t).prototype.ngOnDestroy;if(r){const a=e.destroyHooks||(e.destroyHooks=[]);if(!i&&t.multi){const e=a.indexOf(n);-1===e?a.push(n,[o,r]):a[e+1].push(o,r)}else a.push(n,r)}}}function js(e,t,n){return n&&e.componentProviders++,e.multi.push(t)-1}function Rs(e,t,n,o){for(let i=n;i<o;i++)if(t[i]===e)return i;return-1}function qs(e,t,n,o){return Fs(this.multi,[])}function Ms(e,t,n,o){const i=this.multi;let r;if(this.providerFactory){const e=this.providerFactory.componentProviders,t=zn(n,n[1],this.providerFactory.index,o);r=t.slice(0,e),Fs(i,r);for(let n=e;n<t.length;n++)r.push(t[n])}else r=[],Fs(i,r);return r}function Fs(e,t){for(let n=0;n<e.length;n++)t.push((0,e[n])());return t}function Ps(e,t=[]){return n=>{n.providersResolver=(n,o)=>function(e,t,n){const o=jt();if(o.firstCreatePass){const i=at(e);Ds(n,o.data,o.blueprint,i,!0),Ds(t,o.data,o.blueprint,i,!1)}}(n,o?o(e):e,t)}}class Ls{}class zs{resolveComponentFactory(e){throw function(e){const t=Error(`No component factory found for ${ne(e)}. Did you add it to @NgModule.entryComponents?`);return t.ngComponent=e,t}(e)}}let Ns=(()=>{class e{}return e.NULL=new zs,e})();function Us(...e){}function Bs(e,t){return new $s(wt(e,t))}const Ws=function(){return Bs(qt(),Ot())};let $s=(()=>{class e{constructor(e){this.nativeElement=e}}return e.__NG_ELEMENT_ID__=Ws,e})();function Vs(e){return e instanceof $s?e.nativeElement:e}class Hs{}let Gs=(()=>{class e{}return e.__NG_ELEMENT_ID__=()=>Js(),e})();const Js=function(){const e=Ot(),t=_t(qt().index,e);return function(e){return e[11]}(tt(t)?t:e)};let Ks=(()=>{class e{}return e.\u0275prov=ue({token:e,providedIn:"root",factory:()=>null}),e})();class Ys{constructor(e){this.full=e,this.major=e.split(".")[0],this.minor=e.split(".")[1],this.patch=e.split(".").slice(2).join(".")}}const Qs=new Ys("12.0.3");class Zs{constructor(){}supports(e){return _a(e)}create(e){return new el(e)}}const Xs=(e,t)=>t;class el{constructor(e){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=e||Xs}forEachItem(e){let t;for(t=this._itHead;null!==t;t=t._next)e(t)}forEachOperation(e){let t=this._itHead,n=this._removalsHead,o=0,i=null;for(;t||n;){const r=!n||t&&t.currentIndex<il(n,o,i)?t:n,a=il(r,o,i),s=r.currentIndex;if(r===n)o--,n=n._nextRemoved;else if(t=t._next,null==r.previousIndex)o++;else{i||(i=[]);const e=a-o,t=s-o;if(e!=t){for(let n=0;n<e;n++){const o=n<i.length?i[n]:i[n]=0,r=o+n;t<=r&&r<e&&(i[n]=o+1)}i[r.previousIndex]=t-e}}a!==s&&e(r,a,s)}}forEachPreviousItem(e){let t;for(t=this._previousItHead;null!==t;t=t._nextPrevious)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachMovedItem(e){let t;for(t=this._movesHead;null!==t;t=t._nextMoved)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}forEachIdentityChange(e){let t;for(t=this._identityChangesHead;null!==t;t=t._nextIdentityChange)e(t)}diff(e){if(null==e&&(e=[]),!_a(e))throw new Error(`Error trying to diff '${ne(e)}'. Only arrays and iterables are allowed`);return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t,n,o,i=this._itHead,r=!1;if(Array.isArray(e)){this.length=e.length;for(let t=0;t<this.length;t++)n=e[t],o=this._trackByFn(t,n),null!==i&&Object.is(i.trackById,o)?(r&&(i=this._verifyReinsertion(i,n,o,t)),Object.is(i.item,n)||this._addIdentityChange(i,n)):(i=this._mismatch(i,n,o,t),r=!0),i=i._next}else t=0,function(e,t){if(Array.isArray(e))for(let n=0;n<e.length;n++)t(e[n]);else{const n=e[ka()]();let o;for(;!(o=n.next()).done;)t(o.value)}}(e,e=>{o=this._trackByFn(t,e),null!==i&&Object.is(i.trackById,o)?(r&&(i=this._verifyReinsertion(i,e,o,t)),Object.is(i.item,e)||this._addIdentityChange(i,e)):(i=this._mismatch(i,e,o,t),r=!0),i=i._next,t++}),this.length=t;return this._truncate(i),this.collection=e,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let e;for(e=this._previousItHead=this._itHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._additionsHead;null!==e;e=e._nextAdded)e.previousIndex=e.currentIndex;for(this._additionsHead=this._additionsTail=null,e=this._movesHead;null!==e;e=e._nextMoved)e.previousIndex=e.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(e,t,n,o){let i;return null===e?i=this._itTail:(i=e._prev,this._remove(e)),null!==(e=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._reinsertAfter(e,i,o)):null!==(e=null===this._linkedRecords?null:this._linkedRecords.get(n,o))?(Object.is(e.item,t)||this._addIdentityChange(e,t),this._moveAfter(e,i,o)):e=this._addAfter(new tl(t,n),i,o),e}_verifyReinsertion(e,t,n,o){let i=null===this._unlinkedRecords?null:this._unlinkedRecords.get(n,null);return null!==i?e=this._reinsertAfter(i,e._prev,o):e.currentIndex!=o&&(e.currentIndex=o,this._addToMoves(e,o)),e}_truncate(e){for(;null!==e;){const t=e._next;this._addToRemovals(this._unlink(e)),e=t}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(e,t,n){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(e);const o=e._prevRemoved,i=e._nextRemoved;return null===o?this._removalsHead=i:o._nextRemoved=i,null===i?this._removalsTail=o:i._prevRemoved=o,this._insertAfter(e,t,n),this._addToMoves(e,n),e}_moveAfter(e,t,n){return this._unlink(e),this._insertAfter(e,t,n),this._addToMoves(e,n),e}_addAfter(e,t,n){return this._insertAfter(e,t,n),this._additionsTail=null===this._additionsTail?this._additionsHead=e:this._additionsTail._nextAdded=e,e}_insertAfter(e,t,n){const o=null===t?this._itHead:t._next;return e._next=o,e._prev=t,null===o?this._itTail=e:o._prev=e,null===t?this._itHead=e:t._next=e,null===this._linkedRecords&&(this._linkedRecords=new ol),this._linkedRecords.put(e),e.currentIndex=n,e}_remove(e){return this._addToRemovals(this._unlink(e))}_unlink(e){null!==this._linkedRecords&&this._linkedRecords.remove(e);const t=e._prev,n=e._next;return null===t?this._itHead=n:t._next=n,null===n?this._itTail=t:n._prev=t,e}_addToMoves(e,t){return e.previousIndex===t||(this._movesTail=null===this._movesTail?this._movesHead=e:this._movesTail._nextMoved=e),e}_addToRemovals(e){return null===this._unlinkedRecords&&(this._unlinkedRecords=new ol),this._unlinkedRecords.put(e),e.currentIndex=null,e._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=e,e._prevRemoved=null):(e._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=e),e}_addIdentityChange(e,t){return e.item=t,this._identityChangesTail=null===this._identityChangesTail?this._identityChangesHead=e:this._identityChangesTail._nextIdentityChange=e,e}}class tl{constructor(e,t){this.item=e,this.trackById=t,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class nl{constructor(){this._head=null,this._tail=null}add(e){null===this._head?(this._head=this._tail=e,e._nextDup=null,e._prevDup=null):(this._tail._nextDup=e,e._prevDup=this._tail,e._nextDup=null,this._tail=e)}get(e,t){let n;for(n=this._head;null!==n;n=n._nextDup)if((null===t||t<=n.currentIndex)&&Object.is(n.trackById,e))return n;return null}remove(e){const t=e._prevDup,n=e._nextDup;return null===t?this._head=n:t._nextDup=n,null===n?this._tail=t:n._prevDup=t,null===this._head}}class ol{constructor(){this.map=new Map}put(e){const t=e.trackById;let n=this.map.get(t);n||(n=new nl,this.map.set(t,n)),n.add(e)}get(e,t){const n=this.map.get(e);return n?n.get(e,t):null}remove(e){const t=e.trackById;return this.map.get(t).remove(e)&&this.map.delete(t),e}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function il(e,t,n){const o=e.previousIndex;if(null===o)return o;let i=0;return n&&o<n.length&&(i=n[o]),o+t+i}class rl{constructor(){}supports(e){return e instanceof Map||Ta(e)}create(){return new al}}class al{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(e){let t;for(t=this._mapHead;null!==t;t=t._next)e(t)}forEachPreviousItem(e){let t;for(t=this._previousMapHead;null!==t;t=t._nextPrevious)e(t)}forEachChangedItem(e){let t;for(t=this._changesHead;null!==t;t=t._nextChanged)e(t)}forEachAddedItem(e){let t;for(t=this._additionsHead;null!==t;t=t._nextAdded)e(t)}forEachRemovedItem(e){let t;for(t=this._removalsHead;null!==t;t=t._nextRemoved)e(t)}diff(e){if(e){if(!(e instanceof Map||Ta(e)))throw new Error(`Error trying to diff '${ne(e)}'. Only maps and objects are allowed`)}else e=new Map;return this.check(e)?this:null}onDestroy(){}check(e){this._reset();let t=this._mapHead;if(this._appendAfter=null,this._forEach(e,(e,n)=>{if(t&&t.key===n)this._maybeAddToChanges(t,e),this._appendAfter=t,t=t._next;else{const o=this._getOrCreateRecordForKey(n,e);t=this._insertBeforeOrAppend(t,o)}}),t){t._prev&&(t._prev._next=null),this._removalsHead=t;for(let e=t;null!==e;e=e._nextRemoved)e===this._mapHead&&(this._mapHead=null),this._records.delete(e.key),e._nextRemoved=e._next,e.previousValue=e.currentValue,e.currentValue=null,e._prev=null,e._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(e,t){if(e){const n=e._prev;return t._next=e,t._prev=n,e._prev=t,n&&(n._next=t),e===this._mapHead&&(this._mapHead=t),this._appendAfter=e,e}return this._appendAfter?(this._appendAfter._next=t,t._prev=this._appendAfter):this._mapHead=t,this._appendAfter=t,null}_getOrCreateRecordForKey(e,t){if(this._records.has(e)){const n=this._records.get(e);this._maybeAddToChanges(n,t);const o=n._prev,i=n._next;return o&&(o._next=i),i&&(i._prev=o),n._next=null,n._prev=null,n}const n=new sl(e);return this._records.set(e,n),n.currentValue=t,this._addToAdditions(n),n}_reset(){if(this.isDirty){let e;for(this._previousMapHead=this._mapHead,e=this._previousMapHead;null!==e;e=e._next)e._nextPrevious=e._next;for(e=this._changesHead;null!==e;e=e._nextChanged)e.previousValue=e.currentValue;for(e=this._additionsHead;null!=e;e=e._nextAdded)e.previousValue=e.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(e,t){Object.is(t,e.currentValue)||(e.previousValue=e.currentValue,e.currentValue=t,this._addToChanges(e))}_addToAdditions(e){null===this._additionsHead?this._additionsHead=this._additionsTail=e:(this._additionsTail._nextAdded=e,this._additionsTail=e)}_addToChanges(e){null===this._changesHead?this._changesHead=this._changesTail=e:(this._changesTail._nextChanged=e,this._changesTail=e)}_forEach(e,t){e instanceof Map?e.forEach(t):Object.keys(e).forEach(n=>t(e[n],n))}}class sl{constructor(e){this.key=e,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function ll(){return new cl([new Zs])}let cl=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(null!=n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||ll()),deps:[[e,new vo,new yo]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(null!=t)return t;throw new Error(`Cannot find a differ supporting object '${e}' of type '${n=e,n.name||typeof n}'`);var n}}return e.\u0275prov=ue({token:e,providedIn:"root",factory:ll}),e})();function dl(){return new pl([new rl])}let pl=(()=>{class e{constructor(e){this.factories=e}static create(t,n){if(n){const e=n.factories.slice();t=t.concat(e)}return new e(t)}static extend(t){return{provide:e,useFactory:n=>e.create(t,n||dl()),deps:[[e,new vo,new yo]]}}find(e){const t=this.factories.find(t=>t.supports(e));if(t)return t;throw new Error(`Cannot find a differ supporting object '${e}'`)}}return e.\u0275prov=ue({token:e,providedIn:"root",factory:dl}),e})();function ul(e,t,n,o,i=!1){for(;null!==n;){const r=t[n.index];if(null!==r&&o.push(yt(r)),nt(r))for(let e=et;e<r.length;e++){const t=r[e],n=t[1].firstChild;null!==n&&ul(t[1],t,n,o)}const a=n.type;if(8&a)ul(e,t,n.child,o);else if(32&a){const e=gi(n,t);let i;for(;i=e();)o.push(i)}else if(16&a){const e=Mi(t,n);if(Array.isArray(e))o.push(...e);else{const n=fi(t[16]);ul(n[1],n,e,o,!0)}}n=i?n.projectionNext:n.next}return o}class hl{constructor(e,t){this._lView=e,this._cdRefInjectingView=t,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const e=this._lView,t=e[1];return ul(t,e,t.firstChild,[])}get context(){return this._lView[8]}set context(e){this._lView[8]=e}get destroyed(){return 256==(256&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const e=this._lView[3];if(nt(e)){const t=e[8],n=t?t.indexOf(this):-1;n>-1&&(_i(e,n),eo(t,n))}this._attachedToViewContainer=!1}Ti(this._lView[1],this._lView)}onDestroy(e){Sr(this._lView[1],this._lView,null,e)}markForCheck(){Nr(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-129}reattach(){this._lView[2]|=128}detectChanges(){Ur(this._lView[1],this._lView,this.context)}checkNoChanges(){!function(e,t,n){Nt(!0);try{Ur(e,t,n)}finally{Nt(!1)}}(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new Error("This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var e;this._appRef=null,Li(this._lView[1],e=this._lView,e[11],2,null,null)}attachToAppRef(e){if(this._attachedToViewContainer)throw new Error("This view is already attached to a ViewContainer!");this._appRef=e}}class ml extends hl{constructor(e){super(e),this._view=e}detectChanges(){Br(this._view)}checkNoChanges(){!function(e){Nt(!0);try{Br(e)}finally{Nt(!1)}}(this._view)}get context(){return null}}const gl=function(e){return function(e,t,n){if(it(e)&&!n){const n=_t(e.index,t);return new hl(n,n)}return 47&e.type?new hl(t[16],t):null}(qt(),Ot(),16==(16&e))};let fl=(()=>{class e{}return e.__NG_ELEMENT_ID__=gl,e})();const bl=[new rl],yl=new cl([new Zs]),vl=new pl(bl),wl=function(){return Tl(qt(),Ot())};let kl=(()=>{class e{}return e.__NG_ELEMENT_ID__=wl,e})();const Sl=kl,_l=class extends Sl{constructor(e,t,n){super(),this._declarationLView=e,this._declarationTContainer=t,this.elementRef=n}createEmbeddedView(e){const t=this._declarationTContainer.tViews,n=dr(this._declarationLView,t,e,16,null,t.declTNode,null,null,null,null);n[17]=this._declarationLView[this._declarationTContainer.index];const o=this._declarationLView[19];return null!==o&&(n[19]=o.createEmbeddedView(t)),hr(t,n,e),new hl(n)}};function Tl(e,t){return 4&e.type?new _l(t,e,Bs(e,t)):null}class Al{}class Cl{}const xl=function(){return Rl(qt(),Ot())};let Il=(()=>{class e{}return e.__NG_ELEMENT_ID__=xl,e})();const El=Il,Dl=class extends El{constructor(e,t,n){super(),this._lContainer=e,this._hostTNode=t,this._hostLView=n}get element(){return Bs(this._hostTNode,this._hostLView)}get injector(){return new Bn(this._hostTNode,this._hostLView)}get parentInjector(){const e=Dn(this._hostTNode,this._hostLView);if(kn(e)){const t=_n(e,this._hostLView),n=Sn(e);return new Bn(t[1].data[n+8],t)}return new Bn(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(e){const t=Ol(this._lContainer);return null!==t&&t[e]||null}get length(){return this._lContainer.length-et}createEmbeddedView(e,t,n){const o=e.createEmbeddedView(t||{});return this.insert(o,n),o}createComponent(e,t,n,o,i){const r=n||this.parentInjector;if(!i&&null==e.ngModule&&r){const e=r.get(Al,null);e&&(i=e)}const a=e.create(r,o,void 0,i);return this.insert(a.hostView,t),a}insert(e,t){const n=e._lView,o=n[1];if(nt(n[3])){const t=this.indexOf(e);if(-1!==t)this.detach(t);else{const t=n[3],o=new Dl(t,t[6],t[3]);o.detach(o.indexOf(e))}}const i=this._adjustIndex(t),r=this._lContainer;!function(e,t,n,o){const i=et+o,r=n.length;o>0&&(n[i-1][4]=t),o<r-et?(t[4]=n[i],Xn(n,et+o,t)):(n.push(t),t[4]=null),t[3]=n;const a=t[17];null!==a&&n!==a&&function(e,t){const n=e[9];t[16]!==t[3][3][16]&&(e[2]=!0),null===n?e[9]=[t]:n.push(t)}(a,t);const s=t[19];null!==s&&s.insertView(e),t[2]|=128}(o,n,r,i);const a=Fi(i,r),s=n[11],l=Di(s,r[7]);return null!==l&&function(e,t,n,o,i,r){o[0]=i,o[6]=t,Li(e,o,n,1,i,r)}(o,r[6],s,n,l,a),e.attachToViewContainerRef(),Xn(jl(r),i,e),e}move(e,t){return this.insert(e,t)}indexOf(e){const t=Ol(this._lContainer);return null!==t?t.indexOf(e):-1}remove(e){const t=this._adjustIndex(e,-1),n=_i(this._lContainer,t);n&&(eo(jl(this._lContainer),t),Ti(n[1],n))}detach(e){const t=this._adjustIndex(e,-1),n=_i(this._lContainer,t);return n&&null!=eo(jl(this._lContainer),t)?new hl(n):null}_adjustIndex(e,t=0){return null==e?this.length+t:e}};function Ol(e){return e[8]}function jl(e){return e[8]||(e[8]=[])}function Rl(e,t){let n;const o=t[e.index];if(nt(o))n=o;else{let i;if(8&e.type)i=yt(o);else{const n=t[11];i=n.createComment("");const o=wt(e,t);xi(n,Di(n,o),i,function(e,t){return ft(e)?e.nextSibling(t):t.nextSibling}(n,o),!1)}t[e.index]=n=Mr(o,t,i,e),zr(t,n)}return new Dl(n,e,t)}const ql={};class Ml extends Ns{constructor(e){super(),this.ngModule=e}resolveComponentFactory(e){const t=Qe(e);return new Ll(t,this.ngModule)}}function Fl(e){const t=[];for(let n in e)e.hasOwnProperty(n)&&t.push({propName:e[n],templateName:n});return t}const Pl=new Jn("SCHEDULER_TOKEN",{providedIn:"root",factory:()=>ui});class Ll extends Ls{constructor(e,t){super(),this.componentDef=e,this.ngModule=t,this.componentType=e.type,this.selector=e.selectors.map(Xi).join(","),this.ngContentSelectors=e.ngContentSelectors?e.ngContentSelectors:[],this.isBoundToModule=!!t}get inputs(){return Fl(this.componentDef.inputs)}get outputs(){return Fl(this.componentDef.outputs)}create(e,t,n,o){const i=(o=o||this.ngModule)?function(e,t){return{get:(n,o,i)=>{const r=e.get(n,ql,i);return r!==ql||o===ql?r:t.get(n,o,i)}}}(e,o.injector):e,r=i.get(Hs,bt),a=i.get(Ks,null),s=r.createRenderer(null,this.componentDef),l=this.componentDef.selectors[0][0]||"div",c=n?function(e,t,n){if(ft(e))return e.selectRootElement(t,n===xe.ShadowDom);let o="string"==typeof t?e.querySelector(t):t;return o.textContent="",o}(s,n,this.componentDef.encapsulation):ki(r.createRenderer(null,this.componentDef),l,function(e){const t=e.toLowerCase();return"svg"===t?"http://www.w3.org/2000/svg":"math"===t?"http://www.w3.org/1998/MathML/":null}(l)),d=this.componentDef.onPush?576:528,p={components:[],scheduler:ui,clean:$r,playerHandler:null,flags:0},u=kr(0,null,null,1,0,null,null,null,null,null),h=dr(null,u,p,d,null,null,r,s,a,i);let m,g;Zt(h);try{const e=function(e,t,n,o,i,r){const a=n[1];n[20]=e;const s=pr(a,20,2,"#host",null),l=s.mergedAttrs=t.hostAttrs;null!==l&&(Qr(s,l,!0),null!==e&&(fn(i,e,l),null!==s.classes&&Ui(i,e,s.classes),null!==s.styles&&Ni(i,e,s.styles)));const c=o.createRenderer(e,t),d=dr(n,wr(t),null,t.onPush?64:16,n[20],s,o,c,null,null);return a.firstCreatePass&&(On(xn(s,n),a,t.type),Ir(a,s),Dr(s,n.length,1)),zr(n,d),n[20]=d}(c,this.componentDef,h,r,s);if(c)if(n)fn(s,c,["ng-version",Qs.full]);else{const{attrs:e,classes:t}=function(e){const t=[],n=[];let o=1,i=2;for(;o<e.length;){let r=e[o];if("string"==typeof r)2===i?""!==r&&t.push(r,e[++o]):8===i&&n.push(r);else{if(!Ji(i))break;i=r}o++}return{attrs:t,classes:n}}(this.componentDef.selectors[0]);e&&fn(s,c,e),t&&t.length>0&&Ui(s,c,t.join(" "))}if(g=kt(u,Xe),void 0!==t){const e=g.projection=[];for(let n=0;n<this.ngContentSelectors.length;n++){const o=t[n];e.push(null!=o?Array.from(o):null)}}m=function(e,t,n,o,i){const r=n[1],a=function(e,t,n){const o=qt();e.firstCreatePass&&(n.providersResolver&&n.providersResolver(n),Or(e,o,t,ur(e,t,1,null),n));const i=zn(t,e,o.directiveStart,o);ai(i,t);const r=wt(o,t);return r&&ai(r,t),i}(r,n,t);if(o.components.push(a),e[8]=a,i&&i.forEach(e=>e(a,t)),t.contentQueries){const e=qt();t.contentQueries(1,a,e.directiveStart)}const s=qt();return!r.firstCreatePass||null===t.hostBindings&&null===t.hostAttrs||(an(s.index),Cr(n[1],s,0,s.directiveStart,s.directiveEnd,t),xr(t,a)),a}(e,this.componentDef,h,p,[ma]),hr(u,h,null)}finally{on()}return new zl(this.componentType,m,Bs(g,h),h,g)}}class zl extends class{}{constructor(e,t,n,o,i){super(),this.location=n,this._rootLView=o,this._tNode=i,this.instance=t,this.hostView=this.changeDetectorRef=new ml(o),this.componentType=e}get injector(){return new Bn(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(e){this.hostView.onDestroy(e)}}const Nl=new Map;class Ul extends Al{constructor(e,t){super(),this._parent=t,this._bootstrapComponents=[],this.injector=this,this.destroyCbs=[],this.componentFactoryResolver=new Ml(this);const n=Ze(e),o=e[ze]||null;o&&Es(o),this._bootstrapComponents=hi(n.bootstrap),this._r3Injector=ra(e,t,[{provide:Al,useValue:this},{provide:Ns,useValue:this.componentFactoryResolver}],ne(e)),this._r3Injector._resolveInjectorDefTypes(),this.instance=this.get(e)}get(e,t=ha.THROW_IF_NOT_FOUND,n=ke.Default){return e===ha||e===Al||e===Zr?this:this._r3Injector.get(e,t,n)}destroy(){const e=this._r3Injector;!e.destroyed&&e.destroy(),this.destroyCbs.forEach(e=>e()),this.destroyCbs=null}onDestroy(e){this.destroyCbs.push(e)}}class Bl extends Cl{constructor(e){super(),this.moduleType=e,null!==Ze(e)&&function(e){const t=new Set;!function e(n){const o=Ze(n,!0),i=o.id;null!==i&&(function(e,t,n){if(t&&t!==n)throw new Error(`Duplicate module registered for ${e} - ${ne(t)} vs ${ne(t.name)}`)}(i,Nl.get(i),n),Nl.set(i,n));const r=hi(o.imports);for(const a of r)t.has(a)||(t.add(a),e(a))}(e)}(e)}create(e){return new Ul(this.moduleType,e)}}function Wl(e,t,n){const o=Ut()+e,i=Ot();return i[o]===er?Aa(i,o,n?t.call(n):t()):function(e,t){return e[t]}(i,o)}function $l(e,t,n,o,i){return Gl(Ot(),Ut(),e,t,n,o,i)}function Vl(e,t){const n=e[t];return n===er?void 0:n}function Hl(e,t,n,o,i,r){const a=t+n;return Ca(e,a,i)?Aa(e,a+1,r?o.call(r,i):o(i)):Vl(e,a+1)}function Gl(e,t,n,o,i,r,a){const s=t+n;return xa(e,s,i,r)?Aa(e,s+2,a?o.call(a,i,r):o(i,r)):Vl(e,s+2)}function Jl(e,t){const n=jt();let o;const i=e+Xe;n.firstCreatePass?(o=function(e,t){if(t)for(let n=t.length-1;n>=0;n--){const o=t[n];if(e===o.name)return o}throw new le("302",`The pipe '${e}' could not be found!`)}(t,n.pipeRegistry),n.data[i]=o,o.onDestroy&&(n.destroyHooks||(n.destroyHooks=[])).push(i,o.onDestroy)):o=n.data[i];const r=o.factory||(o.factory=st(o.type)),a=_e(ja);try{const e=An(!1),t=r();return An(e),function(e,t,n,o){n>=e.data.length&&(e.data[n]=null,e.blueprint[n]=null),t[n]=o}(n,Ot(),i,t),t}finally{_e(a)}}function Kl(e,t,n){const o=e+Xe,i=Ot(),r=St(i,o);return Ql(i,Yl(i,o)?Hl(i,Ut(),t,r.transform,n,r):r.transform(n))}function Yl(e,t){return e[1].data[t].pure}function Ql(e,t){return Sa.isWrapped(t)&&(t=Sa.unwrap(t),e[Bt()]=er),t}function Zl(e){return t=>{setTimeout(e,void 0,t)}}const Xl=class extends _{constructor(e=!1){super(),this.__isAsync=e}emit(e){super.next(e)}subscribe(e,t,n){var o,i,r;let a=e,s=t||(()=>null),l=n;if(e&&"object"==typeof e){const t=e;a=null===(o=t.next)||void 0===o?void 0:o.bind(t),s=null===(i=t.error)||void 0===i?void 0:i.bind(t),l=null===(r=t.complete)||void 0===r?void 0:r.bind(t)}this.__isAsync&&(s=Zl(s),a&&(a=Zl(a)),l&&(l=Zl(l)));const c=super.subscribe({next:a,error:s,complete:l});return e instanceof p&&e.add(c),c}};function ec(){return this._results[ka()]()}class tc{constructor(e=!1){this._emitDistinctChangesOnly=e,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const t=ka(),n=tc.prototype;n[t]||(n[t]=ec)}get changes(){return this._changes||(this._changes=new Xl)}get(e){return this._results[e]}map(e){return this._results.map(e)}filter(e){return this._results.filter(e)}find(e){return this._results.find(e)}reduce(e,t){return this._results.reduce(e,t)}forEach(e){this._results.forEach(e)}some(e){return this._results.some(e)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(e,t){const n=this;n.dirty=!1;const o=Qn(e);(this._changesDetected=!function(e,t,n){if(e.length!==t.length)return!1;for(let o=0;o<e.length;o++){let i=e[o],r=t[o];if(n&&(i=n(i),r=n(r)),r!==i)return!1}return!0}(n._results,o,t))&&(n._results=o,n.length=o.length,n.last=o[this.length-1],n.first=o[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class nc{constructor(e){this.queryList=e,this.matches=null}clone(){return new nc(this.queryList)}setDirty(){this.queryList.setDirty()}}class oc{constructor(e=[]){this.queries=e}createEmbeddedView(e){const t=e.queries;if(null!==t){const n=null!==e.contentQueries?e.contentQueries[0]:t.length,o=[];for(let e=0;e<n;e++){const n=t.getByIndex(e);o.push(this.queries[n.indexInDeclarationView].clone())}return new oc(o)}return null}insertView(e){this.dirtyQueriesWithMatches(e)}detachView(e){this.dirtyQueriesWithMatches(e)}dirtyQueriesWithMatches(e){for(let t=0;t<this.queries.length;t++)null!==bc(e,t).matches&&this.queries[t].setDirty()}}class ic{constructor(e,t,n=null){this.predicate=e,this.flags=t,this.read=n}}class rc{constructor(e=[]){this.queries=e}elementStart(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].elementStart(e,t)}elementEnd(e){for(let t=0;t<this.queries.length;t++)this.queries[t].elementEnd(e)}embeddedTView(e){let t=null;for(let n=0;n<this.length;n++){const o=null!==t?t.length:0,i=this.getByIndex(n).embeddedTView(e,o);i&&(i.indexInDeclarationView=n,null!==t?t.push(i):t=[i])}return null!==t?new rc(t):null}template(e,t){for(let n=0;n<this.queries.length;n++)this.queries[n].template(e,t)}getByIndex(e){return this.queries[e]}get length(){return this.queries.length}track(e){this.queries.push(e)}}class ac{constructor(e,t=-1){this.metadata=e,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=t}elementStart(e,t){this.isApplyingToNode(t)&&this.matchTNode(e,t)}elementEnd(e){this._declarationNodeIndex===e.index&&(this._appliesToNextNode=!1)}template(e,t){this.elementStart(e,t)}embeddedTView(e,t){return this.isApplyingToNode(e)?(this.crossesNgTemplate=!0,this.addMatch(-e.index,t),new ac(this.metadata)):null}isApplyingToNode(e){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const t=this._declarationNodeIndex;let n=e.parent;for(;null!==n&&8&n.type&&n.index!==t;)n=n.parent;return t===(null!==n?n.index:-1)}return this._appliesToNextNode}matchTNode(e,t){const n=this.metadata.predicate;if(Array.isArray(n))for(let o=0;o<n.length;o++){const i=n[o];this.matchTNodeWithReadOption(e,t,sc(t,i)),this.matchTNodeWithReadOption(e,t,Ln(t,e,i,!1,!1))}else n===kl?4&t.type&&this.matchTNodeWithReadOption(e,t,-1):this.matchTNodeWithReadOption(e,t,Ln(t,e,n,!1,!1))}matchTNodeWithReadOption(e,t,n){if(null!==n){const o=this.metadata.read;if(null!==o)if(o===$s||o===Il||o===kl&&4&t.type)this.addMatch(t.index,-2);else{const n=Ln(t,e,o,!1,!1);null!==n&&this.addMatch(t.index,n)}else this.addMatch(t.index,n)}}addMatch(e,t){null===this.matches?this.matches=[e,t]:this.matches.push(e,t)}}function sc(e,t){const n=e.localNames;if(null!==n)for(let o=0;o<n.length;o+=2)if(n[o]===t)return n[o+1];return null}function lc(e,t,n,o){return-1===n?function(e,t){return 11&e.type?Bs(e,t):4&e.type?Tl(e,t):null}(t,e):-2===n?function(e,t,n){return n===$s?Bs(t,e):n===kl?Tl(t,e):n===Il?Rl(t,e):void 0}(e,t,o):zn(e,e[1],n,t)}function cc(e,t,n,o){const i=t[19].queries[o];if(null===i.matches){const o=e.data,r=n.matches,a=[];for(let e=0;e<r.length;e+=2){const i=r[e];a.push(i<0?null:lc(t,o[i],r[e+1],n.metadata.read))}i.matches=a}return i.matches}function dc(e,t,n,o){const i=e.queries.getByIndex(n),r=i.matches;if(null!==r){const a=cc(e,t,i,n);for(let e=0;e<r.length;e+=2){const n=r[e];if(n>0)o.push(a[e/2]);else{const i=r[e+1],a=t[-n];for(let e=et;e<a.length;e++){const t=a[e];t[17]===t[3]&&dc(t[1],t,i,o)}if(null!==a[9]){const e=a[9];for(let t=0;t<e.length;t++){const n=e[t];dc(n[1],n,i,o)}}}}}return o}function pc(e){const t=Ot(),n=jt(),o=Jt();Kt(o+1);const i=bc(n,o);if(e.dirty&&Tt(t)===(2==(2&i.metadata.flags))){if(null===i.matches)e.reset([]);else{const r=i.crossesNgTemplate?dc(n,t,o,[]):cc(n,t,i,o);e.reset(r,Vs),e.notifyOnChanges()}return!0}return!1}function uc(e,t,n){const o=jt();o.firstCreatePass&&(fc(o,new ic(e,t,n),-1),2==(2&t)&&(o.staticViewQueries=!0)),gc(o,Ot(),t)}function hc(e,t,n,o){const i=jt();if(i.firstCreatePass){const r=qt();fc(i,new ic(t,n,o),r.index),function(e,t){const n=e.contentQueries||(e.contentQueries=[]);t!==(n.length?n[n.length-1]:-1)&&n.push(e.queries.length-1,t)}(i,e),2==(2&n)&&(i.staticContentQueries=!0)}gc(i,Ot(),n)}function mc(){return e=Ot(),t=Jt(),e[19].queries[t].queryList;var e,t}function gc(e,t,n){const o=new tc(4==(4&n));Sr(e,t,o,o.destroy),null===t[19]&&(t[19]=new oc),t[19].queries.push(new nc(o))}function fc(e,t,n){null===e.queries&&(e.queries=new rc),e.queries.track(new ac(t,n))}function bc(e,t){return e.queries.getByIndex(t)}const yc=new Jn("Application Initializer");let vc=(()=>{class e{constructor(e){this.appInits=e,this.resolve=Us,this.reject=Us,this.initialized=!1,this.done=!1,this.donePromise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}runInitializers(){if(this.initialized)return;const e=[],t=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let n=0;n<this.appInits.length;n++){const t=this.appInits[n]();if(Ua(t))e.push(t);else if(Wa(t)){const n=new Promise((e,n)=>{t.subscribe({complete:e,error:n})});e.push(n)}}Promise.all(e).then(()=>{t()}).catch(e=>{this.reject(e)}),0===e.length&&t(),this.initialized=!0}}return e.\u0275fac=function(t){return new(t||e)(ho(yc,8))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const wc=new Jn("AppId"),kc={provide:wc,useFactory:function(){return`${Sc()}${Sc()}${Sc()}`},deps:[]};function Sc(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const _c=new Jn("Platform Initializer"),Tc=new Jn("Platform ID"),Ac=new Jn("appBootstrapListener");let Cc=(()=>{class e{log(e){console.log(e)}warn(e){console.warn(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const xc=new Jn("LocaleId"),Ic=new Jn("DefaultCurrencyCode");class Ec{constructor(e,t){this.ngModuleFactory=e,this.componentFactories=t}}const Dc=function(e){return new Bl(e)},Oc=Dc,jc=function(e){return Promise.resolve(Dc(e))},Rc=function(e){const t=Dc(e),n=hi(Ze(e).declarations).reduce((e,t)=>{const n=Qe(t);return n&&e.push(new Ll(n)),e},[]);return new Ec(t,n)},qc=Rc,Mc=function(e){return Promise.resolve(Rc(e))};let Fc=(()=>{class e{constructor(){this.compileModuleSync=Oc,this.compileModuleAsync=jc,this.compileModuleAndAllComponentsSync=qc,this.compileModuleAndAllComponentsAsync=Mc}clearCache(){}clearCacheFor(e){}getModuleId(e){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const Pc=(()=>Promise.resolve(0))();function Lc(e){"undefined"==typeof Zone?Pc.then(()=>{e&&e.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",e)}class zc{constructor({enableLongStackTrace:e=!1,shouldCoalesceEventChangeDetection:t=!1,shouldCoalesceRunChangeDetection:n=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new Xl(!1),this.onMicrotaskEmpty=new Xl(!1),this.onStable=new Xl(!1),this.onError=new Xl(!1),"undefined"==typeof Zone)throw new Error("In this configuration Angular requires Zone.js");Zone.assertZonePatched();const o=this;o._nesting=0,o._outer=o._inner=Zone.current,Zone.TaskTrackingZoneSpec&&(o._inner=o._inner.fork(new Zone.TaskTrackingZoneSpec)),e&&Zone.longStackTraceZoneSpec&&(o._inner=o._inner.fork(Zone.longStackTraceZoneSpec)),o.shouldCoalesceEventChangeDetection=!n&&t,o.shouldCoalesceRunChangeDetection=n,o.lastRequestAnimationFrameId=-1,o.nativeRequestAnimationFrame=function(){let e=je.requestAnimationFrame,t=je.cancelAnimationFrame;if("undefined"!=typeof Zone&&e&&t){const n=e[Zone.__symbol__("OriginalDelegate")];n&&(e=n);const o=t[Zone.__symbol__("OriginalDelegate")];o&&(t=o)}return{nativeRequestAnimationFrame:e,nativeCancelAnimationFrame:t}}().nativeRequestAnimationFrame,function(e){const t=()=>{!function(e){e.isCheckStableRunning||-1!==e.lastRequestAnimationFrameId||(e.lastRequestAnimationFrameId=e.nativeRequestAnimationFrame.call(je,()=>{e.fakeTopEventTask||(e.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{e.lastRequestAnimationFrameId=-1,Bc(e),e.isCheckStableRunning=!0,Uc(e),e.isCheckStableRunning=!1},void 0,()=>{},()=>{})),e.fakeTopEventTask.invoke()}),Bc(e))}(e)};e._inner=e._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(n,o,i,r,a,s)=>{try{return Wc(e),n.invokeTask(i,r,a,s)}finally{(e.shouldCoalesceEventChangeDetection&&"eventTask"===r.type||e.shouldCoalesceRunChangeDetection)&&t(),$c(e)}},onInvoke:(n,o,i,r,a,s,l)=>{try{return Wc(e),n.invoke(i,r,a,s,l)}finally{e.shouldCoalesceRunChangeDetection&&t(),$c(e)}},onHasTask:(t,n,o,i)=>{t.hasTask(o,i),n===o&&("microTask"==i.change?(e._hasPendingMicrotasks=i.microTask,Bc(e),Uc(e)):"macroTask"==i.change&&(e.hasPendingMacrotasks=i.macroTask))},onHandleError:(t,n,o,i)=>(t.handleError(o,i),e.runOutsideAngular(()=>e.onError.emit(i)),!1)})}(o)}static isInAngularZone(){return!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!zc.isInAngularZone())throw new Error("Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(zc.isInAngularZone())throw new Error("Expected to not be in Angular Zone, but it is!")}run(e,t,n){return this._inner.run(e,t,n)}runTask(e,t,n,o){const i=this._inner,r=i.scheduleEventTask("NgZoneEvent: "+o,e,Nc,Us,Us);try{return i.runTask(r,t,n)}finally{i.cancelTask(r)}}runGuarded(e,t,n){return this._inner.runGuarded(e,t,n)}runOutsideAngular(e){return this._outer.run(e)}}const Nc={};function Uc(e){if(0==e._nesting&&!e.hasPendingMicrotasks&&!e.isStable)try{e._nesting++,e.onMicrotaskEmpty.emit(null)}finally{if(e._nesting--,!e.hasPendingMicrotasks)try{e.runOutsideAngular(()=>e.onStable.emit(null))}finally{e.isStable=!0}}}function Bc(e){e.hasPendingMicrotasks=!!(e._hasPendingMicrotasks||(e.shouldCoalesceEventChangeDetection||e.shouldCoalesceRunChangeDetection)&&-1!==e.lastRequestAnimationFrameId)}function Wc(e){e._nesting++,e.isStable&&(e.isStable=!1,e.onUnstable.emit(null))}function $c(e){e._nesting--,Uc(e)}class Vc{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new Xl,this.onMicrotaskEmpty=new Xl,this.onStable=new Xl,this.onError=new Xl}run(e,t,n){return e.apply(t,n)}runGuarded(e,t,n){return e.apply(t,n)}runOutsideAngular(e){return e()}runTask(e,t,n,o){return e.apply(t,n)}}let Hc=(()=>{class e{constructor(e){this._ngZone=e,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,this._watchAngularEvents(),e.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{zc.assertNotInAngularZone(),Lc(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())Lc(()=>{for(;0!==this._callbacks.length;){let e=this._callbacks.pop();clearTimeout(e.timeoutId),e.doneCb(this._didWork)}this._didWork=!1});else{let e=this.getPendingTasks();this._callbacks=this._callbacks.filter(t=>!t.updateCb||!t.updateCb(e)||(clearTimeout(t.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(e=>({source:e.source,creationLocation:e.creationLocation,data:e.data})):[]}addCallback(e,t,n){let o=-1;t&&t>0&&(o=setTimeout(()=>{this._callbacks=this._callbacks.filter(e=>e.timeoutId!==o),e(this._didWork,this.getPendingTasks())},t)),this._callbacks.push({doneCb:e,timeoutId:o,updateCb:n})}whenStable(e,t,n){if(n&&!this.taskTrackingZone)throw new Error('Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?');this.addCallback(e,t,n),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}findProviders(e,t,n){return[]}}return e.\u0275fac=function(t){return new(t||e)(ho(zc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),Gc=(()=>{class e{constructor(){this._applications=new Map,Yc.addToWindow(this)}registerApplication(e,t){this._applications.set(e,t)}unregisterApplication(e){this._applications.delete(e)}unregisterAllApplications(){this._applications.clear()}getTestability(e){return this._applications.get(e)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(e,t=!0){return Yc.findTestabilityInTree(this,e,t)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class Jc{addToWindow(e){}findTestabilityInTree(e,t,n){return null}}let Kc,Yc=new Jc,Qc=!0,Zc=!1;function Xc(){return Zc=!0,Qc}const ed=new Jn("AllowMultipleToken");class td{constructor(e,t){this.name=e,this.token=t}}function nd(e,t,n=[]){const o=`Platform: ${t}`,i=new Jn(o);return(t=[])=>{let r=od();if(!r||r.injector.get(ed,!1))if(e)e(n.concat(t).concat({provide:i,useValue:!0}));else{const e=n.concat(t).concat({provide:i,useValue:!0},{provide:ea,useValue:"platform"});!function(e){if(Kc&&!Kc.destroyed&&!Kc.injector.get(ed,!1))throw new Error("There can be only one platform. Destroy the previous one to create a new one.");Kc=e.get(id);const t=e.get(_c,null);t&&t.forEach(e=>e())}(ha.create({providers:e,name:o}))}return function(e){const t=od();if(!t)throw new Error("No platform exists!");if(!t.injector.get(e,null))throw new Error("A platform with a different configuration has been created. Please destroy it first.");return t}(i)}}function od(){return Kc&&!Kc.destroyed?Kc:null}let id=(()=>{class e{constructor(e){this._injector=e,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(e,t){const n=function(e,t){let n;return n="noop"===e?new Vc:("zone.js"===e?void 0:e)||new zc({enableLongStackTrace:Xc(),shouldCoalesceEventChangeDetection:!!(null==t?void 0:t.ngZoneEventCoalescing),shouldCoalesceRunChangeDetection:!!(null==t?void 0:t.ngZoneRunCoalescing)}),n}(t?t.ngZone:void 0,{ngZoneEventCoalescing:t&&t.ngZoneEventCoalescing||!1,ngZoneRunCoalescing:t&&t.ngZoneRunCoalescing||!1}),o=[{provide:zc,useValue:n}];return n.run(()=>{const t=ha.create({providers:o,parent:this.injector,name:e.moduleType.name}),i=e.create(t),r=i.injector.get(pi,null);if(!r)throw new Error("No ErrorHandler. Is platform module (BrowserModule) included?");return n.runOutsideAngular(()=>{const e=n.onError.subscribe({next:e=>{r.handleError(e)}});i.onDestroy(()=>{sd(this._modules,i),e.unsubscribe()})}),function(e,t,n){try{const o=n();return Ua(o)?o.catch(n=>{throw t.runOutsideAngular(()=>e.handleError(n)),n}):o}catch(o){throw t.runOutsideAngular(()=>e.handleError(o)),o}}(r,n,()=>{const e=i.injector.get(vc);return e.runInitializers(),e.donePromise.then(()=>(Es(i.injector.get(xc,xs)||xs),this._moduleDoBootstrap(i),i))})})}bootstrapModule(e,t=[]){const n=rd({},t);return function(e,t,n){const o=new Bl(n);return Promise.resolve(o)}(0,0,e).then(e=>this.bootstrapModuleFactory(e,n))}_moduleDoBootstrap(e){const t=e.injector.get(ad);if(e._bootstrapComponents.length>0)e._bootstrapComponents.forEach(e=>t.bootstrap(e));else{if(!e.instance.ngDoBootstrap)throw new Error(`The module ${ne(e.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);e.instance.ngDoBootstrap(t)}this._modules.push(e)}onDestroy(e){this._destroyListeners.push(e)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new Error("The platform has already been destroyed!");this._modules.slice().forEach(e=>e.destroy()),this._destroyListeners.forEach(e=>e()),this._destroyed=!0}get destroyed(){return this._destroyed}}return e.\u0275fac=function(t){return new(t||e)(ho(ha))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function rd(e,t){return Array.isArray(t)?t.reduce(rd,e):Object.assign(Object.assign({},e),t)}let ad=(()=>{class e{constructor(e,t,n,o,i){this._zone=e,this._injector=t,this._exceptionHandler=n,this._componentFactoryResolver=o,this._initStatus=i,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const r=new y(e=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{e.next(this._stable),e.complete()})}),a=new y(e=>{let t;this._zone.runOutsideAngular(()=>{t=this._zone.onStable.subscribe(()=>{zc.assertNotInAngularZone(),Lc(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,e.next(!0))})})});const n=this._zone.onUnstable.subscribe(()=>{zc.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{e.next(!1)}))});return()=>{t.unsubscribe(),n.unsubscribe()}});this.isStable=V(r,a.pipe(X()))}bootstrap(e,t){if(!this._initStatus.done)throw new Error("Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.");let n;n=e instanceof Ls?e:this._componentFactoryResolver.resolveComponentFactory(e),this.componentTypes.push(n.componentType);const o=n.isBoundToModule?void 0:this._injector.get(Al),i=n.create(ha.NULL,[],t||n.selector,o),r=i.location.nativeElement,a=i.injector.get(Hc,null),s=a&&i.injector.get(Gc);return a&&s&&s.registerApplication(r,a),i.onDestroy(()=>{this.detachView(i.hostView),sd(this.components,i),s&&s.unregisterApplication(r)}),this._loadComponent(i),i}tick(){if(this._runningTick)throw new Error("ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let e of this._views)e.detectChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(e){const t=e;this._views.push(t),t.attachToAppRef(this)}detachView(e){const t=e;sd(this._views,t),t.detachFromAppRef()}_loadComponent(e){this.attachView(e.hostView),this.tick(),this.components.push(e),this._injector.get(Ac,[]).concat(this._bootstrapListeners).forEach(t=>t(e))}ngOnDestroy(){this._views.slice().forEach(e=>e.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}get viewCount(){return this._views.length}}return e.\u0275fac=function(t){return new(t||e)(ho(zc),ho(ha),ho(pi),ho(Ns),ho(vc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function sd(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class ld{}class cd{}const dd={factoryPathPrefix:"",factoryPathSuffix:".ngfactory"};let pd=(()=>{class e{constructor(e,t){this._compiler=e,this._config=t||dd}load(e){return this.loadAndCompile(e)}loadAndCompile(e){let[t,o]=e.split("#");return void 0===o&&(o="default"),n(255)(t).then(e=>e[o]).then(e=>ud(e,t,o)).then(e=>this._compiler.compileModuleAsync(e))}loadFactory(e){let[t,o]=e.split("#"),i="NgFactory";return void 0===o&&(o="default",i=""),n(255)(this._config.factoryPathPrefix+t+this._config.factoryPathSuffix).then(e=>e[o+i]).then(e=>ud(e,t,o))}}return e.\u0275fac=function(t){return new(t||e)(ho(Fc),ho(cd,8))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function ud(e,t,n){if(!e)throw new Error(`Cannot find '${n}' in '${t}'`);return e}const hd=nd(null,"core",[{provide:Tc,useValue:"unknown"},{provide:id,deps:[ha]},{provide:Gc,deps:[]},{provide:Cc,deps:[]}]),md=[{provide:ad,useClass:ad,deps:[zc,ha,pi,Ns,vc]},{provide:Pl,deps:[zc],useFactory:function(e){let t=[];return e.onStable.subscribe(()=>{for(;t.length;)t.pop()()}),function(e){t.push(e)}}},{provide:vc,useClass:vc,deps:[[new yo,yc]]},{provide:Fc,useClass:Fc,deps:[]},kc,{provide:cl,useFactory:function(){return yl},deps:[]},{provide:pl,useFactory:function(){return vl},deps:[]},{provide:xc,useFactory:function(e){return Es(e=e||"undefined"!=typeof $localize&&$localize.locale||xs),e},deps:[[new bo(xc),new yo,new vo]]},{provide:Ic,useValue:"USD"}];let gd=(()=>{class e{constructor(e){}}return e.\u0275fac=function(t){return new(t||e)(ho(ad))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:md}),e})(),fd=null;function bd(){return fd}const yd=new Jn("DocumentToken");let vd=(()=>{class e{historyGo(e){throw new Error("Not implemented")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:wd,token:e,providedIn:"platform"}),e})();function wd(){return ho(Sd)}const kd=new Jn("Location Initialized");let Sd=(()=>{class e extends vd{constructor(e){super(),this._doc=e,this._init()}_init(){this.location=window.location,this._history=window.history}getBaseHrefFromDOM(){return bd().getBaseHref(this._doc)}onPopState(e){const t=bd().getGlobalEventTarget(this._doc,"window");return t.addEventListener("popstate",e,!1),()=>t.removeEventListener("popstate",e)}onHashChange(e){const t=bd().getGlobalEventTarget(this._doc,"window");return t.addEventListener("hashchange",e,!1),()=>t.removeEventListener("hashchange",e)}get href(){return this.location.href}get protocol(){return this.location.protocol}get hostname(){return this.location.hostname}get port(){return this.location.port}get pathname(){return this.location.pathname}get search(){return this.location.search}get hash(){return this.location.hash}set pathname(e){this.location.pathname=e}pushState(e,t,n){_d()?this._history.pushState(e,t,n):this.location.hash=n}replaceState(e,t,n){_d()?this._history.replaceState(e,t,n):this.location.hash=n}forward(){this._history.forward()}back(){this._history.back()}historyGo(e=0){this._history.go(e)}getState(){return this._history.state}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:Td,token:e,providedIn:"platform"}),e})();function _d(){return!!window.history.pushState}function Td(){return new Sd(ho(yd))}function Ad(e,t){if(0==e.length)return t;if(0==t.length)return e;let n=0;return e.endsWith("/")&&n++,t.startsWith("/")&&n++,2==n?e+t.substring(1):1==n?e+t:e+"/"+t}function Cd(e){const t=e.match(/#|\?|$/),n=t&&t.index||e.length;return e.slice(0,n-("/"===e[n-1]?1:0))+e.slice(n)}function xd(e){return e&&"?"!==e[0]?"?"+e:e}let Id=(()=>{class e{historyGo(e){throw new Error("Not implemented")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:Ed,token:e,providedIn:"root"}),e})();function Ed(e){const t=ho(yd).location;return new Od(ho(vd),t&&t.origin||"")}const Dd=new Jn("appBaseHref");let Od=(()=>{class e extends Id{constructor(e,t){if(super(),this._platformLocation=e,this._removeListenerFns=[],null==t&&(t=this._platformLocation.getBaseHrefFromDOM()),null==t)throw new Error("No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.");this._baseHref=t}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}prepareExternalUrl(e){return Ad(this._baseHref,e)}path(e=!1){const t=this._platformLocation.pathname+xd(this._platformLocation.search),n=this._platformLocation.hash;return n&&e?`${t}${n}`:t}pushState(e,t,n,o){const i=this.prepareExternalUrl(n+xd(o));this._platformLocation.pushState(e,t,i)}replaceState(e,t,n,o){const i=this.prepareExternalUrl(n+xd(o));this._platformLocation.replaceState(e,t,i)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformLocation).historyGo)||void 0===n||n.call(t,e)}}return e.\u0275fac=function(t){return new(t||e)(ho(vd),ho(Dd,8))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),jd=(()=>{class e extends Id{constructor(e,t){super(),this._platformLocation=e,this._baseHref="",this._removeListenerFns=[],null!=t&&(this._baseHref=t)}ngOnDestroy(){for(;this._removeListenerFns.length;)this._removeListenerFns.pop()()}onPopState(e){this._removeListenerFns.push(this._platformLocation.onPopState(e),this._platformLocation.onHashChange(e))}getBaseHref(){return this._baseHref}path(e=!1){let t=this._platformLocation.hash;return null==t&&(t="#"),t.length>0?t.substring(1):t}prepareExternalUrl(e){const t=Ad(this._baseHref,e);return t.length>0?"#"+t:t}pushState(e,t,n,o){let i=this.prepareExternalUrl(n+xd(o));0==i.length&&(i=this._platformLocation.pathname),this._platformLocation.pushState(e,t,i)}replaceState(e,t,n,o){let i=this.prepareExternalUrl(n+xd(o));0==i.length&&(i=this._platformLocation.pathname),this._platformLocation.replaceState(e,t,i)}forward(){this._platformLocation.forward()}back(){this._platformLocation.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformLocation).historyGo)||void 0===n||n.call(t,e)}}return e.\u0275fac=function(t){return new(t||e)(ho(vd),ho(Dd,8))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),Rd=(()=>{class e{constructor(e,t){this._subject=new Xl,this._urlChangeListeners=[],this._platformStrategy=e;const n=this._platformStrategy.getBaseHref();this._platformLocation=t,this._baseHref=Cd(Md(n)),this._platformStrategy.onPopState(e=>{this._subject.emit({url:this.path(!0),pop:!0,state:e.state,type:e.type})})}path(e=!1){return this.normalize(this._platformStrategy.path(e))}getState(){return this._platformLocation.getState()}isCurrentPathEqualTo(e,t=""){return this.path()==this.normalize(e+xd(t))}normalize(t){return e.stripTrailingSlash(function(e,t){return e&&t.startsWith(e)?t.substring(e.length):t}(this._baseHref,Md(t)))}prepareExternalUrl(e){return e&&"/"!==e[0]&&(e="/"+e),this._platformStrategy.prepareExternalUrl(e)}go(e,t="",n=null){this._platformStrategy.pushState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+xd(t)),n)}replaceState(e,t="",n=null){this._platformStrategy.replaceState(n,"",e,t),this._notifyUrlChangeListeners(this.prepareExternalUrl(e+xd(t)),n)}forward(){this._platformStrategy.forward()}back(){this._platformStrategy.back()}historyGo(e=0){var t,n;null===(n=(t=this._platformStrategy).historyGo)||void 0===n||n.call(t,e)}onUrlChange(e){this._urlChangeListeners.push(e),this._urlChangeSubscription||(this._urlChangeSubscription=this.subscribe(e=>{this._notifyUrlChangeListeners(e.url,e.state)}))}_notifyUrlChangeListeners(e="",t){this._urlChangeListeners.forEach(n=>n(e,t))}subscribe(e,t,n){return this._subject.subscribe({next:e,error:t,complete:n})}}return e.\u0275fac=function(t){return new(t||e)(ho(Id),ho(vd))},e.normalizeQueryParams=xd,e.joinWithSlash=Ad,e.stripTrailingSlash=Cd,e.\u0275prov=ue({factory:qd,token:e,providedIn:"root"}),e})();function qd(){return new Rd(ho(Id),ho(vd))}function Md(e){return e.replace(/\/index.html$/,"")}var Fd=function(e){return e[e.Zero=0]="Zero",e[e.One=1]="One",e[e.Two=2]="Two",e[e.Few=3]="Few",e[e.Many=4]="Many",e[e.Other=5]="Other",e}({}),Pd=function(e){return e[e.Format=0]="Format",e[e.Standalone=1]="Standalone",e}({}),Ld=function(e){return e[e.Narrow=0]="Narrow",e[e.Abbreviated=1]="Abbreviated",e[e.Wide=2]="Wide",e[e.Short=3]="Short",e}({}),zd=function(e){return e[e.Short=0]="Short",e[e.Medium=1]="Medium",e[e.Long=2]="Long",e[e.Full=3]="Full",e}({}),Nd=function(e){return e[e.Decimal=0]="Decimal",e[e.Group=1]="Group",e[e.List=2]="List",e[e.PercentSign=3]="PercentSign",e[e.PlusSign=4]="PlusSign",e[e.MinusSign=5]="MinusSign",e[e.Exponential=6]="Exponential",e[e.SuperscriptingExponent=7]="SuperscriptingExponent",e[e.PerMille=8]="PerMille",e[e[1/0]=9]="Infinity",e[e.NaN=10]="NaN",e[e.TimeSeparator=11]="TimeSeparator",e[e.CurrencyDecimal=12]="CurrencyDecimal",e[e.CurrencyGroup=13]="CurrencyGroup",e}({});function Ud(e,t){return Hd(Ts(e)[Cs.DateFormat],t)}function Bd(e,t){return Hd(Ts(e)[Cs.TimeFormat],t)}function Wd(e,t){return Hd(Ts(e)[Cs.DateTimeFormat],t)}function $d(e,t){const n=Ts(e),o=n[Cs.NumberSymbols][t];if(void 0===o){if(t===Nd.CurrencyDecimal)return n[Cs.NumberSymbols][Nd.Decimal];if(t===Nd.CurrencyGroup)return n[Cs.NumberSymbols][Nd.Group]}return o}function Vd(e){if(!e[Cs.ExtraData])throw new Error(`Missing extra locale data for the locale "${e[Cs.LocaleId]}". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`)}function Hd(e,t){for(let n=t;n>-1;n--)if(void 0!==e[n])return e[n];throw new Error("Locale data API: locale data undefined")}function Gd(e){const[t,n]=e.split(":");return{hours:+t,minutes:+n}}const Jd=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,Kd={},Yd=/((?:[^BEGHLMOSWYZabcdhmswyz']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|c{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;var Qd=function(e){return e[e.Short=0]="Short",e[e.ShortGMT=1]="ShortGMT",e[e.Long=2]="Long",e[e.Extended=3]="Extended",e}({}),Zd=function(e){return e[e.FullYear=0]="FullYear",e[e.Month=1]="Month",e[e.Date=2]="Date",e[e.Hours=3]="Hours",e[e.Minutes=4]="Minutes",e[e.Seconds=5]="Seconds",e[e.FractionalSeconds=6]="FractionalSeconds",e[e.Day=7]="Day",e}({}),Xd=function(e){return e[e.DayPeriods=0]="DayPeriods",e[e.Days=1]="Days",e[e.Months=2]="Months",e[e.Eras=3]="Eras",e}({});function ep(e,t,n,o){let i=function(e){if(hp(e))return e;if("number"==typeof e&&!isNaN(e))return new Date(e);if("string"==typeof e){if(e=e.trim(),/^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(e)){const[t,n=1,o=1]=e.split("-").map(e=>+e);return tp(t,n-1,o)}const t=parseFloat(e);if(!isNaN(e-t))return new Date(t);let n;if(n=e.match(Jd))return function(e){const t=new Date(0);let n=0,o=0;const i=e[8]?t.setUTCFullYear:t.setFullYear,r=e[8]?t.setUTCHours:t.setHours;e[9]&&(n=Number(e[9]+e[10]),o=Number(e[9]+e[11])),i.call(t,Number(e[1]),Number(e[2])-1,Number(e[3]));const a=Number(e[4]||0)-n,s=Number(e[5]||0)-o,l=Number(e[6]||0),c=Math.floor(1e3*parseFloat("0."+(e[7]||0)));return r.call(t,a,s,l,c),t}(n)}const t=new Date(e);if(!hp(t))throw new Error(`Unable to convert "${e}" into a date`);return t}(e);t=np(n,t)||t;let r,a=[];for(;t;){if(r=Yd.exec(t),!r){a.push(t);break}{a=a.concat(r.slice(1));const e=a.pop();if(!e)break;t=e}}let s=i.getTimezoneOffset();o&&(s=up(o,s),i=function(e,t,n){const o=e.getTimezoneOffset();return function(e,t){return(e=new Date(e.getTime())).setMinutes(e.getMinutes()+t),e}(e,-1*(up(t,o)-o))}(i,o));let l="";return a.forEach(e=>{const t=function(e){if(pp[e])return pp[e];let t;switch(e){case"G":case"GG":case"GGG":t=ap(Xd.Eras,Ld.Abbreviated);break;case"GGGG":t=ap(Xd.Eras,Ld.Wide);break;case"GGGGG":t=ap(Xd.Eras,Ld.Narrow);break;case"y":t=rp(Zd.FullYear,1,0,!1,!0);break;case"yy":t=rp(Zd.FullYear,2,0,!0,!0);break;case"yyy":t=rp(Zd.FullYear,3,0,!1,!0);break;case"yyyy":t=rp(Zd.FullYear,4,0,!1,!0);break;case"Y":t=dp(1);break;case"YY":t=dp(2,!0);break;case"YYY":t=dp(3);break;case"YYYY":t=dp(4);break;case"M":case"L":t=rp(Zd.Month,1,1);break;case"MM":case"LL":t=rp(Zd.Month,2,1);break;case"MMM":t=ap(Xd.Months,Ld.Abbreviated);break;case"MMMM":t=ap(Xd.Months,Ld.Wide);break;case"MMMMM":t=ap(Xd.Months,Ld.Narrow);break;case"LLL":t=ap(Xd.Months,Ld.Abbreviated,Pd.Standalone);break;case"LLLL":t=ap(Xd.Months,Ld.Wide,Pd.Standalone);break;case"LLLLL":t=ap(Xd.Months,Ld.Narrow,Pd.Standalone);break;case"w":t=cp(1);break;case"ww":t=cp(2);break;case"W":t=cp(1,!0);break;case"d":t=rp(Zd.Date,1);break;case"dd":t=rp(Zd.Date,2);break;case"c":case"cc":t=rp(Zd.Day,1);break;case"ccc":t=ap(Xd.Days,Ld.Abbreviated,Pd.Standalone);break;case"cccc":t=ap(Xd.Days,Ld.Wide,Pd.Standalone);break;case"ccccc":t=ap(Xd.Days,Ld.Narrow,Pd.Standalone);break;case"cccccc":t=ap(Xd.Days,Ld.Short,Pd.Standalone);break;case"E":case"EE":case"EEE":t=ap(Xd.Days,Ld.Abbreviated);break;case"EEEE":t=ap(Xd.Days,Ld.Wide);break;case"EEEEE":t=ap(Xd.Days,Ld.Narrow);break;case"EEEEEE":t=ap(Xd.Days,Ld.Short);break;case"a":case"aa":case"aaa":t=ap(Xd.DayPeriods,Ld.Abbreviated);break;case"aaaa":t=ap(Xd.DayPeriods,Ld.Wide);break;case"aaaaa":t=ap(Xd.DayPeriods,Ld.Narrow);break;case"b":case"bb":case"bbb":t=ap(Xd.DayPeriods,Ld.Abbreviated,Pd.Standalone,!0);break;case"bbbb":t=ap(Xd.DayPeriods,Ld.Wide,Pd.Standalone,!0);break;case"bbbbb":t=ap(Xd.DayPeriods,Ld.Narrow,Pd.Standalone,!0);break;case"B":case"BB":case"BBB":t=ap(Xd.DayPeriods,Ld.Abbreviated,Pd.Format,!0);break;case"BBBB":t=ap(Xd.DayPeriods,Ld.Wide,Pd.Format,!0);break;case"BBBBB":t=ap(Xd.DayPeriods,Ld.Narrow,Pd.Format,!0);break;case"h":t=rp(Zd.Hours,1,-12);break;case"hh":t=rp(Zd.Hours,2,-12);break;case"H":t=rp(Zd.Hours,1);break;case"HH":t=rp(Zd.Hours,2);break;case"m":t=rp(Zd.Minutes,1);break;case"mm":t=rp(Zd.Minutes,2);break;case"s":t=rp(Zd.Seconds,1);break;case"ss":t=rp(Zd.Seconds,2);break;case"S":t=rp(Zd.FractionalSeconds,1);break;case"SS":t=rp(Zd.FractionalSeconds,2);break;case"SSS":t=rp(Zd.FractionalSeconds,3);break;case"Z":case"ZZ":case"ZZZ":t=sp(Qd.Short);break;case"ZZZZZ":t=sp(Qd.Extended);break;case"O":case"OO":case"OOO":case"z":case"zz":case"zzz":t=sp(Qd.ShortGMT);break;case"OOOO":case"ZZZZ":case"zzzz":t=sp(Qd.Long);break;default:return null}return pp[e]=t,t}(e);l+=t?t(i,n,s):"''"===e?"'":e.replace(/(^'|'$)/g,"").replace(/''/g,"'")}),l}function tp(e,t,n){const o=new Date(0);return o.setFullYear(e,t,n),o.setHours(0,0,0),o}function np(e,t){const n=function(e){return Ts(e)[Cs.LocaleId]}(e);if(Kd[n]=Kd[n]||{},Kd[n][t])return Kd[n][t];let o="";switch(t){case"shortDate":o=Ud(e,zd.Short);break;case"mediumDate":o=Ud(e,zd.Medium);break;case"longDate":o=Ud(e,zd.Long);break;case"fullDate":o=Ud(e,zd.Full);break;case"shortTime":o=Bd(e,zd.Short);break;case"mediumTime":o=Bd(e,zd.Medium);break;case"longTime":o=Bd(e,zd.Long);break;case"fullTime":o=Bd(e,zd.Full);break;case"short":const t=np(e,"shortTime"),n=np(e,"shortDate");o=op(Wd(e,zd.Short),[t,n]);break;case"medium":const i=np(e,"mediumTime"),r=np(e,"mediumDate");o=op(Wd(e,zd.Medium),[i,r]);break;case"long":const a=np(e,"longTime"),s=np(e,"longDate");o=op(Wd(e,zd.Long),[a,s]);break;case"full":const l=np(e,"fullTime"),c=np(e,"fullDate");o=op(Wd(e,zd.Full),[l,c])}return o&&(Kd[n][t]=o),o}function op(e,t){return t&&(e=e.replace(/\{([^}]+)}/g,function(e,n){return null!=t&&n in t?t[n]:e})),e}function ip(e,t,n="-",o,i){let r="";(e<0||i&&e<=0)&&(i?e=1-e:(e=-e,r=n));let a=String(e);for(;a.length<t;)a="0"+a;return o&&(a=a.substr(a.length-t)),r+a}function rp(e,t,n=0,o=!1,i=!1){return function(r,a){let s=function(e,t){switch(e){case Zd.FullYear:return t.getFullYear();case Zd.Month:return t.getMonth();case Zd.Date:return t.getDate();case Zd.Hours:return t.getHours();case Zd.Minutes:return t.getMinutes();case Zd.Seconds:return t.getSeconds();case Zd.FractionalSeconds:return t.getMilliseconds();case Zd.Day:return t.getDay();default:throw new Error(`Unknown DateType value "${e}".`)}}(e,r);if((n>0||s>-n)&&(s+=n),e===Zd.Hours)0===s&&-12===n&&(s=12);else if(e===Zd.FractionalSeconds)return l=t,ip(s,3).substr(0,l);var l;const c=$d(a,Nd.MinusSign);return ip(s,t,c,o,i)}}function ap(e,t,n=Pd.Format,o=!1){return function(i,r){return function(e,t,n,o,i,r){switch(n){case Xd.Months:return function(e,t,n){const o=Ts(e),i=Hd([o[Cs.MonthsFormat],o[Cs.MonthsStandalone]],t);return Hd(i,n)}(t,i,o)[e.getMonth()];case Xd.Days:return function(e,t,n){const o=Ts(e),i=Hd([o[Cs.DaysFormat],o[Cs.DaysStandalone]],t);return Hd(i,n)}(t,i,o)[e.getDay()];case Xd.DayPeriods:const a=e.getHours(),s=e.getMinutes();if(r){const e=function(e){const t=Ts(e);return Vd(t),(t[Cs.ExtraData][2]||[]).map(e=>"string"==typeof e?Gd(e):[Gd(e[0]),Gd(e[1])])}(t),n=function(e,t,n){const o=Ts(e);Vd(o);const i=Hd([o[Cs.ExtraData][0],o[Cs.ExtraData][1]],t)||[];return Hd(i,n)||[]}(t,i,o),r=e.findIndex(e=>{if(Array.isArray(e)){const[t,n]=e,o=a>=t.hours&&s>=t.minutes,i=a<n.hours||a===n.hours&&s<n.minutes;if(t.hours<n.hours){if(o&&i)return!0}else if(o||i)return!0}else if(e.hours===a&&e.minutes===s)return!0;return!1});if(-1!==r)return n[r]}return function(e,t,n){const o=Ts(e),i=Hd([o[Cs.DayPeriodsFormat],o[Cs.DayPeriodsStandalone]],t);return Hd(i,n)}(t,i,o)[a<12?0:1];case Xd.Eras:return function(e,t){return Hd(Ts(e)[Cs.Eras],t)}(t,o)[e.getFullYear()<=0?0:1];default:throw new Error(`unexpected translation type ${n}`)}}(i,r,e,t,n,o)}}function sp(e){return function(t,n,o){const i=-1*o,r=$d(n,Nd.MinusSign),a=i>0?Math.floor(i/60):Math.ceil(i/60);switch(e){case Qd.Short:return(i>=0?"+":"")+ip(a,2,r)+ip(Math.abs(i%60),2,r);case Qd.ShortGMT:return"GMT"+(i>=0?"+":"")+ip(a,1,r);case Qd.Long:return"GMT"+(i>=0?"+":"")+ip(a,2,r)+":"+ip(Math.abs(i%60),2,r);case Qd.Extended:return 0===o?"Z":(i>=0?"+":"")+ip(a,2,r)+":"+ip(Math.abs(i%60),2,r);default:throw new Error(`Unknown zone width "${e}"`)}}}function lp(e){return tp(e.getFullYear(),e.getMonth(),e.getDate()+(4-e.getDay()))}function cp(e,t=!1){return function(n,o){let i;if(t){const e=new Date(n.getFullYear(),n.getMonth(),1).getDay()-1,t=n.getDate();i=1+Math.floor((t+e)/7)}else{const e=lp(n),t=function(e){const t=tp(e,0,1).getDay();return tp(e,0,1+(t<=4?4:11)-t)}(e.getFullYear()),o=e.getTime()-t.getTime();i=1+Math.round(o/6048e5)}return ip(i,e,$d(o,Nd.MinusSign))}}function dp(e,t=!1){return function(n,o){return ip(lp(n).getFullYear(),e,$d(o,Nd.MinusSign),t)}}const pp={};function up(e,t){e=e.replace(/:/g,"");const n=Date.parse("Jan 01, 1970 00:00:00 "+e)/6e4;return isNaN(n)?t:n}function hp(e){return e instanceof Date&&!isNaN(e.valueOf())}class mp{}let gp=(()=>{class e extends mp{constructor(e){super(),this.locale=e}getPluralCategory(e,t){switch(function(e){return Ts(e)[Cs.PluralCase]}(t||this.locale)(e)){case Fd.Zero:return"zero";case Fd.One:return"one";case Fd.Two:return"two";case Fd.Few:return"few";case Fd.Many:return"many";default:return"other"}}}return e.\u0275fac=function(t){return new(t||e)(ho(xc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function fp(e,t){t=encodeURIComponent(t);for(const n of e.split(";")){const e=n.indexOf("="),[o,i]=-1==e?[n,""]:[n.slice(0,e),n.slice(e+1)];if(o.trim()===t)return decodeURIComponent(i)}return null}let bp=(()=>{class e{constructor(e,t,n,o){this._iterableDiffers=e,this._keyValueDiffers=t,this._ngEl=n,this._renderer=o,this._iterableDiffer=null,this._keyValueDiffer=null,this._initialClasses=[],this._rawClass=null}set klass(e){this._removeClasses(this._initialClasses),this._initialClasses="string"==typeof e?e.split(/\s+/):[],this._applyClasses(this._initialClasses),this._applyClasses(this._rawClass)}set ngClass(e){this._removeClasses(this._rawClass),this._applyClasses(this._initialClasses),this._iterableDiffer=null,this._keyValueDiffer=null,this._rawClass="string"==typeof e?e.split(/\s+/):e,this._rawClass&&(_a(this._rawClass)?this._iterableDiffer=this._iterableDiffers.find(this._rawClass).create():this._keyValueDiffer=this._keyValueDiffers.find(this._rawClass).create())}ngDoCheck(){if(this._iterableDiffer){const e=this._iterableDiffer.diff(this._rawClass);e&&this._applyIterableChanges(e)}else if(this._keyValueDiffer){const e=this._keyValueDiffer.diff(this._rawClass);e&&this._applyKeyValueChanges(e)}}_applyKeyValueChanges(e){e.forEachAddedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachChangedItem(e=>this._toggleClass(e.key,e.currentValue)),e.forEachRemovedItem(e=>{e.previousValue&&this._toggleClass(e.key,!1)})}_applyIterableChanges(e){e.forEachAddedItem(e=>{if("string"!=typeof e.item)throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${ne(e.item)}`);this._toggleClass(e.item,!0)}),e.forEachRemovedItem(e=>this._toggleClass(e.item,!1))}_applyClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!0)):Object.keys(e).forEach(t=>this._toggleClass(t,!!e[t])))}_removeClasses(e){e&&(Array.isArray(e)||e instanceof Set?e.forEach(e=>this._toggleClass(e,!1)):Object.keys(e).forEach(e=>this._toggleClass(e,!1)))}_toggleClass(e,t){(e=e.trim())&&e.split(/\s+/g).forEach(e=>{t?this._renderer.addClass(this._ngEl.nativeElement,e):this._renderer.removeClass(this._ngEl.nativeElement,e)})}}return e.\u0275fac=function(t){return new(t||e)(ja(cl),ja(pl),ja($s),ja(Gs))},e.\u0275dir=Ke({type:e,selectors:[["","ngClass",""]],inputs:{klass:["class","klass"],ngClass:"ngClass"}}),e})();class yp{constructor(e,t,n,o){this.$implicit=e,this.ngForOf=t,this.index=n,this.count=o}get first(){return 0===this.index}get last(){return this.index===this.count-1}get even(){return this.index%2==0}get odd(){return!this.even}}let vp=(()=>{class e{constructor(e,t,n){this._viewContainer=e,this._template=t,this._differs=n,this._ngForOf=null,this._ngForOfDirty=!0,this._differ=null}set ngForOf(e){this._ngForOf=e,this._ngForOfDirty=!0}set ngForTrackBy(e){this._trackByFn=e}get ngForTrackBy(){return this._trackByFn}set ngForTemplate(e){e&&(this._template=e)}ngDoCheck(){if(this._ngForOfDirty){this._ngForOfDirty=!1;const t=this._ngForOf;if(!this._differ&&t)try{this._differ=this._differs.find(t).create(this.ngForTrackBy)}catch(T_){throw new Error(`Cannot find a differ supporting object '${t}' of type '${e=t,e.name||typeof e}'. NgFor only supports binding to Iterables such as Arrays.`)}}var e;if(this._differ){const e=this._differ.diff(this._ngForOf);e&&this._applyChanges(e)}}_applyChanges(e){const t=[];e.forEachOperation((e,n,o)=>{if(null==e.previousIndex){const n=this._viewContainer.createEmbeddedView(this._template,new yp(null,this._ngForOf,-1,-1),null===o?void 0:o),i=new wp(e,n);t.push(i)}else if(null==o)this._viewContainer.remove(null===n?void 0:n);else if(null!==n){const i=this._viewContainer.get(n);this._viewContainer.move(i,o);const r=new wp(e,i);t.push(r)}});for(let n=0;n<t.length;n++)this._perViewChange(t[n].view,t[n].record);for(let n=0,o=this._viewContainer.length;n<o;n++){const e=this._viewContainer.get(n);e.context.index=n,e.context.count=o,e.context.ngForOf=this._ngForOf}e.forEachIdentityChange(e=>{this._viewContainer.get(e.currentIndex).context.$implicit=e.item})}_perViewChange(e,t){e.context.$implicit=t.item}static ngTemplateContextGuard(e,t){return!0}}return e.\u0275fac=function(t){return new(t||e)(ja(Il),ja(kl),ja(cl))},e.\u0275dir=Ke({type:e,selectors:[["","ngFor","","ngForOf",""]],inputs:{ngForOf:"ngForOf",ngForTrackBy:"ngForTrackBy",ngForTemplate:"ngForTemplate"}}),e})();class wp{constructor(e,t){this.record=e,this.view=t}}let kp=(()=>{class e{constructor(e,t){this._viewContainer=e,this._context=new Sp,this._thenTemplateRef=null,this._elseTemplateRef=null,this._thenViewRef=null,this._elseViewRef=null,this._thenTemplateRef=t}set ngIf(e){this._context.$implicit=this._context.ngIf=e,this._updateView()}set ngIfThen(e){_p("ngIfThen",e),this._thenTemplateRef=e,this._thenViewRef=null,this._updateView()}set ngIfElse(e){_p("ngIfElse",e),this._elseTemplateRef=e,this._elseViewRef=null,this._updateView()}_updateView(){this._context.$implicit?this._thenViewRef||(this._viewContainer.clear(),this._elseViewRef=null,this._thenTemplateRef&&(this._thenViewRef=this._viewContainer.createEmbeddedView(this._thenTemplateRef,this._context))):this._elseViewRef||(this._viewContainer.clear(),this._thenViewRef=null,this._elseTemplateRef&&(this._elseViewRef=this._viewContainer.createEmbeddedView(this._elseTemplateRef,this._context)))}static ngTemplateContextGuard(e,t){return!0}}return e.\u0275fac=function(t){return new(t||e)(ja(Il),ja(kl))},e.\u0275dir=Ke({type:e,selectors:[["","ngIf",""]],inputs:{ngIf:"ngIf",ngIfThen:"ngIfThen",ngIfElse:"ngIfElse"}}),e})();class Sp{constructor(){this.$implicit=null,this.ngIf=null}}function _p(e,t){if(t&&!t.createEmbeddedView)throw new Error(`${e} must be a TemplateRef, but received '${ne(t)}'.`)}class Tp{constructor(e,t){this._viewContainerRef=e,this._templateRef=t,this._created=!1}create(){this._created=!0,this._viewContainerRef.createEmbeddedView(this._templateRef)}destroy(){this._created=!1,this._viewContainerRef.clear()}enforceState(e){e&&!this._created?this.create():!e&&this._created&&this.destroy()}}let Ap=(()=>{class e{constructor(){this._defaultUsed=!1,this._caseCount=0,this._lastCaseCheckIndex=0,this._lastCasesMatched=!1}set ngSwitch(e){this._ngSwitch=e,0===this._caseCount&&this._updateDefaultCases(!0)}_addCase(){return this._caseCount++}_addDefault(e){this._defaultViews||(this._defaultViews=[]),this._defaultViews.push(e)}_matchCase(e){const t=e==this._ngSwitch;return this._lastCasesMatched=this._lastCasesMatched||t,this._lastCaseCheckIndex++,this._lastCaseCheckIndex===this._caseCount&&(this._updateDefaultCases(!this._lastCasesMatched),this._lastCaseCheckIndex=0,this._lastCasesMatched=!1),t}_updateDefaultCases(e){if(this._defaultViews&&e!==this._defaultUsed){this._defaultUsed=e;for(let t=0;t<this._defaultViews.length;t++)this._defaultViews[t].enforceState(e)}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["","ngSwitch",""]],inputs:{ngSwitch:"ngSwitch"}}),e})(),Cp=(()=>{class e{constructor(e,t,n){this.ngSwitch=n,n._addCase(),this._view=new Tp(e,t)}ngDoCheck(){this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase))}}return e.\u0275fac=function(t){return new(t||e)(ja(Il),ja(kl),ja(Ap,9))},e.\u0275dir=Ke({type:e,selectors:[["","ngSwitchCase",""]],inputs:{ngSwitchCase:"ngSwitchCase"}}),e})(),xp=(()=>{class e{constructor(e,t,n){this._ngEl=e,this._differs=t,this._renderer=n,this._ngStyle=null,this._differ=null}set ngStyle(e){this._ngStyle=e,!this._differ&&e&&(this._differ=this._differs.find(e).create())}ngDoCheck(){if(this._differ){const e=this._differ.diff(this._ngStyle);e&&this._applyChanges(e)}}_setStyle(e,t){const[n,o]=e.split(".");null!=(t=null!=t&&o?`${t}${o}`:t)?this._renderer.setStyle(this._ngEl.nativeElement,n,t):this._renderer.removeStyle(this._ngEl.nativeElement,n)}_applyChanges(e){e.forEachRemovedItem(e=>this._setStyle(e.key,null)),e.forEachAddedItem(e=>this._setStyle(e.key,e.currentValue)),e.forEachChangedItem(e=>this._setStyle(e.key,e.currentValue))}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(pl),ja(Gs))},e.\u0275dir=Ke({type:e,selectors:[["","ngStyle",""]],inputs:{ngStyle:"ngStyle"}}),e})();function Ip(e,t){return Error(`InvalidPipeArgument: '${t}' for pipe '${ne(e)}'`)}class Ep{createSubscription(e,t){return e.subscribe({next:t,error:e=>{throw e}})}dispose(e){e.unsubscribe()}onDestroy(e){e.unsubscribe()}}class Dp{createSubscription(e,t){return e.then(t,e=>{throw e})}dispose(e){}onDestroy(e){}}const Op=new Dp,jp=new Ep;let Rp=(()=>{class e{constructor(e){this._ref=e,this._latestValue=null,this._subscription=null,this._obj=null,this._strategy=null}ngOnDestroy(){this._subscription&&this._dispose()}transform(e){return this._obj?e!==this._obj?(this._dispose(),this.transform(e)):this._latestValue:(e&&this._subscribe(e),this._latestValue)}_subscribe(e){this._obj=e,this._strategy=this._selectStrategy(e),this._subscription=this._strategy.createSubscription(e,t=>this._updateLatestValue(e,t))}_selectStrategy(t){if(Ua(t))return Op;if(Ba(t))return jp;throw Ip(e,t)}_dispose(){this._strategy.dispose(this._subscription),this._latestValue=null,this._subscription=null,this._obj=null}_updateLatestValue(e,t){e===this._obj&&(this._latestValue=t,this._ref.markForCheck())}}return e.\u0275fac=function(t){return new(t||e)(ja(fl,16))},e.\u0275pipe=Ye({name:"async",type:e,pure:!1}),e})();const qp=/(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D])\S*/g;let Mp=(()=>{class e{transform(t){if(null==t)return null;if("string"!=typeof t)throw Ip(e,t);return t.replace(qp,e=>e[0].toUpperCase()+e.substr(1).toLowerCase())}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275pipe=Ye({name:"titlecase",type:e,pure:!0}),e})(),Fp=(()=>{class e{constructor(e){this.locale=e}transform(t,n="mediumDate",o,i){if(null==t||""===t||t!=t)return null;try{return ep(t,n,i||this.locale,o)}catch(r){throw Ip(e,r.message)}}}return e.\u0275fac=function(t){return new(t||e)(ja(xc,16))},e.\u0275pipe=Ye({name:"date",type:e,pure:!0}),e})(),Pp=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[{provide:mp,useClass:gp}]}),e})(),Lp=(()=>{class e{}return e.\u0275prov=ue({token:e,providedIn:"root",factory:()=>new zp(ho(yd),window)}),e})();class zp{constructor(e,t){this.document=e,this.window=t,this.offset=()=>[0,0]}setOffset(e){this.offset=Array.isArray(e)?()=>e:e}getScrollPosition(){return this.supportsScrolling()?[this.window.pageXOffset,this.window.pageYOffset]:[0,0]}scrollToPosition(e){this.supportsScrolling()&&this.window.scrollTo(e[0],e[1])}scrollToAnchor(e){if(!this.supportsScrolling())return;const t=function(e,t){const n=e.getElementById(t)||e.getElementsByName(t)[0];if(n)return n;if("function"==typeof e.createTreeWalker&&e.body&&(e.body.createShadowRoot||e.body.attachShadow)){const n=e.createTreeWalker(e.body,NodeFilter.SHOW_ELEMENT);let o=n.currentNode;for(;o;){const e=o.shadowRoot;if(e){const n=e.getElementById(t)||e.querySelector(`[name="${t}"]`);if(n)return n}o=n.nextNode()}}return null}(this.document,e);t&&(this.scrollToElement(t),this.attemptFocus(t))}setHistoryScrollRestoration(e){if(this.supportScrollRestoration()){const t=this.window.history;t&&t.scrollRestoration&&(t.scrollRestoration=e)}}scrollToElement(e){const t=e.getBoundingClientRect(),n=t.left+this.window.pageXOffset,o=t.top+this.window.pageYOffset,i=this.offset();this.window.scrollTo(n-i[0],o-i[1])}attemptFocus(e){return e.focus(),this.document.activeElement===e}supportScrollRestoration(){try{if(!this.supportsScrolling())return!1;const e=Np(this.window.history)||Np(Object.getPrototypeOf(this.window.history));return!(!e||!e.writable&&!e.set)}catch(T_){return!1}}supportsScrolling(){try{return!!this.window&&!!this.window.scrollTo&&"pageXOffset"in this.window}catch(T_){return!1}}}function Np(e){return Object.getOwnPropertyDescriptor(e,"scrollRestoration")}class Up{}class Bp extends class extends class{}{constructor(){super(...arguments),this.supportsDOMEvents=!0}}{static makeCurrent(){var e;e=new Bp,fd||(fd=e)}onAndCancel(e,t,n){return e.addEventListener(t,n,!1),()=>{e.removeEventListener(t,n,!1)}}dispatchEvent(e,t){e.dispatchEvent(t)}remove(e){e.parentNode&&e.parentNode.removeChild(e)}createElement(e,t){return(t=t||this.getDefaultDocument()).createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,t){return"window"===t?window:"document"===t?e:"body"===t?e.body:null}getBaseHref(e){const t=($p=$p||document.querySelector("base"),$p?$p.getAttribute("href"):null);return null==t?null:function(e){Wp=Wp||document.createElement("a"),Wp.setAttribute("href",e);const t=Wp.pathname;return"/"===t.charAt(0)?t:`/${t}`}(t)}resetBaseElement(){$p=null}getUserAgent(){return window.navigator.userAgent}getCookie(e){return fp(document.cookie,e)}}let Wp,$p=null;const Vp=new Jn("TRANSITION_ID"),Hp=[{provide:yc,useFactory:function(e,t,n){return()=>{n.get(vc).donePromise.then(()=>{const n=bd();Array.prototype.slice.apply(t.querySelectorAll("style[ng-transition]")).filter(t=>t.getAttribute("ng-transition")===e).forEach(e=>n.remove(e))})}},deps:[Vp,yd,ha],multi:!0}];class Gp{static init(){var e;e=new Gp,Yc=e}addToWindow(e){je.getAngularTestability=(t,n=!0)=>{const o=e.findTestabilityInTree(t,n);if(null==o)throw new Error("Could not find testability for element.");return o},je.getAllAngularTestabilities=()=>e.getAllTestabilities(),je.getAllAngularRootElements=()=>e.getAllRootElements(),je.frameworkStabilizers||(je.frameworkStabilizers=[]),je.frameworkStabilizers.push(e=>{const t=je.getAllAngularTestabilities();let n=t.length,o=!1;const i=function(t){o=o||t,n--,0==n&&e(o)};t.forEach(function(e){e.whenStable(i)})})}findTestabilityInTree(e,t,n){if(null==t)return null;const o=e.getTestability(t);return null!=o?o:n?bd().isShadowRoot(t)?this.findTestabilityInTree(e,t.host,!0):this.findTestabilityInTree(e,t.parentElement,!0):null}}let Jp=(()=>{class e{build(){return new XMLHttpRequest}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const Kp=new Jn("EventManagerPlugins");let Yp=(()=>{class e{constructor(e,t){this._zone=t,this._eventNameToPlugin=new Map,e.forEach(e=>e.manager=this),this._plugins=e.slice().reverse()}addEventListener(e,t,n){return this._findPluginFor(t).addEventListener(e,t,n)}addGlobalEventListener(e,t,n){return this._findPluginFor(t).addGlobalEventListener(e,t,n)}getZone(){return this._zone}_findPluginFor(e){const t=this._eventNameToPlugin.get(e);if(t)return t;const n=this._plugins;for(let o=0;o<n.length;o++){const t=n[o];if(t.supports(e))return this._eventNameToPlugin.set(e,t),t}throw new Error(`No event manager plugin found for event ${e}`)}}return e.\u0275fac=function(t){return new(t||e)(ho(Kp),ho(zc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class Qp{constructor(e){this._doc=e}addGlobalEventListener(e,t,n){const o=bd().getGlobalEventTarget(this._doc,e);if(!o)throw new Error(`Unsupported event target ${o} for event ${t}`);return this.addEventListener(o,t,n)}}let Zp=(()=>{class e{constructor(){this._stylesSet=new Set}addStyles(e){const t=new Set;e.forEach(e=>{this._stylesSet.has(e)||(this._stylesSet.add(e),t.add(e))}),this.onStylesAdded(t)}onStylesAdded(e){}getAllStyles(){return Array.from(this._stylesSet)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),Xp=(()=>{class e extends Zp{constructor(e){super(),this._doc=e,this._hostNodes=new Map,this._hostNodes.set(e.head,[])}_addStylesToHost(e,t,n){e.forEach(e=>{const o=this._doc.createElement("style");o.textContent=e,n.push(t.appendChild(o))})}addHost(e){const t=[];this._addStylesToHost(this._stylesSet,e,t),this._hostNodes.set(e,t)}removeHost(e){const t=this._hostNodes.get(e);t&&t.forEach(eu),this._hostNodes.delete(e)}onStylesAdded(e){this._hostNodes.forEach((t,n)=>{this._addStylesToHost(e,n,t)})}ngOnDestroy(){this._hostNodes.forEach(e=>e.forEach(eu))}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function eu(e){bd().remove(e)}const tu={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},nu=/%COMP%/g;function ou(e,t,n){for(let o=0;o<t.length;o++){let i=t[o];Array.isArray(i)?ou(e,i,n):(i=i.replace(nu,e),n.push(i))}return n}function iu(e){return t=>{if("__ngUnwrap__"===t)return e;!1===e(t)&&(t.preventDefault(),t.returnValue=!1)}}let ru=(()=>{class e{constructor(e,t,n){this.eventManager=e,this.sharedStylesHost=t,this.appId=n,this.rendererByCompId=new Map,this.defaultRenderer=new au(e)}createRenderer(e,t){if(!e||!t)return this.defaultRenderer;switch(t.encapsulation){case xe.Emulated:{let n=this.rendererByCompId.get(t.id);return n||(n=new su(this.eventManager,this.sharedStylesHost,t,this.appId),this.rendererByCompId.set(t.id,n)),n.applyToHost(e),n}case 1:case xe.ShadowDom:return new lu(this.eventManager,this.sharedStylesHost,e,t);default:if(!this.rendererByCompId.has(t.id)){const e=ou(t.id,t.styles,[]);this.sharedStylesHost.addStyles(e),this.rendererByCompId.set(t.id,this.defaultRenderer)}return this.defaultRenderer}}begin(){}end(){}}return e.\u0275fac=function(t){return new(t||e)(ho(Yp),ho(Xp),ho(wc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class au{constructor(e){this.eventManager=e,this.data=Object.create(null)}destroy(){}createElement(e,t){return t?document.createElementNS(tu[t]||t,e):document.createElement(e)}createComment(e){return document.createComment(e)}createText(e){return document.createTextNode(e)}appendChild(e,t){e.appendChild(t)}insertBefore(e,t,n){e&&e.insertBefore(t,n)}removeChild(e,t){e&&e.removeChild(t)}selectRootElement(e,t){let n="string"==typeof e?document.querySelector(e):e;if(!n)throw new Error(`The selector "${e}" did not match any elements`);return t||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,t,n,o){if(o){t=o+":"+t;const i=tu[o];i?e.setAttributeNS(i,t,n):e.setAttribute(t,n)}else e.setAttribute(t,n)}removeAttribute(e,t,n){if(n){const o=tu[n];o?e.removeAttributeNS(o,t):e.removeAttribute(`${n}:${t}`)}else e.removeAttribute(t)}addClass(e,t){e.classList.add(t)}removeClass(e,t){e.classList.remove(t)}setStyle(e,t,n,o){o&(mi.DashCase|mi.Important)?e.style.setProperty(t,n,o&mi.Important?"important":""):e.style[t]=n}removeStyle(e,t,n){n&mi.DashCase?e.style.removeProperty(t):e.style[t]=""}setProperty(e,t,n){e[t]=n}setValue(e,t){e.nodeValue=t}listen(e,t,n){return"string"==typeof e?this.eventManager.addGlobalEventListener(e,t,iu(n)):this.eventManager.addEventListener(e,t,iu(n))}}class su extends au{constructor(e,t,n,o){super(e),this.component=n;const i=ou(o+"-"+n.id,n.styles,[]);t.addStyles(i),this.contentAttr="_ngcontent-%COMP%".replace(nu,o+"-"+n.id),this.hostAttr="_nghost-%COMP%".replace(nu,o+"-"+n.id)}applyToHost(e){super.setAttribute(e,this.hostAttr,"")}createElement(e,t){const n=super.createElement(e,t);return super.setAttribute(n,this.contentAttr,""),n}}class lu extends au{constructor(e,t,n,o){super(e),this.sharedStylesHost=t,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);const i=ou(o.id,o.styles,[]);for(let r=0;r<i.length;r++){const e=document.createElement("style");e.textContent=i[r],this.shadowRoot.appendChild(e)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}appendChild(e,t){return super.appendChild(this.nodeOrShadowRoot(e),t)}insertBefore(e,t,n){return super.insertBefore(this.nodeOrShadowRoot(e),t,n)}removeChild(e,t){return super.removeChild(this.nodeOrShadowRoot(e),t)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}}let cu=(()=>{class e extends Qp{constructor(e){super(e)}supports(e){return!0}addEventListener(e,t,n){return e.addEventListener(t,n,!1),()=>this.removeEventListener(e,t,n)}removeEventListener(e,t,n){return e.removeEventListener(t,n)}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const du=["alt","control","meta","shift"],pu={"\b":"Backspace","\t":"Tab","\x7f":"Delete","\x1b":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},uu={A:"1",B:"2",C:"3",D:"4",E:"5",F:"6",G:"7",H:"8",I:"9",J:"*",K:"+",M:"-",N:".",O:"/","`":"0","\x90":"NumLock"},hu={alt:e=>e.altKey,control:e=>e.ctrlKey,meta:e=>e.metaKey,shift:e=>e.shiftKey};let mu=(()=>{class e extends Qp{constructor(e){super(e)}supports(t){return null!=e.parseEventName(t)}addEventListener(t,n,o){const i=e.parseEventName(n),r=e.eventCallback(i.fullKey,o,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>bd().onAndCancel(t,i.domEventName,r))}static parseEventName(t){const n=t.toLowerCase().split("."),o=n.shift();if(0===n.length||"keydown"!==o&&"keyup"!==o)return null;const i=e._normalizeKey(n.pop());let r="";if(du.forEach(e=>{const t=n.indexOf(e);t>-1&&(n.splice(t,1),r+=e+".")}),r+=i,0!=n.length||0===i.length)return null;const a={};return a.domEventName=o,a.fullKey=r,a}static getEventFullKey(e){let t="",n=function(e){let t=e.key;if(null==t){if(t=e.keyIdentifier,null==t)return"Unidentified";t.startsWith("U+")&&(t=String.fromCharCode(parseInt(t.substring(2),16)),3===e.location&&uu.hasOwnProperty(t)&&(t=uu[t]))}return pu[t]||t}(e);return n=n.toLowerCase()," "===n?n="space":"."===n&&(n="dot"),du.forEach(o=>{o!=n&&(0,hu[o])(e)&&(t+=o+".")}),t+=n,t}static eventCallback(t,n,o){return i=>{e.getEventFullKey(i)===t&&o.runGuarded(()=>n(i))}}static _normalizeKey(e){switch(e){case"esc":return"escape";default:return e}}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),gu=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return ho(bu)},token:e,providedIn:"root"}),e})();function fu(e){return new bu(e.get(yd))}let bu=(()=>{class e extends gu{constructor(e){super(),this._doc=e}sanitize(e,t){if(null==t)return null;switch(e){case ni.NONE:return t;case ni.HTML:return Oo(t,"HTML")?Do(t):ei(this._doc,String(t)).toString();case ni.STYLE:return Oo(t,"Style")?Do(t):t;case ni.SCRIPT:if(Oo(t,"Script"))return Do(t);throw new Error("unsafe value used in a script context");case ni.URL:return jo(t),Oo(t,"URL")?Do(t):Po(String(t));case ni.RESOURCE_URL:if(Oo(t,"ResourceURL"))return Do(t);throw new Error("unsafe value used in a resource URL context (see https://g.co/ng/security#xss)");default:throw new Error(`Unexpected SecurityContext ${e} (see https://g.co/ng/security#xss)`)}}bypassSecurityTrustHtml(e){return new Ao(e)}bypassSecurityTrustStyle(e){return new Co(e)}bypassSecurityTrustScript(e){return new xo(e)}bypassSecurityTrustUrl(e){return new Io(e)}bypassSecurityTrustResourceUrl(e){return new Eo(e)}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:function(){return fu(ho(Zr))},token:e,providedIn:"root"}),e})();const yu=nd(hd,"browser",[{provide:Tc,useValue:"browser"},{provide:_c,useValue:function(){Bp.makeCurrent(),Gp.init()},multi:!0},{provide:yd,useFactory:function(){return function(e){mt=e}(document),document},deps:[]}]),vu=[[],{provide:ea,useValue:"root"},{provide:pi,useFactory:function(){return new pi},deps:[]},{provide:Kp,useClass:cu,multi:!0,deps:[yd,zc,Tc]},{provide:Kp,useClass:mu,multi:!0,deps:[yd]},[],{provide:ru,useClass:ru,deps:[Yp,Xp,wc]},{provide:Hs,useExisting:ru},{provide:Zp,useExisting:Xp},{provide:Xp,useClass:Xp,deps:[yd]},{provide:Hc,useClass:Hc,deps:[zc]},{provide:Yp,useClass:Yp,deps:[Kp,zc]},{provide:Up,useClass:Jp,deps:[]},[]];let wu=(()=>{class e{constructor(e){if(e)throw new Error("BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.")}static withServerTransition(t){return{ngModule:e,providers:[{provide:wc,useValue:t.appId},{provide:Vp,useExisting:wc},Hp]}}}return e.\u0275fac=function(t){return new(t||e)(ho(e,12))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:vu,imports:[Pp,gd]}),e})();function ku(){return new Su(ho(yd))}let Su=(()=>{class e{constructor(e){this._doc=e,this._dom=bd()}addTag(e,t=!1){return e?this._getOrCreateElement(e,t):null}addTags(e,t=!1){return e?e.reduce((e,n)=>(n&&e.push(this._getOrCreateElement(n,t)),e),[]):[]}getTag(e){return e&&this._doc.querySelector(`meta[${e}]`)||null}getTags(e){if(!e)return[];const t=this._doc.querySelectorAll(`meta[${e}]`);return t?[].slice.call(t):[]}updateTag(e,t){if(!e)return null;t=t||this._parseSelector(e);const n=this.getTag(t);return n?this._setMetaElementAttributes(e,n):this._getOrCreateElement(e,!0)}removeTag(e){this.removeTagElement(this.getTag(e))}removeTagElement(e){e&&this._dom.remove(e)}_getOrCreateElement(e,t=!1){if(!t){const t=this._parseSelector(e),n=this.getTag(t);if(n&&this._containsAttributes(e,n))return n}const n=this._dom.createElement("meta");return this._setMetaElementAttributes(e,n),this._doc.getElementsByTagName("head")[0].appendChild(n),n}_setMetaElementAttributes(e,t){return Object.keys(e).forEach(n=>t.setAttribute(this._getMetaKeyMap(n),e[n])),t}_parseSelector(e){const t=e.name?"name":"property";return`${t}="${e[t]}"`}_containsAttributes(e,t){return Object.keys(e).every(n=>t.getAttribute(this._getMetaKeyMap(n))===e[n])}_getMetaKeyMap(e){return _u[e]||e}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:ku,token:e,providedIn:"root"}),e})();const _u={httpEquiv:"http-equiv"};function Tu(){return new Au(ho(yd))}let Au=(()=>{class e{constructor(e){this._doc=e}getTitle(){return this._doc.title}setTitle(e){this._doc.title=e||""}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:Tu,token:e,providedIn:"root"}),e})();function Cu(...e){let t=e[e.length-1];return A(t)?(e.pop(),M(e,t)):$(e)}"undefined"!=typeof window&&window;class xu extends _{constructor(e){super(),this._value=e}get value(){return this.getValue()}_subscribe(e){const t=super._subscribe(e);return t&&!t.closed&&e.next(this._value),t}getValue(){if(this.hasError)throw this.thrownError;if(this.closed)throw new w;return this._value}next(e){super.next(this._value=e)}}class Iu extends m{notifyNext(e,t,n,o,i){this.destination.next(t)}notifyError(e,t){this.destination.error(e)}notifyComplete(e){this.destination.complete()}}class Eu extends m{constructor(e,t,n){super(),this.parent=e,this.outerValue=t,this.outerIndex=n,this.index=0}_next(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)}_error(e){this.parent.notifyError(e,this),this.unsubscribe()}_complete(){this.parent.notifyComplete(this),this.unsubscribe()}}function Du(e,t,n,o,i=new Eu(e,n,o)){if(!i.closed)return t instanceof y?t.subscribe(i):q(t)(i)}const Ou={};class ju{constructor(e){this.resultSelector=e}call(e,t){return t.subscribe(new Ru(e,this.resultSelector))}}class Ru extends Iu{constructor(e,t){super(e),this.resultSelector=t,this.active=0,this.values=[],this.observables=[]}_next(e){this.values.push(Ou),this.observables.push(e)}_complete(){const e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(let n=0;n<t;n++)this.add(Du(this,e[n],void 0,n))}}notifyComplete(e){0==(this.active-=1)&&this.destination.complete()}notifyNext(e,t,n){const o=this.values,i=this.toRespond?o[n]===Ou?--this.toRespond:this.toRespond:0;o[n]=t,0===i&&(this.resultSelector?this._tryResultSelector(o):this.destination.next(o.slice()))}_tryResultSelector(e){let t;try{t=this.resultSelector.apply(this,e)}catch(n){return void this.destination.error(n)}this.destination.next(t)}}const qu=(()=>{function e(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return e.prototype=Object.create(Error.prototype),e})();function Mu(...e){return W(1)(Cu(...e))}const Fu=new y(e=>e.complete());function Pu(e){return e?function(e){return new y(t=>e.schedule(()=>t.complete()))}(e):Fu}function Lu(e){return new y(t=>{let n;try{n=e()}catch(o){return void t.error(o)}return(n?F(n):Pu()).subscribe(t)})}function zu(e,t){return"function"==typeof t?n=>n.pipe(zu((n,o)=>F(e(n,o)).pipe(C((e,i)=>t(n,e,o,i))))):t=>t.lift(new Nu(e))}class Nu{constructor(e){this.project=e}call(e,t){return t.subscribe(new Uu(e,this.project))}}class Uu extends L{constructor(e,t){super(e),this.project=t,this.index=0}_next(e){let t;const n=this.index++;try{t=this.project(e,n)}catch(o){return void this.destination.error(o)}this._innerSub(t)}_innerSub(e){const t=this.innerSubscription;t&&t.unsubscribe();const n=new P(this),o=this.destination;o.add(n),this.innerSubscription=z(e,n),this.innerSubscription!==n&&o.add(this.innerSubscription)}_complete(){const{innerSubscription:e}=this;e&&!e.closed||super._complete(),this.unsubscribe()}_unsubscribe(){this.innerSubscription=void 0}notifyComplete(){this.innerSubscription=void 0,this.isStopped&&super._complete()}notifyNext(e){this.destination.next(e)}}const Bu=(()=>{function e(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return e.prototype=Object.create(Error.prototype),e})();function Wu(e){return t=>0===e?Pu():t.lift(new $u(e))}class $u{constructor(e){if(this.total=e,this.total<0)throw new Bu}call(e,t){return t.subscribe(new Vu(e,this.total))}}class Vu extends m{constructor(e,t){super(e),this.total=t,this.count=0}_next(e){const t=this.total,n=++this.count;n<=t&&(this.destination.next(e),n===t&&(this.destination.complete(),this.unsubscribe()))}}function Hu(...e){const t=e[e.length-1];return A(t)?(e.pop(),n=>Mu(e,n,t)):t=>Mu(e,t)}function Gu(e,t){let n=!1;return arguments.length>=2&&(n=!0),function(o){return o.lift(new Ju(e,t,n))}}class Ju{constructor(e,t,n=!1){this.accumulator=e,this.seed=t,this.hasSeed=n}call(e,t){return t.subscribe(new Ku(e,this.accumulator,this.seed,this.hasSeed))}}class Ku extends m{constructor(e,t,n,o){super(e),this.accumulator=t,this._seed=n,this.hasSeed=o,this.index=0}get seed(){return this._seed}set seed(e){this.hasSeed=!0,this._seed=e}_next(e){if(this.hasSeed)return this._tryNext(e);this.seed=e,this.destination.next(e)}_tryNext(e){const t=this.index++;let n;try{n=this.accumulator(this.seed,e,t)}catch(o){this.destination.error(o)}this.seed=n,this.destination.next(n)}}function Yu(e,t){return function(n){return n.lift(new Qu(e,t))}}class Qu{constructor(e,t){this.predicate=e,this.thisArg=t}call(e,t){return t.subscribe(new Zu(e,this.predicate,this.thisArg))}}class Zu extends m{constructor(e,t,n){super(e),this.predicate=t,this.thisArg=n,this.count=0}_next(e){let t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(n){return void this.destination.error(n)}t&&this.destination.next(e)}}function Xu(e){return function(t){const n=new eh(e),o=t.lift(n);return n.caught=o}}class eh{constructor(e){this.selector=e}call(e,t){return t.subscribe(new th(e,this.selector,this.caught))}}class th extends L{constructor(e,t,n){super(e),this.selector=t,this.caught=n}error(e){if(!this.isStopped){let n;try{n=this.selector(e,this.caught)}catch(t){return void super.error(t)}this._unsubscribeAndRecycle();const o=new P(this);this.add(o);const i=z(n,o);i!==o&&this.add(i)}}}function nh(e,t){return N(e,t,1)}function oh(e){return function(t){return 0===e?Pu():t.lift(new ih(e))}}class ih{constructor(e){if(this.total=e,this.total<0)throw new Bu}call(e,t){return t.subscribe(new rh(e,this.total))}}class rh extends m{constructor(e,t){super(e),this.total=t,this.ring=new Array,this.count=0}_next(e){const t=this.ring,n=this.total,o=this.count++;t.length<n?t.push(e):t[o%n]=e}_complete(){const e=this.destination;let t=this.count;if(t>0){const n=this.count>=this.total?this.total:this.count,o=this.ring;for(let i=0;i<n;i++){const i=t++%n;e.next(o[i])}}e.complete()}}function ah(e=ch){return t=>t.lift(new sh(e))}class sh{constructor(e){this.errorFactory=e}call(e,t){return t.subscribe(new lh(e,this.errorFactory))}}class lh extends m{constructor(e,t){super(e),this.errorFactory=t,this.hasValue=!1}_next(e){this.hasValue=!0,this.destination.next(e)}_complete(){if(this.hasValue)return this.destination.complete();{let t;try{t=this.errorFactory()}catch(e){t=e}this.destination.error(t)}}}function ch(){return new qu}function dh(e=null){return t=>t.lift(new ph(e))}class ph{constructor(e){this.defaultValue=e}call(e,t){return t.subscribe(new uh(e,this.defaultValue))}}class uh extends m{constructor(e,t){super(e),this.defaultValue=t,this.isEmpty=!0}_next(e){this.isEmpty=!1,this.destination.next(e)}_complete(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()}}function hh(e,t){const n=arguments.length>=2;return o=>o.pipe(e?Yu((t,n)=>e(t,n,o)):b,Wu(1),n?dh(t):ah(()=>new qu))}function mh(){}function gh(e,t,n){return function(o){return o.lift(new fh(e,t,n))}}class fh{constructor(e,t,n){this.nextOrObserver=e,this.error=t,this.complete=n}call(e,t){return t.subscribe(new bh(e,this.nextOrObserver,this.error,this.complete))}}class bh extends m{constructor(e,t,n,i){super(e),this._tapNext=mh,this._tapError=mh,this._tapComplete=mh,this._tapError=n||mh,this._tapComplete=i||mh,o(t)?(this._context=this,this._tapNext=t):t&&(this._context=t,this._tapNext=t.next||mh,this._tapError=t.error||mh,this._tapComplete=t.complete||mh)}_next(e){try{this._tapNext.call(this._context,e)}catch(t){return void this.destination.error(t)}this.destination.next(e)}_error(e){try{this._tapError.call(this._context,e)}catch(e){return void this.destination.error(e)}this.destination.error(e)}_complete(){try{this._tapComplete.call(this._context)}catch(e){return void this.destination.error(e)}return this.destination.complete()}}function yh(e){return t=>t.lift(new vh(e))}class vh{constructor(e){this.callback=e}call(e,t){return t.subscribe(new wh(e,this.callback))}}class wh extends m{constructor(e,t){super(e),this.add(new p(t))}}class kh{constructor(e,t){this.id=e,this.url=t}}class Sh extends kh{constructor(e,t,n="imperative",o=null){super(e,t),this.navigationTrigger=n,this.restoredState=o}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}}class _h extends kh{constructor(e,t,n){super(e,t),this.urlAfterRedirects=n}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}}class Th extends kh{constructor(e,t,n){super(e,t),this.reason=n}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}}class Ah extends kh{constructor(e,t,n){super(e,t),this.error=n}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}}class Ch extends kh{constructor(e,t,n,o){super(e,t),this.urlAfterRedirects=n,this.state=o}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class xh extends kh{constructor(e,t,n,o){super(e,t),this.urlAfterRedirects=n,this.state=o}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Ih extends kh{constructor(e,t,n,o,i){super(e,t),this.urlAfterRedirects=n,this.state=o,this.shouldActivate=i}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}}class Eh extends kh{constructor(e,t,n,o){super(e,t),this.urlAfterRedirects=n,this.state=o}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Dh extends kh{constructor(e,t,n,o){super(e,t),this.urlAfterRedirects=n,this.state=o}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}}class Oh{constructor(e){this.route=e}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}}class jh{constructor(e){this.route=e}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}}class Rh{constructor(e){this.snapshot=e}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class qh{constructor(e){this.snapshot=e}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Mh{constructor(e){this.snapshot=e}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Fh{constructor(e){this.snapshot=e}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}}class Ph{constructor(e,t,n){this.routerEvent=e,this.position=t,this.anchor=n}toString(){return`Scroll(anchor: '${this.anchor}', position: '${this.position?`${this.position[0]}, ${this.position[1]}`:null}')`}}const Lh="primary";class zh{constructor(e){this.params=e||{}}has(e){return Object.prototype.hasOwnProperty.call(this.params,e)}get(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t[0]:t}return null}getAll(e){if(this.has(e)){const t=this.params[e];return Array.isArray(t)?t:[t]}return[]}get keys(){return Object.keys(this.params)}}function Nh(e){return new zh(e)}function Uh(e){const t=Error("NavigationCancelingError: "+e);return t.ngNavigationCancelingError=!0,t}function Bh(e,t,n){const o=n.path.split("/");if(o.length>e.length)return null;if("full"===n.pathMatch&&(t.hasChildren()||o.length<e.length))return null;const i={};for(let r=0;r<o.length;r++){const t=o[r],n=e[r];if(t.startsWith(":"))i[t.substring(1)]=n;else if(t!==n.path)return null}return{consumed:e.slice(0,o.length),posParams:i}}function Wh(e,t){const n=e?Object.keys(e):void 0,o=t?Object.keys(t):void 0;if(!n||!o||n.length!=o.length)return!1;let i;for(let r=0;r<n.length;r++)if(i=n[r],!$h(e[i],t[i]))return!1;return!0}function $h(e,t){if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return!1;const n=[...e].sort(),o=[...t].sort();return n.every((e,t)=>o[t]===e)}return e===t}function Vh(e){return Array.prototype.concat.apply([],e)}function Hh(e){return e.length>0?e[e.length-1]:null}function Gh(e,t){for(const n in e)e.hasOwnProperty(n)&&t(e[n],n)}function Jh(e){return Wa(e)?e:Ua(e)?F(Promise.resolve(e)):Cu(e)}const Kh={exact:function e(t,n,o){if(!im(t.segments,n.segments))return!1;if(!em(t.segments,n.segments,o))return!1;if(t.numberOfChildren!==n.numberOfChildren)return!1;for(const i in n.children){if(!t.children[i])return!1;if(!e(t.children[i],n.children[i],o))return!1}return!0},subset:Zh},Yh={exact:function(e,t){return Wh(e,t)},subset:function(e,t){return Object.keys(t).length<=Object.keys(e).length&&Object.keys(t).every(n=>$h(e[n],t[n]))},ignored:()=>!0};function Qh(e,t,n){return Kh[n.paths](e.root,t.root,n.matrixParams)&&Yh[n.queryParams](e.queryParams,t.queryParams)&&!("exact"===n.fragment&&e.fragment!==t.fragment)}function Zh(e,t,n){return Xh(e,t,t.segments,n)}function Xh(e,t,n,o){if(e.segments.length>n.length){const i=e.segments.slice(0,n.length);return!!im(i,n)&&!t.hasChildren()&&!!em(i,n,o)}if(e.segments.length===n.length){if(!im(e.segments,n))return!1;if(!em(e.segments,n,o))return!1;for(const n in t.children){if(!e.children[n])return!1;if(!Zh(e.children[n],t.children[n],o))return!1}return!0}{const i=n.slice(0,e.segments.length),r=n.slice(e.segments.length);return!!im(e.segments,i)&&!!em(e.segments,i,o)&&!!e.children.primary&&Xh(e.children.primary,t,r,o)}}function em(e,t,n){return t.every((t,o)=>Yh[n](e[o].parameters,t.parameters))}class tm{constructor(e,t,n){this.root=e,this.queryParams=t,this.fragment=n}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Nh(this.queryParams)),this._queryParamMap}toString(){return sm.serialize(this)}}class nm{constructor(e,t){this.segments=e,this.children=t,this.parent=null,Gh(t,(e,t)=>e.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return lm(this)}}class om{constructor(e,t){this.path=e,this.parameters=t}get parameterMap(){return this._parameterMap||(this._parameterMap=Nh(this.parameters)),this._parameterMap}toString(){return gm(this)}}function im(e,t){return e.length===t.length&&e.every((e,n)=>e.path===t[n].path)}class rm{}class am{parse(e){const t=new wm(e);return new tm(t.parseRootSegment(),t.parseQueryParams(),t.parseFragment())}serialize(e){var t;return`/${cm(e.root,!0)}${function(e){const t=Object.keys(e).map(t=>{const n=e[t];return Array.isArray(n)?n.map(e=>`${pm(t)}=${pm(e)}`).join("&"):`${pm(t)}=${pm(n)}`});return t.length?`?${t.join("&")}`:""}(e.queryParams)}${"string"==typeof e.fragment?`#${t=e.fragment,encodeURI(t)}`:""}`}}const sm=new am;function lm(e){return e.segments.map(e=>gm(e)).join("/")}function cm(e,t){if(!e.hasChildren())return lm(e);if(t){const t=e.children.primary?cm(e.children.primary,!1):"",n=[];return Gh(e.children,(e,t)=>{t!==Lh&&n.push(`${t}:${cm(e,!1)}`)}),n.length>0?`${t}(${n.join("//")})`:t}{const t=function(e,t){let n=[];return Gh(e.children,(e,o)=>{o===Lh&&(n=n.concat(t(e,o)))}),Gh(e.children,(e,o)=>{o!==Lh&&(n=n.concat(t(e,o)))}),n}(e,(t,n)=>n===Lh?[cm(e.children.primary,!1)]:[`${n}:${cm(t,!1)}`]);return 1===Object.keys(e.children).length&&null!=e.children.primary?`${lm(e)}/${t[0]}`:`${lm(e)}/(${t.join("//")})`}}function dm(e){return encodeURIComponent(e).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function pm(e){return dm(e).replace(/%3B/gi,";")}function um(e){return dm(e).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function hm(e){return decodeURIComponent(e)}function mm(e){return hm(e.replace(/\+/g,"%20"))}function gm(e){return`${um(e.path)}${t=e.parameters,Object.keys(t).map(e=>`;${um(e)}=${um(t[e])}`).join("")}`;var t}const fm=/^[^\/()?;=#]+/;function bm(e){const t=e.match(fm);return t?t[0]:""}const ym=/^[^=?&#]+/,vm=/^[^?&#]+/;class wm{constructor(e){this.url=e,this.remaining=e}parseRootSegment(){return this.consumeOptional("/"),""===this.remaining||this.peekStartsWith("?")||this.peekStartsWith("#")?new nm([],{}):new nm([],this.parseChildren())}parseQueryParams(){const e={};if(this.consumeOptional("?"))do{this.parseQueryParam(e)}while(this.consumeOptional("&"));return e}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(""===this.remaining)return{};this.consumeOptional("/");const e=[];for(this.peekStartsWith("(")||e.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),e.push(this.parseSegment());let t={};this.peekStartsWith("/(")&&(this.capture("/"),t=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(e.length>0||Object.keys(t).length>0)&&(n.primary=new nm(e,t)),n}parseSegment(){const e=bm(this.remaining);if(""===e&&this.peekStartsWith(";"))throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);return this.capture(e),new om(hm(e),this.parseMatrixParams())}parseMatrixParams(){const e={};for(;this.consumeOptional(";");)this.parseParam(e);return e}parseParam(e){const t=bm(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=bm(this.remaining);e&&(n=e,this.capture(n))}e[hm(t)]=hm(n)}parseQueryParam(e){const t=function(e){const t=e.match(ym);return t?t[0]:""}(this.remaining);if(!t)return;this.capture(t);let n="";if(this.consumeOptional("=")){const e=function(e){const t=e.match(vm);return t?t[0]:""}(this.remaining);e&&(n=e,this.capture(n))}const o=mm(t),i=mm(n);if(e.hasOwnProperty(o)){let t=e[o];Array.isArray(t)||(t=[t],e[o]=t),t.push(i)}else e[o]=i}parseParens(e){const t={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){const n=bm(this.remaining),o=this.remaining[n.length];if("/"!==o&&")"!==o&&";"!==o)throw new Error(`Cannot parse url '${this.url}'`);let i;n.indexOf(":")>-1?(i=n.substr(0,n.indexOf(":")),this.capture(i),this.capture(":")):e&&(i=Lh);const r=this.parseChildren();t[i]=1===Object.keys(r).length?r.primary:new nm([],r),this.consumeOptional("//")}return t}peekStartsWith(e){return this.remaining.startsWith(e)}consumeOptional(e){return!!this.peekStartsWith(e)&&(this.remaining=this.remaining.substring(e.length),!0)}capture(e){if(!this.consumeOptional(e))throw new Error(`Expected "${e}".`)}}class km{constructor(e){this._root=e}get root(){return this._root.value}parent(e){const t=this.pathFromRoot(e);return t.length>1?t[t.length-2]:null}children(e){const t=Sm(e,this._root);return t?t.children.map(e=>e.value):[]}firstChild(e){const t=Sm(e,this._root);return t&&t.children.length>0?t.children[0].value:null}siblings(e){const t=_m(e,this._root);return t.length<2?[]:t[t.length-2].children.map(e=>e.value).filter(t=>t!==e)}pathFromRoot(e){return _m(e,this._root).map(e=>e.value)}}function Sm(e,t){if(e===t.value)return t;for(const n of t.children){const t=Sm(e,n);if(t)return t}return null}function _m(e,t){if(e===t.value)return[t];for(const n of t.children){const o=_m(e,n);if(o.length)return o.unshift(t),o}return[]}class Tm{constructor(e,t){this.value=e,this.children=t}toString(){return`TreeNode(${this.value})`}}function Am(e){const t={};return e&&e.children.forEach(e=>t[e.value.outlet]=e),t}class Cm extends km{constructor(e,t){super(e),this.snapshot=t,jm(this,e)}toString(){return this.snapshot.toString()}}function xm(e,t){const n=function(e,t){const n=new Dm([],{},{},"",{},Lh,t,null,e.root,-1,{});return new Om("",new Tm(n,[]))}(e,t),o=new xu([new om("",{})]),i=new xu({}),r=new xu({}),a=new xu({}),s=new xu(""),l=new Im(o,i,a,s,r,Lh,t,n.root);return l.snapshot=n.root,new Cm(new Tm(l,[]),n)}class Im{constructor(e,t,n,o,i,r,a,s){this.url=e,this.params=t,this.queryParams=n,this.fragment=o,this.data=i,this.outlet=r,this.component=a,this._futureSnapshot=s}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=this.params.pipe(C(e=>Nh(e)))),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=this.queryParams.pipe(C(e=>Nh(e)))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}}function Em(e,t="emptyOnly"){const n=e.pathFromRoot;let o=0;if("always"!==t)for(o=n.length-1;o>=1;){const e=n[o],t=n[o-1];if(e.routeConfig&&""===e.routeConfig.path)o--;else{if(t.component)break;o--}}return function(e){return e.reduce((e,t)=>({params:Object.assign(Object.assign({},e.params),t.params),data:Object.assign(Object.assign({},e.data),t.data),resolve:Object.assign(Object.assign({},e.resolve),t._resolvedData)}),{params:{},data:{},resolve:{}})}(n.slice(o))}class Dm{constructor(e,t,n,o,i,r,a,s,l,c,d){this.url=e,this.params=t,this.queryParams=n,this.fragment=o,this.data=i,this.outlet=r,this.component=a,this.routeConfig=s,this._urlSegment=l,this._lastPathIndex=c,this._resolve=d}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap||(this._paramMap=Nh(this.params)),this._paramMap}get queryParamMap(){return this._queryParamMap||(this._queryParamMap=Nh(this.queryParams)),this._queryParamMap}toString(){return`Route(url:'${this.url.map(e=>e.toString()).join("/")}', path:'${this.routeConfig?this.routeConfig.path:""}')`}}class Om extends km{constructor(e,t){super(t),this.url=e,jm(this,t)}toString(){return Rm(this._root)}}function jm(e,t){t.value._routerState=e,t.children.forEach(t=>jm(e,t))}function Rm(e){const t=e.children.length>0?` { ${e.children.map(Rm).join(", ")} } `:"";return`${e.value}${t}`}function qm(e){if(e.snapshot){const t=e.snapshot,n=e._futureSnapshot;e.snapshot=n,Wh(t.queryParams,n.queryParams)||e.queryParams.next(n.queryParams),t.fragment!==n.fragment&&e.fragment.next(n.fragment),Wh(t.params,n.params)||e.params.next(n.params),function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;++n)if(!Wh(e[n],t[n]))return!1;return!0}(t.url,n.url)||e.url.next(n.url),Wh(t.data,n.data)||e.data.next(n.data)}else e.snapshot=e._futureSnapshot,e.data.next(e._futureSnapshot.data)}function Mm(e,t){var n,o;return Wh(e.params,t.params)&&im(n=e.url,o=t.url)&&n.every((e,t)=>Wh(e.parameters,o[t].parameters))&&!(!e.parent!=!t.parent)&&(!e.parent||Mm(e.parent,t.parent))}function Fm(e,t,n){if(n&&e.shouldReuseRoute(t.value,n.value.snapshot)){const o=n.value;o._futureSnapshot=t.value;const i=function(e,t,n){return t.children.map(t=>{for(const o of n.children)if(e.shouldReuseRoute(t.value,o.value.snapshot))return Fm(e,t,o);return Fm(e,t)})}(e,t,n);return new Tm(o,i)}{if(e.shouldAttach(t.value)){const n=e.retrieve(t.value);if(null!==n){const e=n.route;return Pm(t,e),e}}const n=new Im(new xu((o=t.value).url),new xu(o.params),new xu(o.queryParams),new xu(o.fragment),new xu(o.data),o.outlet,o.component,o),i=t.children.map(t=>Fm(e,t));return new Tm(n,i)}var o}function Pm(e,t){if(e.value.routeConfig!==t.value.routeConfig)throw new Error("Cannot reattach ActivatedRouteSnapshot created from a different route");if(e.children.length!==t.children.length)throw new Error("Cannot reattach ActivatedRouteSnapshot with a different number of children");t.value._futureSnapshot=e.value;for(let n=0;n<e.children.length;++n)Pm(e.children[n],t.children[n])}function Lm(e){return"object"==typeof e&&null!=e&&!e.outlets&&!e.segmentPath}function zm(e){return"object"==typeof e&&null!=e&&e.outlets}function Nm(e,t,n,o,i){let r={};return o&&Gh(o,(e,t)=>{r[t]=Array.isArray(e)?e.map(e=>`${e}`):`${e}`}),new tm(n.root===e?t:Um(n.root,e,t),r,i)}function Um(e,t,n){const o={};return Gh(e.children,(e,i)=>{o[i]=e===t?n:Um(e,t,n)}),new nm(e.segments,o)}class Bm{constructor(e,t,n){if(this.isAbsolute=e,this.numberOfDoubleDots=t,this.commands=n,e&&n.length>0&&Lm(n[0]))throw new Error("Root segment cannot have matrix parameters");const o=n.find(zm);if(o&&o!==Hh(n))throw new Error("{outlets:{}} has to be the last command")}toRoot(){return this.isAbsolute&&1===this.commands.length&&"/"==this.commands[0]}}class Wm{constructor(e,t,n){this.segmentGroup=e,this.processChildren=t,this.index=n}}function $m(e,t,n){if(e||(e=new nm([],{})),0===e.segments.length&&e.hasChildren())return Vm(e,t,n);const o=function(e,t,n){let o=0,i=t;const r={match:!1,pathIndex:0,commandIndex:0};for(;i<e.segments.length;){if(o>=n.length)return r;const t=e.segments[i],a=n[o];if(zm(a))break;const s=`${a}`,l=o<n.length-1?n[o+1]:null;if(i>0&&void 0===s)break;if(s&&l&&"object"==typeof l&&void 0===l.outlets){if(!Km(s,l,t))return r;o+=2}else{if(!Km(s,{},t))return r;o++}i++}return{match:!0,pathIndex:i,commandIndex:o}}(e,t,n),i=n.slice(o.commandIndex);if(o.match&&o.pathIndex<e.segments.length){const t=new nm(e.segments.slice(0,o.pathIndex),{});return t.children.primary=new nm(e.segments.slice(o.pathIndex),e.children),Vm(t,0,i)}return o.match&&0===i.length?new nm(e.segments,{}):o.match&&!e.hasChildren()?Hm(e,t,n):o.match?Vm(e,0,i):Hm(e,t,n)}function Vm(e,t,n){if(0===n.length)return new nm(e.segments,{});{const o=function(e){return zm(e[0])?e[0].outlets:{[Lh]:e}}(n),i={};return Gh(o,(n,o)=>{"string"==typeof n&&(n=[n]),null!==n&&(i[o]=$m(e.children[o],t,n))}),Gh(e.children,(e,t)=>{void 0===o[t]&&(i[t]=e)}),new nm(e.segments,i)}}function Hm(e,t,n){const o=e.segments.slice(0,t);let i=0;for(;i<n.length;){const r=n[i];if(zm(r)){const e=Gm(r.outlets);return new nm(o,e)}if(0===i&&Lm(n[0])){o.push(new om(e.segments[t].path,Jm(n[0]))),i++;continue}const a=zm(r)?r.outlets.primary:`${r}`,s=i<n.length-1?n[i+1]:null;a&&s&&Lm(s)?(o.push(new om(a,Jm(s))),i+=2):(o.push(new om(a,{})),i++)}return new nm(o,{})}function Gm(e){const t={};return Gh(e,(e,n)=>{"string"==typeof e&&(e=[e]),null!==e&&(t[n]=Hm(new nm([],{}),0,e))}),t}function Jm(e){const t={};return Gh(e,(e,n)=>t[n]=`${e}`),t}function Km(e,t,n){return e==n.path&&Wh(t,n.parameters)}class Ym{constructor(e,t,n,o){this.routeReuseStrategy=e,this.futureState=t,this.currState=n,this.forwardEvent=o}activate(e){const t=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(t,n,e),qm(this.futureState.root),this.activateChildRoutes(t,n,e)}deactivateChildRoutes(e,t,n){const o=Am(t);e.children.forEach(e=>{const t=e.value.outlet;this.deactivateRoutes(e,o[t],n),delete o[t]}),Gh(o,(e,t)=>{this.deactivateRouteAndItsChildren(e,n)})}deactivateRoutes(e,t,n){const o=e.value,i=t?t.value:null;if(o===i)if(o.component){const i=n.getContext(o.outlet);i&&this.deactivateChildRoutes(e,t,i.children)}else this.deactivateChildRoutes(e,t,n);else i&&this.deactivateRouteAndItsChildren(t,n)}deactivateRouteAndItsChildren(e,t){this.routeReuseStrategy.shouldDetach(e.value.snapshot)?this.detachAndStoreRouteSubtree(e,t):this.deactivateRouteAndOutlet(e,t)}detachAndStoreRouteSubtree(e,t){const n=t.getContext(e.value.outlet);if(n&&n.outlet){const t=n.outlet.detach(),o=n.children.onOutletDeactivated();this.routeReuseStrategy.store(e.value.snapshot,{componentRef:t,route:e,contexts:o})}}deactivateRouteAndOutlet(e,t){const n=t.getContext(e.value.outlet),o=n&&e.value.component?n.children:t,i=Am(e);for(const r of Object.keys(i))this.deactivateRouteAndItsChildren(i[r],o);n&&n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated(),n.attachRef=null,n.resolver=null,n.route=null)}activateChildRoutes(e,t,n){const o=Am(t);e.children.forEach(e=>{this.activateRoutes(e,o[e.value.outlet],n),this.forwardEvent(new Fh(e.value.snapshot))}),e.children.length&&this.forwardEvent(new qh(e.value.snapshot))}activateRoutes(e,t,n){const o=e.value,i=t?t.value:null;if(qm(o),o===i)if(o.component){const i=n.getOrCreateContext(o.outlet);this.activateChildRoutes(e,t,i.children)}else this.activateChildRoutes(e,t,n);else if(o.component){const t=n.getOrCreateContext(o.outlet);if(this.routeReuseStrategy.shouldAttach(o.snapshot)){const e=this.routeReuseStrategy.retrieve(o.snapshot);this.routeReuseStrategy.store(o.snapshot,null),t.children.onOutletReAttached(e.contexts),t.attachRef=e.componentRef,t.route=e.route.value,t.outlet&&t.outlet.attach(e.componentRef,e.route.value),Qm(e.route)}else{const n=function(e){for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig;if(e&&e.component)return null}return null}(o.snapshot),i=n?n.module.componentFactoryResolver:null;t.attachRef=null,t.route=o,t.resolver=i,t.outlet&&t.outlet.activateWith(o,i),this.activateChildRoutes(e,null,t.children)}}else this.activateChildRoutes(e,null,n)}}function Qm(e){qm(e.value),e.children.forEach(Qm)}class Zm{constructor(e,t){this.routes=e,this.module=t}}function Xm(e){return"function"==typeof e}function eg(e){return e instanceof tm}const tg=Symbol("INITIAL_VALUE");function ng(){return zu(e=>function(...e){let t,n;return A(e[e.length-1])&&(n=e.pop()),"function"==typeof e[e.length-1]&&(t=e.pop()),1===e.length&&l(e[0])&&(e=e[0]),$(e,n).lift(new ju(t))}(e.map(e=>e.pipe(Wu(1),Hu(tg)))).pipe(Gu((e,t)=>{let n=!1;return t.reduce((e,o,i)=>{if(e!==tg)return e;if(o===tg&&(n=!0),!n){if(!1===o)return o;if(i===t.length-1||eg(o))return o}return e},e)},tg),Yu(e=>e!==tg),C(e=>eg(e)?e:!0===e),Wu(1)))}let og=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["ng-component"]],decls:1,vars:0,template:function(e,t){1&e&&Pa(0,"router-outlet")},directives:function(){return[ef]},encapsulation:2}),e})();function ig(e,t=""){for(let n=0;n<e.length;n++){const o=e[n];rg(o,ag(t,o))}}function rg(e,t){e.children&&ig(e.children,t)}function ag(e,t){return t?e||t.path?e&&!t.path?`${e}/`:!e&&t.path?t.path:`${e}/${t.path}`:"":e}function sg(e){const t=e.children&&e.children.map(sg),n=t?Object.assign(Object.assign({},e),{children:t}):Object.assign({},e);return!n.component&&(t||n.loadChildren)&&n.outlet&&n.outlet!==Lh&&(n.component=og),n}function lg(e){return e.outlet||Lh}function cg(e,t){const n=e.filter(e=>lg(e)===t);return n.push(...e.filter(e=>lg(e)!==t)),n}const dg={matched:!1,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};function pg(e,t,n){var o;if(""===t.path)return"full"===t.pathMatch&&(e.hasChildren()||n.length>0)?Object.assign({},dg):{matched:!0,consumedSegments:[],lastChild:0,parameters:{},positionalParamSegments:{}};const i=(t.matcher||Bh)(n,e,t);if(!i)return Object.assign({},dg);const r={};Gh(i.posParams,(e,t)=>{r[t]=e.path});const a=i.consumed.length>0?Object.assign(Object.assign({},r),i.consumed[i.consumed.length-1].parameters):r;return{matched:!0,consumedSegments:i.consumed,lastChild:i.consumed.length,parameters:a,positionalParamSegments:null!==(o=i.posParams)&&void 0!==o?o:{}}}function ug(e,t,n,o,i="corrected"){if(n.length>0&&function(e,t,n){return n.some(n=>hg(e,t,n)&&lg(n)!==Lh)}(e,n,o)){const i=new nm(t,function(e,t,n,o){const i={};i.primary=o,o._sourceSegment=e,o._segmentIndexShift=t.length;for(const r of n)if(""===r.path&&lg(r)!==Lh){const n=new nm([],{});n._sourceSegment=e,n._segmentIndexShift=t.length,i[lg(r)]=n}return i}(e,t,o,new nm(n,e.children)));return i._sourceSegment=e,i._segmentIndexShift=t.length,{segmentGroup:i,slicedSegments:[]}}if(0===n.length&&function(e,t,n){return n.some(n=>hg(e,t,n))}(e,n,o)){const r=new nm(e.segments,function(e,t,n,o,i,r){const a={};for(const s of o)if(hg(e,n,s)&&!i[lg(s)]){const n=new nm([],{});n._sourceSegment=e,n._segmentIndexShift="legacy"===r?e.segments.length:t.length,a[lg(s)]=n}return Object.assign(Object.assign({},i),a)}(e,t,n,o,e.children,i));return r._sourceSegment=e,r._segmentIndexShift=t.length,{segmentGroup:r,slicedSegments:n}}const r=new nm(e.segments,e.children);return r._sourceSegment=e,r._segmentIndexShift=t.length,{segmentGroup:r,slicedSegments:n}}function hg(e,t,n){return(!(e.hasChildren()||t.length>0)||"full"!==n.pathMatch)&&""===n.path}function mg(e,t,n,o){return!!(lg(e)===o||o!==Lh&&hg(t,n,e))&&("**"===e.path||pg(t,e,n).matched)}function gg(e,t,n){return 0===t.length&&!e.children[n]}class fg{constructor(e){this.segmentGroup=e||null}}class bg{constructor(e){this.urlTree=e}}function yg(e){return new y(t=>t.error(new fg(e)))}function vg(e){return new y(t=>t.error(new bg(e)))}function wg(e){return new y(t=>t.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${e}'`)))}class kg{constructor(e,t,n,o,i){this.configLoader=t,this.urlSerializer=n,this.urlTree=o,this.config=i,this.allowRedirects=!0,this.ngModule=e.get(Al)}apply(){const e=ug(this.urlTree.root,[],[],this.config).segmentGroup,t=new nm(e.segments,e.children);return this.expandSegmentGroup(this.ngModule,this.config,t,Lh).pipe(C(e=>this.createUrlTree(Sg(e),this.urlTree.queryParams,this.urlTree.fragment))).pipe(Xu(e=>{if(e instanceof bg)return this.allowRedirects=!1,this.match(e.urlTree);if(e instanceof fg)throw this.noMatchError(e);throw e}))}match(e){return this.expandSegmentGroup(this.ngModule,this.config,e.root,Lh).pipe(C(t=>this.createUrlTree(Sg(t),e.queryParams,e.fragment))).pipe(Xu(e=>{if(e instanceof fg)throw this.noMatchError(e);throw e}))}noMatchError(e){return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`)}createUrlTree(e,t,n){const o=e.segments.length>0?new nm([],{[Lh]:e}):e;return new tm(o,t,n)}expandSegmentGroup(e,t,n,o){return 0===n.segments.length&&n.hasChildren()?this.expandChildren(e,t,n).pipe(C(e=>new nm([],e))):this.expandSegment(e,n,t,n.segments,o,!0)}expandChildren(e,t,n){const o=[];for(const i of Object.keys(n.children))"primary"===i?o.unshift(i):o.push(i);return F(o).pipe(nh(o=>{const i=n.children[o],r=cg(t,o);return this.expandSegmentGroup(e,r,i,o).pipe(C(e=>({segment:e,outlet:o})))}),Gu((e,t)=>(e[t.outlet]=t.segment,e),{}),function(e,t){const n=arguments.length>=2;return o=>o.pipe(e?Yu((t,n)=>e(t,n,o)):b,oh(1),n?dh(t):ah(()=>new qu))}())}expandSegment(e,t,n,o,i,r){return F(n).pipe(nh(a=>this.expandSegmentAgainstRoute(e,t,n,a,o,i,r).pipe(Xu(e=>{if(e instanceof fg)return Cu(null);throw e}))),hh(e=>!!e),Xu((e,n)=>{if(e instanceof qu||"EmptyError"===e.name){if(gg(t,o,i))return Cu(new nm([],{}));throw new fg(t)}throw e}))}expandSegmentAgainstRoute(e,t,n,o,i,r,a){return mg(o,t,i,r)?void 0===o.redirectTo?this.matchSegmentAgainstRoute(e,t,o,i,r):a&&this.allowRedirects?this.expandSegmentAgainstRouteUsingRedirect(e,t,n,o,i,r):yg(t):yg(t)}expandSegmentAgainstRouteUsingRedirect(e,t,n,o,i,r){return"**"===o.path?this.expandWildCardWithParamsAgainstRouteUsingRedirect(e,n,o,r):this.expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,o,i,r)}expandWildCardWithParamsAgainstRouteUsingRedirect(e,t,n,o){const i=this.applyRedirectCommands([],n.redirectTo,{});return n.redirectTo.startsWith("/")?vg(i):this.lineralizeSegments(n,i).pipe(N(n=>{const i=new nm(n,{});return this.expandSegment(e,i,t,n,o,!1)}))}expandRegularSegmentAgainstRouteUsingRedirect(e,t,n,o,i,r){const{matched:a,consumedSegments:s,lastChild:l,positionalParamSegments:c}=pg(t,o,i);if(!a)return yg(t);const d=this.applyRedirectCommands(s,o.redirectTo,c);return o.redirectTo.startsWith("/")?vg(d):this.lineralizeSegments(o,d).pipe(N(o=>this.expandSegment(e,t,n,o.concat(i.slice(l)),r,!1)))}matchSegmentAgainstRoute(e,t,n,o,i){if("**"===n.path)return n.loadChildren?(n._loadedConfig?Cu(n._loadedConfig):this.configLoader.load(e.injector,n)).pipe(C(e=>(n._loadedConfig=e,new nm(o,{})))):Cu(new nm(o,{}));const{matched:r,consumedSegments:a,lastChild:s}=pg(t,n,o);if(!r)return yg(t);const l=o.slice(s);return this.getChildConfig(e,n,o).pipe(N(e=>{const o=e.module,r=e.routes,{segmentGroup:s,slicedSegments:c}=ug(t,a,l,r),d=new nm(s.segments,s.children);if(0===c.length&&d.hasChildren())return this.expandChildren(o,r,d).pipe(C(e=>new nm(a,e)));if(0===r.length&&0===c.length)return Cu(new nm(a,{}));const p=lg(n)===i;return this.expandSegment(o,d,r,c,p?Lh:i,!0).pipe(C(e=>new nm(a.concat(e.segments),e.children)))}))}getChildConfig(e,t,n){return t.children?Cu(new Zm(t.children,e)):t.loadChildren?void 0!==t._loadedConfig?Cu(t._loadedConfig):this.runCanLoadGuards(e.injector,t,n).pipe(N(n=>n?this.configLoader.load(e.injector,t).pipe(C(e=>(t._loadedConfig=e,e))):function(e){return new y(t=>t.error(Uh(`Cannot load children because the guard of the route "path: '${e.path}'" returned false`)))}(t))):Cu(new Zm([],e))}runCanLoadGuards(e,t,n){const o=t.canLoad;return o&&0!==o.length?Cu(o.map(o=>{const i=e.get(o);let r;if(function(e){return e&&Xm(e.canLoad)}(i))r=i.canLoad(t,n);else{if(!Xm(i))throw new Error("Invalid CanLoad guard");r=i(t,n)}return Jh(r)})).pipe(ng(),gh(e=>{if(!eg(e))return;const t=Uh(`Redirecting to "${this.urlSerializer.serialize(e)}"`);throw t.url=e,t}),C(e=>!0===e)):Cu(!0)}lineralizeSegments(e,t){let n=[],o=t.root;for(;;){if(n=n.concat(o.segments),0===o.numberOfChildren)return Cu(n);if(o.numberOfChildren>1||!o.children.primary)return wg(e.redirectTo);o=o.children.primary}}applyRedirectCommands(e,t,n){return this.applyRedirectCreatreUrlTree(t,this.urlSerializer.parse(t),e,n)}applyRedirectCreatreUrlTree(e,t,n,o){const i=this.createSegmentGroup(e,t.root,n,o);return new tm(i,this.createQueryParams(t.queryParams,this.urlTree.queryParams),t.fragment)}createQueryParams(e,t){const n={};return Gh(e,(e,o)=>{if("string"==typeof e&&e.startsWith(":")){const i=e.substring(1);n[o]=t[i]}else n[o]=e}),n}createSegmentGroup(e,t,n,o){const i=this.createSegments(e,t.segments,n,o);let r={};return Gh(t.children,(t,i)=>{r[i]=this.createSegmentGroup(e,t,n,o)}),new nm(i,r)}createSegments(e,t,n,o){return t.map(t=>t.path.startsWith(":")?this.findPosParam(e,t,o):this.findOrReturn(t,n))}findPosParam(e,t,n){const o=n[t.path.substring(1)];if(!o)throw new Error(`Cannot redirect to '${e}'. Cannot find '${t.path}'.`);return o}findOrReturn(e,t){let n=0;for(const o of t){if(o.path===e.path)return t.splice(n),o;n++}return e}}function Sg(e){const t={};for(const n of Object.keys(e.children)){const o=Sg(e.children[n]);(o.segments.length>0||o.hasChildren())&&(t[n]=o)}return function(e){if(1===e.numberOfChildren&&e.children.primary){const t=e.children.primary;return new nm(e.segments.concat(t.segments),t.children)}return e}(new nm(e.segments,t))}class _g{constructor(e){this.path=e,this.route=this.path[this.path.length-1]}}class Tg{constructor(e,t){this.component=e,this.route=t}}function Ag(e,t,n){const o=e._root;return xg(o,t?t._root:null,n,[o.value])}function Cg(e,t,n){const o=function(e){if(!e)return null;for(let t=e.parent;t;t=t.parent){const e=t.routeConfig;if(e&&e._loadedConfig)return e._loadedConfig}return null}(t);return(o?o.module.injector:n).get(e)}function xg(e,t,n,o,i={canDeactivateChecks:[],canActivateChecks:[]}){const r=Am(t);return e.children.forEach(e=>{!function(e,t,n,o,i={canDeactivateChecks:[],canActivateChecks:[]}){const r=e.value,a=t?t.value:null,s=n?n.getContext(e.value.outlet):null;if(a&&r.routeConfig===a.routeConfig){const l=function(e,t,n){if("function"==typeof n)return n(e,t);switch(n){case"pathParamsChange":return!im(e.url,t.url);case"pathParamsOrQueryParamsChange":return!im(e.url,t.url)||!Wh(e.queryParams,t.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Mm(e,t)||!Wh(e.queryParams,t.queryParams);case"paramsChange":default:return!Mm(e,t)}}(a,r,r.routeConfig.runGuardsAndResolvers);l?i.canActivateChecks.push(new _g(o)):(r.data=a.data,r._resolvedData=a._resolvedData),xg(e,t,r.component?s?s.children:null:n,o,i),l&&s&&s.outlet&&s.outlet.isActivated&&i.canDeactivateChecks.push(new Tg(s.outlet.component,a))}else a&&Ig(t,s,i),i.canActivateChecks.push(new _g(o)),xg(e,null,r.component?s?s.children:null:n,o,i)}(e,r[e.value.outlet],n,o.concat([e.value]),i),delete r[e.value.outlet]}),Gh(r,(e,t)=>Ig(e,n.getContext(t),i)),i}function Ig(e,t,n){const o=Am(e),i=e.value;Gh(o,(e,o)=>{Ig(e,i.component?t?t.children.getContext(o):null:t,n)}),n.canDeactivateChecks.push(new Tg(i.component&&t&&t.outlet&&t.outlet.isActivated?t.outlet.component:null,i))}class Eg{}function Dg(e){return new y(t=>t.error(e))}class Og{constructor(e,t,n,o,i,r){this.rootComponentType=e,this.config=t,this.urlTree=n,this.url=o,this.paramsInheritanceStrategy=i,this.relativeLinkResolution=r}recognize(){const e=ug(this.urlTree.root,[],[],this.config.filter(e=>void 0===e.redirectTo),this.relativeLinkResolution).segmentGroup,t=this.processSegmentGroup(this.config,e,Lh);if(null===t)return null;const n=new Dm([],Object.freeze({}),Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,{},Lh,this.rootComponentType,null,this.urlTree.root,-1,{}),o=new Tm(n,t),i=new Om(this.url,o);return this.inheritParamsAndData(i._root),i}inheritParamsAndData(e){const t=e.value,n=Em(t,this.paramsInheritanceStrategy);t.params=Object.freeze(n.params),t.data=Object.freeze(n.data),e.children.forEach(e=>this.inheritParamsAndData(e))}processSegmentGroup(e,t,n){return 0===t.segments.length&&t.hasChildren()?this.processChildren(e,t):this.processSegment(e,t,t.segments,n)}processChildren(e,t){const n=[];for(const i of Object.keys(t.children)){const o=t.children[i],r=cg(e,i),a=this.processSegmentGroup(r,o,i);if(null===a)return null;n.push(...a)}const o=Rg(n);return o.sort((e,t)=>e.value.outlet===Lh?-1:t.value.outlet===Lh?1:e.value.outlet.localeCompare(t.value.outlet)),o}processSegment(e,t,n,o){for(const i of e){const e=this.processSegmentAgainstRoute(i,t,n,o);if(null!==e)return e}return gg(t,n,o)?[]:null}processSegmentAgainstRoute(e,t,n,o){if(e.redirectTo||!mg(e,t,n,o))return null;let i,r=[],a=[];if("**"===e.path){const o=n.length>0?Hh(n).parameters:{};i=new Dm(n,o,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Fg(e),lg(e),e.component,e,qg(t),Mg(t)+n.length,Pg(e))}else{const o=pg(t,e,n);if(!o.matched)return null;r=o.consumedSegments,a=n.slice(o.lastChild),i=new Dm(r,o.parameters,Object.freeze(Object.assign({},this.urlTree.queryParams)),this.urlTree.fragment,Fg(e),lg(e),e.component,e,qg(t),Mg(t)+r.length,Pg(e))}const s=function(e){return e.children?e.children:e.loadChildren?e._loadedConfig.routes:[]}(e),{segmentGroup:l,slicedSegments:c}=ug(t,r,a,s.filter(e=>void 0===e.redirectTo),this.relativeLinkResolution);if(0===c.length&&l.hasChildren()){const e=this.processChildren(s,l);return null===e?null:[new Tm(i,e)]}if(0===s.length&&0===c.length)return[new Tm(i,[])];const d=lg(e)===o,p=this.processSegment(s,l,c,d?Lh:o);return null===p?null:[new Tm(i,p)]}}function jg(e){const t=e.value.routeConfig;return t&&""===t.path&&void 0===t.redirectTo}function Rg(e){const t=[],n=new Set;for(const o of e){if(!jg(o)){t.push(o);continue}const e=t.find(e=>o.value.routeConfig===e.value.routeConfig);void 0!==e?(e.children.push(...o.children),n.add(e)):t.push(o)}for(const o of n){const e=Rg(o.children);t.push(new Tm(o.value,e))}return t.filter(e=>!n.has(e))}function qg(e){let t=e;for(;t._sourceSegment;)t=t._sourceSegment;return t}function Mg(e){let t=e,n=t._segmentIndexShift?t._segmentIndexShift:0;for(;t._sourceSegment;)t=t._sourceSegment,n+=t._segmentIndexShift?t._segmentIndexShift:0;return n-1}function Fg(e){return e.data||{}}function Pg(e){return e.resolve||{}}function Lg(e){return zu(t=>{const n=e(t);return n?F(n).pipe(C(()=>t)):Cu(t)})}class zg extends class{shouldDetach(e){return!1}store(e,t){}shouldAttach(e){return!1}retrieve(e){return null}shouldReuseRoute(e,t){return e.routeConfig===t.routeConfig}}{}const Ng=new Jn("ROUTES");class Ug{constructor(e,t,n,o){this.loader=e,this.compiler=t,this.onLoadStartListener=n,this.onLoadEndListener=o}load(e,t){if(t._loader$)return t._loader$;this.onLoadStartListener&&this.onLoadStartListener(t);const n=this.loadModuleFactory(t.loadChildren).pipe(C(n=>{this.onLoadEndListener&&this.onLoadEndListener(t);const o=n.create(e);return new Zm(Vh(o.injector.get(Ng,void 0,ke.Self|ke.Optional)).map(sg),o)}),Xu(e=>{throw t._loader$=void 0,e}));return t._loader$=new K(n,()=>new _).pipe(H()),t._loader$}loadModuleFactory(e){return"string"==typeof e?F(this.loader.load(e)):Jh(e()).pipe(N(e=>e instanceof Cl?Cu(e):F(this.compiler.compileModuleAsync(e))))}}class Bg{constructor(){this.outlet=null,this.route=null,this.resolver=null,this.children=new Wg,this.attachRef=null}}class Wg{constructor(){this.contexts=new Map}onChildOutletCreated(e,t){const n=this.getOrCreateContext(e);n.outlet=t,this.contexts.set(e,n)}onChildOutletDestroyed(e){const t=this.getContext(e);t&&(t.outlet=null)}onOutletDeactivated(){const e=this.contexts;return this.contexts=new Map,e}onOutletReAttached(e){this.contexts=e}getOrCreateContext(e){let t=this.getContext(e);return t||(t=new Bg,this.contexts.set(e,t)),t}getContext(e){return this.contexts.get(e)||null}}class $g{shouldProcessUrl(e){return!0}extract(e){return e}merge(e,t){return e}}function Vg(e){throw e}function Hg(e,t,n){return t.parse("/")}function Gg(e,t){return Cu(null)}const Jg={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},Kg={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"};let Yg=(()=>{class e{constructor(e,t,n,o,i,r,a,s){this.rootComponentType=e,this.urlSerializer=t,this.rootContexts=n,this.location=o,this.config=s,this.lastSuccessfulNavigation=null,this.currentNavigation=null,this.disposed=!1,this.lastLocationChangeInfo=null,this.navigationId=0,this.isNgZoneEnabled=!1,this.events=new _,this.errorHandler=Vg,this.malformedUriErrorHandler=Hg,this.navigated=!1,this.lastSuccessfulId=-1,this.hooks={beforePreactivation:Gg,afterPreactivation:Gg},this.urlHandlingStrategy=new $g,this.routeReuseStrategy=new zg,this.onSameUrlNavigation="ignore",this.paramsInheritanceStrategy="emptyOnly",this.urlUpdateStrategy="deferred",this.relativeLinkResolution="corrected",this.ngModule=i.get(Al),this.console=i.get(Cc);const l=i.get(zc);this.isNgZoneEnabled=l instanceof zc&&zc.isInAngularZone(),this.resetConfig(s),this.currentUrlTree=new tm(new nm([],{}),{},null),this.rawUrlTree=this.currentUrlTree,this.browserUrlTree=this.currentUrlTree,this.configLoader=new Ug(r,a,e=>this.triggerEvent(new Oh(e)),e=>this.triggerEvent(new jh(e))),this.routerState=xm(this.currentUrlTree,this.rootComponentType),this.transitions=new xu({id:0,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,extractedUrl:this.urlHandlingStrategy.extract(this.currentUrlTree),urlAfterRedirects:this.urlHandlingStrategy.extract(this.currentUrlTree),rawUrl:this.currentUrlTree,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:"imperative",restoredState:null,currentSnapshot:this.routerState.snapshot,targetSnapshot:null,currentRouterState:this.routerState,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.navigations=this.setupNavigations(this.transitions),this.processNavigations()}setupNavigations(e){const t=this.events;return e.pipe(Yu(e=>0!==e.id),C(e=>Object.assign(Object.assign({},e),{extractedUrl:this.urlHandlingStrategy.extract(e.rawUrl)})),zu(e=>{let n=!1,o=!1;return Cu(e).pipe(gh(e=>{this.currentNavigation={id:e.id,initialUrl:e.currentRawUrl,extractedUrl:e.extractedUrl,trigger:e.source,extras:e.extras,previousNavigation:this.lastSuccessfulNavigation?Object.assign(Object.assign({},this.lastSuccessfulNavigation),{previousNavigation:null}):null}}),zu(e=>{const n=!this.navigated||e.extractedUrl.toString()!==this.browserUrlTree.toString();if(("reload"===this.onSameUrlNavigation||n)&&this.urlHandlingStrategy.shouldProcessUrl(e.rawUrl))return Cu(e).pipe(zu(e=>{const n=this.transitions.getValue();return t.next(new Sh(e.id,this.serializeUrl(e.extractedUrl),e.source,e.restoredState)),n!==this.transitions.getValue()?Fu:Promise.resolve(e)}),function(e,t,n,o){return zu(i=>function(e,t,n,o,i){return new kg(e,t,n,o,i).apply()}(e,t,n,i.extractedUrl,o).pipe(C(e=>Object.assign(Object.assign({},i),{urlAfterRedirects:e}))))}(this.ngModule.injector,this.configLoader,this.urlSerializer,this.config),gh(e=>{this.currentNavigation=Object.assign(Object.assign({},this.currentNavigation),{finalUrl:e.urlAfterRedirects})}),function(e,t,n,o,i){return N(r=>function(e,t,n,o,i="emptyOnly",r="legacy"){try{const a=new Og(e,t,n,o,i,r).recognize();return null===a?Dg(new Eg):Cu(a)}catch(a){return Dg(a)}}(e,t,r.urlAfterRedirects,n(r.urlAfterRedirects),o,i).pipe(C(e=>Object.assign(Object.assign({},r),{targetSnapshot:e}))))}(this.rootComponentType,this.config,e=>this.serializeUrl(e),this.paramsInheritanceStrategy,this.relativeLinkResolution),gh(e=>{"eager"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(e.urlAfterRedirects,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects);const n=new Ch(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);t.next(n)}));if(n&&this.rawUrlTree&&this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)){const{id:n,extractedUrl:o,source:i,restoredState:r,extras:a}=e,s=new Sh(n,this.serializeUrl(o),i,r);t.next(s);const l=xm(o,this.rootComponentType).snapshot;return Cu(Object.assign(Object.assign({},e),{targetSnapshot:l,urlAfterRedirects:o,extras:Object.assign(Object.assign({},a),{skipLocationChange:!1,replaceUrl:!1})}))}return this.rawUrlTree=e.rawUrl,this.browserUrlTree=e.urlAfterRedirects,e.resolve(null),Fu}),Lg(e=>{const{targetSnapshot:t,id:n,extractedUrl:o,rawUrl:i,extras:{skipLocationChange:r,replaceUrl:a}}=e;return this.hooks.beforePreactivation(t,{navigationId:n,appliedUrlTree:o,rawUrlTree:i,skipLocationChange:!!r,replaceUrl:!!a})}),gh(e=>{const t=new xh(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),C(e=>Object.assign(Object.assign({},e),{guards:Ag(e.targetSnapshot,e.currentSnapshot,this.rootContexts)})),function(e,t){return N(n=>{const{targetSnapshot:o,currentSnapshot:i,guards:{canActivateChecks:r,canDeactivateChecks:a}}=n;return 0===a.length&&0===r.length?Cu(Object.assign(Object.assign({},n),{guardsResult:!0})):function(e,t,n,o){return F(e).pipe(N(e=>function(e,t,n,o,i){const r=t&&t.routeConfig?t.routeConfig.canDeactivate:null;return r&&0!==r.length?Cu(r.map(r=>{const a=Cg(r,t,i);let s;if(function(e){return e&&Xm(e.canDeactivate)}(a))s=Jh(a.canDeactivate(e,t,n,o));else{if(!Xm(a))throw new Error("Invalid CanDeactivate guard");s=Jh(a(e,t,n,o))}return s.pipe(hh())})).pipe(ng()):Cu(!0)}(e.component,e.route,n,t,o)),hh(e=>!0!==e,!0))}(a,o,i,e).pipe(N(n=>n&&"boolean"==typeof n?function(e,t,n,o){return F(t).pipe(nh(t=>Mu(function(e,t){return null!==e&&t&&t(new Rh(e)),Cu(!0)}(t.route.parent,o),function(e,t){return null!==e&&t&&t(new Mh(e)),Cu(!0)}(t.route,o),function(e,t,n){const o=t[t.length-1],i=t.slice(0,t.length-1).reverse().map(e=>function(e){const t=e.routeConfig?e.routeConfig.canActivateChild:null;return t&&0!==t.length?{node:e,guards:t}:null}(e)).filter(e=>null!==e).map(t=>Lu(()=>Cu(t.guards.map(i=>{const r=Cg(i,t.node,n);let a;if(function(e){return e&&Xm(e.canActivateChild)}(r))a=Jh(r.canActivateChild(o,e));else{if(!Xm(r))throw new Error("Invalid CanActivateChild guard");a=Jh(r(o,e))}return a.pipe(hh())})).pipe(ng())));return Cu(i).pipe(ng())}(e,t.path,n),function(e,t,n){const o=t.routeConfig?t.routeConfig.canActivate:null;return o&&0!==o.length?Cu(o.map(o=>Lu(()=>{const i=Cg(o,t,n);let r;if(function(e){return e&&Xm(e.canActivate)}(i))r=Jh(i.canActivate(t,e));else{if(!Xm(i))throw new Error("Invalid CanActivate guard");r=Jh(i(t,e))}return r.pipe(hh())}))).pipe(ng()):Cu(!0)}(e,t.route,n))),hh(e=>!0!==e,!0))}(o,r,e,t):Cu(n)),C(e=>Object.assign(Object.assign({},n),{guardsResult:e})))})}(this.ngModule.injector,e=>this.triggerEvent(e)),gh(e=>{if(eg(e.guardsResult)){const t=Uh(`Redirecting to "${this.serializeUrl(e.guardsResult)}"`);throw t.url=e.guardsResult,t}const t=new Ih(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot,!!e.guardsResult);this.triggerEvent(t)}),Yu(e=>{if(!e.guardsResult){this.resetUrlToCurrentUrlTree();const n=new Th(e.id,this.serializeUrl(e.extractedUrl),"");return t.next(n),e.resolve(!1),!1}return!0}),Lg(e=>{if(e.guards.canActivateChecks.length)return Cu(e).pipe(gh(e=>{const t=new Eh(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}),zu(e=>{let n=!1;return Cu(e).pipe((o=this.paramsInheritanceStrategy,i=this.ngModule.injector,N(e=>{const{targetSnapshot:t,guards:{canActivateChecks:n}}=e;if(!n.length)return Cu(e);let r=0;return F(n).pipe(nh(e=>function(e,t,n,o){return function(e,t,n,o){const i=Object.keys(e);if(0===i.length)return Cu({});const r={};return F(i).pipe(N(i=>function(e,t,n,o){const i=Cg(e,t,o);return Jh(i.resolve?i.resolve(t,n):i(t,n))}(e[i],t,n,o).pipe(gh(e=>{r[i]=e}))),oh(1),N(()=>Object.keys(r).length===i.length?Cu(r):Fu))}(e._resolve,e,t,o).pipe(C(t=>(e._resolvedData=t,e.data=Object.assign(Object.assign({},e.data),Em(e,n).resolve),null)))}(e.route,t,o,i)),gh(()=>r++),oh(1),N(t=>r===n.length?Cu(e):Fu))})),gh({next:()=>n=!0,complete:()=>{if(!n){const n=new Th(e.id,this.serializeUrl(e.extractedUrl),"At least one route resolver didn't emit any value.");t.next(n),e.resolve(!1)}}}));var o,i}),gh(e=>{const t=new Dh(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(e.urlAfterRedirects),e.targetSnapshot);this.triggerEvent(t)}))}),Lg(e=>{const{targetSnapshot:t,id:n,extractedUrl:o,rawUrl:i,extras:{skipLocationChange:r,replaceUrl:a}}=e;return this.hooks.afterPreactivation(t,{navigationId:n,appliedUrlTree:o,rawUrlTree:i,skipLocationChange:!!r,replaceUrl:!!a})}),C(e=>{const t=function(e,t,n){const o=Fm(e,t._root,n?n._root:void 0);return new Cm(o,t)}(this.routeReuseStrategy,e.targetSnapshot,e.currentRouterState);return Object.assign(Object.assign({},e),{targetRouterState:t})}),gh(e=>{this.currentUrlTree=e.urlAfterRedirects,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,e.rawUrl),this.routerState=e.targetRouterState,"deferred"===this.urlUpdateStrategy&&(e.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,!!e.extras.replaceUrl,e.id,e.extras.state),this.browserUrlTree=e.urlAfterRedirects)}),(i=this.rootContexts,r=this.routeReuseStrategy,a=e=>this.triggerEvent(e),C(e=>(new Ym(r,e.targetRouterState,e.currentRouterState,a).activate(i),e))),gh({next(){n=!0},complete(){n=!0}}),yh(()=>{if(!n&&!o){this.resetUrlToCurrentUrlTree();const n=new Th(e.id,this.serializeUrl(e.extractedUrl),`Navigation ID ${e.id} is not equal to the current navigation id ${this.navigationId}`);t.next(n),e.resolve(!1)}this.currentNavigation=null}),Xu(n=>{if(o=!0,(i=n)&&i.ngNavigationCancelingError){const o=eg(n.url);o||(this.navigated=!0,this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl));const i=new Th(e.id,this.serializeUrl(e.extractedUrl),n.message);t.next(i),o?setTimeout(()=>{const t=this.urlHandlingStrategy.merge(n.url,this.rawUrlTree);this.scheduleNavigation(t,"imperative",null,{skipLocationChange:e.extras.skipLocationChange,replaceUrl:"eager"===this.urlUpdateStrategy},{resolve:e.resolve,reject:e.reject,promise:e.promise})},0):e.resolve(!1)}else{this.resetStateAndUrl(e.currentRouterState,e.currentUrlTree,e.rawUrl);const o=new Ah(e.id,this.serializeUrl(e.extractedUrl),n);t.next(o);try{e.resolve(this.errorHandler(n))}catch(r){e.reject(r)}}var i;return Fu}));var i,r,a}))}resetRootComponentType(e){this.rootComponentType=e,this.routerState.root.component=this.rootComponentType}getTransition(){const e=this.transitions.value;return e.urlAfterRedirects=this.browserUrlTree,e}setTransition(e){this.transitions.next(Object.assign(Object.assign({},this.getTransition()),e))}initialNavigation(){this.setUpLocationChangeListener(),0===this.navigationId&&this.navigateByUrl(this.location.path(!0),{replaceUrl:!0})}setUpLocationChangeListener(){this.locationSubscription||(this.locationSubscription=this.location.subscribe(e=>{const t=this.extractLocationChangeInfoFromEvent(e);this.shouldScheduleNavigation(this.lastLocationChangeInfo,t)&&setTimeout(()=>{const{source:e,state:n,urlTree:o}=t,i={replaceUrl:!0};if(n){const e=Object.assign({},n);delete e.navigationId,0!==Object.keys(e).length&&(i.state=e)}this.scheduleNavigation(o,e,n,i)},0),this.lastLocationChangeInfo=t}))}extractLocationChangeInfoFromEvent(e){var t;return{source:"popstate"===e.type?"popstate":"hashchange",urlTree:this.parseUrl(e.url),state:(null===(t=e.state)||void 0===t?void 0:t.navigationId)?e.state:null,transitionId:this.getTransition().id}}shouldScheduleNavigation(e,t){if(!e)return!0;const n=t.urlTree.toString()===e.urlTree.toString();return!(t.transitionId===e.transitionId&&n&&("hashchange"===t.source&&"popstate"===e.source||"popstate"===t.source&&"hashchange"===e.source))}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.currentNavigation}triggerEvent(e){this.events.next(e)}resetConfig(e){ig(e),this.config=e.map(sg),this.navigated=!1,this.lastSuccessfulId=-1}ngOnDestroy(){this.dispose()}dispose(){this.transitions.complete(),this.locationSubscription&&(this.locationSubscription.unsubscribe(),this.locationSubscription=void 0),this.disposed=!0}createUrlTree(e,t={}){const{relativeTo:n,queryParams:o,fragment:i,queryParamsHandling:r,preserveFragment:a}=t,s=n||this.routerState.root,l=a?this.currentUrlTree.fragment:i;let c=null;switch(r){case"merge":c=Object.assign(Object.assign({},this.currentUrlTree.queryParams),o);break;case"preserve":c=this.currentUrlTree.queryParams;break;default:c=o||null}return null!==c&&(c=this.removeEmptyProps(c)),function(e,t,n,o,i){if(0===n.length)return Nm(t.root,t.root,t,o,i);const r=function(e){if("string"==typeof e[0]&&1===e.length&&"/"===e[0])return new Bm(!0,0,e);let t=0,n=!1;const o=e.reduce((e,o,i)=>{if("object"==typeof o&&null!=o){if(o.outlets){const t={};return Gh(o.outlets,(e,n)=>{t[n]="string"==typeof e?e.split("/"):e}),[...e,{outlets:t}]}if(o.segmentPath)return[...e,o.segmentPath]}return"string"!=typeof o?[...e,o]:0===i?(o.split("/").forEach((o,i)=>{0==i&&"."===o||(0==i&&""===o?n=!0:".."===o?t++:""!=o&&e.push(o))}),e):[...e,o]},[]);return new Bm(n,t,o)}(n);if(r.toRoot())return Nm(t.root,new nm([],{}),t,o,i);const a=function(e,t,n){if(e.isAbsolute)return new Wm(t.root,!0,0);if(-1===n.snapshot._lastPathIndex){const e=n.snapshot._urlSegment;return new Wm(e,e===t.root,0)}const o=Lm(e.commands[0])?0:1;return function(e,t,n){let o=e,i=t,r=n;for(;r>i;){if(r-=i,o=o.parent,!o)throw new Error("Invalid number of '../'");i=o.segments.length}return new Wm(o,!1,i-r)}(n.snapshot._urlSegment,n.snapshot._lastPathIndex+o,e.numberOfDoubleDots)}(r,t,e),s=a.processChildren?Vm(a.segmentGroup,a.index,r.commands):$m(a.segmentGroup,a.index,r.commands);return Nm(a.segmentGroup,s,t,o,i)}(s,this.currentUrlTree,e,c,null!=l?l:null)}navigateByUrl(e,t={skipLocationChange:!1}){const n=eg(e)?e:this.parseUrl(e),o=this.urlHandlingStrategy.merge(n,this.rawUrlTree);return this.scheduleNavigation(o,"imperative",null,t)}navigate(e,t={skipLocationChange:!1}){return function(e){for(let t=0;t<e.length;t++){const n=e[t];if(null==n)throw new Error(`The requested path contains ${n} segment at index ${t}`)}}(e),this.navigateByUrl(this.createUrlTree(e,t),t)}serializeUrl(e){return this.urlSerializer.serialize(e)}parseUrl(e){let t;try{t=this.urlSerializer.parse(e)}catch(n){t=this.malformedUriErrorHandler(n,this.urlSerializer,e)}return t}isActive(e,t){let n;if(n=!0===t?Object.assign({},Jg):!1===t?Object.assign({},Kg):t,eg(e))return Qh(this.currentUrlTree,e,n);const o=this.parseUrl(e);return Qh(this.currentUrlTree,o,n)}removeEmptyProps(e){return Object.keys(e).reduce((t,n)=>{const o=e[n];return null!=o&&(t[n]=o),t},{})}processNavigations(){this.navigations.subscribe(e=>{this.navigated=!0,this.lastSuccessfulId=e.id,this.events.next(new _h(e.id,this.serializeUrl(e.extractedUrl),this.serializeUrl(this.currentUrlTree))),this.lastSuccessfulNavigation=this.currentNavigation,e.resolve(!0)},e=>{this.console.warn("Unhandled Navigation Error: ")})}scheduleNavigation(e,t,n,o,i){if(this.disposed)return Promise.resolve(!1);const r=this.getTransition(),a="imperative"!==t&&"imperative"===(null==r?void 0:r.source),s=(this.lastSuccessfulId===r.id||this.currentNavigation?r.rawUrl:r.urlAfterRedirects).toString()===e.toString();if(a&&s)return Promise.resolve(!0);let l,c,d;i?(l=i.resolve,c=i.reject,d=i.promise):d=new Promise((e,t)=>{l=e,c=t});const p=++this.navigationId;return this.setTransition({id:p,source:t,restoredState:n,currentUrlTree:this.currentUrlTree,currentRawUrl:this.rawUrlTree,rawUrl:e,extras:o,resolve:l,reject:c,promise:d,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),d.catch(e=>Promise.reject(e))}setBrowserUrl(e,t,n,o){const i=this.urlSerializer.serialize(e);o=o||{},this.location.isCurrentPathEqualTo(i)||t?this.location.replaceState(i,"",Object.assign(Object.assign({},o),{navigationId:n})):this.location.go(i,"",Object.assign(Object.assign({},o),{navigationId:n}))}resetStateAndUrl(e,t,n){this.routerState=e,this.currentUrlTree=t,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n),this.resetUrlToCurrentUrlTree()}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",{navigationId:this.lastSuccessfulId})}}return e.\u0275fac=function(t){return new(t||e)(ho(Yn),ho(rm),ho(Wg),ho(Rd),ho(ha),ho(ld),ho(Fc),ho(void 0))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),Qg=(()=>{class e{constructor(e,t,n,o,i){this.router=e,this.route=t,this.commands=[],this.onChanges=new _,null==n&&o.setAttribute(i.nativeElement,"tabindex","0")}ngOnChanges(e){this.onChanges.next(this)}set routerLink(e){this.commands=null!=e?Array.isArray(e)?e:[e]:[]}onClick(){const e={skipLocationChange:Xg(this.skipLocationChange),replaceUrl:Xg(this.replaceUrl),state:this.state};return this.router.navigateByUrl(this.urlTree,e),!0}get urlTree(){return this.router.createUrlTree(this.commands,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:Xg(this.preserveFragment)})}}return e.\u0275fac=function(t){return new(t||e)(ja(Yg),ja(Im),Vn("tabindex"),ja(Gs),ja($s))},e.\u0275dir=Ke({type:e,selectors:[["","routerLink","",5,"a",5,"area"]],hostBindings:function(e,t){1&e&&$a("click",function(){return t.onClick()})},inputs:{routerLink:"routerLink",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",preserveFragment:"preserveFragment",skipLocationChange:"skipLocationChange",replaceUrl:"replaceUrl",state:"state",relativeTo:"relativeTo"},features:[ct]}),e})(),Zg=(()=>{class e{constructor(e,t,n){this.router=e,this.route=t,this.locationStrategy=n,this.commands=[],this.onChanges=new _,this.subscription=e.events.subscribe(e=>{e instanceof _h&&this.updateTargetUrlAndHref()})}set routerLink(e){this.commands=null!=e?Array.isArray(e)?e:[e]:[]}ngOnChanges(e){this.updateTargetUrlAndHref(),this.onChanges.next(this)}ngOnDestroy(){this.subscription.unsubscribe()}onClick(e,t,n,o,i){if(0!==e||t||n||o||i)return!0;if("string"==typeof this.target&&"_self"!=this.target)return!0;const r={skipLocationChange:Xg(this.skipLocationChange),replaceUrl:Xg(this.replaceUrl),state:this.state};return this.router.navigateByUrl(this.urlTree,r),!1}updateTargetUrlAndHref(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree))}get urlTree(){return this.router.createUrlTree(this.commands,{relativeTo:void 0!==this.relativeTo?this.relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,queryParamsHandling:this.queryParamsHandling,preserveFragment:Xg(this.preserveFragment)})}}return e.\u0275fac=function(t){return new(t||e)(ja(Yg),ja(Im),ja(Id))},e.\u0275dir=Ke({type:e,selectors:[["a","routerLink",""],["area","routerLink",""]],hostVars:2,hostBindings:function(e,t){1&e&&$a("click",function(e){return t.onClick(e.button,e.ctrlKey,e.shiftKey,e.altKey,e.metaKey)}),2&e&&(vs("href",t.href,ii),Ia("target",t.target))},inputs:{routerLink:"routerLink",target:"target",queryParams:"queryParams",fragment:"fragment",queryParamsHandling:"queryParamsHandling",preserveFragment:"preserveFragment",skipLocationChange:"skipLocationChange",replaceUrl:"replaceUrl",state:"state",relativeTo:"relativeTo"},features:[ct]}),e})();function Xg(e){return""===e||!!e}let ef=(()=>{class e{constructor(e,t,n,o,i){this.parentContexts=e,this.location=t,this.resolver=n,this.changeDetector=i,this.activated=null,this._activatedRoute=null,this.activateEvents=new Xl,this.deactivateEvents=new Xl,this.name=o||Lh,e.onChildOutletCreated(this.name,this)}ngOnDestroy(){this.parentContexts.onChildOutletDestroyed(this.name)}ngOnInit(){if(!this.activated){const e=this.parentContexts.getContext(this.name);e&&e.route&&(e.attachRef?this.attach(e.attachRef,e.route):this.activateWith(e.route,e.resolver||null))}}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new Error("Outlet is not activated");return this.activated.instance}get activatedRoute(){if(!this.activated)throw new Error("Outlet is not activated");return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new Error("Outlet is not activated");this.location.detach();const e=this.activated;return this.activated=null,this._activatedRoute=null,e}attach(e,t){this.activated=e,this._activatedRoute=t,this.location.insert(e.hostView)}deactivate(){if(this.activated){const e=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(e)}}activateWith(e,t){if(this.isActivated)throw new Error("Cannot activate an already activated outlet");this._activatedRoute=e;const n=(t=t||this.resolver).resolveComponentFactory(e._futureSnapshot.routeConfig.component),o=this.parentContexts.getOrCreateContext(this.name).children,i=new tf(e,o,this.location.injector);this.activated=this.location.createComponent(n,this.location.length,i),this.changeDetector.markForCheck(),this.activateEvents.emit(this.activated.instance)}}return e.\u0275fac=function(t){return new(t||e)(ja(Wg),ja(Il),ja(Ns),Vn("name"),ja(fl))},e.\u0275dir=Ke({type:e,selectors:[["router-outlet"]],outputs:{activateEvents:"activate",deactivateEvents:"deactivate"},exportAs:["outlet"]}),e})();class tf{constructor(e,t,n){this.route=e,this.childContexts=t,this.parent=n}get(e,t){return e===Im?this.route:e===Wg?this.childContexts:this.parent.get(e,t)}}class nf{}class of{preload(e,t){return Cu(null)}}let rf=(()=>{class e{constructor(e,t,n,o,i){this.router=e,this.injector=o,this.preloadingStrategy=i,this.loader=new Ug(t,n,t=>e.triggerEvent(new Oh(t)),t=>e.triggerEvent(new jh(t)))}setUpPreloading(){this.subscription=this.router.events.pipe(Yu(e=>e instanceof _h),nh(()=>this.preload())).subscribe(()=>{})}preload(){const e=this.injector.get(Al);return this.processRoutes(e,this.router.config)}ngOnDestroy(){this.subscription&&this.subscription.unsubscribe()}processRoutes(e,t){const n=[];for(const o of t)if(o.loadChildren&&!o.canLoad&&o._loadedConfig){const e=o._loadedConfig;n.push(this.processRoutes(e.module,e.routes))}else o.loadChildren&&!o.canLoad?n.push(this.preloadConfig(e,o)):o.children&&n.push(this.processRoutes(e,o.children));return F(n).pipe(W(),C(e=>{}))}preloadConfig(e,t){return this.preloadingStrategy.preload(t,()=>(t._loadedConfig?Cu(t._loadedConfig):this.loader.load(e.injector,t)).pipe(N(e=>(t._loadedConfig=e,this.processRoutes(e.module,e.routes)))))}}return e.\u0275fac=function(t){return new(t||e)(ho(Yg),ho(ld),ho(Fc),ho(ha),ho(nf))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),af=(()=>{class e{constructor(e,t,n={}){this.router=e,this.viewportScroller=t,this.options=n,this.lastId=0,this.lastSource="imperative",this.restoredId=0,this.store={},n.scrollPositionRestoration=n.scrollPositionRestoration||"disabled",n.anchorScrolling=n.anchorScrolling||"disabled"}init(){"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.setHistoryScrollRestoration("manual"),this.routerEventsSubscription=this.createScrollEvents(),this.scrollEventsSubscription=this.consumeScrollEvents()}createScrollEvents(){return this.router.events.subscribe(e=>{e instanceof Sh?(this.store[this.lastId]=this.viewportScroller.getScrollPosition(),this.lastSource=e.navigationTrigger,this.restoredId=e.restoredState?e.restoredState.navigationId:0):e instanceof _h&&(this.lastId=e.id,this.scheduleScrollEvent(e,this.router.parseUrl(e.urlAfterRedirects).fragment))})}consumeScrollEvents(){return this.router.events.subscribe(e=>{e instanceof Ph&&(e.position?"top"===this.options.scrollPositionRestoration?this.viewportScroller.scrollToPosition([0,0]):"enabled"===this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition(e.position):e.anchor&&"enabled"===this.options.anchorScrolling?this.viewportScroller.scrollToAnchor(e.anchor):"disabled"!==this.options.scrollPositionRestoration&&this.viewportScroller.scrollToPosition([0,0]))})}scheduleScrollEvent(e,t){this.router.triggerEvent(new Ph(e,"popstate"===this.lastSource?this.store[this.restoredId]:null,t))}ngOnDestroy(){this.routerEventsSubscription&&this.routerEventsSubscription.unsubscribe(),this.scrollEventsSubscription&&this.scrollEventsSubscription.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(ho(Yg),ho(Lp),ho(void 0))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const sf=new Jn("ROUTER_CONFIGURATION"),lf=new Jn("ROUTER_FORROOT_GUARD"),cf=[Rd,{provide:rm,useClass:am},{provide:Yg,useFactory:function(e,t,n,o,i,r,a,s={},l,c){const d=new Yg(null,e,t,n,o,i,r,Vh(a));return l&&(d.urlHandlingStrategy=l),c&&(d.routeReuseStrategy=c),function(e,t){e.errorHandler&&(t.errorHandler=e.errorHandler),e.malformedUriErrorHandler&&(t.malformedUriErrorHandler=e.malformedUriErrorHandler),e.onSameUrlNavigation&&(t.onSameUrlNavigation=e.onSameUrlNavigation),e.paramsInheritanceStrategy&&(t.paramsInheritanceStrategy=e.paramsInheritanceStrategy),e.relativeLinkResolution&&(t.relativeLinkResolution=e.relativeLinkResolution),e.urlUpdateStrategy&&(t.urlUpdateStrategy=e.urlUpdateStrategy)}(s,d),s.enableTracing&&d.events.subscribe(e=>{var t,n;null===(t=console.group)||void 0===t||t.call(console,`Router Event: ${e.constructor.name}`),console.log(e.toString()),console.log(e),null===(n=console.groupEnd)||void 0===n||n.call(console)}),d},deps:[rm,Wg,Rd,ha,ld,Fc,Ng,sf,[class{},new yo],[class{},new yo]]},Wg,{provide:Im,useFactory:function(e){return e.routerState.root},deps:[Yg]},{provide:ld,useClass:pd},rf,of,class{preload(e,t){return t().pipe(Xu(()=>Cu(null)))}},{provide:sf,useValue:{enableTracing:!1}}];function df(){return new td("Router",Yg)}let pf=(()=>{class e{constructor(e,t){}static forRoot(t,n){return{ngModule:e,providers:[cf,gf(t),{provide:lf,useFactory:mf,deps:[[Yg,new yo,new vo]]},{provide:sf,useValue:n||{}},{provide:Id,useFactory:hf,deps:[vd,[new bo(Dd),new yo],sf]},{provide:af,useFactory:uf,deps:[Yg,Lp,sf]},{provide:nf,useExisting:n&&n.preloadingStrategy?n.preloadingStrategy:of},{provide:td,multi:!0,useFactory:df},[ff,{provide:yc,multi:!0,useFactory:bf,deps:[ff]},{provide:vf,useFactory:yf,deps:[ff]},{provide:Ac,multi:!0,useExisting:vf}]]}}static forChild(t){return{ngModule:e,providers:[gf(t)]}}}return e.\u0275fac=function(t){return new(t||e)(ho(lf,8),ho(Yg,8))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})();function uf(e,t,n){return n.scrollOffset&&t.setOffset(n.scrollOffset),new af(e,t,n)}function hf(e,t,n={}){return n.useHash?new jd(e,t):new Od(e,t)}function mf(e){return"guarded"}function gf(e){return[{provide:Kn,multi:!0,useValue:e},{provide:Ng,multi:!0,useValue:e}]}let ff=(()=>{class e{constructor(e){this.injector=e,this.initNavigation=!1,this.resultOfPreactivationDone=new _}appInitializer(){return this.injector.get(kd,Promise.resolve(null)).then(()=>{let e=null;const t=new Promise(t=>e=t),n=this.injector.get(Yg),o=this.injector.get(sf);return"disabled"===o.initialNavigation?(n.setUpLocationChangeListener(),e(!0)):"enabled"===o.initialNavigation||"enabledBlocking"===o.initialNavigation?(n.hooks.afterPreactivation=()=>this.initNavigation?Cu(null):(this.initNavigation=!0,e(!0),this.resultOfPreactivationDone),n.initialNavigation()):e(!0),t})}bootstrapListener(e){const t=this.injector.get(sf),n=this.injector.get(rf),o=this.injector.get(af),i=this.injector.get(Yg),r=this.injector.get(ad);e===r.components[0]&&("enabledNonBlocking"!==t.initialNavigation&&void 0!==t.initialNavigation||i.initialNavigation(),n.setUpPreloading(),o.init(),i.resetRootComponentType(r.componentTypes[0]),this.resultOfPreactivationDone.next(null),this.resultOfPreactivationDone.complete())}}return e.\u0275fac=function(t){return new(t||e)(ho(ha))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();function bf(e){return e.appInitializer.bind(e)}function yf(e){return e.bootstrapListener.bind(e)}const vf=new Jn("Router Initializer");function wf(e,...t){return t.length?t.some(t=>e[t]):e.altKey||e.shiftKey||e.ctrlKey||e.metaKey}class kf extends p{constructor(e,t){super()}schedule(e,t=0){return this}}class Sf extends kf{constructor(e,t){super(e,t),this.scheduler=e,this.work=t,this.pending=!1}schedule(e,t=0){if(this.closed)return this;this.state=e;const n=this.id,o=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(o,n,t)),this.pending=!0,this.delay=t,this.id=this.id||this.requestAsyncId(o,this.id,t),this}requestAsyncId(e,t,n=0){return setInterval(e.flush.bind(e,this),n)}recycleAsyncId(e,t,n=0){if(null!==n&&this.delay===n&&!1===this.pending)return t;clearInterval(t)}execute(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;const n=this._execute(e,t);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))}_execute(e,t){let n,o=!1;try{this.work(e)}catch(i){o=!0,n=!!i&&i||new Error(i)}if(o)return this.unsubscribe(),n}_unsubscribe(){const e=this.id,t=this.scheduler,n=t.actions,o=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==o&&n.splice(o,1),null!=e&&(this.id=this.recycleAsyncId(t,e,null)),this.delay=null}}let _f=(()=>{class e{constructor(t,n=e.now){this.SchedulerAction=t,this.now=n}schedule(e,t=0,n){return new this.SchedulerAction(this,e).schedule(n,t)}}return e.now=()=>Date.now(),e})();class Tf extends _f{constructor(e,t=_f.now){super(e,()=>Tf.delegate&&Tf.delegate!==this?Tf.delegate.now():t()),this.actions=[],this.active=!1,this.scheduled=void 0}schedule(e,t=0,n){return Tf.delegate&&Tf.delegate!==this?Tf.delegate.schedule(e,t,n):super.schedule(e,t,n)}flush(e){const{actions:t}=this;if(this.active)return void t.push(e);let n;this.active=!0;do{if(n=e.execute(e.state,e.delay))break}while(e=t.shift());if(this.active=!1,n){for(;e=t.shift();)e.unsubscribe();throw n}}}const Af=new Tf(Sf);function Cf(e,t=Af){return n=>n.lift(new xf(e,t))}class xf{constructor(e,t){this.dueTime=e,this.scheduler=t}call(e,t){return t.subscribe(new If(e,this.dueTime,this.scheduler))}}class If extends m{constructor(e,t,n){super(e),this.dueTime=t,this.scheduler=n,this.debouncedSubscription=null,this.lastValue=null,this.hasValue=!1}_next(e){this.clearDebounce(),this.lastValue=e,this.hasValue=!0,this.add(this.debouncedSubscription=this.scheduler.schedule(Ef,this.dueTime,this))}_complete(){this.debouncedNext(),this.destination.complete()}debouncedNext(){if(this.clearDebounce(),this.hasValue){const{lastValue:e}=this;this.lastValue=null,this.hasValue=!1,this.destination.next(e)}}clearDebounce(){const e=this.debouncedSubscription;null!==e&&(this.remove(e),e.unsubscribe(),this.debouncedSubscription=null)}}function Ef(e){e.debouncedNext()}function Df(e){return null!=e&&"false"!=`${e}`}function Of(e){return Array.isArray(e)?e:[e]}function jf(e){return null==e?"":"string"==typeof e?e:`${e}px`}function Rf(e){return e instanceof $s?e.nativeElement:e}let qf;try{qf="undefined"!=typeof Intl&&Intl.v8BreakIterator}catch(T_){qf=!1}let Mf,Ff=(()=>{class e{constructor(e){this._platformId=e,this.isBrowser=this._platformId?"browser"===this._platformId:"object"==typeof document&&!!document,this.EDGE=this.isBrowser&&/(edge)/i.test(navigator.userAgent),this.TRIDENT=this.isBrowser&&/(msie|trident)/i.test(navigator.userAgent),this.BLINK=this.isBrowser&&!(!window.chrome&&!qf)&&"undefined"!=typeof CSS&&!this.EDGE&&!this.TRIDENT,this.WEBKIT=this.isBrowser&&/AppleWebKit/i.test(navigator.userAgent)&&!this.BLINK&&!this.EDGE&&!this.TRIDENT,this.IOS=this.isBrowser&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!("MSStream"in window),this.FIREFOX=this.isBrowser&&/(firefox|minefield)/i.test(navigator.userAgent),this.ANDROID=this.isBrowser&&/android/i.test(navigator.userAgent)&&!this.TRIDENT,this.SAFARI=this.isBrowser&&/safari/i.test(navigator.userAgent)&&this.WEBKIT}}return e.\u0275fac=function(t){return new(t||e)(ho(Tc))},e.\u0275prov=ue({factory:function(){return new e(ho(Tc))},token:e,providedIn:"root"}),e})(),Pf=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})();const Lf=["color","button","checkbox","date","datetime-local","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week"];function zf(){if(Mf)return Mf;if("object"!=typeof document||!document)return Mf=new Set(Lf),Mf;let e=document.createElement("input");return Mf=new Set(Lf.filter(t=>(e.setAttribute("type",t),e.type===t))),Mf}let Nf,Uf,Bf;function Wf(e){return function(){if(null==Nf&&"undefined"!=typeof window)try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:()=>Nf=!0}))}finally{Nf=Nf||!1}return Nf}()?e:!!e.capture}function $f(){if(null==Uf){if("object"!=typeof document||!document||"function"!=typeof Element||!Element)return Uf=!1,Uf;if("scrollBehavior"in document.documentElement.style)Uf=!0;else{const e=Element.prototype.scrollTo;Uf=!!e&&!/\{\s*\[native code\]\s*\}/.test(e.toString())}}return Uf}function Vf(){let e="undefined"!=typeof document&&document?document.activeElement:null;for(;e&&e.shadowRoot;){const t=e.shadowRoot.activeElement;if(t===e)break;e=t}return e}let Hf=(()=>{class e{create(e){return"undefined"==typeof MutationObserver?null:new MutationObserver(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})(),Gf=(()=>{class e{constructor(e){this._mutationObserverFactory=e,this._observedElements=new Map}ngOnDestroy(){this._observedElements.forEach((e,t)=>this._cleanupObserver(t))}observe(e){const t=Rf(e);return new y(e=>{const n=this._observeElement(t).subscribe(e);return()=>{n.unsubscribe(),this._unobserveElement(t)}})}_observeElement(e){if(this._observedElements.has(e))this._observedElements.get(e).count++;else{const t=new _,n=this._mutationObserverFactory.create(e=>t.next(e));n&&n.observe(e,{characterData:!0,childList:!0,subtree:!0}),this._observedElements.set(e,{observer:n,stream:t,count:1})}return this._observedElements.get(e).stream}_unobserveElement(e){this._observedElements.has(e)&&(this._observedElements.get(e).count--,this._observedElements.get(e).count||this._cleanupObserver(e))}_cleanupObserver(e){if(this._observedElements.has(e)){const{observer:t,stream:n}=this._observedElements.get(e);t&&t.disconnect(),n.complete(),this._observedElements.delete(e)}}}return e.\u0275fac=function(t){return new(t||e)(ho(Hf))},e.\u0275prov=ue({factory:function(){return new e(ho(Hf))},token:e,providedIn:"root"}),e})(),Jf=(()=>{class e{constructor(e,t,n){this._contentObserver=e,this._elementRef=t,this._ngZone=n,this.event=new Xl,this._disabled=!1,this._currentSubscription=null}get disabled(){return this._disabled}set disabled(e){this._disabled=Df(e),this._disabled?this._unsubscribe():this._subscribe()}get debounce(){return this._debounce}set debounce(e){this._debounce=function(e,t=0){return function(e){return!isNaN(parseFloat(e))&&!isNaN(Number(e))}(e)?Number(e):t}(e),this._subscribe()}ngAfterContentInit(){this._currentSubscription||this.disabled||this._subscribe()}ngOnDestroy(){this._unsubscribe()}_subscribe(){this._unsubscribe();const e=this._contentObserver.observe(this._elementRef);this._ngZone.runOutsideAngular(()=>{this._currentSubscription=(this.debounce?e.pipe(Cf(this.debounce)):e).subscribe(this.event)})}_unsubscribe(){var e;null===(e=this._currentSubscription)||void 0===e||e.unsubscribe()}}return e.\u0275fac=function(t){return new(t||e)(ja(Gf),ja($s),ja(zc))},e.\u0275dir=Ke({type:e,selectors:[["","cdkObserveContent",""]],inputs:{disabled:["cdkObserveContentDisabled","disabled"],debounce:"debounce"},outputs:{event:"cdkObserveContent"},exportAs:["cdkObserveContent"]}),e})(),Kf=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[Hf]}),e})();class Yf extends class{constructor(e){this._items=e,this._activeItemIndex=-1,this._activeItem=null,this._wrap=!1,this._letterKeyStream=new _,this._typeaheadSubscription=p.EMPTY,this._vertical=!0,this._allowedModifierKeys=[],this._homeAndEnd=!1,this._skipPredicateFn=e=>e.disabled,this._pressedLetters=[],this.tabOut=new _,this.change=new _,e instanceof tc&&e.changes.subscribe(e=>{if(this._activeItem){const t=e.toArray().indexOf(this._activeItem);t>-1&&t!==this._activeItemIndex&&(this._activeItemIndex=t)}})}skipPredicate(e){return this._skipPredicateFn=e,this}withWrap(e=!0){return this._wrap=e,this}withVerticalOrientation(e=!0){return this._vertical=e,this}withHorizontalOrientation(e){return this._horizontal=e,this}withAllowedModifierKeys(e){return this._allowedModifierKeys=e,this}withTypeAhead(e=200){return this._typeaheadSubscription.unsubscribe(),this._typeaheadSubscription=this._letterKeyStream.pipe(gh(e=>this._pressedLetters.push(e)),Cf(e),Yu(()=>this._pressedLetters.length>0),C(()=>this._pressedLetters.join(""))).subscribe(e=>{const t=this._getItemsArray();for(let n=1;n<t.length+1;n++){const o=(this._activeItemIndex+n)%t.length,i=t[o];if(!this._skipPredicateFn(i)&&0===i.getLabel().toUpperCase().trim().indexOf(e)){this.setActiveItem(o);break}}this._pressedLetters=[]}),this}withHomeAndEnd(e=!0){return this._homeAndEnd=e,this}setActiveItem(e){const t=this._activeItem;this.updateActiveItem(e),this._activeItem!==t&&this.change.next(this._activeItemIndex)}onKeydown(e){const t=e.keyCode,n=["altKey","ctrlKey","metaKey","shiftKey"].every(t=>!e[t]||this._allowedModifierKeys.indexOf(t)>-1);switch(t){case 9:return void this.tabOut.next();case 40:if(this._vertical&&n){this.setNextItemActive();break}return;case 38:if(this._vertical&&n){this.setPreviousItemActive();break}return;case 39:if(this._horizontal&&n){"rtl"===this._horizontal?this.setPreviousItemActive():this.setNextItemActive();break}return;case 37:if(this._horizontal&&n){"rtl"===this._horizontal?this.setNextItemActive():this.setPreviousItemActive();break}return;case 36:if(this._homeAndEnd&&n){this.setFirstItemActive();break}return;case 35:if(this._homeAndEnd&&n){this.setLastItemActive();break}return;default:return void((n||wf(e,"shiftKey"))&&(e.key&&1===e.key.length?this._letterKeyStream.next(e.key.toLocaleUpperCase()):(t>=65&&t<=90||t>=48&&t<=57)&&this._letterKeyStream.next(String.fromCharCode(t))))}this._pressedLetters=[],e.preventDefault()}get activeItemIndex(){return this._activeItemIndex}get activeItem(){return this._activeItem}isTyping(){return this._pressedLetters.length>0}setFirstItemActive(){this._setActiveItemByIndex(0,1)}setLastItemActive(){this._setActiveItemByIndex(this._items.length-1,-1)}setNextItemActive(){this._activeItemIndex<0?this.setFirstItemActive():this._setActiveItemByDelta(1)}setPreviousItemActive(){this._activeItemIndex<0&&this._wrap?this.setLastItemActive():this._setActiveItemByDelta(-1)}updateActiveItem(e){const t=this._getItemsArray(),n="number"==typeof e?e:t.indexOf(e),o=t[n];this._activeItem=null==o?null:o,this._activeItemIndex=n}_setActiveItemByDelta(e){this._wrap?this._setActiveInWrapMode(e):this._setActiveInDefaultMode(e)}_setActiveInWrapMode(e){const t=this._getItemsArray();for(let n=1;n<=t.length;n++){const o=(this._activeItemIndex+e*n+t.length)%t.length;if(!this._skipPredicateFn(t[o]))return void this.setActiveItem(o)}}_setActiveInDefaultMode(e){this._setActiveItemByIndex(this._activeItemIndex+e,e)}_setActiveItemByIndex(e,t){const n=this._getItemsArray();if(n[e]){for(;this._skipPredicateFn(n[e]);)if(!n[e+=t])return;this.setActiveItem(e)}}_getItemsArray(){return this._items instanceof tc?this._items.toArray():this._items}}{constructor(){super(...arguments),this._origin="program"}setFocusOrigin(e){return this._origin=e,this}setActiveItem(e){super.setActiveItem(e),this.activeItem&&this.activeItem.focus(this._origin)}}let Qf=(()=>{class e{constructor(e){this._platform=e}isDisabled(e){return e.hasAttribute("disabled")}isVisible(e){return function(e){return!!(e.offsetWidth||e.offsetHeight||"function"==typeof e.getClientRects&&e.getClientRects().length)}(e)&&"visible"===getComputedStyle(e).visibility}isTabbable(e){if(!this._platform.isBrowser)return!1;const t=function(e){try{return e.frameElement}catch(T_){return null}}((n=e).ownerDocument&&n.ownerDocument.defaultView||window);var n;if(t){if(-1===Xf(t))return!1;if(!this.isVisible(t))return!1}let o=e.nodeName.toLowerCase(),i=Xf(e);return e.hasAttribute("contenteditable")?-1!==i:"iframe"!==o&&"object"!==o&&!(this._platform.WEBKIT&&this._platform.IOS&&!function(e){let t=e.nodeName.toLowerCase(),n="input"===t&&e.type;return"text"===n||"password"===n||"select"===t||"textarea"===t}(e))&&("audio"===o?!!e.hasAttribute("controls")&&-1!==i:"video"===o?-1!==i&&(null!==i||this._platform.FIREFOX||e.hasAttribute("controls")):e.tabIndex>=0)}isFocusable(e,t){return function(e){return!function(e){return function(e){return"input"==e.nodeName.toLowerCase()}(e)&&"hidden"==e.type}(e)&&(function(e){let t=e.nodeName.toLowerCase();return"input"===t||"select"===t||"button"===t||"textarea"===t}(e)||function(e){return function(e){return"a"==e.nodeName.toLowerCase()}(e)&&e.hasAttribute("href")}(e)||e.hasAttribute("contenteditable")||Zf(e))}(e)&&!this.isDisabled(e)&&((null==t?void 0:t.ignoreVisibility)||this.isVisible(e))}}return e.\u0275fac=function(t){return new(t||e)(ho(Ff))},e.\u0275prov=ue({factory:function(){return new e(ho(Ff))},token:e,providedIn:"root"}),e})();function Zf(e){if(!e.hasAttribute("tabindex")||void 0===e.tabIndex)return!1;let t=e.getAttribute("tabindex");return"-32768"!=t&&!(!t||isNaN(parseInt(t,10)))}function Xf(e){if(!Zf(e))return null;const t=parseInt(e.getAttribute("tabindex")||"",10);return isNaN(t)?-1:t}class eb{constructor(e,t,n,o,i=!1){this._element=e,this._checker=t,this._ngZone=n,this._document=o,this._hasAttached=!1,this.startAnchorListener=()=>this.focusLastTabbableElement(),this.endAnchorListener=()=>this.focusFirstTabbableElement(),this._enabled=!0,i||this.attachAnchors()}get enabled(){return this._enabled}set enabled(e){this._enabled=e,this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(e,this._startAnchor),this._toggleAnchorTabIndex(e,this._endAnchor))}destroy(){const e=this._startAnchor,t=this._endAnchor;e&&(e.removeEventListener("focus",this.startAnchorListener),e.parentNode&&e.parentNode.removeChild(e)),t&&(t.removeEventListener("focus",this.endAnchorListener),t.parentNode&&t.parentNode.removeChild(t)),this._startAnchor=this._endAnchor=null,this._hasAttached=!1}attachAnchors(){return!!this._hasAttached||(this._ngZone.runOutsideAngular(()=>{this._startAnchor||(this._startAnchor=this._createAnchor(),this._startAnchor.addEventListener("focus",this.startAnchorListener)),this._endAnchor||(this._endAnchor=this._createAnchor(),this._endAnchor.addEventListener("focus",this.endAnchorListener))}),this._element.parentNode&&(this._element.parentNode.insertBefore(this._startAnchor,this._element),this._element.parentNode.insertBefore(this._endAnchor,this._element.nextSibling),this._hasAttached=!0),this._hasAttached)}focusInitialElementWhenReady(e){return new Promise(t=>{this._executeOnStable(()=>t(this.focusInitialElement(e)))})}focusFirstTabbableElementWhenReady(e){return new Promise(t=>{this._executeOnStable(()=>t(this.focusFirstTabbableElement(e)))})}focusLastTabbableElementWhenReady(e){return new Promise(t=>{this._executeOnStable(()=>t(this.focusLastTabbableElement(e)))})}_getRegionBoundary(e){let t=this._element.querySelectorAll(`[cdk-focus-region-${e}], [cdkFocusRegion${e}], [cdk-focus-${e}]`);for(let n=0;n<t.length;n++)t[n].hasAttribute(`cdk-focus-${e}`)?console.warn(`Found use of deprecated attribute 'cdk-focus-${e}', use 'cdkFocusRegion${e}' instead. The deprecated attribute will be removed in 8.0.0.`,t[n]):t[n].hasAttribute(`cdk-focus-region-${e}`)&&console.warn(`Found use of deprecated attribute 'cdk-focus-region-${e}', use 'cdkFocusRegion${e}' instead. The deprecated attribute will be removed in 8.0.0.`,t[n]);return"start"==e?t.length?t[0]:this._getFirstTabbableElement(this._element):t.length?t[t.length-1]:this._getLastTabbableElement(this._element)}focusInitialElement(e){const t=this._element.querySelector("[cdk-focus-initial], [cdkFocusInitial]");if(t){if(t.hasAttribute("cdk-focus-initial")&&console.warn("Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",t),!this._checker.isFocusable(t)){const n=this._getFirstTabbableElement(t);return null==n||n.focus(e),!!n}return t.focus(e),!0}return this.focusFirstTabbableElement(e)}focusFirstTabbableElement(e){const t=this._getRegionBoundary("start");return t&&t.focus(e),!!t}focusLastTabbableElement(e){const t=this._getRegionBoundary("end");return t&&t.focus(e),!!t}hasAttached(){return this._hasAttached}_getFirstTabbableElement(e){if(this._checker.isFocusable(e)&&this._checker.isTabbable(e))return e;let t=e.children||e.childNodes;for(let n=0;n<t.length;n++){let e=t[n].nodeType===this._document.ELEMENT_NODE?this._getFirstTabbableElement(t[n]):null;if(e)return e}return null}_getLastTabbableElement(e){if(this._checker.isFocusable(e)&&this._checker.isTabbable(e))return e;let t=e.children||e.childNodes;for(let n=t.length-1;n>=0;n--){let e=t[n].nodeType===this._document.ELEMENT_NODE?this._getLastTabbableElement(t[n]):null;if(e)return e}return null}_createAnchor(){const e=this._document.createElement("div");return this._toggleAnchorTabIndex(this._enabled,e),e.classList.add("cdk-visually-hidden"),e.classList.add("cdk-focus-trap-anchor"),e.setAttribute("aria-hidden","true"),e}_toggleAnchorTabIndex(e,t){e?t.setAttribute("tabindex","0"):t.removeAttribute("tabindex")}toggleAnchors(e){this._startAnchor&&this._endAnchor&&(this._toggleAnchorTabIndex(e,this._startAnchor),this._toggleAnchorTabIndex(e,this._endAnchor))}_executeOnStable(e){this._ngZone.isStable?e():this._ngZone.onStable.pipe(Wu(1)).subscribe(e)}}let tb=(()=>{class e{constructor(e,t,n){this._checker=e,this._ngZone=t,this._document=n}create(e,t=!1){return new eb(e,this._checker,this._ngZone,this._document,t)}}return e.\u0275fac=function(t){return new(t||e)(ho(Qf),ho(zc),ho(yd))},e.\u0275prov=ue({factory:function(){return new e(ho(Qf),ho(zc),ho(yd))},token:e,providedIn:"root"}),e})();function nb(e){return 0===e.buttons}function ob(e){const t=e.touches&&e.touches[0]||e.changedTouches&&e.changedTouches[0];return!(!t||-1!==t.identifier||null!=t.radiusX&&1!==t.radiusX||null!=t.radiusY&&1!==t.radiusY)}"undefined"!=typeof Element&&Element;const ib=new Jn("cdk-focus-monitor-default-options"),rb=Wf({passive:!0,capture:!0});let ab=(()=>{class e{constructor(e,t,n,o){this._ngZone=e,this._platform=t,this._origin=null,this._windowFocused=!1,this._elementInfo=new Map,this._monitoredElementCount=0,this._rootNodeFocusListenerCount=new Map,this._documentKeydownListener=()=>{this._lastTouchTarget=null,this._setOriginForCurrentEventQueue("keyboard")},this._documentMousedownListener=e=>{if(!this._lastTouchTarget){const t=nb(e)?"keyboard":"mouse";this._setOriginForCurrentEventQueue(t)}},this._documentTouchstartListener=e=>{ob(e)?this._lastTouchTarget||this._setOriginForCurrentEventQueue("keyboard"):(null!=this._touchTimeoutId&&clearTimeout(this._touchTimeoutId),this._lastTouchTarget=sb(e),this._touchTimeoutId=setTimeout(()=>this._lastTouchTarget=null,650))},this._windowFocusListener=()=>{this._windowFocused=!0,this._windowFocusTimeoutId=setTimeout(()=>this._windowFocused=!1)},this._rootNodeFocusAndBlurListener=e=>{const t=sb(e),n="focus"===e.type?this._onFocus:this._onBlur;for(let o=t;o;o=o.parentElement)n.call(this,e,o)},this._document=n,this._detectionMode=(null==o?void 0:o.detectionMode)||0}monitor(e,t=!1){const n=Rf(e);if(!this._platform.isBrowser||1!==n.nodeType)return Cu(null);const o=function(e){if(function(){if(null==Bf){const e="undefined"!=typeof document?document.head:null;Bf=!(!e||!e.createShadowRoot&&!e.attachShadow)}return Bf}()){const t=e.getRootNode?e.getRootNode():null;if("undefined"!=typeof ShadowRoot&&ShadowRoot&&t instanceof ShadowRoot)return t}return null}(n)||this._getDocument(),i=this._elementInfo.get(n);if(i)return t&&(i.checkChildren=!0),i.subject;const r={checkChildren:t,subject:new _,rootNode:o};return this._elementInfo.set(n,r),this._registerGlobalListeners(r),r.subject}stopMonitoring(e){const t=Rf(e),n=this._elementInfo.get(t);n&&(n.subject.complete(),this._setClasses(t),this._elementInfo.delete(t),this._removeGlobalListeners(n))}focusVia(e,t,n){const o=Rf(e);o===this._getDocument().activeElement?this._getClosestElementsInfo(o).forEach(([e,n])=>this._originChanged(e,t,n)):(this._setOriginForCurrentEventQueue(t),"function"==typeof o.focus&&o.focus(n))}ngOnDestroy(){this._elementInfo.forEach((e,t)=>this.stopMonitoring(t))}_getDocument(){return this._document||document}_getWindow(){return this._getDocument().defaultView||window}_toggleClass(e,t,n){n?e.classList.add(t):e.classList.remove(t)}_getFocusOrigin(e){return this._origin?this._origin:this._windowFocused&&this._lastFocusOrigin?this._lastFocusOrigin:this._wasCausedByTouch(e)?"touch":"program"}_setClasses(e,t){this._toggleClass(e,"cdk-focused",!!t),this._toggleClass(e,"cdk-touch-focused","touch"===t),this._toggleClass(e,"cdk-keyboard-focused","keyboard"===t),this._toggleClass(e,"cdk-mouse-focused","mouse"===t),this._toggleClass(e,"cdk-program-focused","program"===t)}_setOriginForCurrentEventQueue(e){this._ngZone.runOutsideAngular(()=>{this._origin=e,0===this._detectionMode&&(this._originTimeoutId=setTimeout(()=>this._origin=null,1))})}_wasCausedByTouch(e){const t=sb(e);return this._lastTouchTarget instanceof Node&&t instanceof Node&&(t===this._lastTouchTarget||t.contains(this._lastTouchTarget))}_onFocus(e,t){const n=this._elementInfo.get(t);n&&(n.checkChildren||t===sb(e))&&this._originChanged(t,this._getFocusOrigin(e),n)}_onBlur(e,t){const n=this._elementInfo.get(t);!n||n.checkChildren&&e.relatedTarget instanceof Node&&t.contains(e.relatedTarget)||(this._setClasses(t),this._emitOrigin(n.subject,null))}_emitOrigin(e,t){this._ngZone.run(()=>e.next(t))}_registerGlobalListeners(e){if(!this._platform.isBrowser)return;const t=e.rootNode,n=this._rootNodeFocusListenerCount.get(t)||0;n||this._ngZone.runOutsideAngular(()=>{t.addEventListener("focus",this._rootNodeFocusAndBlurListener,rb),t.addEventListener("blur",this._rootNodeFocusAndBlurListener,rb)}),this._rootNodeFocusListenerCount.set(t,n+1),1==++this._monitoredElementCount&&this._ngZone.runOutsideAngular(()=>{const e=this._getDocument(),t=this._getWindow();e.addEventListener("keydown",this._documentKeydownListener,rb),e.addEventListener("mousedown",this._documentMousedownListener,rb),e.addEventListener("touchstart",this._documentTouchstartListener,rb),t.addEventListener("focus",this._windowFocusListener)})}_removeGlobalListeners(e){const t=e.rootNode;if(this._rootNodeFocusListenerCount.has(t)){const e=this._rootNodeFocusListenerCount.get(t);e>1?this._rootNodeFocusListenerCount.set(t,e-1):(t.removeEventListener("focus",this._rootNodeFocusAndBlurListener,rb),t.removeEventListener("blur",this._rootNodeFocusAndBlurListener,rb),this._rootNodeFocusListenerCount.delete(t))}if(!--this._monitoredElementCount){const e=this._getDocument(),t=this._getWindow();e.removeEventListener("keydown",this._documentKeydownListener,rb),e.removeEventListener("mousedown",this._documentMousedownListener,rb),e.removeEventListener("touchstart",this._documentTouchstartListener,rb),t.removeEventListener("focus",this._windowFocusListener),clearTimeout(this._windowFocusTimeoutId),clearTimeout(this._touchTimeoutId),clearTimeout(this._originTimeoutId)}}_originChanged(e,t,n){this._setClasses(e,t),this._emitOrigin(n.subject,t),this._lastFocusOrigin=t}_getClosestElementsInfo(e){const t=[];return this._elementInfo.forEach((n,o)=>{(o===e||n.checkChildren&&o.contains(e))&&t.push([o,n])}),t}}return e.\u0275fac=function(t){return new(t||e)(ho(zc),ho(Ff),ho(yd,8),ho(ib,8))},e.\u0275prov=ue({factory:function(){return new e(ho(zc),ho(Ff),ho(yd,8),ho(ib,8))},token:e,providedIn:"root"}),e})();function sb(e){return e.composedPath?e.composedPath()[0]:e.target}const lb="cdk-high-contrast-black-on-white",cb="cdk-high-contrast-white-on-black",db="cdk-high-contrast-active";let pb=(()=>{class e{constructor(e,t){this._platform=e,this._document=t}getHighContrastMode(){if(!this._platform.isBrowser)return 0;const e=this._document.createElement("div");e.style.backgroundColor="rgb(1,2,3)",e.style.position="absolute",this._document.body.appendChild(e);const t=this._document.defaultView||window,n=t&&t.getComputedStyle?t.getComputedStyle(e):null,o=(n&&n.backgroundColor||"").replace(/ /g,"");switch(this._document.body.removeChild(e),o){case"rgb(0,0,0)":return 2;case"rgb(255,255,255)":return 1}return 0}_applyBodyHighContrastModeCssClasses(){if(!this._hasCheckedHighContrastMode&&this._platform.isBrowser&&this._document.body){const e=this._document.body.classList;e.remove(db),e.remove(lb),e.remove(cb),this._hasCheckedHighContrastMode=!0;const t=this.getHighContrastMode();1===t?(e.add(db),e.add(lb)):2===t&&(e.add(db),e.add(cb))}}}return e.\u0275fac=function(t){return new(t||e)(ho(Ff),ho(yd))},e.\u0275prov=ue({factory:function(){return new e(ho(Ff),ho(yd))},token:e,providedIn:"root"}),e})(),ub=(()=>{class e{constructor(e){e._applyBodyHighContrastModeCssClasses()}}return e.\u0275fac=function(t){return new(t||e)(ho(pb))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pf,Kf]]}),e})();const hb=new Jn("cdk-dir-doc",{providedIn:"root",factory:function(){return mo(yd)}});let mb=(()=>{class e{constructor(e){if(this.value="ltr",this.change=new Xl,e){const t=e.documentElement?e.documentElement.dir:null,n=(e.body?e.body.dir:null)||t;this.value="ltr"===n||"rtl"===n?n:"ltr"}}ngOnDestroy(){this.change.complete()}}return e.\u0275fac=function(t){return new(t||e)(ho(hb,8))},e.\u0275prov=ue({factory:function(){return new e(ho(hb,8))},token:e,providedIn:"root"}),e})(),gb=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})();const fb=new Ys("12.0.3");class bb{}const yb="*";function vb(e,t){return{type:7,name:e,definitions:t,options:{}}}function wb(e,t=null){return{type:4,styles:t,timings:e}}function kb(e,t=null){return{type:2,steps:e,options:t}}function Sb(e){return{type:6,styles:e,offset:null}}function _b(e,t,n){return{type:0,name:e,styles:t,options:n}}function Tb(e,t,n=null){return{type:1,expr:e,animation:t,options:n}}function Ab(e){Promise.resolve(null).then(e)}class Cb{constructor(e=0,t=0){this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._started=!1,this._destroyed=!1,this._finished=!1,this._position=0,this.parentPlayer=null,this.totalTime=e+t}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(e=>e()),this._onDoneFns=[])}onStart(e){this._onStartFns.push(e)}onDone(e){this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0}triggerMicrotask(){Ab(()=>this._onFinish())}_onStart(){this._onStartFns.forEach(e=>e()),this._onStartFns=[]}pause(){}restart(){}finish(){this._onFinish()}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}reset(){this._started=!1}setPosition(e){this._position=this.totalTime?e*this.totalTime:1}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(e){const t="start"==e?this._onStartFns:this._onDoneFns;t.forEach(e=>e()),t.length=0}}class xb{constructor(e){this._onDoneFns=[],this._onStartFns=[],this._finished=!1,this._started=!1,this._destroyed=!1,this._onDestroyFns=[],this.parentPlayer=null,this.totalTime=0,this.players=e;let t=0,n=0,o=0;const i=this.players.length;0==i?Ab(()=>this._onFinish()):this.players.forEach(e=>{e.onDone(()=>{++t==i&&this._onFinish()}),e.onDestroy(()=>{++n==i&&this._onDestroy()}),e.onStart(()=>{++o==i&&this._onStart()})}),this.totalTime=this.players.reduce((e,t)=>Math.max(e,t.totalTime),0)}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(e=>e()),this._onDoneFns=[])}init(){this.players.forEach(e=>e.init())}onStart(e){this._onStartFns.push(e)}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach(e=>e()),this._onStartFns=[])}onDone(e){this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach(e=>e.play())}pause(){this.players.forEach(e=>e.pause())}restart(){this.players.forEach(e=>e.restart())}finish(){this._onFinish(),this.players.forEach(e=>e.finish())}destroy(){this._onDestroy()}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach(e=>e.destroy()),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}reset(){this.players.forEach(e=>e.reset()),this._destroyed=!1,this._finished=!1,this._started=!1}setPosition(e){const t=e*this.totalTime;this.players.forEach(e=>{const n=e.totalTime?Math.min(1,t/e.totalTime):1;e.setPosition(n)})}getPosition(){const e=this.players.reduce((e,t)=>null===e||t.totalTime>e.totalTime?t:e,null);return null!=e?e.getPosition():0}beforeDestroy(){this.players.forEach(e=>{e.beforeDestroy&&e.beforeDestroy()})}triggerCallback(e){const t="start"==e?this._onStartFns:this._onDoneFns;t.forEach(e=>e()),t.length=0}}function Ib(){return"undefined"!=typeof window&&void 0!==window.document}function Eb(){return"undefined"!=typeof process&&"[object process]"==={}.toString.call(process)}function Db(e){switch(e.length){case 0:return new Cb;case 1:return e[0];default:return new xb(e)}}function Ob(e,t,n,o,i={},r={}){const a=[],s=[];let l=-1,c=null;if(o.forEach(e=>{const n=e.offset,o=n==l,d=o&&c||{};Object.keys(e).forEach(n=>{let o=n,s=e[n];if("offset"!==n)switch(o=t.normalizePropertyName(o,a),s){case"!":s=i[n];break;case yb:s=r[n];break;default:s=t.normalizeStyleValue(n,o,s,a)}d[o]=s}),o||s.push(d),c=d,l=n}),a.length){const e="\n - ";throw new Error(`Unable to animate due to the following errors:${e}${a.join(e)}`)}return s}function jb(e,t,n,o){switch(t){case"start":e.onStart(()=>o(n&&Rb(n,"start",e)));break;case"done":e.onDone(()=>o(n&&Rb(n,"done",e)));break;case"destroy":e.onDestroy(()=>o(n&&Rb(n,"destroy",e)))}}function Rb(e,t,n){const o=n.totalTime,i=qb(e.element,e.triggerName,e.fromState,e.toState,t||e.phaseName,null==o?e.totalTime:o,!!n.disabled),r=e._data;return null!=r&&(i._data=r),i}function qb(e,t,n,o,i="",r=0,a){return{element:e,triggerName:t,fromState:n,toState:o,phaseName:i,totalTime:r,disabled:!!a}}function Mb(e,t,n){let o;return e instanceof Map?(o=e.get(t),o||e.set(t,o=n)):(o=e[t],o||(o=e[t]=n)),o}function Fb(e){const t=e.indexOf(":");return[e.substring(1,t),e.substr(t+1)]}let Pb=(e,t)=>!1,Lb=(e,t)=>!1,zb=(e,t,n)=>[];const Nb=Eb();(Nb||"undefined"!=typeof Element)&&(Pb=Ib()?(e,t)=>{for(;t&&t!==document.documentElement;){if(t===e)return!0;t=t.parentNode||t.host}return!1}:(e,t)=>e.contains(t),Lb=(()=>{if(Nb||Element.prototype.matches)return(e,t)=>e.matches(t);{const e=Element.prototype,t=e.matchesSelector||e.mozMatchesSelector||e.msMatchesSelector||e.oMatchesSelector||e.webkitMatchesSelector;return t?(e,n)=>t.apply(e,[n]):Lb}})(),zb=(e,t,n)=>{let o=[];if(n){const n=e.querySelectorAll(t);for(let e=0;e<n.length;e++)o.push(n[e])}else{const n=e.querySelector(t);n&&o.push(n)}return o});let Ub=null,Bb=!1;function Wb(e){Ub||(Ub=("undefined"!=typeof document?document.body:null)||{},Bb=!!Ub.style&&"WebkitAppearance"in Ub.style);let t=!0;return Ub.style&&!function(e){return"ebkit"==e.substring(1,6)}(e)&&(t=e in Ub.style,!t&&Bb)&&(t="Webkit"+e.charAt(0).toUpperCase()+e.substr(1)in Ub.style),t}const $b=Lb,Vb=Pb,Hb=zb;function Gb(e){const t={};return Object.keys(e).forEach(n=>{const o=n.replace(/([a-z])([A-Z])/g,"$1-$2");t[o]=e[n]}),t}let Jb=(()=>{class e{validateStyleProperty(e){return Wb(e)}matchesElement(e,t){return $b(e,t)}containsElement(e,t){return Vb(e,t)}query(e,t,n){return Hb(e,t,n)}computeStyle(e,t,n){return n||""}animate(e,t,n,o,i,r=[],a){return new Cb(n,o)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),Kb=(()=>{class e{}return e.NOOP=new Jb,e})();const Yb="ng-enter",Qb="ng-leave",Zb="ng-trigger",Xb=".ng-trigger",ey="ng-animating",ty=".ng-animating";function ny(e){if("number"==typeof e)return e;const t=e.match(/^(-?[\.\d]+)(m?s)/);return!t||t.length<2?0:oy(parseFloat(t[1]),t[2])}function oy(e,t){switch(t){case"s":return 1e3*e;default:return e}}function iy(e,t,n){return e.hasOwnProperty("duration")?e:function(e,t,n){let o,i=0,r="";if("string"==typeof e){const n=e.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);if(null===n)return t.push(`The provided timing value "${e}" is invalid.`),{duration:0,delay:0,easing:""};o=oy(parseFloat(n[1]),n[2]);const a=n[3];null!=a&&(i=oy(parseFloat(a),n[4]));const s=n[5];s&&(r=s)}else o=e;if(!n){let n=!1,r=t.length;o<0&&(t.push("Duration values below 0 are not allowed for this animation step."),n=!0),i<0&&(t.push("Delay values below 0 are not allowed for this animation step."),n=!0),n&&t.splice(r,0,`The provided timing value "${e}" is invalid.`)}return{duration:o,delay:i,easing:r}}(e,t,n)}function ry(e,t={}){return Object.keys(e).forEach(n=>{t[n]=e[n]}),t}function ay(e,t,n={}){if(t)for(let o in e)n[o]=e[o];else ry(e,n);return n}function sy(e,t,n){return n?t+":"+n+";":""}function ly(e){let t="";for(let n=0;n<e.style.length;n++){const o=e.style.item(n);t+=sy(0,o,e.style.getPropertyValue(o))}for(const n in e.style)e.style.hasOwnProperty(n)&&!n.startsWith("_")&&(t+=sy(0,n.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),e.style[n]));e.setAttribute("style",t)}function cy(e,t,n){e.style&&(Object.keys(t).forEach(o=>{const i=by(o);n&&!n.hasOwnProperty(o)&&(n[o]=e.style[i]),e.style[i]=t[o]}),Eb()&&ly(e))}function dy(e,t){e.style&&(Object.keys(t).forEach(t=>{const n=by(t);e.style[n]=""}),Eb()&&ly(e))}function py(e){return Array.isArray(e)?1==e.length?e[0]:kb(e):e}const uy=new RegExp("{{\\s*(.+?)\\s*}}","g");function hy(e){let t=[];if("string"==typeof e){let n;for(;n=uy.exec(e);)t.push(n[1]);uy.lastIndex=0}return t}function my(e,t,n){const o=e.toString(),i=o.replace(uy,(e,o)=>{let i=t[o];return t.hasOwnProperty(o)||(n.push(`Please provide a value for the animation param ${o}`),i=""),i.toString()});return i==o?e:i}function gy(e){const t=[];let n=e.next();for(;!n.done;)t.push(n.value),n=e.next();return t}const fy=/-+([a-z0-9])/g;function by(e){return e.replace(fy,(...e)=>e[1].toUpperCase())}function yy(e,t){return 0===e||0===t}function vy(e,t,n){const o=Object.keys(n);if(o.length&&t.length){let r=t[0],a=[];if(o.forEach(e=>{r.hasOwnProperty(e)||a.push(e),r[e]=n[e]}),a.length)for(var i=1;i<t.length;i++){let n=t[i];a.forEach(function(t){n[t]=ky(e,t)})}}return t}function wy(e,t,n){switch(t.type){case 7:return e.visitTrigger(t,n);case 0:return e.visitState(t,n);case 1:return e.visitTransition(t,n);case 2:return e.visitSequence(t,n);case 3:return e.visitGroup(t,n);case 4:return e.visitAnimate(t,n);case 5:return e.visitKeyframes(t,n);case 6:return e.visitStyle(t,n);case 8:return e.visitReference(t,n);case 9:return e.visitAnimateChild(t,n);case 10:return e.visitAnimateRef(t,n);case 11:return e.visitQuery(t,n);case 12:return e.visitStagger(t,n);default:throw new Error(`Unable to resolve animation metadata node #${t.type}`)}}function ky(e,t){return window.getComputedStyle(e)[t]}const Sy="*";function _y(e,t){const n=[];return"string"==typeof e?e.split(/\s*,\s*/).forEach(e=>function(e,t,n){if(":"==e[0]){const o=function(e,t){switch(e){case":enter":return"void => *";case":leave":return"* => void";case":increment":return(e,t)=>parseFloat(t)>parseFloat(e);case":decrement":return(e,t)=>parseFloat(t)<parseFloat(e);default:return t.push(`The transition alias value "${e}" is not supported`),"* => *"}}(e,n);if("function"==typeof o)return void t.push(o);e=o}const o=e.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);if(null==o||o.length<4)return n.push(`The provided transition expression "${e}" is not supported`),t;const i=o[1],r=o[2],a=o[3];t.push(Cy(i,a)),"<"!=r[0]||i==Sy&&a==Sy||t.push(Cy(a,i))}(e,n,t)):n.push(e),n}const Ty=new Set(["true","1"]),Ay=new Set(["false","0"]);function Cy(e,t){const n=Ty.has(e)||Ay.has(e),o=Ty.has(t)||Ay.has(t);return(i,r)=>{let a=e==Sy||e==i,s=t==Sy||t==r;return!a&&n&&"boolean"==typeof i&&(a=i?Ty.has(e):Ay.has(e)),!s&&o&&"boolean"==typeof r&&(s=r?Ty.has(t):Ay.has(t)),a&&s}}const xy=new RegExp("s*:selfs*,?","g");function Iy(e,t,n){return new Ey(e).build(t,n)}class Ey{constructor(e){this._driver=e}build(e,t){const n=new Dy(t);return this._resetContextStyleTimingState(n),wy(this,py(e),n)}_resetContextStyleTimingState(e){e.currentQuerySelector="",e.collectedStyles={},e.collectedStyles[""]={},e.currentTime=0}visitTrigger(e,t){let n=t.queryCount=0,o=t.depCount=0;const i=[],r=[];return"@"==e.name.charAt(0)&&t.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),e.definitions.forEach(e=>{if(this._resetContextStyleTimingState(t),0==e.type){const n=e,o=n.name;o.toString().split(/\s*,\s*/).forEach(e=>{n.name=e,i.push(this.visitState(n,t))}),n.name=o}else if(1==e.type){const i=this.visitTransition(e,t);n+=i.queryCount,o+=i.depCount,r.push(i)}else t.errors.push("only state() and transition() definitions can sit inside of a trigger()")}),{type:7,name:e.name,states:i,transitions:r,queryCount:n,depCount:o,options:null}}visitState(e,t){const n=this.visitStyle(e.styles,t),o=e.options&&e.options.params||null;if(n.containsDynamicStyles){const i=new Set,r=o||{};if(n.styles.forEach(e=>{if(Oy(e)){const t=e;Object.keys(t).forEach(e=>{hy(t[e]).forEach(e=>{r.hasOwnProperty(e)||i.add(e)})})}}),i.size){const n=gy(i.values());t.errors.push(`state("${e.name}", ...) must define default values for all the following style substitutions: ${n.join(", ")}`)}}return{type:0,name:e.name,style:n,options:o?{params:o}:null}}visitTransition(e,t){t.queryCount=0,t.depCount=0;const n=wy(this,py(e.animation),t);return{type:1,matchers:_y(e.expr,t.errors),animation:n,queryCount:t.queryCount,depCount:t.depCount,options:jy(e.options)}}visitSequence(e,t){return{type:2,steps:e.steps.map(e=>wy(this,e,t)),options:jy(e.options)}}visitGroup(e,t){const n=t.currentTime;let o=0;const i=e.steps.map(e=>{t.currentTime=n;const i=wy(this,e,t);return o=Math.max(o,t.currentTime),i});return t.currentTime=o,{type:3,steps:i,options:jy(e.options)}}visitAnimate(e,t){const n=function(e,t){let n=null;if(e.hasOwnProperty("duration"))n=e;else if("number"==typeof e)return Ry(iy(e,t).duration,0,"");const o=e;if(o.split(/\s+/).some(e=>"{"==e.charAt(0)&&"{"==e.charAt(1))){const e=Ry(0,0,"");return e.dynamic=!0,e.strValue=o,e}return n=n||iy(o,t),Ry(n.duration,n.delay,n.easing)}(e.timings,t.errors);let o;t.currentAnimateTimings=n;let i=e.styles?e.styles:Sb({});if(5==i.type)o=this.visitKeyframes(i,t);else{let i=e.styles,r=!1;if(!i){r=!0;const e={};n.easing&&(e.easing=n.easing),i=Sb(e)}t.currentTime+=n.duration+n.delay;const a=this.visitStyle(i,t);a.isEmptyStep=r,o=a}return t.currentAnimateTimings=null,{type:4,timings:n,style:o,options:null}}visitStyle(e,t){const n=this._makeStyleAst(e,t);return this._validateStyleAst(n,t),n}_makeStyleAst(e,t){const n=[];Array.isArray(e.styles)?e.styles.forEach(e=>{"string"==typeof e?e==yb?n.push(e):t.errors.push(`The provided style string value ${e} is not allowed.`):n.push(e)}):n.push(e.styles);let o=!1,i=null;return n.forEach(e=>{if(Oy(e)){const t=e,n=t.easing;if(n&&(i=n,delete t.easing),!o)for(let e in t)if(t[e].toString().indexOf("{{")>=0){o=!0;break}}}),{type:6,styles:n,easing:i,offset:e.offset,containsDynamicStyles:o,options:null}}_validateStyleAst(e,t){const n=t.currentAnimateTimings;let o=t.currentTime,i=t.currentTime;n&&i>0&&(i-=n.duration+n.delay),e.styles.forEach(e=>{"string"!=typeof e&&Object.keys(e).forEach(n=>{if(!this._driver.validateStyleProperty(n))return void t.errors.push(`The provided animation property "${n}" is not a supported CSS property for animations`);const r=t.collectedStyles[t.currentQuerySelector],a=r[n];let s=!0;a&&(i!=o&&i>=a.startTime&&o<=a.endTime&&(t.errors.push(`The CSS property "${n}" that exists between the times of "${a.startTime}ms" and "${a.endTime}ms" is also being animated in a parallel animation between the times of "${i}ms" and "${o}ms"`),s=!1),i=a.startTime),s&&(r[n]={startTime:i,endTime:o}),t.options&&function(e,t,n){const o=t.params||{},i=hy(e);i.length&&i.forEach(e=>{o.hasOwnProperty(e)||n.push(`Unable to resolve the local animation param ${e} in the given list of values`)})}(e[n],t.options,t.errors)})})}visitKeyframes(e,t){const n={type:5,styles:[],options:null};if(!t.currentAnimateTimings)return t.errors.push("keyframes() must be placed inside of a call to animate()"),n;let o=0;const i=[];let r=!1,a=!1,s=0;const l=e.steps.map(e=>{const n=this._makeStyleAst(e,t);let l=null!=n.offset?n.offset:function(e){if("string"==typeof e)return null;let t=null;if(Array.isArray(e))e.forEach(e=>{if(Oy(e)&&e.hasOwnProperty("offset")){const n=e;t=parseFloat(n.offset),delete n.offset}});else if(Oy(e)&&e.hasOwnProperty("offset")){const n=e;t=parseFloat(n.offset),delete n.offset}return t}(n.styles),c=0;return null!=l&&(o++,c=n.offset=l),a=a||c<0||c>1,r=r||c<s,s=c,i.push(c),n});a&&t.errors.push("Please ensure that all keyframe offsets are between 0 and 1"),r&&t.errors.push("Please ensure that all keyframe offsets are in order");const c=e.steps.length;let d=0;o>0&&o<c?t.errors.push("Not all style() steps within the declared keyframes() contain offsets"):0==o&&(d=1/(c-1));const p=c-1,u=t.currentTime,h=t.currentAnimateTimings,m=h.duration;return l.forEach((e,o)=>{const r=d>0?o==p?1:d*o:i[o],a=r*m;t.currentTime=u+h.delay+a,h.duration=a,this._validateStyleAst(e,t),e.offset=r,n.styles.push(e)}),n}visitReference(e,t){return{type:8,animation:wy(this,py(e.animation),t),options:jy(e.options)}}visitAnimateChild(e,t){return t.depCount++,{type:9,options:jy(e.options)}}visitAnimateRef(e,t){return{type:10,animation:this.visitReference(e.animation,t),options:jy(e.options)}}visitQuery(e,t){const n=t.currentQuerySelector,o=e.options||{};t.queryCount++,t.currentQuery=e;const[i,r]=function(e){const t=!!e.split(/\s*,\s*/).find(e=>":self"==e);return t&&(e=e.replace(xy,"")),[e=e.replace(/@\*/g,Xb).replace(/@\w+/g,e=>".ng-trigger-"+e.substr(1)).replace(/:animating/g,ty),t]}(e.selector);t.currentQuerySelector=n.length?n+" "+i:i,Mb(t.collectedStyles,t.currentQuerySelector,{});const a=wy(this,py(e.animation),t);return t.currentQuery=null,t.currentQuerySelector=n,{type:11,selector:i,limit:o.limit||0,optional:!!o.optional,includeSelf:r,animation:a,originalSelector:e.selector,options:jy(e.options)}}visitStagger(e,t){t.currentQuery||t.errors.push("stagger() can only be used inside of query()");const n="full"===e.timings?{duration:0,delay:0,easing:"full"}:iy(e.timings,t.errors,!0);return{type:12,animation:wy(this,py(e.animation),t),timings:n,options:null}}}class Dy{constructor(e){this.errors=e,this.queryCount=0,this.depCount=0,this.currentTransition=null,this.currentQuery=null,this.currentQuerySelector=null,this.currentAnimateTimings=null,this.currentTime=0,this.collectedStyles={},this.options=null}}function Oy(e){return!Array.isArray(e)&&"object"==typeof e}function jy(e){var t;return e?(e=ry(e)).params&&(e.params=(t=e.params)?ry(t):null):e={},e}function Ry(e,t,n){return{duration:e,delay:t,easing:n}}function qy(e,t,n,o,i,r,a=null,s=!1){return{type:1,element:e,keyframes:t,preStyleProps:n,postStyleProps:o,duration:i,delay:r,totalTime:i+r,easing:a,subTimeline:s}}class My{constructor(){this._map=new Map}consume(e){let t=this._map.get(e);return t?this._map.delete(e):t=[],t}append(e,t){let n=this._map.get(e);n||this._map.set(e,n=[]),n.push(...t)}has(e){return this._map.has(e)}clear(){this._map.clear()}}const Fy=new RegExp(":enter","g"),Py=new RegExp(":leave","g");function Ly(e,t,n,o,i,r={},a={},s,l,c=[]){return(new zy).buildKeyframes(e,t,n,o,i,r,a,s,l,c)}class zy{buildKeyframes(e,t,n,o,i,r,a,s,l,c=[]){l=l||new My;const d=new Uy(e,t,l,o,i,c,[]);d.options=s,d.currentTimeline.setStyles([r],null,d.errors,s),wy(this,n,d);const p=d.timelines.filter(e=>e.containsAnimation());if(p.length&&Object.keys(a).length){const e=p[p.length-1];e.allowOnlyTimelineStyles()||e.setStyles([a],null,d.errors,s)}return p.length?p.map(e=>e.buildKeyframes()):[qy(t,[],[],[],0,0,"",!1)]}visitTrigger(e,t){}visitState(e,t){}visitTransition(e,t){}visitAnimateChild(e,t){const n=t.subInstructions.consume(t.element);if(n){const o=t.createSubContext(e.options),i=t.currentTimeline.currentTime,r=this._visitSubInstructions(n,o,o.options);i!=r&&t.transformIntoNewTimeline(r)}t.previousNode=e}visitAnimateRef(e,t){const n=t.createSubContext(e.options);n.transformIntoNewTimeline(),this.visitReference(e.animation,n),t.transformIntoNewTimeline(n.currentTimeline.currentTime),t.previousNode=e}_visitSubInstructions(e,t,n){let o=t.currentTimeline.currentTime;const i=null!=n.duration?ny(n.duration):null,r=null!=n.delay?ny(n.delay):null;return 0!==i&&e.forEach(e=>{const n=t.appendInstructionToTimeline(e,i,r);o=Math.max(o,n.duration+n.delay)}),o}visitReference(e,t){t.updateOptions(e.options,!0),wy(this,e.animation,t),t.previousNode=e}visitSequence(e,t){const n=t.subContextCount;let o=t;const i=e.options;if(i&&(i.params||i.delay)&&(o=t.createSubContext(i),o.transformIntoNewTimeline(),null!=i.delay)){6==o.previousNode.type&&(o.currentTimeline.snapshotCurrentStyles(),o.previousNode=Ny);const e=ny(i.delay);o.delayNextStep(e)}e.steps.length&&(e.steps.forEach(e=>wy(this,e,o)),o.currentTimeline.applyStylesToKeyframe(),o.subContextCount>n&&o.transformIntoNewTimeline()),t.previousNode=e}visitGroup(e,t){const n=[];let o=t.currentTimeline.currentTime;const i=e.options&&e.options.delay?ny(e.options.delay):0;e.steps.forEach(r=>{const a=t.createSubContext(e.options);i&&a.delayNextStep(i),wy(this,r,a),o=Math.max(o,a.currentTimeline.currentTime),n.push(a.currentTimeline)}),n.forEach(e=>t.currentTimeline.mergeTimelineCollectedStyles(e)),t.transformIntoNewTimeline(o),t.previousNode=e}_visitTiming(e,t){if(e.dynamic){const n=e.strValue;return iy(t.params?my(n,t.params,t.errors):n,t.errors)}return{duration:e.duration,delay:e.delay,easing:e.easing}}visitAnimate(e,t){const n=t.currentAnimateTimings=this._visitTiming(e.timings,t),o=t.currentTimeline;n.delay&&(t.incrementTime(n.delay),o.snapshotCurrentStyles());const i=e.style;5==i.type?this.visitKeyframes(i,t):(t.incrementTime(n.duration),this.visitStyle(i,t),o.applyStylesToKeyframe()),t.currentAnimateTimings=null,t.previousNode=e}visitStyle(e,t){const n=t.currentTimeline,o=t.currentAnimateTimings;!o&&n.getCurrentStyleProperties().length&&n.forwardFrame();const i=o&&o.easing||e.easing;e.isEmptyStep?n.applyEmptyStep(i):n.setStyles(e.styles,i,t.errors,t.options),t.previousNode=e}visitKeyframes(e,t){const n=t.currentAnimateTimings,o=t.currentTimeline.duration,i=n.duration,r=t.createSubContext().currentTimeline;r.easing=n.easing,e.styles.forEach(e=>{r.forwardTime((e.offset||0)*i),r.setStyles(e.styles,e.easing,t.errors,t.options),r.applyStylesToKeyframe()}),t.currentTimeline.mergeTimelineCollectedStyles(r),t.transformIntoNewTimeline(o+i),t.previousNode=e}visitQuery(e,t){const n=t.currentTimeline.currentTime,o=e.options||{},i=o.delay?ny(o.delay):0;i&&(6===t.previousNode.type||0==n&&t.currentTimeline.getCurrentStyleProperties().length)&&(t.currentTimeline.snapshotCurrentStyles(),t.previousNode=Ny);let r=n;const a=t.invokeQuery(e.selector,e.originalSelector,e.limit,e.includeSelf,!!o.optional,t.errors);t.currentQueryTotal=a.length;let s=null;a.forEach((n,o)=>{t.currentQueryIndex=o;const a=t.createSubContext(e.options,n);i&&a.delayNextStep(i),n===t.element&&(s=a.currentTimeline),wy(this,e.animation,a),a.currentTimeline.applyStylesToKeyframe(),r=Math.max(r,a.currentTimeline.currentTime)}),t.currentQueryIndex=0,t.currentQueryTotal=0,t.transformIntoNewTimeline(r),s&&(t.currentTimeline.mergeTimelineCollectedStyles(s),t.currentTimeline.snapshotCurrentStyles()),t.previousNode=e}visitStagger(e,t){const n=t.parentContext,o=t.currentTimeline,i=e.timings,r=Math.abs(i.duration),a=r*(t.currentQueryTotal-1);let s=r*t.currentQueryIndex;switch(i.duration<0?"reverse":i.easing){case"reverse":s=a-s;break;case"full":s=n.currentStaggerTime}const l=t.currentTimeline;s&&l.delayNextStep(s);const c=l.currentTime;wy(this,e.animation,t),t.previousNode=e,n.currentStaggerTime=o.currentTime-c+(o.startTime-n.currentTimeline.startTime)}}const Ny={};class Uy{constructor(e,t,n,o,i,r,a,s){this._driver=e,this.element=t,this.subInstructions=n,this._enterClassName=o,this._leaveClassName=i,this.errors=r,this.timelines=a,this.parentContext=null,this.currentAnimateTimings=null,this.previousNode=Ny,this.subContextCount=0,this.options={},this.currentQueryIndex=0,this.currentQueryTotal=0,this.currentStaggerTime=0,this.currentTimeline=s||new By(this._driver,t,0),a.push(this.currentTimeline)}get params(){return this.options.params}updateOptions(e,t){if(!e)return;const n=e;let o=this.options;null!=n.duration&&(o.duration=ny(n.duration)),null!=n.delay&&(o.delay=ny(n.delay));const i=n.params;if(i){let e=o.params;e||(e=this.options.params={}),Object.keys(i).forEach(n=>{t&&e.hasOwnProperty(n)||(e[n]=my(i[n],e,this.errors))})}}_copyOptions(){const e={};if(this.options){const t=this.options.params;if(t){const n=e.params={};Object.keys(t).forEach(e=>{n[e]=t[e]})}}return e}createSubContext(e=null,t,n){const o=t||this.element,i=new Uy(this._driver,o,this.subInstructions,this._enterClassName,this._leaveClassName,this.errors,this.timelines,this.currentTimeline.fork(o,n||0));return i.previousNode=this.previousNode,i.currentAnimateTimings=this.currentAnimateTimings,i.options=this._copyOptions(),i.updateOptions(e),i.currentQueryIndex=this.currentQueryIndex,i.currentQueryTotal=this.currentQueryTotal,i.parentContext=this,this.subContextCount++,i}transformIntoNewTimeline(e){return this.previousNode=Ny,this.currentTimeline=this.currentTimeline.fork(this.element,e),this.timelines.push(this.currentTimeline),this.currentTimeline}appendInstructionToTimeline(e,t,n){const o={duration:null!=t?t:e.duration,delay:this.currentTimeline.currentTime+(null!=n?n:0)+e.delay,easing:""},i=new Wy(this._driver,e.element,e.keyframes,e.preStyleProps,e.postStyleProps,o,e.stretchStartingKeyframe);return this.timelines.push(i),o}incrementTime(e){this.currentTimeline.forwardTime(this.currentTimeline.duration+e)}delayNextStep(e){e>0&&this.currentTimeline.delayNextStep(e)}invokeQuery(e,t,n,o,i,r){let a=[];if(o&&a.push(this.element),e.length>0){e=(e=e.replace(Fy,"."+this._enterClassName)).replace(Py,"."+this._leaveClassName);let t=this._driver.query(this.element,e,1!=n);0!==n&&(t=n<0?t.slice(t.length+n,t.length):t.slice(0,n)),a.push(...t)}return i||0!=a.length||r.push(`\`query("${t}")\` returned zero elements. (Use \`query("${t}", { optional: true })\` if you wish to allow this.)`),a}}class By{constructor(e,t,n,o){this._driver=e,this.element=t,this.startTime=n,this._elementTimelineStylesLookup=o,this.duration=0,this._previousKeyframe={},this._currentKeyframe={},this._keyframes=new Map,this._styleSummary={},this._pendingStyles={},this._backFill={},this._currentEmptyStepKeyframe=null,this._elementTimelineStylesLookup||(this._elementTimelineStylesLookup=new Map),this._localTimelineStyles=Object.create(this._backFill,{}),this._globalTimelineStyles=this._elementTimelineStylesLookup.get(t),this._globalTimelineStyles||(this._globalTimelineStyles=this._localTimelineStyles,this._elementTimelineStylesLookup.set(t,this._localTimelineStyles)),this._loadKeyframe()}containsAnimation(){switch(this._keyframes.size){case 0:return!1;case 1:return this.getCurrentStyleProperties().length>0;default:return!0}}getCurrentStyleProperties(){return Object.keys(this._currentKeyframe)}get currentTime(){return this.startTime+this.duration}delayNextStep(e){const t=1==this._keyframes.size&&Object.keys(this._pendingStyles).length;this.duration||t?(this.forwardTime(this.currentTime+e),t&&this.snapshotCurrentStyles()):this.startTime+=e}fork(e,t){return this.applyStylesToKeyframe(),new By(this._driver,e,t||this.currentTime,this._elementTimelineStylesLookup)}_loadKeyframe(){this._currentKeyframe&&(this._previousKeyframe=this._currentKeyframe),this._currentKeyframe=this._keyframes.get(this.duration),this._currentKeyframe||(this._currentKeyframe=Object.create(this._backFill,{}),this._keyframes.set(this.duration,this._currentKeyframe))}forwardFrame(){this.duration+=1,this._loadKeyframe()}forwardTime(e){this.applyStylesToKeyframe(),this.duration=e,this._loadKeyframe()}_updateStyle(e,t){this._localTimelineStyles[e]=t,this._globalTimelineStyles[e]=t,this._styleSummary[e]={time:this.currentTime,value:t}}allowOnlyTimelineStyles(){return this._currentEmptyStepKeyframe!==this._currentKeyframe}applyEmptyStep(e){e&&(this._previousKeyframe.easing=e),Object.keys(this._globalTimelineStyles).forEach(e=>{this._backFill[e]=this._globalTimelineStyles[e]||yb,this._currentKeyframe[e]=yb}),this._currentEmptyStepKeyframe=this._currentKeyframe}setStyles(e,t,n,o){t&&(this._previousKeyframe.easing=t);const i=o&&o.params||{},r=function(e,t){const n={};let o;return e.forEach(e=>{"*"===e?(o=o||Object.keys(t),o.forEach(e=>{n[e]=yb})):ay(e,!1,n)}),n}(e,this._globalTimelineStyles);Object.keys(r).forEach(e=>{const t=my(r[e],i,n);this._pendingStyles[e]=t,this._localTimelineStyles.hasOwnProperty(e)||(this._backFill[e]=this._globalTimelineStyles.hasOwnProperty(e)?this._globalTimelineStyles[e]:yb),this._updateStyle(e,t)})}applyStylesToKeyframe(){const e=this._pendingStyles,t=Object.keys(e);0!=t.length&&(this._pendingStyles={},t.forEach(t=>{this._currentKeyframe[t]=e[t]}),Object.keys(this._localTimelineStyles).forEach(e=>{this._currentKeyframe.hasOwnProperty(e)||(this._currentKeyframe[e]=this._localTimelineStyles[e])}))}snapshotCurrentStyles(){Object.keys(this._localTimelineStyles).forEach(e=>{const t=this._localTimelineStyles[e];this._pendingStyles[e]=t,this._updateStyle(e,t)})}getFinalKeyframe(){return this._keyframes.get(this.duration)}get properties(){const e=[];for(let t in this._currentKeyframe)e.push(t);return e}mergeTimelineCollectedStyles(e){Object.keys(e._styleSummary).forEach(t=>{const n=this._styleSummary[t],o=e._styleSummary[t];(!n||o.time>n.time)&&this._updateStyle(t,o.value)})}buildKeyframes(){this.applyStylesToKeyframe();const e=new Set,t=new Set,n=1===this._keyframes.size&&0===this.duration;let o=[];this._keyframes.forEach((i,r)=>{const a=ay(i,!0);Object.keys(a).forEach(n=>{const o=a[n];"!"==o?e.add(n):o==yb&&t.add(n)}),n||(a.offset=r/this.duration),o.push(a)});const i=e.size?gy(e.values()):[],r=t.size?gy(t.values()):[];if(n){const e=o[0],t=ry(e);e.offset=0,t.offset=1,o=[e,t]}return qy(this.element,o,i,r,this.duration,this.startTime,this.easing,!1)}}class Wy extends By{constructor(e,t,n,o,i,r,a=!1){super(e,t,r.delay),this.element=t,this.keyframes=n,this.preStyleProps=o,this.postStyleProps=i,this._stretchStartingKeyframe=a,this.timings={duration:r.duration,delay:r.delay,easing:r.easing}}containsAnimation(){return this.keyframes.length>1}buildKeyframes(){let e=this.keyframes,{delay:t,duration:n,easing:o}=this.timings;if(this._stretchStartingKeyframe&&t){const i=[],r=n+t,a=t/r,s=ay(e[0],!1);s.offset=0,i.push(s);const l=ay(e[0],!1);l.offset=$y(a),i.push(l);const c=e.length-1;for(let o=1;o<=c;o++){let a=ay(e[o],!1);a.offset=$y((t+a.offset*n)/r),i.push(a)}n=r,t=0,o="",e=i}return qy(this.element,e,this.preStyleProps,this.postStyleProps,n,t,o,!0)}}function $y(e,t=3){const n=Math.pow(10,t-1);return Math.round(e*n)/n}class Vy{}class Hy extends Vy{normalizePropertyName(e,t){return by(e)}normalizeStyleValue(e,t,n,o){let i="";const r=n.toString().trim();if(Gy[t]&&0!==n&&"0"!==n)if("number"==typeof n)i="px";else{const t=n.match(/^[+-]?[\d\.]+([a-z]*)$/);t&&0==t[1].length&&o.push(`Please provide a CSS unit value for ${e}:${n}`)}return r+i}}const Gy=(()=>function(e){const t={};return e.forEach(e=>t[e]=!0),t}("width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective".split(",")))();function Jy(e,t,n,o,i,r,a,s,l,c,d,p,u){return{type:0,element:e,triggerName:t,isRemovalTransition:i,fromState:n,fromStyles:r,toState:o,toStyles:a,timelines:s,queriedElements:l,preStyleProps:c,postStyleProps:d,totalTime:p,errors:u}}const Ky={};class Yy{constructor(e,t,n){this._triggerName=e,this.ast=t,this._stateStyles=n}match(e,t,n,o){return function(e,t,n,o,i){return e.some(e=>e(t,n,o,i))}(this.ast.matchers,e,t,n,o)}buildStyles(e,t,n){const o=this._stateStyles["*"],i=this._stateStyles[e],r=o?o.buildStyles(t,n):{};return i?i.buildStyles(t,n):r}build(e,t,n,o,i,r,a,s,l,c){const d=[],p=this.ast.options&&this.ast.options.params||Ky,u=this.buildStyles(n,a&&a.params||Ky,d),h=s&&s.params||Ky,m=this.buildStyles(o,h,d),g=new Set,f=new Map,b=new Map,y="void"===o,v={params:Object.assign(Object.assign({},p),h)},w=c?[]:Ly(e,t,this.ast.animation,i,r,u,m,v,l,d);let k=0;if(w.forEach(e=>{k=Math.max(e.duration+e.delay,k)}),d.length)return Jy(t,this._triggerName,n,o,y,u,m,[],[],f,b,k,d);w.forEach(e=>{const n=e.element,o=Mb(f,n,{});e.preStyleProps.forEach(e=>o[e]=!0);const i=Mb(b,n,{});e.postStyleProps.forEach(e=>i[e]=!0),n!==t&&g.add(n)});const S=gy(g.values());return Jy(t,this._triggerName,n,o,y,u,m,w,S,f,b,k)}}class Qy{constructor(e,t){this.styles=e,this.defaultParams=t}buildStyles(e,t){const n={},o=ry(this.defaultParams);return Object.keys(e).forEach(t=>{const n=e[t];null!=n&&(o[t]=n)}),this.styles.styles.forEach(e=>{if("string"!=typeof e){const i=e;Object.keys(i).forEach(e=>{let r=i[e];r.length>1&&(r=my(r,o,t)),n[e]=r})}}),n}}class Zy{constructor(e,t){this.name=e,this.ast=t,this.transitionFactories=[],this.states={},t.states.forEach(e=>{this.states[e.name]=new Qy(e.style,e.options&&e.options.params||{})}),Xy(this.states,"true","1"),Xy(this.states,"false","0"),t.transitions.forEach(t=>{this.transitionFactories.push(new Yy(e,t,this.states))}),this.fallbackTransition=new Yy(e,{type:1,animation:{type:2,steps:[],options:null},matchers:[(e,t)=>!0],options:null,queryCount:0,depCount:0},this.states)}get containsQueries(){return this.ast.queryCount>0}matchTransition(e,t,n,o){return this.transitionFactories.find(i=>i.match(e,t,n,o))||null}matchStyles(e,t,n){return this.fallbackTransition.buildStyles(e,t,n)}}function Xy(e,t,n){e.hasOwnProperty(t)?e.hasOwnProperty(n)||(e[n]=e[t]):e.hasOwnProperty(n)&&(e[t]=e[n])}const ev=new My;class tv{constructor(e,t,n){this.bodyNode=e,this._driver=t,this._normalizer=n,this._animations={},this._playersById={},this.players=[]}register(e,t){const n=[],o=Iy(this._driver,t,n);if(n.length)throw new Error(`Unable to build the animation due to the following errors: ${n.join("\n")}`);this._animations[e]=o}_buildPlayer(e,t,n){const o=e.element,i=Ob(0,this._normalizer,0,e.keyframes,t,n);return this._driver.animate(o,i,e.duration,e.delay,e.easing,[],!0)}create(e,t,n={}){const o=[],i=this._animations[e];let r;const a=new Map;if(i?(r=Ly(this._driver,t,i,Yb,Qb,{},{},n,ev,o),r.forEach(e=>{const t=Mb(a,e.element,{});e.postStyleProps.forEach(e=>t[e]=null)})):(o.push("The requested animation doesn't exist or has already been destroyed"),r=[]),o.length)throw new Error(`Unable to create the animation due to the following errors: ${o.join("\n")}`);a.forEach((e,t)=>{Object.keys(e).forEach(n=>{e[n]=this._driver.computeStyle(t,n,yb)})});const s=Db(r.map(e=>{const t=a.get(e.element);return this._buildPlayer(e,{},t)}));return this._playersById[e]=s,s.onDestroy(()=>this.destroy(e)),this.players.push(s),s}destroy(e){const t=this._getPlayer(e);t.destroy(),delete this._playersById[e];const n=this.players.indexOf(t);n>=0&&this.players.splice(n,1)}_getPlayer(e){const t=this._playersById[e];if(!t)throw new Error(`Unable to find the timeline player referenced by ${e}`);return t}listen(e,t,n,o){const i=qb(t,"","","");return jb(this._getPlayer(e),n,i,o),()=>{}}command(e,t,n,o){if("register"==n)return void this.register(e,o[0]);if("create"==n)return void this.create(e,t,o[0]||{});const i=this._getPlayer(e);switch(n){case"play":i.play();break;case"pause":i.pause();break;case"reset":i.reset();break;case"restart":i.restart();break;case"finish":i.finish();break;case"init":i.init();break;case"setPosition":i.setPosition(parseFloat(o[0]));break;case"destroy":this.destroy(e)}}}const nv="ng-animate-queued",ov="ng-animate-disabled",iv=".ng-animate-disabled",rv=[],av={namespaceId:"",setForRemoval:!1,setForMove:!1,hasAnimation:!1,removedBeforeQueried:!1},sv={namespaceId:"",setForMove:!1,setForRemoval:!1,hasAnimation:!1,removedBeforeQueried:!0};class lv{constructor(e,t=""){this.namespaceId=t;const n=e&&e.hasOwnProperty("value");if(this.value=null!=(o=n?e.value:e)?o:null,n){const t=ry(e);delete t.value,this.options=t}else this.options={};var o;this.options.params||(this.options.params={})}get params(){return this.options.params}absorbOptions(e){const t=e.params;if(t){const e=this.options.params;Object.keys(t).forEach(n=>{null==e[n]&&(e[n]=t[n])})}}}const cv="void",dv=new lv(cv);class pv{constructor(e,t,n){this.id=e,this.hostElement=t,this._engine=n,this.players=[],this._triggers={},this._queue=[],this._elementListeners=new Map,this._hostClassName="ng-tns-"+e,yv(t,this._hostClassName)}listen(e,t,n,o){if(!this._triggers.hasOwnProperty(t))throw new Error(`Unable to listen on the animation trigger event "${n}" because the animation trigger "${t}" doesn't exist!`);if(null==n||0==n.length)throw new Error(`Unable to listen on the animation trigger "${t}" because the provided event is undefined!`);if("start"!=(i=n)&&"done"!=i)throw new Error(`The provided animation trigger event "${n}" for the animation trigger "${t}" is not supported!`);var i;const r=Mb(this._elementListeners,e,[]),a={name:t,phase:n,callback:o};r.push(a);const s=Mb(this._engine.statesByElement,e,{});return s.hasOwnProperty(t)||(yv(e,Zb),yv(e,"ng-trigger-"+t),s[t]=dv),()=>{this._engine.afterFlush(()=>{const e=r.indexOf(a);e>=0&&r.splice(e,1),this._triggers[t]||delete s[t]})}}register(e,t){return!this._triggers[e]&&(this._triggers[e]=t,!0)}_getTrigger(e){const t=this._triggers[e];if(!t)throw new Error(`The provided animation trigger "${e}" has not been registered!`);return t}trigger(e,t,n,o=!0){const i=this._getTrigger(t),r=new hv(this.id,t,e);let a=this._engine.statesByElement.get(e);a||(yv(e,Zb),yv(e,"ng-trigger-"+t),this._engine.statesByElement.set(e,a={}));let s=a[t];const l=new lv(n,this.id);if(!(n&&n.hasOwnProperty("value"))&&s&&l.absorbOptions(s.options),a[t]=l,s||(s=dv),l.value!==cv&&s.value===l.value){if(!function(e,t){const n=Object.keys(e),o=Object.keys(t);if(n.length!=o.length)return!1;for(let i=0;i<n.length;i++){const o=n[i];if(!t.hasOwnProperty(o)||e[o]!==t[o])return!1}return!0}(s.params,l.params)){const t=[],n=i.matchStyles(s.value,s.params,t),o=i.matchStyles(l.value,l.params,t);t.length?this._engine.reportError(t):this._engine.afterFlush(()=>{dy(e,n),cy(e,o)})}return}const c=Mb(this._engine.playersByElement,e,[]);c.forEach(e=>{e.namespaceId==this.id&&e.triggerName==t&&e.queued&&e.destroy()});let d=i.matchTransition(s.value,l.value,e,l.params),p=!1;if(!d){if(!o)return;d=i.fallbackTransition,p=!0}return this._engine.totalQueuedPlayers++,this._queue.push({element:e,triggerName:t,transition:d,fromState:s,toState:l,player:r,isFallbackTransition:p}),p||(yv(e,nv),r.onStart(()=>{vv(e,nv)})),r.onDone(()=>{let t=this.players.indexOf(r);t>=0&&this.players.splice(t,1);const n=this._engine.playersByElement.get(e);if(n){let e=n.indexOf(r);e>=0&&n.splice(e,1)}}),this.players.push(r),c.push(r),r}deregister(e){delete this._triggers[e],this._engine.statesByElement.forEach((t,n)=>{delete t[e]}),this._elementListeners.forEach((t,n)=>{this._elementListeners.set(n,t.filter(t=>t.name!=e))})}clearElementCache(e){this._engine.statesByElement.delete(e),this._elementListeners.delete(e);const t=this._engine.playersByElement.get(e);t&&(t.forEach(e=>e.destroy()),this._engine.playersByElement.delete(e))}_signalRemovalForInnerTriggers(e,t){const n=this._engine.driver.query(e,Xb,!0);n.forEach(e=>{if(e.__ng_removed)return;const n=this._engine.fetchNamespacesByElement(e);n.size?n.forEach(n=>n.triggerLeaveAnimation(e,t,!1,!0)):this.clearElementCache(e)}),this._engine.afterFlushAnimationsDone(()=>n.forEach(e=>this.clearElementCache(e)))}triggerLeaveAnimation(e,t,n,o){const i=this._engine.statesByElement.get(e);if(i){const r=[];if(Object.keys(i).forEach(t=>{if(this._triggers[t]){const n=this.trigger(e,t,cv,o);n&&r.push(n)}}),r.length)return this._engine.markElementAsRemoved(this.id,e,!0,t),n&&Db(r).onDone(()=>this._engine.processLeaveNode(e)),!0}return!1}prepareLeaveAnimationListeners(e){const t=this._elementListeners.get(e),n=this._engine.statesByElement.get(e);if(t&&n){const o=new Set;t.forEach(t=>{const i=t.name;if(o.has(i))return;o.add(i);const r=this._triggers[i].fallbackTransition,a=n[i]||dv,s=new lv(cv),l=new hv(this.id,i,e);this._engine.totalQueuedPlayers++,this._queue.push({element:e,triggerName:i,transition:r,fromState:a,toState:s,player:l,isFallbackTransition:!0})})}}removeNode(e,t){const n=this._engine;if(e.childElementCount&&this._signalRemovalForInnerTriggers(e,t),this.triggerLeaveAnimation(e,t,!0))return;let o=!1;if(n.totalAnimations){const t=n.players.length?n.playersByQueriedElement.get(e):[];if(t&&t.length)o=!0;else{let t=e;for(;t=t.parentNode;)if(n.statesByElement.get(t)){o=!0;break}}}if(this.prepareLeaveAnimationListeners(e),o)n.markElementAsRemoved(this.id,e,!1,t);else{const o=e.__ng_removed;o&&o!==av||(n.afterFlush(()=>this.clearElementCache(e)),n.destroyInnerAnimations(e),n._onRemovalComplete(e,t))}}insertNode(e,t){yv(e,this._hostClassName)}drainQueuedTransitions(e){const t=[];return this._queue.forEach(n=>{const o=n.player;if(o.destroyed)return;const i=n.element,r=this._elementListeners.get(i);r&&r.forEach(t=>{if(t.name==n.triggerName){const o=qb(i,n.triggerName,n.fromState.value,n.toState.value);o._data=e,jb(n.player,t.phase,o,t.callback)}}),o.markedForDestroy?this._engine.afterFlush(()=>{o.destroy()}):t.push(n)}),this._queue=[],t.sort((e,t)=>{const n=e.transition.ast.depCount,o=t.transition.ast.depCount;return 0==n||0==o?n-o:this._engine.driver.containsElement(e.element,t.element)?1:-1})}destroy(e){this.players.forEach(e=>e.destroy()),this._signalRemovalForInnerTriggers(this.hostElement,e)}elementContainsData(e){let t=!1;return this._elementListeners.has(e)&&(t=!0),t=!!this._queue.find(t=>t.element===e)||t,t}}class uv{constructor(e,t,n){this.bodyNode=e,this.driver=t,this._normalizer=n,this.players=[],this.newHostElements=new Map,this.playersByElement=new Map,this.playersByQueriedElement=new Map,this.statesByElement=new Map,this.disabledNodes=new Set,this.totalAnimations=0,this.totalQueuedPlayers=0,this._namespaceLookup={},this._namespaceList=[],this._flushFns=[],this._whenQuietFns=[],this.namespacesByHostElement=new Map,this.collectedEnterElements=[],this.collectedLeaveElements=[],this.onRemovalComplete=(e,t)=>{}}_onRemovalComplete(e,t){this.onRemovalComplete(e,t)}get queuedPlayers(){const e=[];return this._namespaceList.forEach(t=>{t.players.forEach(t=>{t.queued&&e.push(t)})}),e}createNamespace(e,t){const n=new pv(e,t,this);return this.bodyNode&&this.driver.containsElement(this.bodyNode,t)?this._balanceNamespaceList(n,t):(this.newHostElements.set(t,n),this.collectEnterElement(t)),this._namespaceLookup[e]=n}_balanceNamespaceList(e,t){const n=this._namespaceList.length-1;if(n>=0){let o=!1;for(let i=n;i>=0;i--)if(this.driver.containsElement(this._namespaceList[i].hostElement,t)){this._namespaceList.splice(i+1,0,e),o=!0;break}o||this._namespaceList.splice(0,0,e)}else this._namespaceList.push(e);return this.namespacesByHostElement.set(t,e),e}register(e,t){let n=this._namespaceLookup[e];return n||(n=this.createNamespace(e,t)),n}registerTrigger(e,t,n){let o=this._namespaceLookup[e];o&&o.register(t,n)&&this.totalAnimations++}destroy(e,t){if(!e)return;const n=this._fetchNamespace(e);this.afterFlush(()=>{this.namespacesByHostElement.delete(n.hostElement),delete this._namespaceLookup[e];const t=this._namespaceList.indexOf(n);t>=0&&this._namespaceList.splice(t,1)}),this.afterFlushAnimationsDone(()=>n.destroy(t))}_fetchNamespace(e){return this._namespaceLookup[e]}fetchNamespacesByElement(e){const t=new Set,n=this.statesByElement.get(e);if(n){const e=Object.keys(n);for(let o=0;o<e.length;o++){const i=n[e[o]].namespaceId;if(i){const e=this._fetchNamespace(i);e&&t.add(e)}}}return t}trigger(e,t,n,o){if(mv(t)){const i=this._fetchNamespace(e);if(i)return i.trigger(t,n,o),!0}return!1}insertNode(e,t,n,o){if(!mv(t))return;const i=t.__ng_removed;if(i&&i.setForRemoval){i.setForRemoval=!1,i.setForMove=!0;const e=this.collectedLeaveElements.indexOf(t);e>=0&&this.collectedLeaveElements.splice(e,1)}if(e){const o=this._fetchNamespace(e);o&&o.insertNode(t,n)}o&&this.collectEnterElement(t)}collectEnterElement(e){this.collectedEnterElements.push(e)}markElementAsDisabled(e,t){t?this.disabledNodes.has(e)||(this.disabledNodes.add(e),yv(e,ov)):this.disabledNodes.has(e)&&(this.disabledNodes.delete(e),vv(e,ov))}removeNode(e,t,n,o){if(mv(t)){const i=e?this._fetchNamespace(e):null;if(i?i.removeNode(t,o):this.markElementAsRemoved(e,t,!1,o),n){const n=this.namespacesByHostElement.get(t);n&&n.id!==e&&n.removeNode(t,o)}}else this._onRemovalComplete(t,o)}markElementAsRemoved(e,t,n,o){this.collectedLeaveElements.push(t),t.__ng_removed={namespaceId:e,setForRemoval:o,hasAnimation:n,removedBeforeQueried:!1}}listen(e,t,n,o,i){return mv(t)?this._fetchNamespace(e).listen(t,n,o,i):()=>{}}_buildInstruction(e,t,n,o,i){return e.transition.build(this.driver,e.element,e.fromState.value,e.toState.value,n,o,e.fromState.options,e.toState.options,t,i)}destroyInnerAnimations(e){let t=this.driver.query(e,Xb,!0);t.forEach(e=>this.destroyActiveAnimationsForElement(e)),0!=this.playersByQueriedElement.size&&(t=this.driver.query(e,ty,!0),t.forEach(e=>this.finishActiveQueriedAnimationOnElement(e)))}destroyActiveAnimationsForElement(e){const t=this.playersByElement.get(e);t&&t.forEach(e=>{e.queued?e.markedForDestroy=!0:e.destroy()})}finishActiveQueriedAnimationOnElement(e){const t=this.playersByQueriedElement.get(e);t&&t.forEach(e=>e.finish())}whenRenderingDone(){return new Promise(e=>{if(this.players.length)return Db(this.players).onDone(()=>e());e()})}processLeaveNode(e){const t=e.__ng_removed;if(t&&t.setForRemoval){if(e.__ng_removed=av,t.namespaceId){this.destroyInnerAnimations(e);const n=this._fetchNamespace(t.namespaceId);n&&n.clearElementCache(e)}this._onRemovalComplete(e,t.setForRemoval)}this.driver.matchesElement(e,iv)&&this.markElementAsDisabled(e,!1),this.driver.query(e,iv,!0).forEach(e=>{this.markElementAsDisabled(e,!1)})}flush(e=-1){let t=[];if(this.newHostElements.size&&(this.newHostElements.forEach((e,t)=>this._balanceNamespaceList(e,t)),this.newHostElements.clear()),this.totalAnimations&&this.collectedEnterElements.length)for(let n=0;n<this.collectedEnterElements.length;n++)yv(this.collectedEnterElements[n],"ng-star-inserted");if(this._namespaceList.length&&(this.totalQueuedPlayers||this.collectedLeaveElements.length)){const n=[];try{t=this._flushAnimations(n,e)}finally{for(let e=0;e<n.length;e++)n[e]()}}else for(let n=0;n<this.collectedLeaveElements.length;n++)this.processLeaveNode(this.collectedLeaveElements[n]);if(this.totalQueuedPlayers=0,this.collectedEnterElements.length=0,this.collectedLeaveElements.length=0,this._flushFns.forEach(e=>e()),this._flushFns=[],this._whenQuietFns.length){const e=this._whenQuietFns;this._whenQuietFns=[],t.length?Db(t).onDone(()=>{e.forEach(e=>e())}):e.forEach(e=>e())}}reportError(e){throw new Error(`Unable to process animations due to the following failed trigger transitions\n ${e.join("\n")}`)}_flushAnimations(e,t){const n=new My,o=[],i=new Map,r=[],a=new Map,s=new Map,l=new Map,c=new Set;this.disabledNodes.forEach(e=>{c.add(e);const t=this.driver.query(e,".ng-animate-queued",!0);for(let n=0;n<t.length;n++)c.add(t[n])});const d=this.bodyNode,p=Array.from(this.statesByElement.keys()),u=bv(p,this.collectedEnterElements),h=new Map;let m=0;u.forEach((e,t)=>{const n=Yb+m++;h.set(t,n),e.forEach(e=>yv(e,n))});const g=[],f=new Set,b=new Set;for(let D=0;D<this.collectedLeaveElements.length;D++){const e=this.collectedLeaveElements[D],t=e.__ng_removed;t&&t.setForRemoval&&(g.push(e),f.add(e),t.hasAnimation?this.driver.query(e,".ng-star-inserted",!0).forEach(e=>f.add(e)):b.add(e))}const y=new Map,v=bv(p,Array.from(f));v.forEach((e,t)=>{const n=Qb+m++;y.set(t,n),e.forEach(e=>yv(e,n))}),e.push(()=>{u.forEach((e,t)=>{const n=h.get(t);e.forEach(e=>vv(e,n))}),v.forEach((e,t)=>{const n=y.get(t);e.forEach(e=>vv(e,n))}),g.forEach(e=>{this.processLeaveNode(e)})});const w=[],k=[];for(let D=this._namespaceList.length-1;D>=0;D--)this._namespaceList[D].drainQueuedTransitions(t).forEach(e=>{const t=e.player,i=e.element;if(w.push(t),this.collectedEnterElements.length){const e=i.__ng_removed;if(e&&e.setForMove)return void t.destroy()}const c=!d||!this.driver.containsElement(d,i),p=y.get(i),u=h.get(i),m=this._buildInstruction(e,n,u,p,c);if(m.errors&&m.errors.length)k.push(m);else{if(c)return t.onStart(()=>dy(i,m.fromStyles)),t.onDestroy(()=>cy(i,m.toStyles)),void o.push(t);if(e.isFallbackTransition)return t.onStart(()=>dy(i,m.fromStyles)),t.onDestroy(()=>cy(i,m.toStyles)),void o.push(t);m.timelines.forEach(e=>e.stretchStartingKeyframe=!0),n.append(i,m.timelines),r.push({instruction:m,player:t,element:i}),m.queriedElements.forEach(e=>Mb(a,e,[]).push(t)),m.preStyleProps.forEach((e,t)=>{const n=Object.keys(e);if(n.length){let e=s.get(t);e||s.set(t,e=new Set),n.forEach(t=>e.add(t))}}),m.postStyleProps.forEach((e,t)=>{const n=Object.keys(e);let o=l.get(t);o||l.set(t,o=new Set),n.forEach(e=>o.add(e))})}});if(k.length){const e=[];k.forEach(t=>{e.push(`@${t.triggerName} has failed due to:\n`),t.errors.forEach(t=>e.push(`- ${t}\n`))}),w.forEach(e=>e.destroy()),this.reportError(e)}const S=new Map,_=new Map;r.forEach(e=>{const t=e.element;n.has(t)&&(_.set(t,t),this._beforeAnimationBuild(e.player.namespaceId,e.instruction,S))}),o.forEach(e=>{const t=e.element;this._getPreviousPlayers(t,!1,e.namespaceId,e.triggerName,null).forEach(e=>{Mb(S,t,[]).push(e),e.destroy()})});const T=g.filter(e=>Sv(e,s,l)),A=new Map;fv(A,this.driver,b,l,yb).forEach(e=>{Sv(e,s,l)&&T.push(e)});const C=new Map;u.forEach((e,t)=>{fv(C,this.driver,new Set(e),s,"!")}),T.forEach(e=>{const t=A.get(e),n=C.get(e);A.set(e,Object.assign(Object.assign({},t),n))});const x=[],I=[],E={};r.forEach(e=>{const{element:t,player:r,instruction:a}=e;if(n.has(t)){if(c.has(t))return r.onDestroy(()=>cy(t,a.toStyles)),r.disabled=!0,r.overrideTotalTime(a.totalTime),void o.push(r);let e=E;if(_.size>1){let n=t;const o=[];for(;n=n.parentNode;){const t=_.get(n);if(t){e=t;break}o.push(n)}o.forEach(t=>_.set(t,e))}const n=this._buildAnimation(r.namespaceId,a,S,i,C,A);if(r.setRealPlayer(n),e===E)x.push(r);else{const t=this.playersByElement.get(e);t&&t.length&&(r.parentPlayer=Db(t)),o.push(r)}}else dy(t,a.fromStyles),r.onDestroy(()=>cy(t,a.toStyles)),I.push(r),c.has(t)&&o.push(r)}),I.forEach(e=>{const t=i.get(e.element);if(t&&t.length){const n=Db(t);e.setRealPlayer(n)}}),o.forEach(e=>{e.parentPlayer?e.syncPlayerEvents(e.parentPlayer):e.destroy()});for(let D=0;D<g.length;D++){const e=g[D],t=e.__ng_removed;if(vv(e,Qb),t&&t.hasAnimation)continue;let n=[];if(a.size){let t=a.get(e);t&&t.length&&n.push(...t);let o=this.driver.query(e,ty,!0);for(let e=0;e<o.length;e++){let t=a.get(o[e]);t&&t.length&&n.push(...t)}}const o=n.filter(e=>!e.destroyed);o.length?wv(this,e,o):this.processLeaveNode(e)}return g.length=0,x.forEach(e=>{this.players.push(e),e.onDone(()=>{e.destroy();const t=this.players.indexOf(e);this.players.splice(t,1)}),e.play()}),x}elementContainsData(e,t){let n=!1;const o=t.__ng_removed;return o&&o.setForRemoval&&(n=!0),this.playersByElement.has(t)&&(n=!0),this.playersByQueriedElement.has(t)&&(n=!0),this.statesByElement.has(t)&&(n=!0),this._fetchNamespace(e).elementContainsData(t)||n}afterFlush(e){this._flushFns.push(e)}afterFlushAnimationsDone(e){this._whenQuietFns.push(e)}_getPreviousPlayers(e,t,n,o,i){let r=[];if(t){const t=this.playersByQueriedElement.get(e);t&&(r=t)}else{const t=this.playersByElement.get(e);if(t){const e=!i||i==cv;t.forEach(t=>{t.queued||(e||t.triggerName==o)&&r.push(t)})}}return(n||o)&&(r=r.filter(e=>!(n&&n!=e.namespaceId||o&&o!=e.triggerName))),r}_beforeAnimationBuild(e,t,n){const o=t.element,i=t.isRemovalTransition?void 0:e,r=t.isRemovalTransition?void 0:t.triggerName;for(const a of t.timelines){const e=a.element,s=e!==o,l=Mb(n,e,[]);this._getPreviousPlayers(e,s,i,r,t.toState).forEach(e=>{const t=e.getRealPlayer();t.beforeDestroy&&t.beforeDestroy(),e.destroy(),l.push(e)})}dy(o,t.fromStyles)}_buildAnimation(e,t,n,o,i,r){const a=t.triggerName,s=t.element,l=[],c=new Set,d=new Set,p=t.timelines.map(t=>{const p=t.element;c.add(p);const u=p.__ng_removed;if(u&&u.removedBeforeQueried)return new Cb(t.duration,t.delay);const h=p!==s,m=function(e){const t=[];return kv(e,t),t}((n.get(p)||rv).map(e=>e.getRealPlayer())).filter(e=>!!e.element&&e.element===p),g=i.get(p),f=r.get(p),b=Ob(0,this._normalizer,0,t.keyframes,g,f),y=this._buildPlayer(t,b,m);if(t.subTimeline&&o&&d.add(p),h){const t=new hv(e,a,p);t.setRealPlayer(y),l.push(t)}return y});l.forEach(e=>{Mb(this.playersByQueriedElement,e.element,[]).push(e),e.onDone(()=>function(e,t,n){let o;if(e instanceof Map){if(o=e.get(t),o){if(o.length){const e=o.indexOf(n);o.splice(e,1)}0==o.length&&e.delete(t)}}else if(o=e[t],o){if(o.length){const e=o.indexOf(n);o.splice(e,1)}0==o.length&&delete e[t]}return o}(this.playersByQueriedElement,e.element,e))}),c.forEach(e=>yv(e,ey));const u=Db(p);return u.onDestroy(()=>{c.forEach(e=>vv(e,ey)),cy(s,t.toStyles)}),d.forEach(e=>{Mb(o,e,[]).push(u)}),u}_buildPlayer(e,t,n){return t.length>0?this.driver.animate(e.element,t,e.duration,e.delay,e.easing,n):new Cb(e.duration,e.delay)}}class hv{constructor(e,t,n){this.namespaceId=e,this.triggerName=t,this.element=n,this._player=new Cb,this._containsRealPlayer=!1,this._queuedCallbacks={},this.destroyed=!1,this.markedForDestroy=!1,this.disabled=!1,this.queued=!0,this.totalTime=0}setRealPlayer(e){this._containsRealPlayer||(this._player=e,Object.keys(this._queuedCallbacks).forEach(t=>{this._queuedCallbacks[t].forEach(n=>jb(e,t,void 0,n))}),this._queuedCallbacks={},this._containsRealPlayer=!0,this.overrideTotalTime(e.totalTime),this.queued=!1)}getRealPlayer(){return this._player}overrideTotalTime(e){this.totalTime=e}syncPlayerEvents(e){const t=this._player;t.triggerCallback&&e.onStart(()=>t.triggerCallback("start")),e.onDone(()=>this.finish()),e.onDestroy(()=>this.destroy())}_queueEvent(e,t){Mb(this._queuedCallbacks,e,[]).push(t)}onDone(e){this.queued&&this._queueEvent("done",e),this._player.onDone(e)}onStart(e){this.queued&&this._queueEvent("start",e),this._player.onStart(e)}onDestroy(e){this.queued&&this._queueEvent("destroy",e),this._player.onDestroy(e)}init(){this._player.init()}hasStarted(){return!this.queued&&this._player.hasStarted()}play(){!this.queued&&this._player.play()}pause(){!this.queued&&this._player.pause()}restart(){!this.queued&&this._player.restart()}finish(){this._player.finish()}destroy(){this.destroyed=!0,this._player.destroy()}reset(){!this.queued&&this._player.reset()}setPosition(e){this.queued||this._player.setPosition(e)}getPosition(){return this.queued?0:this._player.getPosition()}triggerCallback(e){const t=this._player;t.triggerCallback&&t.triggerCallback(e)}}function mv(e){return e&&1===e.nodeType}function gv(e,t){const n=e.style.display;return e.style.display=null!=t?t:"none",n}function fv(e,t,n,o,i){const r=[];n.forEach(e=>r.push(gv(e)));const a=[];o.forEach((n,o)=>{const r={};n.forEach(e=>{const n=r[e]=t.computeStyle(o,e,i);n&&0!=n.length||(o.__ng_removed=sv,a.push(o))}),e.set(o,r)});let s=0;return n.forEach(e=>gv(e,r[s++])),a}function bv(e,t){const n=new Map;if(e.forEach(e=>n.set(e,[])),0==t.length)return n;const o=new Set(t),i=new Map;function r(e){if(!e)return 1;let t=i.get(e);if(t)return t;const a=e.parentNode;return t=n.has(a)?a:o.has(a)?1:r(a),i.set(e,t),t}return t.forEach(e=>{const t=r(e);1!==t&&n.get(t).push(e)}),n}function yv(e,t){if(e.classList)e.classList.add(t);else{let n=e.$$classes;n||(n=e.$$classes={}),n[t]=!0}}function vv(e,t){if(e.classList)e.classList.remove(t);else{let n=e.$$classes;n&&delete n[t]}}function wv(e,t,n){Db(n).onDone(()=>e.processLeaveNode(t))}function kv(e,t){for(let n=0;n<e.length;n++){const o=e[n];o instanceof xb?kv(o.players,t):t.push(o)}}function Sv(e,t,n){const o=n.get(e);if(!o)return!1;let i=t.get(e);return i?o.forEach(e=>i.add(e)):t.set(e,o),n.delete(e),!0}class _v{constructor(e,t,n){this.bodyNode=e,this._driver=t,this._triggerCache={},this.onRemovalComplete=(e,t)=>{},this._transitionEngine=new uv(e,t,n),this._timelineEngine=new tv(e,t,n),this._transitionEngine.onRemovalComplete=(e,t)=>this.onRemovalComplete(e,t)}registerTrigger(e,t,n,o,i){const r=e+"-"+o;let a=this._triggerCache[r];if(!a){const e=[],t=Iy(this._driver,i,e);if(e.length)throw new Error(`The animation trigger "${o}" has failed to build due to the following errors:\n - ${e.join("\n - ")}`);a=function(e,t){return new Zy(e,t)}(o,t),this._triggerCache[r]=a}this._transitionEngine.registerTrigger(t,o,a)}register(e,t){this._transitionEngine.register(e,t)}destroy(e,t){this._transitionEngine.destroy(e,t)}onInsert(e,t,n,o){this._transitionEngine.insertNode(e,t,n,o)}onRemove(e,t,n,o){this._transitionEngine.removeNode(e,t,o||!1,n)}disableAnimations(e,t){this._transitionEngine.markElementAsDisabled(e,t)}process(e,t,n,o){if("@"==n.charAt(0)){const[e,i]=Fb(n);this._timelineEngine.command(e,t,i,o)}else this._transitionEngine.trigger(e,t,n,o)}listen(e,t,n,o,i){if("@"==n.charAt(0)){const[e,o]=Fb(n);return this._timelineEngine.listen(e,t,o,i)}return this._transitionEngine.listen(e,t,n,o,i)}flush(e=-1){this._transitionEngine.flush(e)}get players(){return this._transitionEngine.players.concat(this._timelineEngine.players)}whenRenderingDone(){return this._transitionEngine.whenRenderingDone()}}function Tv(e,t){let n=null,o=null;return Array.isArray(t)&&t.length?(n=Cv(t[0]),t.length>1&&(o=Cv(t[t.length-1]))):t&&(n=Cv(t)),n||o?new Av(e,n,o):null}let Av=(()=>{class e{constructor(t,n,o){this._element=t,this._startStyles=n,this._endStyles=o,this._state=0;let i=e.initialStylesByElement.get(t);i||e.initialStylesByElement.set(t,i={}),this._initialStyles=i}start(){this._state<1&&(this._startStyles&&cy(this._element,this._startStyles,this._initialStyles),this._state=1)}finish(){this.start(),this._state<2&&(cy(this._element,this._initialStyles),this._endStyles&&(cy(this._element,this._endStyles),this._endStyles=null),this._state=1)}destroy(){this.finish(),this._state<3&&(e.initialStylesByElement.delete(this._element),this._startStyles&&(dy(this._element,this._startStyles),this._endStyles=null),this._endStyles&&(dy(this._element,this._endStyles),this._endStyles=null),cy(this._element,this._initialStyles),this._state=3)}}return e.initialStylesByElement=new WeakMap,e})();function Cv(e){let t=null;const n=Object.keys(e);for(let o=0;o<n.length;o++){const i=n[o];xv(i)&&(t=t||{},t[i]=e[i])}return t}function xv(e){return"display"===e||"position"===e}const Iv="animation",Ev="animationend";class Dv{constructor(e,t,n,o,i,r,a){this._element=e,this._name=t,this._duration=n,this._delay=o,this._easing=i,this._fillMode=r,this._onDoneFn=a,this._finished=!1,this._destroyed=!1,this._startTime=0,this._position=0,this._eventFn=e=>this._handleCallback(e)}apply(){!function(e,t){const n=Fv(e,"").trim();n.length&&(function(e,t){let n=0;for(let o=0;o<e.length;o++)","===e.charAt(o)&&n++}(n),t=`${n}, ${t}`),Mv(e,"",t)}(this._element,`${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`),qv(this._element,this._eventFn,!1),this._startTime=Date.now()}pause(){Ov(this._element,this._name,"paused")}resume(){Ov(this._element,this._name,"running")}setPosition(e){const t=jv(this._element,this._name);this._position=e*this._duration,Mv(this._element,"Delay",`-${this._position}ms`,t)}getPosition(){return this._position}_handleCallback(e){const t=e._ngTestManualTimestamp||Date.now(),n=1e3*parseFloat(e.elapsedTime.toFixed(3));e.animationName==this._name&&Math.max(t-this._startTime,0)>=this._delay&&n>=this._duration&&this.finish()}finish(){this._finished||(this._finished=!0,this._onDoneFn(),qv(this._element,this._eventFn,!0))}destroy(){this._destroyed||(this._destroyed=!0,this.finish(),function(e,t){const n=Fv(e,"").split(","),o=Rv(n,t);o>=0&&(n.splice(o,1),Mv(e,"",n.join(",")))}(this._element,this._name))}}function Ov(e,t,n){Mv(e,"PlayState",n,jv(e,t))}function jv(e,t){const n=Fv(e,"");return n.indexOf(",")>0?Rv(n.split(","),t):Rv([n],t)}function Rv(e,t){for(let n=0;n<e.length;n++)if(e[n].indexOf(t)>=0)return n;return-1}function qv(e,t,n){n?e.removeEventListener(Ev,t):e.addEventListener(Ev,t)}function Mv(e,t,n,o){const i=Iv+t;if(null!=o){const t=e.style[i];if(t.length){const e=t.split(",");e[o]=n,n=e.join(",")}}e.style[i]=n}function Fv(e,t){return e.style[Iv+t]||""}class Pv{constructor(e,t,n,o,i,r,a,s){this.element=e,this.keyframes=t,this.animationName=n,this._duration=o,this._delay=i,this._finalStyles=a,this._specialStyles=s,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this.currentSnapshot={},this._state=0,this.easing=r||"linear",this.totalTime=o+i,this._buildStyler()}onStart(e){this._onStartFns.push(e)}onDone(e){this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}destroy(){this.init(),this._state>=4||(this._state=4,this._styler.destroy(),this._flushStartFns(),this._flushDoneFns(),this._specialStyles&&this._specialStyles.destroy(),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}_flushDoneFns(){this._onDoneFns.forEach(e=>e()),this._onDoneFns=[]}_flushStartFns(){this._onStartFns.forEach(e=>e()),this._onStartFns=[]}finish(){this.init(),this._state>=3||(this._state=3,this._styler.finish(),this._flushStartFns(),this._specialStyles&&this._specialStyles.finish(),this._flushDoneFns())}setPosition(e){this._styler.setPosition(e)}getPosition(){return this._styler.getPosition()}hasStarted(){return this._state>=2}init(){this._state>=1||(this._state=1,this._styler.apply(),this._delay&&this._styler.pause())}play(){this.init(),this.hasStarted()||(this._flushStartFns(),this._state=2,this._specialStyles&&this._specialStyles.start()),this._styler.resume()}pause(){this.init(),this._styler.pause()}restart(){this.reset(),this.play()}reset(){this._state=0,this._styler.destroy(),this._buildStyler(),this._styler.apply()}_buildStyler(){this._styler=new Dv(this.element,this.animationName,this._duration,this._delay,this.easing,"forwards",()=>this.finish())}triggerCallback(e){const t="start"==e?this._onStartFns:this._onDoneFns;t.forEach(e=>e()),t.length=0}beforeDestroy(){this.init();const e={};if(this.hasStarted()){const t=this._state>=3;Object.keys(this._finalStyles).forEach(n=>{"offset"!=n&&(e[n]=t?this._finalStyles[n]:ky(this.element,n))})}this.currentSnapshot=e}}class Lv extends Cb{constructor(e,t){super(),this.element=e,this._startingStyles={},this.__initialized=!1,this._styles=Gb(t)}init(){!this.__initialized&&this._startingStyles&&(this.__initialized=!0,Object.keys(this._styles).forEach(e=>{this._startingStyles[e]=this.element.style[e]}),super.init())}play(){this._startingStyles&&(this.init(),Object.keys(this._styles).forEach(e=>this.element.style.setProperty(e,this._styles[e])),super.play())}destroy(){this._startingStyles&&(Object.keys(this._startingStyles).forEach(e=>{const t=this._startingStyles[e];t?this.element.style.setProperty(e,t):this.element.style.removeProperty(e)}),this._startingStyles=null,super.destroy())}}class zv{constructor(){this._count=0}validateStyleProperty(e){return Wb(e)}matchesElement(e,t){return $b(e,t)}containsElement(e,t){return Vb(e,t)}query(e,t,n){return Hb(e,t,n)}computeStyle(e,t,n){return window.getComputedStyle(e)[t]}buildKeyframeElement(e,t,n){n=n.map(e=>Gb(e));let o=`@keyframes ${t} {\n`,i="";n.forEach(e=>{i=" ";const t=parseFloat(e.offset);o+=`${i}${100*t}% {\n`,i+=" ",Object.keys(e).forEach(t=>{const n=e[t];switch(t){case"offset":return;case"easing":return void(n&&(o+=`${i}animation-timing-function: ${n};\n`));default:return void(o+=`${i}${t}: ${n};\n`)}}),o+=`${i}}\n`}),o+="}\n";const r=document.createElement("style");return r.textContent=o,r}animate(e,t,n,o,i,r=[],a){const s=r.filter(e=>e instanceof Pv),l={};yy(n,o)&&s.forEach(e=>{let t=e.currentSnapshot;Object.keys(t).forEach(e=>l[e]=t[e])});const c=function(e){let t={};return e&&(Array.isArray(e)?e:[e]).forEach(e=>{Object.keys(e).forEach(n=>{"offset"!=n&&"easing"!=n&&(t[n]=e[n])})}),t}(t=vy(e,t,l));if(0==n)return new Lv(e,c);const d="gen_css_kf_"+this._count++,p=this.buildKeyframeElement(e,d,t);(function(e){var t;const n=null===(t=e.getRootNode)||void 0===t?void 0:t.call(e);return"undefined"!=typeof ShadowRoot&&n instanceof ShadowRoot?n:document.head})(e).appendChild(p);const u=Tv(e,t),h=new Pv(e,t,d,n,o,i,c,u);return h.onDestroy(()=>{var e;(e=p).parentNode.removeChild(e)}),h}}class Nv{constructor(e,t,n,o){this.element=e,this.keyframes=t,this.options=n,this._specialStyles=o,this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._initialized=!1,this._finished=!1,this._started=!1,this._destroyed=!1,this.time=0,this.parentPlayer=null,this.currentSnapshot={},this._duration=n.duration,this._delay=n.delay||0,this.time=this._duration+this._delay}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach(e=>e()),this._onDoneFns=[])}init(){this._buildPlayer(),this._preparePlayerBeforeStart()}_buildPlayer(){if(this._initialized)return;this._initialized=!0;const e=this.keyframes;this.domPlayer=this._triggerWebAnimation(this.element,e,this.options),this._finalKeyframe=e.length?e[e.length-1]:{},this.domPlayer.addEventListener("finish",()=>this._onFinish())}_preparePlayerBeforeStart(){this._delay?this._resetDomPlayerState():this.domPlayer.pause()}_triggerWebAnimation(e,t,n){return e.animate(t,n)}onStart(e){this._onStartFns.push(e)}onDone(e){this._onDoneFns.push(e)}onDestroy(e){this._onDestroyFns.push(e)}play(){this._buildPlayer(),this.hasStarted()||(this._onStartFns.forEach(e=>e()),this._onStartFns=[],this._started=!0,this._specialStyles&&this._specialStyles.start()),this.domPlayer.play()}pause(){this.init(),this.domPlayer.pause()}finish(){this.init(),this._specialStyles&&this._specialStyles.finish(),this._onFinish(),this.domPlayer.finish()}reset(){this._resetDomPlayerState(),this._destroyed=!1,this._finished=!1,this._started=!1}_resetDomPlayerState(){this.domPlayer&&this.domPlayer.cancel()}restart(){this.reset(),this.play()}hasStarted(){return this._started}destroy(){this._destroyed||(this._destroyed=!0,this._resetDomPlayerState(),this._onFinish(),this._specialStyles&&this._specialStyles.destroy(),this._onDestroyFns.forEach(e=>e()),this._onDestroyFns=[])}setPosition(e){void 0===this.domPlayer&&this.init(),this.domPlayer.currentTime=e*this.time}getPosition(){return this.domPlayer.currentTime/this.time}get totalTime(){return this._delay+this._duration}beforeDestroy(){const e={};this.hasStarted()&&Object.keys(this._finalKeyframe).forEach(t=>{"offset"!=t&&(e[t]=this._finished?this._finalKeyframe[t]:ky(this.element,t))}),this.currentSnapshot=e}triggerCallback(e){const t="start"==e?this._onStartFns:this._onDoneFns;t.forEach(e=>e()),t.length=0}}class Uv{constructor(){this._isNativeImpl=/\{\s*\[native\s+code\]\s*\}/.test(Bv().toString()),this._cssKeyframesDriver=new zv}validateStyleProperty(e){return Wb(e)}matchesElement(e,t){return $b(e,t)}containsElement(e,t){return Vb(e,t)}query(e,t,n){return Hb(e,t,n)}computeStyle(e,t,n){return window.getComputedStyle(e)[t]}overrideWebAnimationsSupport(e){this._isNativeImpl=e}animate(e,t,n,o,i,r=[],a){if(!a&&!this._isNativeImpl)return this._cssKeyframesDriver.animate(e,t,n,o,i,r);const s={duration:n,delay:o,fill:0==o?"both":"forwards"};i&&(s.easing=i);const l={},c=r.filter(e=>e instanceof Nv);yy(n,o)&&c.forEach(e=>{let t=e.currentSnapshot;Object.keys(t).forEach(e=>l[e]=t[e])});const d=Tv(e,t=vy(e,t=t.map(e=>ay(e,!1)),l));return new Nv(e,t,s,d)}}function Bv(){return Ib()&&Element.prototype.animate||{}}let Wv=(()=>{class e extends bb{constructor(e,t){super(),this._nextAnimationId=0,this._renderer=e.createRenderer(t.body,{id:"0",encapsulation:xe.None,styles:[],data:{animation:[]}})}build(e){const t=this._nextAnimationId.toString();this._nextAnimationId++;const n=Array.isArray(e)?kb(e):e;return Hv(this._renderer,null,t,"register",[n]),new $v(t,this._renderer)}}return e.\u0275fac=function(t){return new(t||e)(ho(Hs),ho(yd))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class $v extends class{}{constructor(e,t){super(),this._id=e,this._renderer=t}create(e,t){return new Vv(this._id,e,t||{},this._renderer)}}class Vv{constructor(e,t,n,o){this.id=e,this.element=t,this._renderer=o,this.parentPlayer=null,this._started=!1,this.totalTime=0,this._command("create",n)}_listen(e,t){return this._renderer.listen(this.element,`@@${this.id}:${e}`,t)}_command(e,...t){return Hv(this._renderer,this.element,this.id,e,t)}onDone(e){this._listen("done",e)}onStart(e){this._listen("start",e)}onDestroy(e){this._listen("destroy",e)}init(){this._command("init")}hasStarted(){return this._started}play(){this._command("play"),this._started=!0}pause(){this._command("pause")}restart(){this._command("restart")}finish(){this._command("finish")}destroy(){this._command("destroy")}reset(){this._command("reset"),this._started=!1}setPosition(e){this._command("setPosition",e)}getPosition(){var e,t;return null!==(t=null===(e=this._renderer.engine.players[+this.id])||void 0===e?void 0:e.getPosition())&&void 0!==t?t:0}}function Hv(e,t,n,o,i){return e.setProperty(t,`@@${n}:${o}`,i)}const Gv="@",Jv="@.disabled";let Kv=(()=>{class e{constructor(e,t,n){this.delegate=e,this.engine=t,this._zone=n,this._currentId=0,this._microtaskId=1,this._animationCallbacksBuffer=[],this._rendererCache=new Map,this._cdRecurDepth=0,this.promise=Promise.resolve(0),t.onRemovalComplete=(e,t)=>{t&&t.parentNode(e)&&t.removeChild(e.parentNode,e)}}createRenderer(e,t){const n=this.delegate.createRenderer(e,t);if(!(e&&t&&t.data&&t.data.animation)){let e=this._rendererCache.get(n);return e||(e=new Yv("",n,this.engine),this._rendererCache.set(n,e)),e}const o=t.id,i=t.id+"-"+this._currentId;this._currentId++,this.engine.register(i,e);const r=t=>{Array.isArray(t)?t.forEach(r):this.engine.registerTrigger(o,i,e,t.name,t)};return t.data.animation.forEach(r),new Qv(this,i,n,this.engine)}begin(){this._cdRecurDepth++,this.delegate.begin&&this.delegate.begin()}_scheduleCountTask(){this.promise.then(()=>{this._microtaskId++})}scheduleListenerCallback(e,t,n){e>=0&&e<this._microtaskId?this._zone.run(()=>t(n)):(0==this._animationCallbacksBuffer.length&&Promise.resolve(null).then(()=>{this._zone.run(()=>{this._animationCallbacksBuffer.forEach(e=>{const[t,n]=e;t(n)}),this._animationCallbacksBuffer=[]})}),this._animationCallbacksBuffer.push([t,n]))}end(){this._cdRecurDepth--,0==this._cdRecurDepth&&this._zone.runOutsideAngular(()=>{this._scheduleCountTask(),this.engine.flush(this._microtaskId)}),this.delegate.end&&this.delegate.end()}whenRenderingDone(){return this.engine.whenRenderingDone()}}return e.\u0275fac=function(t){return new(t||e)(ho(Hs),ho(_v),ho(zc))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class Yv{constructor(e,t,n){this.namespaceId=e,this.delegate=t,this.engine=n,this.destroyNode=this.delegate.destroyNode?e=>t.destroyNode(e):null}get data(){return this.delegate.data}destroy(){this.engine.destroy(this.namespaceId,this.delegate),this.delegate.destroy()}createElement(e,t){return this.delegate.createElement(e,t)}createComment(e){return this.delegate.createComment(e)}createText(e){return this.delegate.createText(e)}appendChild(e,t){this.delegate.appendChild(e,t),this.engine.onInsert(this.namespaceId,t,e,!1)}insertBefore(e,t,n,o=!0){this.delegate.insertBefore(e,t,n),this.engine.onInsert(this.namespaceId,t,e,o)}removeChild(e,t,n){this.engine.onRemove(this.namespaceId,t,this.delegate,n)}selectRootElement(e,t){return this.delegate.selectRootElement(e,t)}parentNode(e){return this.delegate.parentNode(e)}nextSibling(e){return this.delegate.nextSibling(e)}setAttribute(e,t,n,o){this.delegate.setAttribute(e,t,n,o)}removeAttribute(e,t,n){this.delegate.removeAttribute(e,t,n)}addClass(e,t){this.delegate.addClass(e,t)}removeClass(e,t){this.delegate.removeClass(e,t)}setStyle(e,t,n,o){this.delegate.setStyle(e,t,n,o)}removeStyle(e,t,n){this.delegate.removeStyle(e,t,n)}setProperty(e,t,n){t.charAt(0)==Gv&&t==Jv?this.disableAnimations(e,!!n):this.delegate.setProperty(e,t,n)}setValue(e,t){this.delegate.setValue(e,t)}listen(e,t,n){return this.delegate.listen(e,t,n)}disableAnimations(e,t){this.engine.disableAnimations(e,t)}}class Qv extends Yv{constructor(e,t,n,o){super(t,n,o),this.factory=e,this.namespaceId=t}setProperty(e,t,n){t.charAt(0)==Gv?"."==t.charAt(1)&&t==Jv?this.disableAnimations(e,n=void 0===n||!!n):this.engine.process(this.namespaceId,e,t.substr(1),n):this.delegate.setProperty(e,t,n)}listen(e,t,n){if(t.charAt(0)==Gv){const o=function(e){switch(e){case"body":return document.body;case"document":return document;case"window":return window;default:return e}}(e);let i=t.substr(1),r="";return i.charAt(0)!=Gv&&([i,r]=function(e){const t=e.indexOf(".");return[e.substring(0,t),e.substr(t+1)]}(i)),this.engine.listen(this.namespaceId,o,i,r,e=>{this.factory.scheduleListenerCallback(e._data||-1,n,e)})}return this.delegate.listen(e,t,n)}}let Zv=(()=>{class e extends _v{constructor(e,t,n){super(e.body,t,n)}ngOnDestroy(){this.flush()}}return e.\u0275fac=function(t){return new(t||e)(ho(yd),ho(Kb),ho(Vy))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const Xv=new Jn("AnimationModuleType"),ew=[{provide:bb,useClass:Wv},{provide:Vy,useFactory:function(){return new Hy}},{provide:_v,useClass:Zv},{provide:Hs,useFactory:function(e,t,n){return new Kv(e,t,n)},deps:[ru,_v,zc]}],tw=[{provide:Kb,useFactory:function(){return"function"==typeof Bv()?new Uv:new zv}},{provide:Xv,useValue:"BrowserAnimations"},...ew],nw=[{provide:Kb,useClass:Jb},{provide:Xv,useValue:"NoopAnimations"},...ew];let ow=(()=>{class e{static withConfig(t){return{ngModule:e,providers:t.disableAnimations?nw:tw}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:tw,imports:[wu]}),e})();const iw=new Ys("12.0.3"),rw=new Jn("mat-sanity-checks",{providedIn:"root",factory:function(){return!0}});let aw=(()=>{class e{constructor(e,t,n){this._hasDoneGlobalChecks=!1,this._document=n,e._applyBodyHighContrastModeCssClasses(),this._sanityChecks=t,this._hasDoneGlobalChecks||(this._checkDoctypeIsDefined(),this._checkThemeIsPresent(),this._checkCdkVersionMatch(),this._hasDoneGlobalChecks=!0)}_getWindow(){const e=this._document.defaultView||window;return"object"==typeof e&&e?e:null}_checksAreEnabled(){return Xc()&&!this._isTestEnv()}_isTestEnv(){const e=this._getWindow();return e&&(e.__karma__||e.jasmine)}_checkDoctypeIsDefined(){this._checksAreEnabled()&&(!0===this._sanityChecks||this._sanityChecks.doctype)&&!this._document.doctype&&console.warn("Current document does not have a doctype. This may cause some Angular Material components not to behave as expected.")}_checkThemeIsPresent(){if(!this._checksAreEnabled()||!1===this._sanityChecks||!this._sanityChecks.theme||!this._document.body||"function"!=typeof getComputedStyle)return;const e=this._document.createElement("div");e.classList.add("mat-theme-loaded-marker"),this._document.body.appendChild(e);const t=getComputedStyle(e);t&&"none"!==t.display&&console.warn("Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming"),this._document.body.removeChild(e)}_checkCdkVersionMatch(){this._checksAreEnabled()&&(!0===this._sanityChecks||this._sanityChecks.version)&&iw.full!==fb.full&&console.warn("The Angular Material version ("+iw.full+") does not match the Angular CDK version ("+fb.full+").\nPlease ensure the versions of these two packages exactly match.")}}return e.\u0275fac=function(t){return new(t||e)(ho(pb),ho(rw,8),ho(yd))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[gb],gb]}),e})();function sw(e){return class extends e{constructor(...e){super(...e),this._disabled=!1}get disabled(){return this._disabled}set disabled(e){this._disabled=Df(e)}}}function lw(e,t){return class extends e{constructor(...e){super(...e),this.defaultColor=t,this.color=t}get color(){return this._color}set color(e){const t=e||this.defaultColor;t!==this._color&&(this._color&&this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),t&&this._elementRef.nativeElement.classList.add(`mat-${t}`),this._color=t)}}}function cw(e){return class extends e{constructor(...e){super(...e),this._disableRipple=!1}get disableRipple(){return this._disableRipple}set disableRipple(e){this._disableRipple=Df(e)}}}function dw(e){return class extends e{constructor(...e){super(...e),this.errorState=!1,this.stateChanges=new _}updateErrorState(){const e=this.errorState,t=(this.errorStateMatcher||this._defaultErrorStateMatcher).isErrorState(this.ngControl?this.ngControl.control:null,this._parentFormGroup||this._parentForm);t!==e&&(this.errorState=t,this.stateChanges.next())}}}const pw=new Jn("MAT_DATE_LOCALE",{providedIn:"root",factory:function(){return mo(xc)}});class uw{constructor(){this._localeChanges=new _,this.localeChanges=this._localeChanges}getValidDateOrNull(e){return this.isDateInstance(e)&&this.isValid(e)?e:null}deserialize(e){return null==e||this.isDateInstance(e)&&this.isValid(e)?e:this.invalid()}setLocale(e){this.locale=e,this._localeChanges.next()}compareDate(e,t){return this.getYear(e)-this.getYear(t)||this.getMonth(e)-this.getMonth(t)||this.getDate(e)-this.getDate(t)}sameDate(e,t){if(e&&t){let n=this.isValid(e),o=this.isValid(t);return n&&o?!this.compareDate(e,t):n==o}return e==t}clampDate(e,t,n){return t&&this.compareDate(e,t)<0?t:n&&this.compareDate(e,n)>0?n:e}}const hw=new Jn("mat-date-formats");let mw;try{mw="undefined"!=typeof Intl}catch(T_){mw=!1}const gw={long:["January","February","March","April","May","June","July","August","September","October","November","December"],short:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],narrow:["J","F","M","A","M","J","J","A","S","O","N","D"]},fw=vw(31,e=>String(e+1)),bw={long:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],short:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],narrow:["S","M","T","W","T","F","S"]},yw=/^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;function vw(e,t){const n=Array(e);for(let o=0;o<e;o++)n[o]=t(o);return n}let ww=(()=>{class e extends uw{constructor(e,t){super(),this.useUtcForDisplay=!0,super.setLocale(e),this.useUtcForDisplay=!t.TRIDENT,this._clampDate=t.TRIDENT||t.EDGE}getYear(e){return e.getFullYear()}getMonth(e){return e.getMonth()}getDate(e){return e.getDate()}getDayOfWeek(e){return e.getDay()}getMonthNames(e){if(mw){const t=new Intl.DateTimeFormat(this.locale,{month:e,timeZone:"utc"});return vw(12,e=>this._stripDirectionalityCharacters(this._format(t,new Date(2017,e,1))))}return gw[e]}getDateNames(){if(mw){const e=new Intl.DateTimeFormat(this.locale,{day:"numeric",timeZone:"utc"});return vw(31,t=>this._stripDirectionalityCharacters(this._format(e,new Date(2017,0,t+1))))}return fw}getDayOfWeekNames(e){if(mw){const t=new Intl.DateTimeFormat(this.locale,{weekday:e,timeZone:"utc"});return vw(7,e=>this._stripDirectionalityCharacters(this._format(t,new Date(2017,0,e+1))))}return bw[e]}getYearName(e){if(mw){const t=new Intl.DateTimeFormat(this.locale,{year:"numeric",timeZone:"utc"});return this._stripDirectionalityCharacters(this._format(t,e))}return String(this.getYear(e))}getFirstDayOfWeek(){return 0}getNumDaysInMonth(e){return this.getDate(this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+1,0))}clone(e){return new Date(e.getTime())}createDate(e,t,n){let o=this._createDateWithOverflow(e,t,n);return o.getMonth(),o}today(){return new Date}parse(e){return"number"==typeof e?new Date(e):e?new Date(Date.parse(e)):null}format(e,t){if(!this.isValid(e))throw Error("NativeDateAdapter: Cannot format invalid date.");if(mw){this._clampDate&&(e.getFullYear()<1||e.getFullYear()>9999)&&(e=this.clone(e)).setFullYear(Math.max(1,Math.min(9999,e.getFullYear()))),t=Object.assign(Object.assign({},t),{timeZone:"utc"});const n=new Intl.DateTimeFormat(this.locale,t);return this._stripDirectionalityCharacters(this._format(n,e))}return this._stripDirectionalityCharacters(e.toDateString())}addCalendarYears(e,t){return this.addCalendarMonths(e,12*t)}addCalendarMonths(e,t){let n=this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+t,this.getDate(e));return this.getMonth(n)!=((this.getMonth(e)+t)%12+12)%12&&(n=this._createDateWithOverflow(this.getYear(n),this.getMonth(n),0)),n}addCalendarDays(e,t){return this._createDateWithOverflow(this.getYear(e),this.getMonth(e),this.getDate(e)+t)}toIso8601(e){return[e.getUTCFullYear(),this._2digit(e.getUTCMonth()+1),this._2digit(e.getUTCDate())].join("-")}deserialize(e){if("string"==typeof e){if(!e)return null;if(yw.test(e)){let t=new Date(e);if(this.isValid(t))return t}}return super.deserialize(e)}isDateInstance(e){return e instanceof Date}isValid(e){return!isNaN(e.getTime())}invalid(){return new Date(NaN)}_createDateWithOverflow(e,t,n){const o=new Date;return o.setFullYear(e,t,n),o.setHours(0,0,0,0),o}_2digit(e){return("00"+e).slice(-2)}_stripDirectionalityCharacters(e){return e.replace(/[\u200e\u200f]/g,"")}_format(e,t){const n=new Date;return n.setUTCFullYear(t.getFullYear(),t.getMonth(),t.getDate()),n.setUTCHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()),e.format(n)}}return e.\u0275fac=function(t){return new(t||e)(ho(pw,8),ho(Ff))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),kw=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[{provide:uw,useClass:ww}],imports:[[Pf]]}),e})();const Sw={parse:{dateInput:null},display:{dateInput:{year:"numeric",month:"numeric",day:"numeric"},monthYearLabel:{year:"numeric",month:"short"},dateA11yLabel:{year:"numeric",month:"long",day:"numeric"},monthYearA11yLabel:{year:"numeric",month:"long"}}};let _w=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[{provide:hw,useValue:Sw}],imports:[[kw]]}),e})(),Tw=(()=>{class e{isErrorState(e,t){return!!(e&&e.invalid&&(e.touched||t&&t.submitted))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})(),Aw=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw],aw]}),e})();class Cw{constructor(e,t,n){this._renderer=e,this.element=t,this.config=n,this.state=3}fadeOut(){this._renderer.fadeOutRipple(this)}}const xw={enterDuration:450,exitDuration:400},Iw=Wf({passive:!0}),Ew=["mousedown","touchstart"],Dw=["mouseup","mouseleave","touchend","touchcancel"];class Ow{constructor(e,t,n,o){this._target=e,this._ngZone=t,this._isPointerDown=!1,this._activeRipples=new Set,this._pointerUpEventsRegistered=!1,o.isBrowser&&(this._containerElement=Rf(n))}fadeInRipple(e,t,n={}){const o=this._containerRect=this._containerRect||this._containerElement.getBoundingClientRect(),i=Object.assign(Object.assign({},xw),n.animation);n.centered&&(e=o.left+o.width/2,t=o.top+o.height/2);const r=n.radius||function(e,t,n){const o=Math.max(Math.abs(e-n.left),Math.abs(e-n.right)),i=Math.max(Math.abs(t-n.top),Math.abs(t-n.bottom));return Math.sqrt(o*o+i*i)}(e,t,o),a=e-o.left,s=t-o.top,l=i.enterDuration,c=document.createElement("div");c.classList.add("mat-ripple-element"),c.style.left=a-r+"px",c.style.top=s-r+"px",c.style.height=2*r+"px",c.style.width=2*r+"px",null!=n.color&&(c.style.backgroundColor=n.color),c.style.transitionDuration=`${l}ms`,this._containerElement.appendChild(c),window.getComputedStyle(c).getPropertyValue("opacity"),c.style.transform="scale(1)";const d=new Cw(this,c,n);return d.state=0,this._activeRipples.add(d),n.persistent||(this._mostRecentTransientRipple=d),this._runTimeoutOutsideZone(()=>{const e=d===this._mostRecentTransientRipple;d.state=1,n.persistent||e&&this._isPointerDown||d.fadeOut()},l),d}fadeOutRipple(e){const t=this._activeRipples.delete(e);if(e===this._mostRecentTransientRipple&&(this._mostRecentTransientRipple=null),this._activeRipples.size||(this._containerRect=null),!t)return;const n=e.element,o=Object.assign(Object.assign({},xw),e.config.animation);n.style.transitionDuration=`${o.exitDuration}ms`,n.style.opacity="0",e.state=2,this._runTimeoutOutsideZone(()=>{e.state=3,n.parentNode.removeChild(n)},o.exitDuration)}fadeOutAll(){this._activeRipples.forEach(e=>e.fadeOut())}fadeOutAllNonPersistent(){this._activeRipples.forEach(e=>{e.config.persistent||e.fadeOut()})}setupTriggerEvents(e){const t=Rf(e);t&&t!==this._triggerElement&&(this._removeTriggerEvents(),this._triggerElement=t,this._registerEvents(Ew))}handleEvent(e){"mousedown"===e.type?this._onMousedown(e):"touchstart"===e.type?this._onTouchStart(e):this._onPointerUp(),this._pointerUpEventsRegistered||(this._registerEvents(Dw),this._pointerUpEventsRegistered=!0)}_onMousedown(e){const t=nb(e),n=this._lastTouchStartEvent&&Date.now()<this._lastTouchStartEvent+800;this._target.rippleDisabled||t||n||(this._isPointerDown=!0,this.fadeInRipple(e.clientX,e.clientY,this._target.rippleConfig))}_onTouchStart(e){if(!this._target.rippleDisabled&&!ob(e)){this._lastTouchStartEvent=Date.now(),this._isPointerDown=!0;const t=e.changedTouches;for(let e=0;e<t.length;e++)this.fadeInRipple(t[e].clientX,t[e].clientY,this._target.rippleConfig)}}_onPointerUp(){this._isPointerDown&&(this._isPointerDown=!1,this._activeRipples.forEach(e=>{!e.config.persistent&&(1===e.state||e.config.terminateOnPointerUp&&0===e.state)&&e.fadeOut()}))}_runTimeoutOutsideZone(e,t=0){this._ngZone.runOutsideAngular(()=>setTimeout(e,t))}_registerEvents(e){this._ngZone.runOutsideAngular(()=>{e.forEach(e=>{this._triggerElement.addEventListener(e,this,Iw)})})}_removeTriggerEvents(){this._triggerElement&&(Ew.forEach(e=>{this._triggerElement.removeEventListener(e,this,Iw)}),this._pointerUpEventsRegistered&&Dw.forEach(e=>{this._triggerElement.removeEventListener(e,this,Iw)}))}}const jw=new Jn("mat-ripple-global-options");let Rw=(()=>{class e{constructor(e,t,n,o,i){this._elementRef=e,this._animationMode=i,this.radius=0,this._disabled=!1,this._isInitialized=!1,this._globalOptions=o||{},this._rippleRenderer=new Ow(this,t,e,n)}get disabled(){return this._disabled}set disabled(e){e&&this.fadeOutAllNonPersistent(),this._disabled=e,this._setupTriggerEventsIfEnabled()}get trigger(){return this._trigger||this._elementRef.nativeElement}set trigger(e){this._trigger=e,this._setupTriggerEventsIfEnabled()}ngOnInit(){this._isInitialized=!0,this._setupTriggerEventsIfEnabled()}ngOnDestroy(){this._rippleRenderer._removeTriggerEvents()}fadeOutAll(){this._rippleRenderer.fadeOutAll()}fadeOutAllNonPersistent(){this._rippleRenderer.fadeOutAllNonPersistent()}get rippleConfig(){return{centered:this.centered,radius:this.radius,color:this.color,animation:Object.assign(Object.assign(Object.assign({},this._globalOptions.animation),"NoopAnimations"===this._animationMode?{enterDuration:0,exitDuration:0}:{}),this.animation),terminateOnPointerUp:this._globalOptions.terminateOnPointerUp}}get rippleDisabled(){return this.disabled||!!this._globalOptions.disabled}_setupTriggerEventsIfEnabled(){!this.disabled&&this._isInitialized&&this._rippleRenderer.setupTriggerEvents(this.trigger)}launch(e,t=0,n){return"number"==typeof e?this._rippleRenderer.fadeInRipple(e,t,Object.assign(Object.assign({},this.rippleConfig),n)):this._rippleRenderer.fadeInRipple(0,0,Object.assign(Object.assign({},this.rippleConfig),e))}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(zc),ja(Ff),ja(jw,8),ja(Xv,8))},e.\u0275dir=Ke({type:e,selectors:[["","mat-ripple",""],["","matRipple",""]],hostAttrs:[1,"mat-ripple"],hostVars:2,hostBindings:function(e,t){2&e&&rs("mat-ripple-unbounded",t.unbounded)},inputs:{radius:["matRippleRadius","radius"],disabled:["matRippleDisabled","disabled"],trigger:["matRippleTrigger","trigger"],color:["matRippleColor","color"],unbounded:["matRippleUnbounded","unbounded"],centered:["matRippleCentered","centered"],animation:["matRippleAnimation","animation"]},exportAs:["matRipple"]}),e})(),qw=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw,Pf],aw]}),e})(),Mw=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw]]}),e})(),Fw=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[qw,Pp,aw,Mw]]}),e})();function Pw(e,t){return new y(t?n=>t.schedule(Lw,0,{error:e,subscriber:n}):t=>t.error(e))}function Lw({error:e,subscriber:t}){t.error(e)}function zw(...e){if(1===e.length){const t=e[0];if(l(t))return Nw(t,null);if(c(t)&&Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);return Nw(e.map(e=>t[e]),e)}}if("function"==typeof e[e.length-1]){const t=e.pop();return Nw(e=1===e.length&&l(e[0])?e[0]:e,null).pipe(C(e=>t(...e)))}return Nw(e,null)}function Nw(e,t){return new y(n=>{const o=e.length;if(0===o)return void n.complete();const i=new Array(o);let r=0,a=0;for(let s=0;s<o;s++){const l=F(e[s]);let c=!1;n.add(l.subscribe({next:e=>{c||(c=!0,a++),i[s]=e},error:e=>n.error(e),complete:()=>{r++,r!==o&&c||(a===o&&n.next(t?t.reduce((e,t,n)=>(e[t]=i[n],e),{}):i),n.complete())}}))}})}class Uw{}class Bw{}class Ww{constructor(e){this.normalizedNames=new Map,this.lazyUpdate=null,e?this.lazyInit="string"==typeof e?()=>{this.headers=new Map,e.split("\n").forEach(e=>{const t=e.indexOf(":");if(t>0){const n=e.slice(0,t),o=n.toLowerCase(),i=e.slice(t+1).trim();this.maybeSetNormalizedName(n,o),this.headers.has(o)?this.headers.get(o).push(i):this.headers.set(o,[i])}})}:()=>{this.headers=new Map,Object.keys(e).forEach(t=>{let n=e[t];const o=t.toLowerCase();"string"==typeof n&&(n=[n]),n.length>0&&(this.headers.set(o,n),this.maybeSetNormalizedName(t,o))})}:this.headers=new Map}has(e){return this.init(),this.headers.has(e.toLowerCase())}get(e){this.init();const t=this.headers.get(e.toLowerCase());return t&&t.length>0?t[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(e){return this.init(),this.headers.get(e.toLowerCase())||null}append(e,t){return this.clone({name:e,value:t,op:"a"})}set(e,t){return this.clone({name:e,value:t,op:"s"})}delete(e,t){return this.clone({name:e,value:t,op:"d"})}maybeSetNormalizedName(e,t){this.normalizedNames.has(t)||this.normalizedNames.set(t,e)}init(){this.lazyInit&&(this.lazyInit instanceof Ww?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(e=>this.applyUpdate(e)),this.lazyUpdate=null))}copyFrom(e){e.init(),Array.from(e.headers.keys()).forEach(t=>{this.headers.set(t,e.headers.get(t)),this.normalizedNames.set(t,e.normalizedNames.get(t))})}clone(e){const t=new Ww;return t.lazyInit=this.lazyInit&&this.lazyInit instanceof Ww?this.lazyInit:this,t.lazyUpdate=(this.lazyUpdate||[]).concat([e]),t}applyUpdate(e){const t=e.name.toLowerCase();switch(e.op){case"a":case"s":let n=e.value;if("string"==typeof n&&(n=[n]),0===n.length)return;this.maybeSetNormalizedName(e.name,t);const o=("a"===e.op?this.headers.get(t):void 0)||[];o.push(...n),this.headers.set(t,o);break;case"d":const i=e.value;if(i){let e=this.headers.get(t);if(!e)return;e=e.filter(e=>-1===i.indexOf(e)),0===e.length?(this.headers.delete(t),this.normalizedNames.delete(t)):this.headers.set(t,e)}else this.headers.delete(t),this.normalizedNames.delete(t)}}forEach(e){this.init(),Array.from(this.normalizedNames.keys()).forEach(t=>e(this.normalizedNames.get(t),this.headers.get(t)))}}class $w{encodeKey(e){return Vw(e)}encodeValue(e){return Vw(e)}decodeKey(e){return decodeURIComponent(e)}decodeValue(e){return decodeURIComponent(e)}}function Vw(e){return encodeURIComponent(e).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/gi,"$").replace(/%2C/gi,",").replace(/%3B/gi,";").replace(/%2B/gi,"+").replace(/%3D/gi,"=").replace(/%3F/gi,"?").replace(/%2F/gi,"/")}function Hw(e){return`${e}`}class Gw{constructor(e={}){if(this.updates=null,this.cloneFrom=null,this.encoder=e.encoder||new $w,e.fromString){if(e.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(e,t){const n=new Map;return e.length>0&&e.replace(/^\?/,"").split("&").forEach(e=>{const o=e.indexOf("="),[i,r]=-1==o?[t.decodeKey(e),""]:[t.decodeKey(e.slice(0,o)),t.decodeValue(e.slice(o+1))],a=n.get(i)||[];a.push(r),n.set(i,a)}),n}(e.fromString,this.encoder)}else e.fromObject?(this.map=new Map,Object.keys(e.fromObject).forEach(t=>{const n=e.fromObject[t];this.map.set(t,Array.isArray(n)?n:[n])})):this.map=null}has(e){return this.init(),this.map.has(e)}get(e){this.init();const t=this.map.get(e);return t?t[0]:null}getAll(e){return this.init(),this.map.get(e)||null}keys(){return this.init(),Array.from(this.map.keys())}append(e,t){return this.clone({param:e,value:t,op:"a"})}appendAll(e){const t=[];return Object.keys(e).forEach(n=>{const o=e[n];Array.isArray(o)?o.forEach(e=>{t.push({param:n,value:e,op:"a"})}):t.push({param:n,value:o,op:"a"})}),this.clone(t)}set(e,t){return this.clone({param:e,value:t,op:"s"})}delete(e,t){return this.clone({param:e,value:t,op:"d"})}toString(){return this.init(),this.keys().map(e=>{const t=this.encoder.encodeKey(e);return this.map.get(e).map(e=>t+"="+this.encoder.encodeValue(e)).join("&")}).filter(e=>""!==e).join("&")}clone(e){const t=new Gw({encoder:this.encoder});return t.cloneFrom=this.cloneFrom||this,t.updates=(this.updates||[]).concat(e),t}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(e=>this.map.set(e,this.cloneFrom.map.get(e))),this.updates.forEach(e=>{switch(e.op){case"a":case"s":const t=("a"===e.op?this.map.get(e.param):void 0)||[];t.push(Hw(e.value)),this.map.set(e.param,t);break;case"d":if(void 0===e.value){this.map.delete(e.param);break}{let t=this.map.get(e.param)||[];const n=t.indexOf(Hw(e.value));-1!==n&&t.splice(n,1),t.length>0?this.map.set(e.param,t):this.map.delete(e.param)}}}),this.cloneFrom=this.updates=null)}}class Jw{constructor(){this.map=new Map}set(e,t){return this.map.set(e,t),this}get(e){return this.map.has(e)||this.map.set(e,e.defaultValue()),this.map.get(e)}delete(e){return this.map.delete(e),this}keys(){return this.map.keys()}}function Kw(e){return"undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer}function Yw(e){return"undefined"!=typeof Blob&&e instanceof Blob}function Qw(e){return"undefined"!=typeof FormData&&e instanceof FormData}class Zw{constructor(e,t,n,o){let i;if(this.url=t,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=e.toUpperCase(),function(e){switch(e){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}(this.method)||o?(this.body=void 0!==n?n:null,i=o):i=n,i&&(this.reportProgress=!!i.reportProgress,this.withCredentials=!!i.withCredentials,i.responseType&&(this.responseType=i.responseType),i.headers&&(this.headers=i.headers),i.context&&(this.context=i.context),i.params&&(this.params=i.params)),this.headers||(this.headers=new Ww),this.context||(this.context=new Jw),this.params){const e=this.params.toString();if(0===e.length)this.urlWithParams=t;else{const n=t.indexOf("?");this.urlWithParams=t+(-1===n?"?":n<t.length-1?"&":"")+e}}else this.params=new Gw,this.urlWithParams=t}serializeBody(){return null===this.body?null:Kw(this.body)||Yw(this.body)||Qw(this.body)||"string"==typeof this.body?this.body:this.body instanceof Gw?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return null===this.body||Qw(this.body)?null:Yw(this.body)?this.body.type||null:Kw(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof Gw?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(e={}){var t;const n=e.method||this.method,o=e.url||this.url,i=e.responseType||this.responseType,r=void 0!==e.body?e.body:this.body,a=void 0!==e.withCredentials?e.withCredentials:this.withCredentials,s=void 0!==e.reportProgress?e.reportProgress:this.reportProgress;let l=e.headers||this.headers,c=e.params||this.params;const d=null!==(t=e.context)&&void 0!==t?t:this.context;return void 0!==e.setHeaders&&(l=Object.keys(e.setHeaders).reduce((t,n)=>t.set(n,e.setHeaders[n]),l)),e.setParams&&(c=Object.keys(e.setParams).reduce((t,n)=>t.set(n,e.setParams[n]),c)),new Zw(n,o,r,{params:c,headers:l,context:d,reportProgress:s,responseType:i,withCredentials:a})}}var Xw=function(e){return e[e.Sent=0]="Sent",e[e.UploadProgress=1]="UploadProgress",e[e.ResponseHeader=2]="ResponseHeader",e[e.DownloadProgress=3]="DownloadProgress",e[e.Response=4]="Response",e[e.User=5]="User",e}({});class ek{constructor(e,t=200,n="OK"){this.headers=e.headers||new Ww,this.status=void 0!==e.status?e.status:t,this.statusText=e.statusText||n,this.url=e.url||null,this.ok=this.status>=200&&this.status<300}}class tk extends ek{constructor(e={}){super(e),this.type=Xw.ResponseHeader}clone(e={}){return new tk({headers:e.headers||this.headers,status:void 0!==e.status?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}}class nk extends ek{constructor(e={}){super(e),this.type=Xw.Response,this.body=void 0!==e.body?e.body:null}clone(e={}){return new nk({body:void 0!==e.body?e.body:this.body,headers:e.headers||this.headers,status:void 0!==e.status?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}}class ok extends ek{constructor(e){super(e,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.message=this.status>=200&&this.status<300?`Http failure during parsing for ${e.url||"(unknown url)"}`:`Http failure response for ${e.url||"(unknown url)"}: ${e.status} ${e.statusText}`,this.error=e.error||null}}function ik(e,t){return{body:t,headers:e.headers,context:e.context,observe:e.observe,params:e.params,reportProgress:e.reportProgress,responseType:e.responseType,withCredentials:e.withCredentials}}let rk=(()=>{class e{constructor(e){this.handler=e}request(e,t,n={}){let o;if(e instanceof Zw)o=e;else{let i,r;i=n.headers instanceof Ww?n.headers:new Ww(n.headers),n.params&&(r=n.params instanceof Gw?n.params:new Gw({fromObject:n.params})),o=new Zw(e,t,void 0!==n.body?n.body:null,{headers:i,context:n.context,params:r,reportProgress:n.reportProgress,responseType:n.responseType||"json",withCredentials:n.withCredentials})}const i=Cu(o).pipe(nh(e=>this.handler.handle(e)));if(e instanceof Zw||"events"===n.observe)return i;const r=i.pipe(Yu(e=>e instanceof nk));switch(n.observe||"body"){case"body":switch(o.responseType){case"arraybuffer":return r.pipe(C(e=>{if(null!==e.body&&!(e.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return e.body}));case"blob":return r.pipe(C(e=>{if(null!==e.body&&!(e.body instanceof Blob))throw new Error("Response is not a Blob.");return e.body}));case"text":return r.pipe(C(e=>{if(null!==e.body&&"string"!=typeof e.body)throw new Error("Response is not a string.");return e.body}));case"json":default:return r.pipe(C(e=>e.body))}case"response":return r;default:throw new Error(`Unreachable: unhandled observe type ${n.observe}}`)}}delete(e,t={}){return this.request("DELETE",e,t)}get(e,t={}){return this.request("GET",e,t)}head(e,t={}){return this.request("HEAD",e,t)}jsonp(e,t){return this.request("JSONP",e,{params:(new Gw).append(t,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(e,t={}){return this.request("OPTIONS",e,t)}patch(e,t,n={}){return this.request("PATCH",e,ik(n,t))}post(e,t,n={}){return this.request("POST",e,ik(n,t))}put(e,t,n={}){return this.request("PUT",e,ik(n,t))}}return e.\u0275fac=function(t){return new(t||e)(ho(Uw))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();class ak{constructor(e,t){this.next=e,this.interceptor=t}handle(e){return this.interceptor.intercept(e,this.next)}}const sk=new Jn("HTTP_INTERCEPTORS");let lk=(()=>{class e{intercept(e,t){return t.handle(e)}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const ck=/^\)\]\}',?\n/;let dk=(()=>{class e{constructor(e){this.xhrFactory=e}handle(e){if("JSONP"===e.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new y(t=>{const n=this.xhrFactory.build();if(n.open(e.method,e.urlWithParams),e.withCredentials&&(n.withCredentials=!0),e.headers.forEach((e,t)=>n.setRequestHeader(e,t.join(","))),e.headers.has("Accept")||n.setRequestHeader("Accept","application/json, text/plain, */*"),!e.headers.has("Content-Type")){const t=e.detectContentTypeHeader();null!==t&&n.setRequestHeader("Content-Type",t)}if(e.responseType){const t=e.responseType.toLowerCase();n.responseType="json"!==t?t:"text"}const o=e.serializeBody();let i=null;const r=()=>{if(null!==i)return i;const t=1223===n.status?204:n.status,o=n.statusText||"OK",r=new Ww(n.getAllResponseHeaders()),a=function(e){return"responseURL"in e&&e.responseURL?e.responseURL:/^X-Request-URL:/m.test(e.getAllResponseHeaders())?e.getResponseHeader("X-Request-URL"):null}(n)||e.url;return i=new tk({headers:r,status:t,statusText:o,url:a}),i},a=()=>{let{headers:o,status:i,statusText:a,url:s}=r(),l=null;204!==i&&(l=void 0===n.response?n.responseText:n.response),0===i&&(i=l?200:0);let c=i>=200&&i<300;if("json"===e.responseType&&"string"==typeof l){const e=l;l=l.replace(ck,"");try{l=""!==l?JSON.parse(l):null}catch(d){l=e,c&&(c=!1,l={error:d,text:l})}}c?(t.next(new nk({body:l,headers:o,status:i,statusText:a,url:s||void 0})),t.complete()):t.error(new ok({error:l,headers:o,status:i,statusText:a,url:s||void 0}))},s=e=>{const{url:o}=r(),i=new ok({error:e,status:n.status||0,statusText:n.statusText||"Unknown Error",url:o||void 0});t.error(i)};let l=!1;const c=o=>{l||(t.next(r()),l=!0);let i={type:Xw.DownloadProgress,loaded:o.loaded};o.lengthComputable&&(i.total=o.total),"text"===e.responseType&&n.responseText&&(i.partialText=n.responseText),t.next(i)},d=e=>{let n={type:Xw.UploadProgress,loaded:e.loaded};e.lengthComputable&&(n.total=e.total),t.next(n)};return n.addEventListener("load",a),n.addEventListener("error",s),n.addEventListener("timeout",s),n.addEventListener("abort",s),e.reportProgress&&(n.addEventListener("progress",c),null!==o&&n.upload&&n.upload.addEventListener("progress",d)),n.send(o),t.next({type:Xw.Sent}),()=>{n.removeEventListener("error",s),n.removeEventListener("abort",s),n.removeEventListener("load",a),n.removeEventListener("timeout",s),e.reportProgress&&(n.removeEventListener("progress",c),null!==o&&n.upload&&n.upload.removeEventListener("progress",d)),n.readyState!==n.DONE&&n.abort()}})}}return e.\u0275fac=function(t){return new(t||e)(ho(Up))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const pk=new Jn("XSRF_COOKIE_NAME"),uk=new Jn("XSRF_HEADER_NAME");class hk{}let mk=(()=>{class e{constructor(e,t,n){this.doc=e,this.platform=t,this.cookieName=n,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const e=this.doc.cookie||"";return e!==this.lastCookieString&&(this.parseCount++,this.lastToken=fp(e,this.cookieName),this.lastCookieString=e),this.lastToken}}return e.\u0275fac=function(t){return new(t||e)(ho(yd),ho(Tc),ho(pk))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),gk=(()=>{class e{constructor(e,t){this.tokenService=e,this.headerName=t}intercept(e,t){const n=e.url.toLowerCase();if("GET"===e.method||"HEAD"===e.method||n.startsWith("http://")||n.startsWith("https://"))return t.handle(e);const o=this.tokenService.getToken();return null===o||e.headers.has(this.headerName)||(e=e.clone({headers:e.headers.set(this.headerName,o)})),t.handle(e)}}return e.\u0275fac=function(t){return new(t||e)(ho(hk),ho(uk))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),fk=(()=>{class e{constructor(e,t){this.backend=e,this.injector=t,this.chain=null}handle(e){if(null===this.chain){const e=this.injector.get(sk,[]);this.chain=e.reduceRight((e,t)=>new ak(e,t),this.backend)}return this.chain.handle(e)}}return e.\u0275fac=function(t){return new(t||e)(ho(Bw),ho(ha))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),bk=(()=>{class e{static disable(){return{ngModule:e,providers:[{provide:gk,useClass:lk}]}}static withOptions(t={}){return{ngModule:e,providers:[t.cookieName?{provide:pk,useValue:t.cookieName}:[],t.headerName?{provide:uk,useValue:t.headerName}:[]]}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[gk,{provide:sk,useExisting:gk,multi:!0},{provide:hk,useClass:mk},{provide:pk,useValue:"XSRF-TOKEN"},{provide:uk,useValue:"X-XSRF-TOKEN"}]}),e})(),yk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[rk,{provide:Uw,useClass:fk},dk,{provide:Bw,useExisting:dk}],imports:[[bk.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]]}),e})();const vk=["*"];function wk(e){return Error(`Unable to find icon with the name "${e}"`)}function kk(e){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${e}".`)}function Sk(e){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${e}".`)}class _k{constructor(e,t,n){this.url=e,this.svgText=t,this.options=n}}let Tk=(()=>{class e{constructor(e,t,n,o){this._httpClient=e,this._sanitizer=t,this._errorHandler=o,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._resolvers=[],this._defaultFontSetClass="material-icons",this._document=n}addSvgIcon(e,t,n){return this.addSvgIconInNamespace("",e,t,n)}addSvgIconLiteral(e,t,n){return this.addSvgIconLiteralInNamespace("",e,t,n)}addSvgIconInNamespace(e,t,n,o){return this._addSvgIconConfig(e,t,new _k(n,null,o))}addSvgIconResolver(e){return this._resolvers.push(e),this}addSvgIconLiteralInNamespace(e,t,n,o){const i=this._sanitizer.sanitize(ni.HTML,n);if(!i)throw Sk(n);return this._addSvgIconConfig(e,t,new _k("",i,o))}addSvgIconSet(e,t){return this.addSvgIconSetInNamespace("",e,t)}addSvgIconSetLiteral(e,t){return this.addSvgIconSetLiteralInNamespace("",e,t)}addSvgIconSetInNamespace(e,t,n){return this._addSvgIconSetConfig(e,new _k(t,null,n))}addSvgIconSetLiteralInNamespace(e,t,n){const o=this._sanitizer.sanitize(ni.HTML,t);if(!o)throw Sk(t);return this._addSvgIconSetConfig(e,new _k("",o,n))}registerFontClassAlias(e,t=e){return this._fontCssClassesByAlias.set(e,t),this}classNameForFontAlias(e){return this._fontCssClassesByAlias.get(e)||e}setDefaultFontSetClass(e){return this._defaultFontSetClass=e,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(e){const t=this._sanitizer.sanitize(ni.RESOURCE_URL,e);if(!t)throw kk(e);const n=this._cachedIconsByUrl.get(t);return n?Cu(Ak(n)):this._loadSvgIconFromConfig(new _k(e,null)).pipe(gh(e=>this._cachedIconsByUrl.set(t,e)),C(e=>Ak(e)))}getNamedSvgIcon(e,t=""){const n=Ck(t,e);let o=this._svgIconConfigs.get(n);if(o)return this._getSvgFromConfig(o);if(o=this._getIconConfigFromResolvers(t,e),o)return this._svgIconConfigs.set(n,o),this._getSvgFromConfig(o);const i=this._iconSetConfigs.get(t);return i?this._getSvgFromIconSetConfigs(e,i):Pw(wk(n))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(e){return e.svgText?Cu(Ak(this._svgElementFromConfig(e))):this._loadSvgIconFromConfig(e).pipe(C(e=>Ak(e)))}_getSvgFromIconSetConfigs(e,t){const n=this._extractIconWithNameFromAnySet(e,t);return n?Cu(n):zw(t.filter(e=>!e.svgText).map(e=>this._loadSvgIconSetFromConfig(e).pipe(Xu(t=>{const n=this._sanitizer.sanitize(ni.RESOURCE_URL,e.url);return this._errorHandler.handleError(new Error(`Loading icon set URL: ${n} failed: ${t.message}`)),Cu(null)})))).pipe(C(()=>{const n=this._extractIconWithNameFromAnySet(e,t);if(!n)throw wk(e);return n}))}_extractIconWithNameFromAnySet(e,t){for(let n=t.length-1;n>=0;n--){const o=t[n];if(o.svgText&&o.svgText.indexOf(e)>-1){const t=this._svgElementFromConfig(o),n=this._extractSvgIconFromSet(t,e,o.options);if(n)return n}}return null}_loadSvgIconFromConfig(e){return this._fetchIcon(e).pipe(gh(t=>e.svgText=t),C(()=>this._svgElementFromConfig(e)))}_loadSvgIconSetFromConfig(e){return e.svgText?Cu(null):this._fetchIcon(e).pipe(gh(t=>e.svgText=t))}_extractSvgIconFromSet(e,t,n){const o=e.querySelector(`[id="${t}"]`);if(!o)return null;const i=o.cloneNode(!0);if(i.removeAttribute("id"),"svg"===i.nodeName.toLowerCase())return this._setSvgAttributes(i,n);if("symbol"===i.nodeName.toLowerCase())return this._setSvgAttributes(this._toSvgElement(i),n);const r=this._svgElementFromString("<svg></svg>");return r.appendChild(i),this._setSvgAttributes(r,n)}_svgElementFromString(e){const t=this._document.createElement("DIV");t.innerHTML=e;const n=t.querySelector("svg");if(!n)throw Error("<svg> tag not found");return n}_toSvgElement(e){const t=this._svgElementFromString("<svg></svg>"),n=e.attributes;for(let o=0;o<n.length;o++){const{name:e,value:i}=n[o];"id"!==e&&t.setAttribute(e,i)}for(let o=0;o<e.childNodes.length;o++)e.childNodes[o].nodeType===this._document.ELEMENT_NODE&&t.appendChild(e.childNodes[o].cloneNode(!0));return t}_setSvgAttributes(e,t){return e.setAttribute("fit",""),e.setAttribute("height","100%"),e.setAttribute("width","100%"),e.setAttribute("preserveAspectRatio","xMidYMid meet"),e.setAttribute("focusable","false"),t&&t.viewBox&&e.setAttribute("viewBox",t.viewBox),e}_fetchIcon(e){var t;const{url:n,options:o}=e,i=null!==(t=null==o?void 0:o.withCredentials)&&void 0!==t&&t;if(!this._httpClient)throw Error("Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.");if(null==n)throw Error(`Cannot fetch icon from URL "${n}".`);const r=this._sanitizer.sanitize(ni.RESOURCE_URL,n);if(!r)throw kk(n);const a=this._inProgressUrlFetches.get(r);if(a)return a;const s=this._httpClient.get(r,{responseType:"text",withCredentials:i}).pipe(yh(()=>this._inProgressUrlFetches.delete(r)),X());return this._inProgressUrlFetches.set(r,s),s}_addSvgIconConfig(e,t,n){return this._svgIconConfigs.set(Ck(e,t),n),this}_addSvgIconSetConfig(e,t){const n=this._iconSetConfigs.get(e);return n?n.push(t):this._iconSetConfigs.set(e,[t]),this}_svgElementFromConfig(e){if(!e.svgElement){const t=this._svgElementFromString(e.svgText);this._setSvgAttributes(t,e.options),e.svgElement=t}return e.svgElement}_getIconConfigFromResolvers(e,t){for(let o=0;o<this._resolvers.length;o++){const i=this._resolvers[o](t,e);if(i)return(n=i).url&&n.options?new _k(i.url,null,i.options):new _k(i,null)}var n}}return e.\u0275fac=function(t){return new(t||e)(ho(rk,8),ho(gu),ho(yd,8),ho(pi))},e.\u0275prov=ue({factory:function(){return new e(ho(rk,8),ho(gu),ho(yd,8),ho(pi))},token:e,providedIn:"root"}),e})();function Ak(e){return e.cloneNode(!0)}function Ck(e,t){return e+":"+t}class xk{constructor(e){this._elementRef=e}}const Ik=lw(xk),Ek=new Jn("mat-icon-location",{providedIn:"root",factory:function(){const e=mo(yd),t=e?e.location:null;return{getPathname:()=>t?t.pathname+t.search:""}}}),Dk=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],Ok=Dk.map(e=>`[${e}]`).join(", "),jk=/^url\(['"]?#(.*?)['"]?\)$/;let Rk=(()=>{class e extends Ik{constructor(e,t,n,o,i){super(e),this._iconRegistry=t,this._location=o,this._errorHandler=i,this._inline=!1,this._currentIconFetch=p.EMPTY,n||e.nativeElement.setAttribute("aria-hidden","true")}get inline(){return this._inline}set inline(e){this._inline=Df(e)}get svgIcon(){return this._svgIcon}set svgIcon(e){e!==this._svgIcon&&(e?this._updateSvgIcon(e):this._svgIcon&&this._clearSvgElement(),this._svgIcon=e)}get fontSet(){return this._fontSet}set fontSet(e){const t=this._cleanupFontValue(e);t!==this._fontSet&&(this._fontSet=t,this._updateFontIconClasses())}get fontIcon(){return this._fontIcon}set fontIcon(e){const t=this._cleanupFontValue(e);t!==this._fontIcon&&(this._fontIcon=t,this._updateFontIconClasses())}_splitIconName(e){if(!e)return["",""];const t=e.split(":");switch(t.length){case 1:return["",t[0]];case 2:return t;default:throw Error(`Invalid icon name: "${e}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){const e=this._elementsWithExternalReferences;if(e&&e.size){const e=this._location.getPathname();e!==this._previousPath&&(this._previousPath=e,this._prependPathToReferences(e))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(e){this._clearSvgElement();const t=e.querySelectorAll("style");for(let o=0;o<t.length;o++)t[o].textContent+=" ";const n=this._location.getPathname();this._previousPath=n,this._cacheChildrenWithExternalReferences(e),this._prependPathToReferences(n),this._elementRef.nativeElement.appendChild(e)}_clearSvgElement(){const e=this._elementRef.nativeElement;let t=e.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();t--;){const n=e.childNodes[t];1===n.nodeType&&"svg"!==n.nodeName.toLowerCase()||e.removeChild(n)}}_updateFontIconClasses(){if(!this._usingFontIcon())return;const e=this._elementRef.nativeElement,t=this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet):this._iconRegistry.getDefaultFontSetClass();t!=this._previousFontSetClass&&(this._previousFontSetClass&&e.classList.remove(this._previousFontSetClass),t&&e.classList.add(t),this._previousFontSetClass=t),this.fontIcon!=this._previousFontIconClass&&(this._previousFontIconClass&&e.classList.remove(this._previousFontIconClass),this.fontIcon&&e.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(e){return"string"==typeof e?e.trim().split(" ")[0]:e}_prependPathToReferences(e){const t=this._elementsWithExternalReferences;t&&t.forEach((t,n)=>{t.forEach(t=>{n.setAttribute(t.name,`url('${e}#${t.value}')`)})})}_cacheChildrenWithExternalReferences(e){const t=e.querySelectorAll(Ok),n=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let o=0;o<t.length;o++)Dk.forEach(e=>{const i=t[o],r=i.getAttribute(e),a=r?r.match(jk):null;if(a){let t=n.get(i);t||(t=[],n.set(i,t)),t.push({name:e,value:a[1]})}})}_updateSvgIcon(e){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),e){const[t,n]=this._splitIconName(e);t&&(this._svgNamespace=t),n&&(this._svgName=n),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(n,t).pipe(Wu(1)).subscribe(e=>this._setSvgElement(e),e=>{this._errorHandler.handleError(new Error(`Error retrieving icon ${t}:${n}! ${e.message}`))})}}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(Tk),Vn("aria-hidden"),ja(Ek),ja(pi))},e.\u0275cmp=We({type:e,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:7,hostBindings:function(e,t){2&e&&(Ia("data-mat-icon-type",t._usingFontIcon()?"font":"svg")("data-mat-icon-name",t._svgName||t.fontIcon)("data-mat-icon-namespace",t._svgNamespace||t.fontSet),rs("mat-icon-inline",t.inline)("mat-icon-no-color","primary"!==t.color&&"accent"!==t.color&&"warn"!==t.color))},inputs:{color:"color",inline:"inline",svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],features:[ga],ngContentSelectors:vk,decls:1,vars:0,template:function(e,t){1&e&&(Qa(),Za(0))},styles:[".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n"],encapsulation:2,changeDetection:0}),e})(),qk=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw],aw]}),e})(),Mk=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["app-home"]],decls:29,vars:4,consts:[[1,"Header"],["src","https://fireflysemantics.github.io/i/developer/developer-social-card-logo.jpg",2,"margin-bottom","2rem"],[2,"cursor","pointer","display","flex","align-content","center",3,"routerLink"],[2,"padding","2rem","display","flex","justify-content","center","align-items","center"],[2,"font-size","3rem","height","3rem","width","3rem"]],template:function(e,t){1&e&&(Ma(0,"h1",0),gs(1,"Welcome to the Firefly Semantics Developer Center"),Fa(),Ma(2,"div"),Pa(3,"img",1),Fa(),Ma(4,"section"),Ma(5,"div",2),Ma(6,"div",3),Ma(7,"mat-icon"),gs(8,"search"),Fa(),Fa(),Ma(9,"p"),gs(10,"Search through guides, concepts, and tasks by clicking on the search field."),Fa(),Fa(),Ma(11,"div",2),Ma(12,"div",3),Ma(13,"mat-icon",4),gs(14,"view_stream"),Fa(),Fa(),Ma(15,"p"),gs(16,"Review Guides."),Fa(),Fa(),Ma(17,"div",2),Ma(18,"div",3),Ma(19,"mat-icon",4),gs(20,"view_stream"),Fa(),Fa(),Ma(21,"p"),gs(22,"Review Concepts."),Fa(),Fa(),Ma(23,"div",2),Ma(24,"div",3),Ma(25,"mat-icon",4),gs(26,"view_stream"),Fa(),Fa(),Ma(27,"p"),gs(28,"Review Tasks."),Fa(),Fa(),Fa()),2&e&&(tr(5),Ra("routerLink","/search"),tr(6),Ra("routerLink","/guides"),tr(6),Ra("routerLink","/concepts"),tr(6),Ra("routerLink","/tasks"))},directives:[Qg,Rk],styles:["section[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.Header[_ngcontent-%COMP%]{font-family:Zilla Slab Highlight;font-weight:700;font-style:normal;margin-bottom:2rem}p[_ngcontent-%COMP%]{font-size:20px;letter-spacing:.008em;line-height:2rem;max-width:25rem;justify-content:start;font-family:Space Mono,monospace}h2[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{display:flex;align-items:center}h2[_ngcontent-%COMP%]{text-align:center;justify-content:center}*[_ngcontent-%COMP%]{outline-style:none}mat-icon[_ngcontent-%COMP%]{font-size:3rem;height:3rem;width:3rem}"]}),e})();var Fk=n(325);class Pk extends Sf{constructor(e,t){super(e,t),this.scheduler=e,this.work=t}schedule(e,t=0){return t>0?super.schedule(e,t):(this.delay=t,this.state=e,this.scheduler.flush(this),this)}execute(e,t){return t>0||this.closed?super.execute(e,t):this._execute(e,t)}requestAsyncId(e,t,n=0){return null!==n&&n>0||null===n&&this.delay>0?super.requestAsyncId(e,t,n):e.flush(this)}}class Lk extends Tf{}const zk=new Lk(Pk);let Nk=(()=>{class e{constructor(e,t,n){this.kind=e,this.value=t,this.error=n,this.hasValue="N"===e}observe(e){switch(this.kind){case"N":return e.next&&e.next(this.value);case"E":return e.error&&e.error(this.error);case"C":return e.complete&&e.complete()}}do(e,t,n){switch(this.kind){case"N":return e&&e(this.value);case"E":return t&&t(this.error);case"C":return n&&n()}}accept(e,t,n){return e&&"function"==typeof e.next?this.observe(e):this.do(e,t,n)}toObservable(){switch(this.kind){case"N":return Cu(this.value);case"E":return Pw(this.error);case"C":return Pu()}throw new Error("unexpected notification kind value")}static createNext(t){return void 0!==t?new e("N",t):e.undefinedValueNotification}static createError(t){return new e("E",void 0,t)}static createComplete(){return e.completeNotification}}return e.completeNotification=new e("C"),e.undefinedValueNotification=new e("N",void 0),e})();class Uk extends m{constructor(e,t,n=0){super(e),this.scheduler=t,this.delay=n}static dispatch(e){const{notification:t,destination:n}=e;t.observe(n),this.unsubscribe()}scheduleMessage(e){this.destination.add(this.scheduler.schedule(Uk.dispatch,this.delay,new Bk(e,this.destination)))}_next(e){this.scheduleMessage(Nk.createNext(e))}_error(e){this.scheduleMessage(Nk.createError(e)),this.unsubscribe()}_complete(){this.scheduleMessage(Nk.createComplete()),this.unsubscribe()}}class Bk{constructor(e,t){this.notification=e,this.destination=t}}class Wk extends _{constructor(e=Number.POSITIVE_INFINITY,t=Number.POSITIVE_INFINITY,n){super(),this.scheduler=n,this._events=[],this._infiniteTimeWindow=!1,this._bufferSize=e<1?1:e,this._windowTime=t<1?1:t,t===Number.POSITIVE_INFINITY?(this._infiniteTimeWindow=!0,this.next=this.nextInfiniteTimeWindow):this.next=this.nextTimeWindow}nextInfiniteTimeWindow(e){if(!this.isStopped){const t=this._events;t.push(e),t.length>this._bufferSize&&t.shift()}super.next(e)}nextTimeWindow(e){this.isStopped||(this._events.push(new $k(this._getNow(),e)),this._trimBufferThenGetEvents()),super.next(e)}_subscribe(e){const t=this._infiniteTimeWindow,n=t?this._events:this._trimBufferThenGetEvents(),o=this.scheduler,i=n.length;let r;if(this.closed)throw new w;if(this.isStopped||this.hasError?r=p.EMPTY:(this.observers.push(e),r=new k(this,e)),o&&e.add(e=new Uk(e,o)),t)for(let a=0;a<i&&!e.closed;a++)e.next(n[a]);else for(let a=0;a<i&&!e.closed;a++)e.next(n[a].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),r}_getNow(){return(this.scheduler||zk).now()}_trimBufferThenGetEvents(){const e=this._getNow(),t=this._bufferSize,n=this._windowTime,o=this._events,i=o.length;let r=0;for(;r<i&&!(e-o[r].time<n);)r++;return i>t&&(r=Math.max(r,i-t)),r>0&&o.splice(0,r),o}}class $k{constructor(e,t){this.time=e,this.value=t}}function Vk(e,t,n,i){return o(n)&&(i=n,n=void 0),i?Vk(e,t,n).pipe(C(e=>l(e)?i(...e):i(e))):new y(o=>{Hk(e,t,function(e){o.next(arguments.length>1?Array.prototype.slice.call(arguments):e)},o,n)})}function Hk(e,t,n,o,i){let r;if(function(e){return e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}(e)){const o=e;e.addEventListener(t,n,i),r=()=>o.removeEventListener(t,n,i)}else if(function(e){return e&&"function"==typeof e.on&&"function"==typeof e.off}(e)){const o=e;e.on(t,n),r=()=>o.off(t,n)}else if(function(e){return e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}(e)){const o=e;e.addListener(t,n),r=()=>o.removeListener(t,n)}else{if(!e||!e.length)throw new TypeError("Invalid event target");for(let r=0,a=e.length;r<a;r++)Hk(e[r],t,n,o,i)}o.add(r)}function Gk(e,t){return n=>n.lift(new Jk(e,t))}class Jk{constructor(e,t){this.compare=e,this.keySelector=t}call(e,t){return t.subscribe(new Kk(e,this.compare,this.keySelector))}}class Kk extends m{constructor(e,t,n){super(e),this.keySelector=n,this.hasKey=!1,"function"==typeof t&&(this.compare=t)}compare(e,t){return e===t}_next(e){let t;try{const{keySelector:n}=this;t=n?n(e):e}catch(o){return this.destination.error(o)}let n=!1;if(this.hasKey)try{const{compare:e}=this;n=e(this.key,t)}catch(o){return this.destination.error(o)}else this.hasKey=!0;n||(this.key=t,this.destination.next(e))}}class Yk{call(e,t){return t.subscribe(new Qk(e))}}class Qk extends m{constructor(e){super(e),this.hasPrev=!1}_next(e){let t;this.hasPrev?t=[this.prev,e]:this.hasPrev=!0,this.prev=e,t&&this.destination.next(t)}}function Zk(e,t=!1){return n=>n.lift(new Xk(e,t))}class Xk{constructor(e,t){this.predicate=e,this.inclusive=t}call(e,t){return t.subscribe(new eS(e,this.predicate,this.inclusive))}}class eS extends m{constructor(e,t,n){super(e),this.predicate=t,this.inclusive=n,this.index=0}_next(e){const t=this.destination;let n;try{n=this.predicate(e,this.index++)}catch(o){return void t.error(o)}this.nextOrComplete(e,n)}nextOrComplete(e,t){const n=this.destination;Boolean(t)?n.next(e):(this.inclusive&&n.next(e),n.complete())}}const{freeze:tS}=Object,nS=tS({idKey:"id",guidKey:"gid"});class oS{constructor(e){this.notifyQuery=new Wk(1),this._query="",this.entries=new Map,this.idEntries=new Map,this.notify=new Wk(1),this.notifyEmptyState=new Wk(1),this.notifyEntryCount=new Wk(1),this.notifyDelta=new Wk(1),this.config=e?tS(Object.assign(Object.assign({},nS),e)):nS}set query(e){this._query=e,this.notifyQuery.next(this._query)}get query(){return this._query}observeQuery(){return this.notifyQuery.asObservable()}get ID_KEY(){return this.config.idKey}get GUID_KEY(){return this.config.guidKey}notifyAll(e,t){this.notify.next(e),this.notifyEmptyState.next(e),this.notifyEntryCount.next(e),this.notifyDelta.next(t)}observe(e){return e?this.notify.pipe(C(t=>t.sort(e))):this.notify.asObservable()}observeDelta(){return this.notifyDelta.asObservable()}isEmpty(){return this.notifyEmptyState.pipe(C(e=>0==e.length))}isEmptySnapshot(){return 0==Array.from(this.entries.values()).length}count(e){return this.notifyEntryCount.pipe(C(e?t=>t.reduce((t,n)=>t+(e(n)?1:0),0):e=>e.length))}countSnapshot(e){return e?Array.from(this.entries.values()).filter(e).length:Array.from(this.entries.values()).length}allSnapshot(){return Array.from(this.entries.values())}contains(e){return"string"==typeof e?!!this.entries.get(e):!!this.entries.get(e[this.config.guidKey])}containsById(e){return"string"==typeof e?!!this.idEntries.get(e):!!this.idEntries.get(e[this.config.idKey])}findOne(e){return this.entries.get(e)}findOneByID(e){return this.idEntries.get(e)}select(e){const t=[];return Array.from(this.entries.values()).forEach(n=>{e(n)&&t.push(n)}),t}equalsByGUID(e,t){return e[this.GUID_KEY]==t[this.GUID_KEY]}equalsByID(e,t){return e[this.ID_KEY]==t[this.ID_KEY]}destroy(){this.notify.complete(),this.notifyEmptyState.complete(),this.notifyEntryCount.complete(),this.notifyDelta.complete(),this.notifyQuery.complete()}}function iS(){return((e=21)=>{let t="",n=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let o=63&n[e];t+=o<36?o.toString(36):o<62?(o-26).toString(36).toUpperCase():o<63?"_":"-"}return t})()}const{freeze:rS}=Object;class aS extends oS{constructor(e,t,n,o){if(super(),this.label=e,this.predicate=t,this.sc=n,this.entries=new Map,this.sc=n?rS(Object.assign(Object.assign({},nS),n)):nS,o){let e=this.test(t,o);this.postA(e),this.notifyAll(e,{type:"Initialize",entries:e})}else this.notifyAll([],{type:"Initialize",entries:[]})}post(e){if(this.predicate(e)){this.entries.set(e[this.sc.guidKey],e);const t={type:"Post",entries:[e]};this.notifyAll([...Array.from(this.entries.values())],t)}}postN(...e){this.postA(e)}postA(e){const t=[];if(e.forEach(e=>{this.predicate(e)&&(this.entries.set(e[this.sc.guidKey],e),t.push(e))}),t.length>0){const e={type:"Post",entries:t};this.notifyAll([...Array.from(this.entries.values())],e)}}delete(e){if(this.predicate(e)){this.entries.delete(e[this.sc.guidKey]);const t={type:"Delete",entries:[e]};this.notifyAll(Array.from(this.entries.values()),t)}}deleteN(...e){this.deleteA(e)}deleteA(e){const t=[];if(e.forEach(e=>{if(this.predicate(e)){const n=e[this.sc.guidKey];t.push(this.entries.get(n)),this.entries.delete(n)}}),t.length>0){const e={type:"Delete",entries:t};this.notifyAll([...Array.from(this.entries.values())],e)}}put(e){const t=e[this.sc.guidKey];if(this.entries.get(t)){if(!this.predicate(e)){const n={type:"Delete",entries:[e]};this.entries.delete(t),this.notifyAll([...Array.from(this.entries.values())],n)}}else if(this.predicate(e)){this.entries.set(t,e);const n={type:"Put",entries:[e]};this.notifyAll([...Array.from(this.entries.values())],n)}}putN(...e){this.putA(e)}putA(e){const t=[],n=[];if(e.forEach(e=>{const o=e[this.sc.guidKey];this.entries.get(o)?this.predicate(e)||t.push(this.entries.get(o)):this.predicate(e)&&n.push(e)}),t.length>0){const e={type:"Delete",entries:t};t.forEach(e=>{this.entries.delete(e[this.sc.guidKey])}),this.notifyAll([...Array.from(this.entries.values())],e)}if(n.length>0){const e={type:"Put",entries:n};n.forEach(e=>{this.entries.set(e[this.sc.guidKey],e)}),this.notifyAll([...Array.from(this.entries.values())],e)}}reset(){let e={type:"Reset",entries:[...Array.from(this.entries.values())]};this.notifyAll([],e),this.entries=new Map}test(e,t){let n=[];return t.forEach(t=>{e(t)&&n.push(t)}),n}}class sS extends oS{constructor(e,t){super(t),this.entities=e,this.observable=this.observe(),this.notifyActive=new Wk(1),this.active=new Map,this.notifyLoading=new Wk(1),this._loading=!0,this.notifySearching=new Wk(1),this._searching=!1,this.slices=new Map,e?this.postA(e):this.notifyAll([],{type:"Initialize",entries:[]})}destroy(){super.destroy(),this.notifyLoading.complete(),this.notifyActive.complete(),this.slices.forEach(e=>e.destroy())}toggle(e){this.contains(e)?this.delete(e):this.post(e)}addActive(e){this.contains(e)?(this.active.set(e.gid,e),this.notifyActive.next(new Map(this.active))):(this.post(e),this.active.set(e.gid,e),this.notifyActive.next(new Map(this.active)))}deleteActive(e){this.active.delete(e.gid),this.notifyActive.next(new Map(this.active))}clearActive(){this.active.clear(),this.notifyActive.next(new Map(this.active))}observeActive(){return this.notifyActive.asObservable()}set loading(e){this._loading=e,this.notifyLoading.next(this._loading)}get loading(){return this._loading}observeLoading(){return this.notifyLoading.asObservable().pipe(Zk(e=>e,!0))}observeLoadingComplete(){return this.observeLoading().pipe(Yu(e=>0==e),zu(()=>Cu(!0)))}set searching(e){this._searching=e,this.notifySearching.next(this._searching)}get searching(){return this._searching}observeSearching(){return this.notifySearching.asObservable().pipe(Zk(e=>e,!0))}observeSearchingComplete(){return this.observeSearching().pipe(Yu(e=>0==e),zu(()=>Cu(!0)))}addSlice(e,t){const n=new aS(t,e,this.config,Array.from(this.entries.values()));this.slices.set(n.label,n)}removeSlice(e){this.slices.delete(e)}getSlice(e){return this.slices.get(e)}post(e){const t=e[this.GUID_KEY]?e[this.GUID_KEY]:iS();e[this.GUID_KEY]=t,this.entries.set(t,e),this.updateIDEntry(e),Array.from(this.slices.values()).forEach(t=>{t.post(e)});let n=[...Array.from(this.entries.values())];this.notifyAll(n,{type:"Post",entries:[e]})}postN(...e){e.forEach(e=>{const t=e[this.GUID_KEY]?e[this.GUID_KEY]:iS();e[this.GUID_KEY]=t,this.entries.set(t,e),this.updateIDEntry(e)}),Array.from(this.slices.values()).forEach(t=>{t.postA(e)});let t=[...Array.from(this.entries.values())];this.notifyAll(t,{type:"Post",entries:e})}postA(e){this.postN(...e)}put(e){this.entries.set(e[this.GUID_KEY],e),this.updateIDEntry(e);let t=[...Array.from(this.entries.values())];this.notify.next(t),this.notifyDelta.next({type:"Put",entries:[e]}),Array.from(this.slices.values()).forEach(t=>{t.put(e)})}putN(...e){this.putA(e)}putA(e){e.forEach(e=>{this.entries.set(e[this.GUID_KEY],e),this.updateIDEntry(e)});let t=[...Array.from(this.entries.values())];this.notify.next(t),this.notifyDelta.next({type:"Put",entries:e}),Array.from(this.slices.values()).forEach(t=>{t.putA(e)})}delete(e){this.deleteActive(e);const t=e[this.GUID_KEY];this.entries.delete(t),this.deleteIDEntry(e),Array.from(this.slices.values()).forEach(e=>{e.entries.delete(t)});let n=[...Array.from(this.entries.values())];this.notifyAll(n,{type:"Delete",entries:[e]}),Array.from(this.slices.values()).forEach(t=>{t.delete(e)})}deleteN(...e){this.deleteA(e)}deleteA(e){e.forEach(e=>{this.deleteActive(e);const t=e[this.GUID_KEY];this.entries.delete(t),this.deleteIDEntry(e),Array.from(this.slices.values()).forEach(e=>{e.entries.delete(t)})});let t=[...Array.from(this.entries.values())];this.notifyAll(t,{type:"Delete",entries:e}),Array.from(this.slices.values()).forEach(t=>{t.deleteA(e)})}deleteP(e){const t=[];Array.from(this.entries.values()).forEach(n=>{e(n)&&(t.push(n),this.entries.delete(n[this.GUID_KEY]),this.deleteActive(n),this.deleteIDEntry(n))});let n=[...Array.from(this.entries.values())];this.notifyAll(n,{type:"Delete",entries:t}),Array.from(this.slices.values()).forEach(e=>{e.deleteA(t)})}updateIDEntry(e){e[this.ID_KEY]&&this.idEntries.set(e[this.ID_KEY],e)}deleteIDEntry(e){e[this.ID_KEY]&&this.idEntries.delete(e[this.ID_KEY])}reset(){const e={type:"Reset",entries:Array.from(this.entries.values())};this.notifyAll([],e),this.entries=new Map,Array.from(this.slices.values()).forEach(e=>{e.reset()})}notifyAll(e,t){super.notifyAll(e,t),this.notifyLoading.next(this.loading)}}function lS(e,t,n,o){var i,r=arguments.length,a=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,o);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(a=(r<3?i(a):r>3?i(t,n,a):i(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}function cS(e,t,n,o){return new(n||(n=Promise))(function(i,r){function a(e){try{l(o.next(e))}catch(t){r(t)}}function s(e){try{l(o.throw(e))}catch(t){r(t)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(a,s)}l((o=o.apply(e,t||[])).next())})}var dS=function(){return(dS=Object.assign||function(e){for(var t,n=1,o=arguments.length;n<o;n++)for(var i in t=arguments[n])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)};function pS(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var o=Array(e),i=0;for(t=0;t<n;t++)for(var r=arguments[t],a=0,s=r.length;a<s;a++,i++)o[i]=r[a];return o}var uS=Object.keys,hS=Array.isArray,mS="undefined"!=typeof self?self:"undefined"!=typeof window?window:global;function gS(e,t){return"object"!=typeof t||uS(t).forEach(function(n){e[n]=t[n]}),e}"undefined"==typeof Promise||mS.Promise||(mS.Promise=Promise);var fS=Object.getPrototypeOf,bS={}.hasOwnProperty;function yS(e,t){return bS.call(e,t)}function vS(e,t){"function"==typeof t&&(t=t(fS(e))),uS(t).forEach(function(n){kS(e,n,t[n])})}var wS=Object.defineProperty;function kS(e,t,n,o){wS(e,t,gS(n&&yS(n,"get")&&"function"==typeof n.get?{get:n.get,set:n.set,configurable:!0}:{value:n,configurable:!0,writable:!0},o))}function SS(e){return{from:function(t){return e.prototype=Object.create(t.prototype),kS(e.prototype,"constructor",e),{extend:vS.bind(null,e.prototype)}}}}var _S=Object.getOwnPropertyDescriptor;function TS(e,t){var n;return _S(e,t)||(n=fS(e))&&TS(n,t)}var AS=[].slice;function CS(e,t,n){return AS.call(e,t,n)}function xS(e,t){return t(e)}function IS(e){if(!e)throw new Error("Assertion Failed")}function ES(e){mS.setImmediate?setImmediate(e):setTimeout(e,0)}function DS(e,t){return e.reduce(function(e,n,o){var i=t(n,o);return i&&(e[i[0]]=i[1]),e},{})}function OS(e,t){if(yS(e,t))return e[t];if(!t)return e;if("string"!=typeof t){for(var n=[],o=0,i=t.length;o<i;++o){var r=OS(e,t[o]);n.push(r)}return n}var a=t.indexOf(".");if(-1!==a){var s=e[t.substr(0,a)];return void 0===s?void 0:OS(s,t.substr(a+1))}}function jS(e,t,n){if(e&&void 0!==t&&(!("isFrozen"in Object)||!Object.isFrozen(e)))if("string"!=typeof t&&"length"in t){IS("string"!=typeof n&&"length"in n);for(var o=0,i=t.length;o<i;++o)jS(e,t[o],n[o])}else{var r=t.indexOf(".");if(-1!==r){var a=t.substr(0,r),s=t.substr(r+1);if(""===s)void 0===n?hS(e)&&!isNaN(parseInt(a))?e.splice(a,1):delete e[a]:e[a]=n;else{var l=e[a];l||(l=e[a]={}),jS(l,s,n)}}else void 0===n?hS(e)&&!isNaN(parseInt(t))?e.splice(t,1):delete e[t]:e[t]=n}}function RS(e,t){"string"==typeof t?jS(e,t,void 0):"length"in t&&[].map.call(t,function(t){jS(e,t,void 0)})}function qS(e){var t={};for(var n in e)yS(e,n)&&(t[n]=e[n]);return t}var MS=[].concat;function FS(e){return MS.apply([],e)}var PS="Boolean,String,Date,RegExp,Blob,File,FileList,ArrayBuffer,DataView,Uint8ClampedArray,ImageData,Map,Set".split(",").concat(FS([8,16,32,64].map(function(e){return["Int","Uint","Float"].map(function(t){return t+e+"Array"})}))).filter(function(e){return mS[e]}),LS=PS.map(function(e){return mS[e]}),zS=DS(PS,function(e){return[e,!0]});function NS(e){if(!e||"object"!=typeof e)return e;var t;if(hS(e)){t=[];for(var n=0,o=e.length;n<o;++n)t.push(NS(e[n]))}else if(LS.indexOf(e.constructor)>=0)t=e;else for(var i in t=e.constructor?Object.create(e.constructor.prototype):{},e)yS(e,i)&&(t[i]=NS(e[i]));return t}var US={}.toString;function BS(e){return US.call(e).slice(8,-1)}var WS=function(e,t){return"Array"===t?""+e.map(function(e){return WS(e,BS(e))}):"ArrayBuffer"===t?""+new Uint8Array(e):"Date"===t?e.getTime():ArrayBuffer.isView(e)?""+new Uint8Array(e.buffer):e};function $S(e,t,n,o){return n=n||{},o=o||"",uS(e).forEach(function(i){if(yS(t,i)){var r=e[i],a=t[i];if("object"==typeof r&&"object"==typeof a&&r&&a){var s=BS(r),l=BS(a);s===l?zS[s]?WS(r,s)!==WS(a,l)&&(n[o+i]=t[i]):$S(r,a,n,o+i+"."):n[o+i]=t[i]}else r!==a&&(n[o+i]=t[i])}else n[o+i]=void 0}),uS(t).forEach(function(i){yS(e,i)||(n[o+i]=t[i])}),n}var VS="undefined"!=typeof Symbol&&Symbol.iterator,HS=VS?function(e){var t;return null!=e&&(t=e[VS])&&t.apply(e)}:function(){return null},GS={};function JS(e){var t,n,o,i;if(1===arguments.length){if(hS(e))return e.slice();if(this===GS&&"string"==typeof e)return[e];if(i=HS(e)){for(n=[];!(o=i.next()).done;)n.push(o.value);return n}if(null==e)return[e];if("number"==typeof(t=e.length)){for(n=new Array(t);t--;)n[t]=e[t];return n}return[e]}for(t=arguments.length,n=new Array(t);t--;)n[t]=arguments[t];return n}var KS="undefined"!=typeof Symbol?function(e){return"AsyncFunction"===e[Symbol.toStringTag]}:function(){return!1},YS="undefined"!=typeof location&&/^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);function QS(e,t){YS=e,ZS=t}var ZS=function(){return!0},XS=!new Error("").stack;function e_(){if(XS)try{throw new Error}catch(e){return e}return new Error}function t_(e,t){var n=e.stack;return n?(t=t||0,0===n.indexOf(e.name)&&(t+=(e.name+e.message).split("\n").length),n.split("\n").slice(t).filter(ZS).map(function(e){return"\n"+e}).join("")):""}var n_=["Unknown","Constraint","Data","TransactionInactive","ReadOnly","Version","NotFound","InvalidState","InvalidAccess","Abort","Timeout","QuotaExceeded","Syntax","DataClone"],o_=["Modify","Bulk","OpenFailed","VersionChange","Schema","Upgrade","InvalidTable","MissingAPI","NoSuchDatabase","InvalidArgument","SubTransaction","Unsupported","Internal","DatabaseClosed","PrematureCommit","ForeignAwait"].concat(n_),i_={VersionChanged:"Database version changed by other database connection",DatabaseClosed:"Database has been closed",Abort:"Transaction aborted",TransactionInactive:"Transaction has already completed or failed"};function r_(e,t){this._e=e_(),this.name=e,this.message=t}function a_(e,t){return e+". Errors: "+Object.keys(t).map(function(e){return t[e].toString()}).filter(function(e,t,n){return n.indexOf(e)===t}).join("\n")}function s_(e,t,n,o){this._e=e_(),this.failures=t,this.failedKeys=o,this.successCount=n,this.message=a_(e,t)}function l_(e,t){this._e=e_(),this.name="BulkError",this.failures=t,this.message=a_(e,t)}SS(r_).from(Error).extend({stack:{get:function(){return this._stack||(this._stack=this.name+": "+this.message+t_(this._e,2))}},toString:function(){return this.name+": "+this.message}}),SS(s_).from(r_),SS(l_).from(r_);var c_=o_.reduce(function(e,t){return e[t]=t+"Error",e},{}),d_=r_,p_=o_.reduce(function(e,t){var n=t+"Error";function o(e,o){this._e=e_(),this.name=n,e?"string"==typeof e?(this.message=e+(o?"\n "+o:""),this.inner=o||null):"object"==typeof e&&(this.message=e.name+" "+e.message,this.inner=e):(this.message=i_[t]||n,this.inner=null)}return SS(o).from(d_),e[t]=o,e},{});p_.Syntax=SyntaxError,p_.Type=TypeError,p_.Range=RangeError;var u_=n_.reduce(function(e,t){return e[t+"Error"]=p_[t],e},{}),h_=o_.reduce(function(e,t){return-1===["Syntax","Type","Range"].indexOf(t)&&(e[t+"Error"]=p_[t]),e},{});function m_(){}function g_(e){return e}function f_(e,t){return null==e||e===g_?t:function(n){return t(e(n))}}function b_(e,t){return function(){e.apply(this,arguments),t.apply(this,arguments)}}function y_(e,t){return e===m_?t:function(){var n=e.apply(this,arguments);void 0!==n&&(arguments[0]=n);var o=this.onsuccess,i=this.onerror;this.onsuccess=null,this.onerror=null;var r=t.apply(this,arguments);return o&&(this.onsuccess=this.onsuccess?b_(o,this.onsuccess):o),i&&(this.onerror=this.onerror?b_(i,this.onerror):i),void 0!==r?r:n}}function v_(e,t){return e===m_?t:function(){e.apply(this,arguments);var n=this.onsuccess,o=this.onerror;this.onsuccess=this.onerror=null,t.apply(this,arguments),n&&(this.onsuccess=this.onsuccess?b_(n,this.onsuccess):n),o&&(this.onerror=this.onerror?b_(o,this.onerror):o)}}function w_(e,t){return e===m_?t:function(n){var o=e.apply(this,arguments);gS(n,o);var i=this.onsuccess,r=this.onerror;this.onsuccess=null,this.onerror=null;var a=t.apply(this,arguments);return i&&(this.onsuccess=this.onsuccess?b_(i,this.onsuccess):i),r&&(this.onerror=this.onerror?b_(r,this.onerror):r),void 0===o?void 0===a?void 0:a:gS(o,a)}}function k_(e,t){return e===m_?t:function(){return!1!==t.apply(this,arguments)&&e.apply(this,arguments)}}function S_(e,t){return e===m_?t:function(){var n=e.apply(this,arguments);if(n&&"function"==typeof n.then){for(var o=this,i=arguments.length,r=new Array(i);i--;)r[i]=arguments[i];return n.then(function(){return t.apply(o,r)})}return t.apply(this,arguments)}}h_.ModifyError=s_,h_.DexieError=r_,h_.BulkError=l_;var __={},T_="undefined"==typeof Promise?[]:function(){var e=Promise.resolve();if("undefined"==typeof crypto||!crypto.subtle)return[e,e.__proto__,e];var t=crypto.subtle.digest("SHA-512",new Uint8Array([0]));return[t,t.__proto__,e]}(),A_=T_[0],C_=T_[1],x_=T_[2],I_=C_&&C_.then,E_=A_&&A_.constructor,D_=!!x_,O_=!1,j_=x_?function(){x_.then(tT)}:mS.setImmediate?setImmediate.bind(null,tT):mS.MutationObserver?function(){var e=document.createElement("div");new MutationObserver(function(){tT(),e=null}).observe(e,{attributes:!0}),e.setAttribute("i","1")}:function(){setTimeout(tT,0)},R_=function(e,t){B_.push([e,t]),M_&&(j_(),M_=!1)},q_=!0,M_=!0,F_=[],P_=[],L_=null,z_=g_,N_={id:"global",global:!0,ref:0,unhandleds:[],onunhandled:CT,pgp:!1,env:{},finalize:function(){this.unhandleds.forEach(function(e){try{CT(e[0],e[1])}catch(t){}})}},U_=N_,B_=[],W_=0,$_=[];function V_(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");this._listeners=[],this.onuncatched=m_,this._lib=!1;var t=this._PSD=U_;if(YS&&(this._stackHolder=e_(),this._prev=null,this._numPrev=0),"function"!=typeof e){if(e!==__)throw new TypeError("Not a function");return this._state=arguments[1],this._value=arguments[2],void(!1===this._state&&K_(this,this._value))}this._state=null,this._value=null,++t.ref,J_(this,e)}var H_={get:function(){var e=U_,t=pT;function n(n,o){var i=this,r=!e.global&&(e!==U_||t!==pT),a=r&&!gT(),s=new V_(function(t,s){Q_(i,new G_(_T(n,e,r,a),_T(o,e,r,a),t,s,e))});return YS&&eT(s,this),s}return n.prototype=__,n},set:function(e){kS(this,"then",e&&e.prototype===__?H_:{get:function(){return e},set:H_.set})}};function G_(e,t,n,o,i){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.resolve=n,this.reject=o,this.psd=i}function J_(e,t){try{t(function(t){if(null===e._state){if(t===e)throw new TypeError("A promise cannot be resolved with itself.");var n=e._lib&&nT();t&&"function"==typeof t.then?J_(e,function(e,n){t instanceof V_?t._then(e,n):t.then(e,n)}):(e._state=!0,e._value=t,Y_(e)),n&&oT()}},K_.bind(null,e))}catch(n){K_(e,n)}}function K_(e,t){if(P_.push(t),null===e._state){var n=e._lib&&nT();t=z_(t),e._state=!1,e._value=t,YS&&null!==t&&"object"==typeof t&&!t._promise&&function(n,o,i){try{(function(){var n=TS(t,"stack");t._promise=e,kS(t,"stack",{get:function(){return O_?n&&(n.get?n.get.apply(t):n.value):e.stack}})}).apply(null,void 0)}catch(r){}}(),function(e){F_.some(function(t){return t._value===e._value})||F_.push(e)}(e),Y_(e),n&&oT()}}function Y_(e){var t=e._listeners;e._listeners=[];for(var n=0,o=t.length;n<o;++n)Q_(e,t[n]);var i=e._PSD;--i.ref||i.finalize(),0===W_&&(++W_,R_(function(){0==--W_&&iT()},[]))}function Q_(e,t){if(null!==e._state){var n=e._state?t.onFulfilled:t.onRejected;if(null===n)return(e._state?t.resolve:t.reject)(e._value);++t.psd.ref,++W_,R_(Z_,[n,e,t])}else e._listeners.push(t)}function Z_(e,t,n){try{L_=t;var o,i=t._value;t._state?o=e(i):(P_.length&&(P_=[]),o=e(i),-1===P_.indexOf(i)&&function(e){for(var t=F_.length;t;)if(F_[--t]._value===e._value)return void F_.splice(t,1)}(t)),n.resolve(o)}catch(r){n.reject(r)}finally{L_=null,0==--W_&&iT(),--n.psd.ref||n.psd.finalize()}}function X_(e,t,n){if(t.length===n)return t;var o="";if(!1===e._state){var i,r,a=e._value;null!=a?(i=a.name||"Error",r=a.message||a,o=t_(a,0)):(i=a,r=""),t.push(i+(r?": "+r:"")+o)}return YS&&((o=t_(e._stackHolder,2))&&-1===t.indexOf(o)&&t.push(o),e._prev&&X_(e._prev,t,n)),t}function eT(e,t){var n=t?t._numPrev+1:0;n<100&&(e._prev=t,e._numPrev=n)}function tT(){nT()&&oT()}function nT(){var e=q_;return q_=!1,M_=!1,e}function oT(){var e,t,n;do{for(;B_.length>0;)for(e=B_,B_=[],n=e.length,t=0;t<n;++t){var o=e[t];o[0].apply(null,o[1])}}while(B_.length>0);q_=!0,M_=!0}function iT(){var e=F_;F_=[],e.forEach(function(e){e._PSD.onunhandled.call(null,e._value,e)});for(var t=$_.slice(0),n=t.length;n;)t[--n]()}function rT(e){return new V_(__,!1,e)}function aT(e,t){var n=U_;return function(){var o=nT(),i=U_;try{return vT(n,!0),e.apply(this,arguments)}catch(r){t&&t(r)}finally{vT(i,!1),o&&oT()}}}vS(V_.prototype,{then:H_,_then:function(e,t){Q_(this,new G_(null,null,e,t,U_))},catch:function(e){if(1===arguments.length)return this.then(null,e);var t=arguments[0],n=arguments[1];return this.then(null,"function"==typeof t?function(e){return e instanceof t?n(e):rT(e)}:function(e){return e&&e.name===t?n(e):rT(e)})},finally:function(e){return this.then(function(t){return e(),t},function(t){return e(),rT(t)})},stack:{get:function(){if(this._stack)return this._stack;try{O_=!0;var e=X_(this,[],20).join("\nFrom previous: ");return null!==this._state&&(this._stack=e),e}finally{O_=!1}}},timeout:function(e,t){var n=this;return e<1/0?new V_(function(o,i){var r=setTimeout(function(){return i(new p_.Timeout(t))},e);n.then(o,i).finally(clearTimeout.bind(null,r))}):this}}),"undefined"!=typeof Symbol&&Symbol.toStringTag&&kS(V_.prototype,Symbol.toStringTag,"Dexie.Promise"),N_.env=wT(),vS(V_,{all:function(){var e=JS.apply(null,arguments).map(fT);return new V_(function(t,n){0===e.length&&t([]);var o=e.length;e.forEach(function(i,r){return V_.resolve(i).then(function(n){e[r]=n,--o||t(e)},n)})})},resolve:function(e){if(e instanceof V_)return e;if(e&&"function"==typeof e.then)return new V_(function(t,n){e.then(t,n)});var t=new V_(__,!0,e);return eT(t,L_),t},reject:rT,race:function(){var e=JS.apply(null,arguments).map(fT);return new V_(function(t,n){e.map(function(e){return V_.resolve(e).then(t,n)})})},PSD:{get:function(){return U_},set:function(e){return U_=e}},totalEchoes:{get:function(){return pT}},newPSD:hT,usePSD:kT,scheduler:{get:function(){return R_},set:function(e){R_=e}},rejectionMapper:{get:function(){return z_},set:function(e){z_=e}},follow:function(e,t){return new V_(function(n,o){return hT(function(t,n){var o=U_;o.unhandleds=[],o.onunhandled=n,o.finalize=b_(function(){var e=this;$_.push(function o(){0===e.unhandleds.length?t():n(e.unhandleds[0]),$_.splice($_.indexOf(o),1)}),++W_,R_(function(){0==--W_&&iT()},[])},o.finalize),e()},t,n,o)})}}),E_&&(E_.allSettled&&kS(V_,"allSettled",function(){var e=JS.apply(null,arguments).map(fT);return new V_(function(t){0===e.length&&t([]);var n=e.length,o=new Array(n);e.forEach(function(e,i){return V_.resolve(e).then(function(e){return o[i]={status:"fulfilled",value:e}},function(e){return o[i]={status:"rejected",reason:e}}).then(function(){return--n||t(o)})})})}),E_.any&&"undefined"!=typeof AggregateError&&kS(V_,"any",function(){var e=JS.apply(null,arguments).map(fT);return new V_(function(t,n){0===e.length&&n(new AggregateError([]));var o=e.length,i=new Array(o);e.forEach(function(e,r){return V_.resolve(e).then(function(e){return t(e)},function(e){i[r]=e,--o||n(new AggregateError(i))})})})}));var sT={awaits:0,echoes:0,id:0},lT=0,cT=[],dT=0,pT=0,uT=0;function hT(e,t,n,o){var i=U_,r=Object.create(i);r.parent=i,r.ref=0,r.global=!1,r.id=++uT;var a=N_.env;r.env=D_?{Promise:V_,PromiseProp:{value:V_,configurable:!0,writable:!0},all:V_.all,race:V_.race,allSettled:V_.allSettled,any:V_.any,resolve:V_.resolve,reject:V_.reject,nthen:TT(a.nthen,r),gthen:TT(a.gthen,r)}:{},t&&gS(r,t),++i.ref,r.finalize=function(){--this.parent.ref||this.parent.finalize()};var s=kT(r,e,n,o);return 0===r.ref&&r.finalize(),s}function mT(){return sT.id||(sT.id=++lT),++sT.awaits,sT.echoes+=100,sT.id}function gT(){return!!sT.awaits&&(0==--sT.awaits&&(sT.id=0),sT.echoes=100*sT.awaits,!0)}function fT(e){return sT.echoes&&e&&e.constructor===E_?(mT(),e.then(function(e){return gT(),e},function(e){return gT(),xT(e)})):e}function bT(e){++pT,sT.echoes&&0!=--sT.echoes||(sT.echoes=sT.id=0),cT.push(U_),vT(e,!0)}function yT(){var e=cT[cT.length-1];cT.pop(),vT(e,!1)}function vT(e,t){var n=U_;if((t?!sT.echoes||dT++&&e===U_:!dT||--dT&&e===U_)||ST(t?bT.bind(null,e):yT),e!==U_&&(U_=e,n===N_&&(N_.env=wT()),D_)){var o=N_.env.Promise,i=e.env;C_.then=i.nthen,o.prototype.then=i.gthen,(n.global||e.global)&&(Object.defineProperty(mS,"Promise",i.PromiseProp),o.all=i.all,o.race=i.race,o.resolve=i.resolve,o.reject=i.reject,i.allSettled&&(o.allSettled=i.allSettled),i.any&&(o.any=i.any))}}function wT(){var e=mS.Promise;return D_?{Promise:e,PromiseProp:Object.getOwnPropertyDescriptor(mS,"Promise"),all:e.all,race:e.race,allSettled:e.allSettled,any:e.any,resolve:e.resolve,reject:e.reject,nthen:C_.then,gthen:e.prototype.then}:{}}function kT(e,t,n,o,i){var r=U_;try{return vT(e,!0),t(n,o,i)}finally{vT(r,!1)}}function ST(e){I_.call(A_,e)}function _T(e,t,n,o){return"function"!=typeof e?e:function(){var i=U_;n&&mT(),vT(t,!0);try{return e.apply(this,arguments)}finally{vT(i,!1),o&&ST(gT)}}}function TT(e,t){return function(n,o){return e.call(this,_T(n,t),_T(o,t))}}-1===(""+I_).indexOf("[native code]")&&(mT=gT=m_);var AT="unhandledrejection";function CT(e,t){var n;try{n=t.onuncatched(e)}catch(r){}if(!1!==n)try{var o,i={promise:t,reason:e};if(mS.document&&document.createEvent?((o=document.createEvent("Event")).initEvent(AT,!0,!0),gS(o,i)):mS.CustomEvent&&gS(o=new CustomEvent(AT,{detail:i}),i),o&&mS.dispatchEvent&&(dispatchEvent(o),!mS.PromiseRejectionEvent&&mS.onunhandledrejection))try{mS.onunhandledrejection(o)}catch(a){}YS&&o&&!o.defaultPrevented&&console.warn("Unhandled rejection: "+(e.stack||e))}catch(r){}}var xT=V_.reject;function IT(e,t,n,o){if(e._state.openComplete||U_.letThrough){var i=e._createTransaction(t,n,e._dbSchema);try{i.create()}catch(r){return xT(r)}return i._promise(t,function(e,t){return hT(function(){return U_.trans=i,o(e,t,i)})}).then(function(e){return i._completion.then(function(){return e})})}if(!e._state.isBeingOpened){if(!e._options.autoOpen)return xT(new p_.DatabaseClosed);e.open().catch(m_)}return e._state.dbReadyPromise.then(function(){return IT(e,t,n,o)})}var ET="3.0.3",DT=String.fromCharCode(65535),OT=-1/0,jT="Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.",RT="String expected.",qT=[],MT="undefined"!=typeof navigator&&/(MSIE|Trident|Edge)/.test(navigator.userAgent),FT=MT,PT=MT,LT=function(e){return!/(dexie\.js|dexie\.min\.js)/.test(e)},zT="__dbnames",NT="readonly",UT="readwrite";function BT(e,t){return e?t?function(){return e.apply(this,arguments)&&t.apply(this,arguments)}:e:t}var WT={type:3,lower:-1/0,lowerOpen:!1,upper:[[]],upperOpen:!1};function $T(e){return function(t){return void 0===OS(t,e)&&RS(t=NS(t),e),t}}var VT=function(){function e(){}return e.prototype._trans=function(e,t,n){var o=this._tx||U_.trans,i=this.name;function r(e,n,o){if(!o.schema[i])throw new p_.NotFound("Table "+i+" not part of transaction");return t(o.idbtrans,o)}var a=nT();try{return o&&o.db===this.db?o===U_.trans?o._promise(e,r,n):hT(function(){return o._promise(e,r,n)},{trans:o,transless:U_.transless||U_}):IT(this.db,e,[this.name],r)}finally{a&&oT()}},e.prototype.get=function(e,t){var n=this;return e&&e.constructor===Object?this.where(e).first(t):this._trans("readonly",function(t){return n.core.get({trans:t,key:e}).then(function(e){return n.hook.reading.fire(e)})}).then(t)},e.prototype.where=function(e){if("string"==typeof e)return new this.db.WhereClause(this,e);if(hS(e))return new this.db.WhereClause(this,"["+e.join("+")+"]");var t=uS(e);if(1===t.length)return this.where(t[0]).equals(e[t[0]]);var n=this.schema.indexes.concat(this.schema.primKey).filter(function(e){return e.compound&&t.every(function(t){return e.keyPath.indexOf(t)>=0})&&e.keyPath.every(function(e){return t.indexOf(e)>=0})})[0];if(n&&this.db._maxKey!==DT)return this.where(n.name).equals(n.keyPath.map(function(t){return e[t]}));!n&&YS&&console.warn("The query "+JSON.stringify(e)+" on "+this.name+" would benefit of a compound index ["+t.join("+")+"]");var o=this.schema.idxByName,i=this.db._deps.indexedDB;function r(e,t){try{return 0===i.cmp(e,t)}catch(n){return!1}}var a=t.reduce(function(t,n){var i=t[0],a=t[1],s=o[n],l=e[n];return[i||s,i||!s?BT(a,s&&s.multi?function(e){var t=OS(e,n);return hS(t)&&t.some(function(e){return r(l,e)})}:function(e){return r(l,OS(e,n))}):a]},[null,null]),s=a[0],l=a[1];return s?this.where(s.name).equals(e[s.keyPath]).filter(l):n?this.filter(l):this.where(t).equals("")},e.prototype.filter=function(e){return this.toCollection().and(e)},e.prototype.count=function(e){return this.toCollection().count(e)},e.prototype.offset=function(e){return this.toCollection().offset(e)},e.prototype.limit=function(e){return this.toCollection().limit(e)},e.prototype.each=function(e){return this.toCollection().each(e)},e.prototype.toArray=function(e){return this.toCollection().toArray(e)},e.prototype.toCollection=function(){return new this.db.Collection(new this.db.WhereClause(this))},e.prototype.orderBy=function(e){return new this.db.Collection(new this.db.WhereClause(this,hS(e)?"["+e.join("+")+"]":e))},e.prototype.reverse=function(){return this.toCollection().reverse()},e.prototype.mapToClass=function(e){this.schema.mappedClass=e;var t=function(t){if(!t)return t;var n=Object.create(e.prototype);for(var o in t)if(yS(t,o))try{n[o]=t[o]}catch(i){}return n};return this.schema.readHook&&this.hook.reading.unsubscribe(this.schema.readHook),this.schema.readHook=t,this.hook("reading",t),e},e.prototype.defineClass=function(){return this.mapToClass(function(e){gS(this,e)})},e.prototype.add=function(e,t){var n=this,o=this.schema.primKey,i=o.keyPath,r=e;return i&&o.auto&&(r=$T(i)(e)),this._trans("readwrite",function(e){return n.core.mutate({trans:e,type:"add",keys:null!=t?[t]:null,values:[r]})}).then(function(e){return e.numFailures?V_.reject(e.failures[0]):e.lastResult}).then(function(t){if(i)try{jS(e,i,t)}catch(n){}return t})},e.prototype.update=function(e,t){if("object"!=typeof t||hS(t))throw new p_.InvalidArgument("Modifications must be an object.");if("object"!=typeof e||hS(e))return this.where(":id").equals(e).modify(t);uS(t).forEach(function(n){jS(e,n,t[n])});var n=OS(e,this.schema.primKey.keyPath);return void 0===n?xT(new p_.InvalidArgument("Given object does not contain its primary key")):this.where(":id").equals(n).modify(t)},e.prototype.put=function(e,t){var n=this,o=this.schema.primKey,i=o.keyPath,r=e;return i&&o.auto&&(r=$T(i)(e)),this._trans("readwrite",function(e){return n.core.mutate({trans:e,type:"put",values:[r],keys:null!=t?[t]:null})}).then(function(e){return e.numFailures?V_.reject(e.failures[0]):e.lastResult}).then(function(t){if(i)try{jS(e,i,t)}catch(n){}return t})},e.prototype.delete=function(e){var t=this;return this._trans("readwrite",function(n){return t.core.mutate({trans:n,type:"delete",keys:[e]})}).then(function(e){return e.numFailures?V_.reject(e.failures[0]):void 0})},e.prototype.clear=function(){var e=this;return this._trans("readwrite",function(t){return e.core.mutate({trans:t,type:"deleteRange",range:WT})}).then(function(e){return e.numFailures?V_.reject(e.failures[0]):void 0})},e.prototype.bulkGet=function(e){var t=this;return this._trans("readonly",function(n){return t.core.getMany({keys:e,trans:n}).then(function(e){return e.map(function(e){return t.hook.reading.fire(e)})})})},e.prototype.bulkAdd=function(e,t,n){var o=this,i=Array.isArray(t)?t:void 0,r=(n=n||(i?void 0:t))?n.allKeys:void 0;return this._trans("readwrite",function(t){var n=o.schema.primKey,a=n.auto,s=n.keyPath;if(s&&i)throw new p_.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");if(i&&i.length!==e.length)throw new p_.InvalidArgument("Arguments objects and keys must have the same length");var l=e.length,c=s&&a?e.map($T(s)):e;return o.core.mutate({trans:t,type:"add",keys:i,values:c,wantResults:r}).then(function(e){var t=e.numFailures,n=e.failures;if(0===t)return r?e.results:e.lastResult;throw new l_(o.name+".bulkAdd(): "+t+" of "+l+" operations failed",Object.keys(n).map(function(e){return n[e]}))})})},e.prototype.bulkPut=function(e,t,n){var o=this,i=Array.isArray(t)?t:void 0,r=(n=n||(i?void 0:t))?n.allKeys:void 0;return this._trans("readwrite",function(t){var n=o.schema.primKey,a=n.auto,s=n.keyPath;if(s&&i)throw new p_.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");if(i&&i.length!==e.length)throw new p_.InvalidArgument("Arguments objects and keys must have the same length");var l=e.length,c=s&&a?e.map($T(s)):e;return o.core.mutate({trans:t,type:"put",keys:i,values:c,wantResults:r}).then(function(e){var t=e.numFailures,n=e.failures;if(0===t)return r?e.results:e.lastResult;throw new l_(o.name+".bulkPut(): "+t+" of "+l+" operations failed",Object.keys(n).map(function(e){return n[e]}))})})},e.prototype.bulkDelete=function(e){var t=this,n=e.length;return this._trans("readwrite",function(n){return t.core.mutate({trans:n,type:"delete",keys:e})}).then(function(e){var o=e.numFailures;if(0===o)return e.lastResult;throw new l_(t.name+".bulkDelete(): "+o+" of "+n+" operations failed",e.failures)})},e}();function HT(e){var t={},n=function(n,o){if(o){for(var i=arguments.length,r=new Array(i-1);--i;)r[i-1]=arguments[i];return t[n].subscribe.apply(null,r),e}if("string"==typeof n)return t[n]};n.addEventType=r;for(var o=1,i=arguments.length;o<i;++o)r(arguments[o]);return n;function r(e,o,i){if("object"==typeof e)return a(e);o||(o=k_),i||(i=m_);var r={subscribers:[],fire:i,subscribe:function(e){-1===r.subscribers.indexOf(e)&&(r.subscribers.push(e),r.fire=o(r.fire,e))},unsubscribe:function(e){r.subscribers=r.subscribers.filter(function(t){return t!==e}),r.fire=r.subscribers.reduce(o,i)}};return t[e]=n[e]=r,r}function a(e){uS(e).forEach(function(t){var n=e[t];if(hS(n))r(t,e[t][0],e[t][1]);else{if("asap"!==n)throw new p_.InvalidArgument("Invalid event config");var o=r(t,g_,function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];o.subscribers.forEach(function(e){ES(function(){e.apply(null,t)})})})}})}}function GT(e,t){return SS(t).from({prototype:e}),t}function JT(e,t){return!(e.filter||e.algorithm||e.or)&&(t?e.justLimit:!e.replayFilter)}function KT(e,t){e.filter=BT(e.filter,t)}function YT(e,t,n){var o=e.replayFilter;e.replayFilter=o?function(){return BT(o(),t())}:t,e.justLimit=n&&!o}function QT(e,t){if(e.isPrimKey)return t.primaryKey;var n=t.getIndexByKeyPath(e.index);if(!n)throw new p_.Schema("KeyPath "+e.index+" on object store "+t.name+" is not indexed");return n}function ZT(e,t,n){var o=QT(e,t.schema);return t.openCursor({trans:n,values:!e.keysOnly,reverse:"prev"===e.dir,unique:!!e.unique,query:{index:o,range:e.range}})}function XT(e,t,n,o){var i=e.replayFilter?BT(e.filter,e.replayFilter()):e.filter;if(e.or){var r={},a=function(e,n,o){if(!i||i(n,o,function(e){return n.stop(e)},function(e){return n.fail(e)})){var a=n.primaryKey,s=""+a;"[object ArrayBuffer]"===s&&(s=""+new Uint8Array(a)),yS(r,s)||(r[s]=!0,t(e,n,o))}};return Promise.all([e.or._iterate(a,n),eA(ZT(e,o,n),e.algorithm,a,!e.keysOnly&&e.valueMapper)])}return eA(ZT(e,o,n),BT(e.algorithm,i),t,!e.keysOnly&&e.valueMapper)}function eA(e,t,n,o){var i=aT(o?function(e,t,i){return n(o(e),t,i)}:n);return e.then(function(e){if(e)return e.start(function(){var n=function(){return e.continue()};t&&!t(e,function(e){return n=e},function(t){e.stop(t),n=m_},function(t){e.fail(t),n=m_})||i(e.value,e,function(e){return n=e}),n()})})}var tA=function(){function e(){}return e.prototype._read=function(e,t){var n=this._ctx;return n.error?n.table._trans(null,xT.bind(null,n.error)):n.table._trans("readonly",e).then(t)},e.prototype._write=function(e){var t=this._ctx;return t.error?t.table._trans(null,xT.bind(null,t.error)):t.table._trans("readwrite",e,"locked")},e.prototype._addAlgorithm=function(e){var t=this._ctx;t.algorithm=BT(t.algorithm,e)},e.prototype._iterate=function(e,t){return XT(this._ctx,e,t,this._ctx.table.core)},e.prototype.clone=function(e){var t=Object.create(this.constructor.prototype),n=Object.create(this._ctx);return e&&gS(n,e),t._ctx=n,t},e.prototype.raw=function(){return this._ctx.valueMapper=null,this},e.prototype.each=function(e){var t=this._ctx;return this._read(function(n){return XT(t,e,n,t.table.core)})},e.prototype.count=function(e){var t=this;return this._read(function(e){var n=t._ctx,o=n.table.core;if(JT(n,!0))return o.count({trans:e,query:{index:QT(n,o.schema),range:n.range}}).then(function(e){return Math.min(e,n.limit)});var i=0;return XT(n,function(){return++i,!1},e,o).then(function(){return i})}).then(e)},e.prototype.sortBy=function(e,t){var n=e.split(".").reverse(),o=n[0],i=n.length-1;function r(e,t){return t?r(e[n[t]],t-1):e[o]}var a="next"===this._ctx.dir?1:-1;function s(e,t){var n=r(e,i),o=r(t,i);return n<o?-a:n>o?a:0}return this.toArray(function(e){return e.sort(s)}).then(t)},e.prototype.toArray=function(e){var t=this;return this._read(function(e){var n=t._ctx;if("next"===n.dir&&JT(n,!0)&&n.limit>0){var o=n.valueMapper,i=QT(n,n.table.core.schema);return n.table.core.query({trans:e,limit:n.limit,values:!0,query:{index:i,range:n.range}}).then(function(e){var t=e.result;return o?t.map(o):t})}var r=[];return XT(n,function(e){return r.push(e)},e,n.table.core).then(function(){return r})},e)},e.prototype.offset=function(e){var t=this._ctx;return e<=0||(t.offset+=e,JT(t)?YT(t,function(){var t=e;return function(e,n){return 0===t||(1===t?(--t,!1):(n(function(){e.advance(t),t=0}),!1))}}):YT(t,function(){var t=e;return function(){return--t<0}})),this},e.prototype.limit=function(e){return this._ctx.limit=Math.min(this._ctx.limit,e),YT(this._ctx,function(){var t=e;return function(e,n,o){return--t<=0&&n(o),t>=0}},!0),this},e.prototype.until=function(e,t){return KT(this._ctx,function(n,o,i){return!e(n.value)||(o(i),t)}),this},e.prototype.first=function(e){return this.limit(1).toArray(function(e){return e[0]}).then(e)},e.prototype.last=function(e){return this.reverse().first(e)},e.prototype.filter=function(e){var t;return KT(this._ctx,function(t){return e(t.value)}),(t=this._ctx).isMatch=BT(t.isMatch,e),this},e.prototype.and=function(e){return this.filter(e)},e.prototype.or=function(e){return new this.db.WhereClause(this._ctx.table,e,this)},e.prototype.reverse=function(){return this._ctx.dir="prev"===this._ctx.dir?"next":"prev",this._ondirectionchange&&this._ondirectionchange(this._ctx.dir),this},e.prototype.desc=function(){return this.reverse()},e.prototype.eachKey=function(e){var t=this._ctx;return t.keysOnly=!t.isMatch,this.each(function(t,n){e(n.key,n)})},e.prototype.eachUniqueKey=function(e){return this._ctx.unique="unique",this.eachKey(e)},e.prototype.eachPrimaryKey=function(e){var t=this._ctx;return t.keysOnly=!t.isMatch,this.each(function(t,n){e(n.primaryKey,n)})},e.prototype.keys=function(e){var t=this._ctx;t.keysOnly=!t.isMatch;var n=[];return this.each(function(e,t){n.push(t.key)}).then(function(){return n}).then(e)},e.prototype.primaryKeys=function(e){var t=this._ctx;if("next"===t.dir&&JT(t,!0)&&t.limit>0)return this._read(function(e){var n=QT(t,t.table.core.schema);return t.table.core.query({trans:e,values:!1,limit:t.limit,query:{index:n,range:t.range}})}).then(function(e){return e.result}).then(e);t.keysOnly=!t.isMatch;var n=[];return this.each(function(e,t){n.push(t.primaryKey)}).then(function(){return n}).then(e)},e.prototype.uniqueKeys=function(e){return this._ctx.unique="unique",this.keys(e)},e.prototype.firstKey=function(e){return this.limit(1).keys(function(e){return e[0]}).then(e)},e.prototype.lastKey=function(e){return this.reverse().firstKey(e)},e.prototype.distinct=function(){var e=this._ctx,t=e.index&&e.table.schema.idxByName[e.index];if(!t||!t.multi)return this;var n={};return KT(this._ctx,function(e){var t=e.primaryKey.toString(),o=yS(n,t);return n[t]=!0,!o}),this},e.prototype.modify=function(e){var t=this,n=this._ctx;return this._write(function(o){var i;if("function"==typeof e)i=e;else{var r=uS(e),a=r.length;i=function(t){for(var n=!1,o=0;o<a;++o){var i=r[o],s=e[i];OS(t,i)!==s&&(jS(t,i,s),n=!0)}return n}}var s=n.table.core,l=s.schema.primaryKey,c=l.outbound,d=l.extractKey,p="testmode"in WA?1:2e3,u=t.db.core.cmp,h=[],m=0,g=[],f=function(e,t){var n=t.failures;m+=e-t.numFailures;for(var o=0,i=uS(n);o<i.length;o++)h.push(n[i[o]])};return t.clone().primaryKeys().then(function(e){var t=function(n){var r=Math.min(p,e.length-n);return s.getMany({trans:o,keys:e.slice(n,n+r)}).then(function(a){for(var l=[],h=[],m=c?[]:null,g=[],b=0;b<r;++b){var y=a[b],v={value:NS(y),primKey:e[n+b]};!1!==i.call(v,v.value,v)&&(null==v.value?g.push(e[n+b]):c||0===u(d(y),d(v.value))?(h.push(v.value),c&&m.push(e[n+b])):(g.push(e[n+b]),l.push(v.value)))}return Promise.resolve(l.length>0&&s.mutate({trans:o,type:"add",values:l}).then(function(e){for(var t in e.failures)g.splice(parseInt(t),1);f(l.length,e)})).then(function(e){return h.length>0&&s.mutate({trans:o,type:"put",keys:m,values:h}).then(function(e){return f(h.length,e)})}).then(function(){return g.length>0&&s.mutate({trans:o,type:"delete",keys:g}).then(function(e){return f(g.length,e)})}).then(function(){return e.length>n+r&&t(n+p)})})};return t(0).then(function(){if(h.length>0)throw new s_("Error modifying one or more objects",h,m,g);return e.length})})})},e.prototype.delete=function(){var e=this._ctx,t=e.range;return JT(e)&&(e.isPrimKey&&!PT||3===t.type)?this._write(function(n){var o=t;return e.table.core.count({trans:n,query:{index:e.table.core.schema.primaryKey,range:o}}).then(function(t){return e.table.core.mutate({trans:n,type:"deleteRange",range:o}).then(function(e){var n=e.failures,o=e.numFailures;if(o)throw new s_("Could not delete some values",Object.keys(n).map(function(e){return n[e]}),t-o);return t-o})})}):this.modify(function(e,t){return t.value=null})},e}();function nA(e,t){return e<t?-1:e===t?0:1}function oA(e,t){return e>t?-1:e===t?0:1}function iA(e,t,n){var o=e instanceof dA?new e.Collection(e):e;return o._ctx.error=n?new n(t):new TypeError(t),o}function rA(e){return new e.Collection(e,function(){return cA("")}).limit(0)}function aA(e,t,n,o,i,r){for(var a=Math.min(e.length,o.length),s=-1,l=0;l<a;++l){var c=t[l];if(c!==o[l])return i(e[l],n[l])<0?e.substr(0,l)+n[l]+n.substr(l+1):i(e[l],o[l])<0?e.substr(0,l)+o[l]+n.substr(l+1):s>=0?e.substr(0,s)+t[s]+n.substr(s+1):null;i(e[l],c)<0&&(s=l)}return a<o.length&&"next"===r?e+n.substr(e.length):a<e.length&&"prev"===r?e.substr(0,n.length):s<0?null:e.substr(0,s)+o[s]+n.substr(s+1)}function sA(e,t,n,o){var i,r,a,s,l,c,d,p=n.length;if(!n.every(function(e){return"string"==typeof e}))return iA(e,RT);function u(e){i=function(e){return"next"===e?function(e){return e.toUpperCase()}:function(e){return e.toLowerCase()}}(e),r=function(e){return"next"===e?function(e){return e.toLowerCase()}:function(e){return e.toUpperCase()}}(e),a="next"===e?nA:oA;var t=n.map(function(e){return{lower:r(e),upper:i(e)}}).sort(function(e,t){return a(e.lower,t.lower)});s=t.map(function(e){return e.upper}),l=t.map(function(e){return e.lower}),c=e,d="next"===e?"":o}u("next");var h=new e.Collection(e,function(){return lA(s[0],l[p-1]+o)});h._ondirectionchange=function(e){u(e)};var m=0;return h._addAlgorithm(function(e,n,o){var i=e.key;if("string"!=typeof i)return!1;var u=r(i);if(t(u,l,m))return!0;for(var h=null,g=m;g<p;++g){var f=aA(i,u,s[g],l[g],a,c);null===f&&null===h?m=g+1:(null===h||a(h,f)>0)&&(h=f)}return n(null!==h?function(){e.continue(h+d)}:o),!1}),h}function lA(e,t,n,o){return{type:2,lower:e,upper:t,lowerOpen:n,upperOpen:o}}function cA(e){return{type:1,lower:e,upper:e}}var dA=function(){function e(){}return Object.defineProperty(e.prototype,"Collection",{get:function(){return this._ctx.table.db.Collection},enumerable:!0,configurable:!0}),e.prototype.between=function(e,t,n,o){n=!1!==n,o=!0===o;try{return this._cmp(e,t)>0||0===this._cmp(e,t)&&(n||o)&&(!n||!o)?rA(this):new this.Collection(this,function(){return lA(e,t,!n,!o)})}catch(i){return iA(this,jT)}},e.prototype.equals=function(e){return null==e?iA(this,jT):new this.Collection(this,function(){return cA(e)})},e.prototype.above=function(e){return null==e?iA(this,jT):new this.Collection(this,function(){return lA(e,void 0,!0)})},e.prototype.aboveOrEqual=function(e){return null==e?iA(this,jT):new this.Collection(this,function(){return lA(e,void 0,!1)})},e.prototype.below=function(e){return null==e?iA(this,jT):new this.Collection(this,function(){return lA(void 0,e,!1,!0)})},e.prototype.belowOrEqual=function(e){return null==e?iA(this,jT):new this.Collection(this,function(){return lA(void 0,e)})},e.prototype.startsWith=function(e){return"string"!=typeof e?iA(this,RT):this.between(e,e+DT,!0,!0)},e.prototype.startsWithIgnoreCase=function(e){return""===e?this.startsWith(e):sA(this,function(e,t){return 0===e.indexOf(t[0])},[e],DT)},e.prototype.equalsIgnoreCase=function(e){return sA(this,function(e,t){return e===t[0]},[e],"")},e.prototype.anyOfIgnoreCase=function(){var e=JS.apply(GS,arguments);return 0===e.length?rA(this):sA(this,function(e,t){return-1!==t.indexOf(e)},e,"")},e.prototype.startsWithAnyOfIgnoreCase=function(){var e=JS.apply(GS,arguments);return 0===e.length?rA(this):sA(this,function(e,t){return t.some(function(t){return 0===e.indexOf(t)})},e,DT)},e.prototype.anyOf=function(){var e=this,t=JS.apply(GS,arguments),n=this._cmp;try{t.sort(n)}catch(r){return iA(this,jT)}if(0===t.length)return rA(this);var o=new this.Collection(this,function(){return lA(t[0],t[t.length-1])});o._ondirectionchange=function(o){t.sort(n="next"===o?e._ascending:e._descending)};var i=0;return o._addAlgorithm(function(e,o,r){for(var a=e.key;n(a,t[i])>0;)if(++i===t.length)return o(r),!1;return 0===n(a,t[i])||(o(function(){e.continue(t[i])}),!1)}),o},e.prototype.notEqual=function(e){return this.inAnyRange([[OT,e],[e,this.db._maxKey]],{includeLowers:!1,includeUppers:!1})},e.prototype.noneOf=function(){var e=JS.apply(GS,arguments);if(0===e.length)return new this.Collection(this);try{e.sort(this._ascending)}catch(n){return iA(this,jT)}var t=e.reduce(function(e,t){return e?e.concat([[e[e.length-1][1],t]]):[[OT,t]]},null);return t.push([e[e.length-1],this.db._maxKey]),this.inAnyRange(t,{includeLowers:!1,includeUppers:!1})},e.prototype.inAnyRange=function(e,t){var n=this,o=this._cmp,i=this._ascending,r=this._descending,a=this._min,s=this._max;if(0===e.length)return rA(this);if(!e.every(function(e){return void 0!==e[0]&&void 0!==e[1]&&i(e[0],e[1])<=0}))return iA(this,"First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower",p_.InvalidArgument);var l,c=!t||!1!==t.includeLowers,d=t&&!0===t.includeUppers,p=i;function u(e,t){return p(e[0],t[0])}try{(l=e.reduce(function(e,t){for(var n=0,i=e.length;n<i;++n){var r=e[n];if(o(t[0],r[1])<0&&o(t[1],r[0])>0){r[0]=a(r[0],t[0]),r[1]=s(r[1],t[1]);break}}return n===i&&e.push(t),e},[])).sort(u)}catch(y){return iA(this,jT)}var h=0,m=d?function(e){return i(e,l[h][1])>0}:function(e){return i(e,l[h][1])>=0},g=c?function(e){return r(e,l[h][0])>0}:function(e){return r(e,l[h][0])>=0},f=m,b=new this.Collection(this,function(){return lA(l[0][0],l[l.length-1][1],!c,!d)});return b._ondirectionchange=function(e){"next"===e?(f=m,p=i):(f=g,p=r),l.sort(u)},b._addAlgorithm(function(e,t,o){for(var r=e.key;f(r);)if(++h===l.length)return t(o),!1;return!!function(e){return!m(e)&&!g(e)}(r)||(0===n._cmp(r,l[h][1])||0===n._cmp(r,l[h][0])||t(function(){e.continue(p===i?l[h][0]:l[h][1])}),!1)}),b},e.prototype.startsWithAnyOf=function(){var e=JS.apply(GS,arguments);return e.every(function(e){return"string"==typeof e})?0===e.length?rA(this):this.inAnyRange(e.map(function(e){return[e,e+DT]})):iA(this,"startsWithAnyOf() only works with strings")},e}();function pA(e){return 1===e.length?e[0]:e}function uA(e){try{return e.only([[]]),[[]]}catch(t){return DT}}function hA(e){return aT(function(t){return mA(t),e(t.target.error),!1})}function mA(e){e.stopPropagation&&e.stopPropagation(),e.preventDefault&&e.preventDefault()}var gA=function(){function e(){}return e.prototype._lock=function(){return IS(!U_.global),++this._reculock,1!==this._reculock||U_.global||(U_.lockOwnerFor=this),this},e.prototype._unlock=function(){if(IS(!U_.global),0==--this._reculock)for(U_.global||(U_.lockOwnerFor=null);this._blockedFuncs.length>0&&!this._locked();){var e=this._blockedFuncs.shift();try{kT(e[1],e[0])}catch(t){}}return this},e.prototype._locked=function(){return this._reculock&&U_.lockOwnerFor!==this},e.prototype.create=function(e){var t=this;if(!this.mode)return this;var n=this.db.idbdb,o=this.db._state.dbOpenError;if(IS(!this.idbtrans),!e&&!n)switch(o&&o.name){case"DatabaseClosedError":throw new p_.DatabaseClosed(o);case"MissingAPIError":throw new p_.MissingAPI(o.message,o);default:throw new p_.OpenFailed(o)}if(!this.active)throw new p_.TransactionInactive;return IS(null===this._completion._state),(e=this.idbtrans=e||n.transaction(pA(this.storeNames),this.mode)).onerror=aT(function(n){mA(n),t._reject(e.error)}),e.onabort=aT(function(n){mA(n),t.active&&t._reject(new p_.Abort(e.error)),t.active=!1,t.on("abort").fire(n)}),e.oncomplete=aT(function(){t.active=!1,t._resolve()}),this},e.prototype._promise=function(e,t,n){var o=this;if("readwrite"===e&&"readwrite"!==this.mode)return xT(new p_.ReadOnly("Transaction is readonly"));if(!this.active)return xT(new p_.TransactionInactive);if(this._locked())return new V_(function(i,r){o._blockedFuncs.push([function(){o._promise(e,t,n).then(i,r)},U_])});if(n)return hT(function(){var e=new V_(function(e,n){o._lock();var i=t(e,n,o);i&&i.then&&i.then(e,n)});return e.finally(function(){return o._unlock()}),e._lib=!0,e});var i=new V_(function(e,n){var i=t(e,n,o);i&&i.then&&i.then(e,n)});return i._lib=!0,i},e.prototype._root=function(){return this.parent?this.parent._root():this},e.prototype.waitFor=function(e){var t=this._root(),n=V_.resolve(e);if(t._waitingFor)t._waitingFor=t._waitingFor.then(function(){return n});else{t._waitingFor=n,t._waitingQueue=[];var o=t.idbtrans.objectStore(t.storeNames[0]);!function e(){for(++t._spinCount;t._waitingQueue.length;)t._waitingQueue.shift()();t._waitingFor&&(o.get(-1/0).onsuccess=e)}()}var i=t._waitingFor;return new V_(function(e,o){n.then(function(n){return t._waitingQueue.push(aT(e.bind(null,n)))},function(e){return t._waitingQueue.push(aT(o.bind(null,e)))}).finally(function(){t._waitingFor===i&&(t._waitingFor=null)})})},e.prototype.abort=function(){this.active&&this._reject(new p_.Abort),this.active=!1},e.prototype.table=function(e){var t=this._memoizedTables||(this._memoizedTables={});if(yS(t,e))return t[e];var n=this.schema[e];if(!n)throw new p_.NotFound("Table "+e+" not part of transaction");var o=new this.db.Table(e,n,this);return o.core=this.db.core.table(e),t[e]=o,o},e}();function fA(e,t,n,o,i,r,a){return{name:e,keyPath:t,unique:n,multi:o,auto:i,compound:r,src:(n&&!a?"&":"")+(o?"*":"")+(i?"++":"")+bA(t)}}function bA(e){return"string"==typeof e?e:e?"["+[].join.call(e,"+")+"]":""}function yA(e,t,n){return{name:e,primKey:t,indexes:n,mappedClass:null,idxByName:DS(n,function(e){return[e.name,e]})}}function vA(e){return null==e?function(){}:"string"==typeof e?function(e){return 1===e.split(".").length?function(t){return t[e]}:function(t){return OS(t,e)}}(e):function(t){return OS(t,e)}}function wA(e,t){return"delete"===t.type?t.keys:t.keys||t.values.map(e.extractKey)}function kA(e){return[].slice.call(e)}var SA=0;function _A(e){return null==e?":id":"string"==typeof e?e:"["+e.join("+")+"]"}function TA(e,t,n,o){var i=t.cmp.bind(t);function r(e){if(3===e.type)return null;if(4===e.type)throw new Error("Cannot convert never type to IDBKeyRange");var t=e.lower,o=e.upper,i=e.lowerOpen,r=e.upperOpen;return void 0===t?void 0===o?null:n.upperBound(o,!!r):void 0===o?n.lowerBound(t,!!i):n.bound(t,o,!!i,!!r)}var a=function(e,t){var n=kA(e.objectStoreNames);return{schema:{name:e.name,tables:n.map(function(e){return t.objectStore(e)}).map(function(e){var t=e.keyPath,n=e.autoIncrement,o=hS(t),i={},r={name:e.name,primaryKey:{name:null,isPrimaryKey:!0,outbound:null==t,compound:o,keyPath:t,autoIncrement:n,unique:!0,extractKey:vA(t)},indexes:kA(e.indexNames).map(function(t){return e.index(t)}).map(function(e){var t=e.unique,n=e.multiEntry,o=e.keyPath,r={name:e.name,compound:hS(o),keyPath:o,unique:t,multiEntry:n,extractKey:vA(o)};return i[_A(o)]=r,r}),getIndexByKeyPath:function(e){return i[_A(e)]}};return i[":id"]=r.primaryKey,null!=t&&(i[_A(t)]=r.primaryKey),r})},hasGetAll:n.length>0&&"getAll"in t.objectStore(n[0])&&!("undefined"!=typeof navigator&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604)}}(e,o),s=a.schema,l=a.hasGetAll,c=s.tables.map(function(e){return function(e){var t=e.name;return{name:t,schema:e,mutate:function(n){var o=n.trans,i=n.type,a=n.keys,s=n.values,l=n.range,c=n.wantResults;return new Promise(function(n,d){n=aT(n);var p=o.objectStore(t),u=null==p.keyPath,h="put"===i||"add"===i;if(!h&&"delete"!==i&&"deleteRange"!==i)throw new Error("Invalid operation type: "+i);var m=(a||s||{length:1}).length;if(a&&s&&a.length!==s.length)throw new Error("Given keys array must have same length as given values array.");if(0===m)return n({numFailures:0,failures:{},results:[],lastResult:void 0});var g,f=c&&pS(a||wA(e.primaryKey,{type:i,keys:a,values:s})),b=[],y=0,v=function(e){++y,mA(e),f&&(f[e.target._reqno]=void 0),b[e.target._reqno]=e.target.error},w=function(e){var t=e.target;f[t._reqno]=t.result};if("deleteRange"===i){if(4===l.type)return n({numFailures:y,failures:b,results:f,lastResult:void 0});g=3===l.type?p.clear():p.delete(r(l))}else{var k=h?u?[s,a]:[s,null]:[a,null],S=k[0],_=k[1];if(h)for(var T=0;T<m;++T)(g=_&&void 0!==_[T]?p[i](S[T],_[T]):p[i](S[T]))._reqno=T,f&&void 0===f[T]&&(g.onsuccess=w),g.onerror=v;else for(T=0;T<m;++T)(g=p[i](S[T]))._reqno=T,g.onerror=v}var A=function(e){var t=e.target.result;f&&(f[m-1]=t),n({numFailures:y,failures:b,results:f,lastResult:t})};g.onerror=function(e){v(e),A(e)},g.onsuccess=A})},getMany:function(e){var n=e.trans,o=e.keys;return new Promise(function(e,i){e=aT(e);for(var r,a=n.objectStore(t),s=o.length,l=new Array(s),c=0,d=0,p=function(t){var n=t.target;l[n._pos]=n.result,++d===c&&e(l)},u=hA(i),h=0;h<s;++h)null!=o[h]&&((r=a.get(o[h]))._pos=h,r.onsuccess=p,r.onerror=u,++c);0===c&&e(l)})},get:function(e){var n=e.trans,o=e.key;return new Promise(function(e,i){e=aT(e);var r=n.objectStore(t).get(o);r.onsuccess=function(t){return e(t.target.result)},r.onerror=hA(i)})},query:function(e){return function(n){return new Promise(function(o,i){o=aT(o);var a=n.values,s=n.limit,l=n.query,c=s===1/0?void 0:s,d=l.index,p=l.range,u=n.trans.objectStore(t),h=d.isPrimaryKey?u:u.index(d.name),m=r(p);if(0===s)return o({result:[]});if(e){var g=a?h.getAll(m,c):h.getAllKeys(m,c);g.onsuccess=function(e){return o({result:e.target.result})},g.onerror=hA(i)}else{var f=0,b=a||!("openKeyCursor"in h)?h.openCursor(m):h.openKeyCursor(m),y=[];b.onsuccess=function(e){var t=b.result;return t?(y.push(a?t.value:t.primaryKey),++f===s?o({result:y}):void t.continue()):o({result:y})},b.onerror=hA(i)}})}}(l),openCursor:function(e){var n=e.trans,o=e.values,i=e.query,a=e.reverse,s=e.unique;return new Promise(function(e,l){e=aT(e);var c=i.index,d=i.range,p=n.objectStore(t),u=c.isPrimaryKey?p:p.index(c.name),h=a?s?"prevunique":"prev":s?"nextunique":"next",m=o||!("openKeyCursor"in u)?u.openCursor(r(d),h):u.openKeyCursor(r(d),h);m.onerror=hA(l),m.onsuccess=aT(function(t){var o=m.result;if(o){o.___id=++SA,o.done=!1;var i=o.continue.bind(o),r=o.continuePrimaryKey;r&&(r=r.bind(o));var a=o.advance.bind(o),s=function(){throw new Error("Cursor not stopped")};o.trans=n,o.stop=o.continue=o.continuePrimaryKey=o.advance=function(){throw new Error("Cursor not started")},o.fail=aT(l),o.next=function(){var e=this,t=1;return this.start(function(){return t--?e.continue():e.stop()}).then(function(){return e})},o.start=function(e){var t=new Promise(function(e,t){e=aT(e),m.onerror=hA(t),o.fail=t,o.stop=function(t){o.stop=o.continue=o.continuePrimaryKey=o.advance=s,e(t)}}),n=function(){if(m.result)try{e()}catch(t){o.fail(t)}else o.done=!0,o.start=function(){throw new Error("Cursor behind last entry")},o.stop()};return m.onsuccess=aT(function(e){m.onsuccess=n,n()}),o.continue=i,o.continuePrimaryKey=r,o.advance=a,n(),t},e(o)}else e(null)},l)})},count:function(e){var n=e.query,o=e.trans,i=n.index,a=n.range;return new Promise(function(e,n){var s=o.objectStore(t),l=i.isPrimaryKey?s:s.index(i.name),c=r(a),d=c?l.count(c):l.count();d.onsuccess=aT(function(t){return e(t.target.result)}),d.onerror=hA(n)})}}}(e)}),d={};return c.forEach(function(e){return d[e.name]=e}),{stack:"dbcore",transaction:e.transaction.bind(e),table:function(e){if(!d[e])throw new Error("Table '"+e+"' not found");return d[e]},cmp:i,MIN_KEY:-1/0,MAX_KEY:uA(n),schema:s}}function AA(e,t){var n=function(e,t,n,o){return{dbcore:function(e,t){return t.reduce(function(e,t){var n=t.create;return dS(dS({},e),n(e))},e)}(TA(t,n.indexedDB,n.IDBKeyRange,o),e.dbcore)}}(e._middlewares,t.db,e._deps,t);e.core=n.dbcore,e.tables.forEach(function(t){var n=t.name;e.core.schema.tables.some(function(e){return e.name===n})&&(t.core=e.core.table(n),e[n]instanceof e.Table&&(e[n].core=t.core))})}function CA(e,t,n,o){n.forEach(function(n){var i=o[n];t.forEach(function(t){var o=TS(t,n);(!o||"value"in o&&void 0===o.value)&&(t===e.Transaction.prototype||t instanceof e.Transaction?kS(t,n,{get:function(){return this.table(n)},set:function(e){wS(this,n,{value:e,writable:!0,configurable:!0,enumerable:!0})}}):t[n]=new e.Table(n,i))})})}function xA(e,t){t.forEach(function(t){for(var n in t)t[n]instanceof e.Table&&delete t[n]})}function IA(e,t){return e._cfg.version-t._cfg.version}function EA(e,t){var n,o={del:[],add:[],change:[]};for(n in e)t[n]||o.del.push(n);for(n in t){var i=e[n],r=t[n];if(i){var a={name:n,def:r,recreate:!1,del:[],add:[],change:[]};if(""+(i.primKey.keyPath||"")!=""+(r.primKey.keyPath||"")||i.primKey.auto!==r.primKey.auto&&!MT)a.recreate=!0,o.change.push(a);else{var s=i.idxByName,l=r.idxByName,c=void 0;for(c in s)l[c]||a.del.push(c);for(c in l){var d=s[c],p=l[c];d?d.src!==p.src&&a.change.push(p):a.add.push(p)}(a.del.length>0||a.add.length>0||a.change.length>0)&&o.change.push(a)}}else o.add.push([n,r])}return o}function DA(e,t,n,o){var i=e.db.createObjectStore(t,n.keyPath?{keyPath:n.keyPath,autoIncrement:n.auto}:{autoIncrement:n.auto});return o.forEach(function(e){return OA(i,e)}),i}function OA(e,t){e.createIndex(t.name,t.keyPath,{unique:t.unique,multiEntry:t.multi})}function jA(e,t,n){var o={};return CS(t.objectStoreNames,0).forEach(function(e){for(var t=n.objectStore(e),i=t.keyPath,r=fA(bA(i),i||"",!1,!1,!!t.autoIncrement,i&&"string"!=typeof i,!0),a=[],s=0;s<t.indexNames.length;++s){var l=t.index(t.indexNames[s]),c=fA(l.name,i=l.keyPath,!!l.unique,!!l.multiEntry,!1,i&&"string"!=typeof i,!1);a.push(c)}o[e]=yA(e,r,a)}),o}function RA(e,t,n){for(var o=n.db.objectStoreNames,i=0;i<o.length;++i){var r=o[i],a=n.objectStore(r);e._hasGetAll="getAll"in a;for(var s=0;s<a.indexNames.length;++s){var l=a.indexNames[s],c=a.index(l).keyPath,d="string"==typeof c?c:"["+CS(c).join("+")+"]";if(t[r]){var p=t[r].idxByName[d];p&&(p.name=l,delete t[r].idxByName[d],t[r].idxByName[l]=p)}}}"undefined"!=typeof navigator&&/Safari/.test(navigator.userAgent)&&!/(Chrome\/|Edge\/)/.test(navigator.userAgent)&&mS.WorkerGlobalScope&&mS instanceof mS.WorkerGlobalScope&&[].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1]<604&&(e._hasGetAll=!1)}var qA,MA=function(){function e(){}return e.prototype._parseStoresSpec=function(e,t){uS(e).forEach(function(n){if(null!==e[n]){var o=e[n].split(",").map(function(e,t){var n=(e=e.trim()).replace(/([&*]|\+\+)/g,""),o=/^\[/.test(n)?n.match(/^\[(.*)\]$/)[1].split("+"):n;return fA(n,o||null,/\&/.test(e),/\*/.test(e),/\+\+/.test(e),hS(o),0===t)}),i=o.shift();if(i.multi)throw new p_.Schema("Primary key cannot be multi-valued");o.forEach(function(e){if(e.auto)throw new p_.Schema("Only primary key can be marked as autoIncrement (++)");if(!e.keyPath)throw new p_.Schema("Index must have a name and cannot be an empty string")}),t[n]=yA(n,i,o)}})},e.prototype.stores=function(e){var t=this.db;this._cfg.storesSource=this._cfg.storesSource?gS(this._cfg.storesSource,e):e;var n={},o={};return t._versions.forEach(function(e){gS(n,e._cfg.storesSource),o=e._cfg.dbschema={},e._parseStoresSpec(n,o)}),t._dbSchema=o,xA(t,[t._allTables,t,t.Transaction.prototype]),CA(t,[t._allTables,t,t.Transaction.prototype,this._cfg.tables],uS(o),o),t._storeNames=uS(o),this},e.prototype.upgrade=function(e){return this._cfg.contentUpgrade=e,this},e}();function FA(e){return hT(function(){return U_.letThrough=!0,e()})}function PA(e){var t=function(t){return e.next(t)},n=i(t),o=i(function(t){return e.throw(t)});function i(e){return function(t){var i=e(t),r=i.value;return i.done?r:r&&"function"==typeof r.then?r.then(n,o):hS(r)?Promise.all(r).then(n,o):n(r)}}return i(t)()}function LA(e,t,n){var o=arguments.length;if(o<2)throw new p_.InvalidArgument("Too few arguments");for(var i=new Array(o-1);--o;)i[o-1]=arguments[o];n=i.pop();var r=FS(i);return[e,r,n]}function zA(e,t,n,o,i){return V_.resolve().then(function(){var r=U_.transless||U_,a=e._createTransaction(t,n,e._dbSchema,o),s={trans:a,transless:r};o?a.idbtrans=o.idbtrans:a.create();var l,c=KS(i);c&&mT();var d=V_.follow(function(){if(l=i.call(a,a))if(c){var e=gT.bind(null,null);l.then(e,e)}else"function"==typeof l.next&&"function"==typeof l.throw&&(l=PA(l))},s);return(l&&"function"==typeof l.then?V_.resolve(l).then(function(e){return a.active?e:xT(new p_.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn"))}):d.then(function(){return l})).then(function(e){return o&&a._resolve(),a._completion.then(function(){return e})}).catch(function(e){return a._reject(e),xT(e)})})}function NA(e,t,n){for(var o=hS(e)?e.slice():[e],i=0;i<n;++i)o.push(t);return o}var UA={stack:"dbcore",name:"VirtualIndexMiddleware",level:1,create:function(e){return dS(dS({},e),{table:function(t){var n=e.table(t),o=n.schema,i={},r=[];function a(e,t,n){var o=_A(e),s=i[o]=i[o]||[],l=null==e?0:"string"==typeof e?1:e.length,c=t>0,d=dS(dS({},n),{isVirtual:c,isPrimaryKey:!c&&n.isPrimaryKey,keyTail:t,keyLength:l,extractKey:vA(e),unique:!c&&n.unique});return s.push(d),d.isPrimaryKey||r.push(d),l>1&&a(2===l?e[0]:e.slice(0,l-1),t+1,n),s.sort(function(e,t){return e.keyTail-t.keyTail}),d}var s=a(o.primaryKey.keyPath,0,o.primaryKey);i[":id"]=[s];for(var l=0,c=o.indexes;l<c.length;l++){var d=c[l];a(d.keyPath,0,d)}function p(t,n){return{type:1===t.type?2:t.type,lower:NA(t.lower,t.lowerOpen?e.MAX_KEY:e.MIN_KEY,n),lowerOpen:!0,upper:NA(t.upper,t.upperOpen?e.MIN_KEY:e.MAX_KEY,n),upperOpen:!0}}function u(e){var t=e.query.index;return t.isVirtual?dS(dS({},e),{query:{index:t,range:p(e.query.range,t.keyTail)}}):e}return dS(dS({},n),{schema:dS(dS({},o),{primaryKey:s,indexes:r,getIndexByKeyPath:function(e){var t=i[_A(e)];return t&&t[0]}}),count:function(e){return n.count(u(e))},query:function(e){return n.query(u(e))},openCursor:function(t){var o=t.query.index,i=o.keyTail,r=o.keyLength;return o.isVirtual?n.openCursor(u(t)).then(function(n){return n&&function(n){return Object.create(n,{continue:{value:function(o){null!=o?n.continue(NA(o,t.reverse?e.MAX_KEY:e.MIN_KEY,i)):t.unique?n.continue(NA(n.key,t.reverse?e.MIN_KEY:e.MAX_KEY,i)):n.continue()}},continuePrimaryKey:{value:function(t,o){n.continuePrimaryKey(NA(t,e.MAX_KEY,i),o)}},key:{get:function(){var e=n.key;return 1===r?e[0]:e.slice(0,r)}},value:{get:function(){return n.value}}})}(n)}):n.openCursor(t)}})}})}},BA={stack:"dbcore",name:"HooksMiddleware",level:2,create:function(e){return dS(dS({},e),{table:function(t){var n=e.table(t),o=n.schema.primaryKey;return dS(dS({},n),{mutate:function(e){var i=U_.trans,r=i.table(t).hook,a=r.deleting,s=r.creating,l=r.updating;switch(e.type){case"add":if(s.fire===m_)break;return i._promise("readwrite",function(){return c(e)},!0);case"put":if(s.fire===m_&&l.fire===m_)break;return i._promise("readwrite",function(){return c(e)},!0);case"delete":if(a.fire===m_)break;return i._promise("readwrite",function(){return c(e)},!0);case"deleteRange":if(a.fire===m_)break;return i._promise("readwrite",function(){return function(e){return d(e.trans,e.range,1e4)}(e)},!0)}return n.mutate(e);function c(e){var t=U_.trans,i=e.keys||wA(o,e);if(!i)throw new Error("Keys missing");return"delete"!==(e="add"===e.type||"put"===e.type?dS(dS({},e),{keys:i,wantResults:!0}):dS({},e)).type&&(e.values=pS(e.values)),e.keys&&(e.keys=pS(e.keys)),function(e,t,n){return"add"===t.type?Promise.resolve(new Array(t.values.length)):e.getMany({trans:t.trans,keys:n})}(n,e,i).then(function(r){var c=i.map(function(n,i){var c=r[i],d={onerror:null,onsuccess:null};if("delete"===e.type)a.fire.call(d,n,c,t);else if("add"===e.type||void 0===c){var p=s.fire.call(d,n,e.values[i],t);null==n&&null!=p&&(e.keys[i]=n=p,o.outbound||jS(e.values[i],o.keyPath,n))}else{var u=$S(c,e.values[i]),h=l.fire.call(d,u,n,c,t);if(h){var m=e.values[i];Object.keys(h).forEach(function(e){yS(m,e)?m[e]=h[e]:jS(m,e,h[e])})}}return d});return n.mutate(e).then(function(t){for(var n=t.failures,o=t.results,a=t.numFailures,s=t.lastResult,l=0;l<i.length;++l){var d=o?o[l]:i[l],p=c[l];null==d?p.onerror&&p.onerror(n[l]):p.onsuccess&&p.onsuccess("put"===e.type&&r[l]?e.values[l]:d)}return{failures:n,results:o,numFailures:a,lastResult:s}}).catch(function(e){return c.forEach(function(t){return t.onerror&&t.onerror(e)}),Promise.reject(e)})})}function d(e,t,i){return n.query({trans:e,values:!1,query:{index:o,range:t},limit:i}).then(function(n){var o=n.result;return c({type:"delete",keys:o,trans:e}).then(function(n){return n.numFailures>0?Promise.reject(n.failures[0]):o.length<i?{failures:[],numFailures:0,lastResult:void 0}:d(e,dS(dS({},t),{lower:o[o.length-1],lowerOpen:!0}),i)})})}}})}})}},WA=function(){function e(t,n){var o=this;this._middlewares={},this.verno=0;var i=e.dependencies;this._options=n=dS({addons:e.addons,autoOpen:!0,indexedDB:i.indexedDB,IDBKeyRange:i.IDBKeyRange},n),this._deps={indexedDB:n.indexedDB,IDBKeyRange:n.IDBKeyRange};var r=n.addons;this._dbSchema={},this._versions=[],this._storeNames=[],this._allTables={},this.idbdb=null;var a={dbOpenError:null,isBeingOpened:!1,onReadyBeingFired:null,openComplete:!1,dbReadyResolve:m_,dbReadyPromise:null,cancelOpen:m_,openCanceller:null,autoSchema:!0};a.dbReadyPromise=new V_(function(e){a.dbReadyResolve=e}),a.openCanceller=new V_(function(e,t){a.cancelOpen=t}),this._state=a,this.name=t,this.on=HT(this,"populate","blocked","versionchange",{ready:[S_,m_]}),this.on.ready.subscribe=xS(this.on.ready.subscribe,function(t){return function(n,i){e.vip(function(){var e=o._state;if(e.openComplete)e.dbOpenError||V_.resolve().then(n),i&&t(n);else if(e.onReadyBeingFired)e.onReadyBeingFired.push(n),i&&t(n);else{t(n);var r=o;i||t(function e(){r.on.ready.unsubscribe(n),r.on.ready.unsubscribe(e)})}})}}),this.Collection=function(e){return GT(tA.prototype,function(t,n){this.db=e;var o=WT,i=null;if(n)try{o=n()}catch(l){i=l}var r=t._ctx,a=r.table,s=a.hook.reading.fire;this._ctx={table:a,index:r.index,isPrimKey:!r.index||a.schema.primKey.keyPath&&r.index===a.schema.primKey.name,range:o,keysOnly:!1,dir:"next",unique:"",algorithm:null,filter:null,replayFilter:null,justLimit:!0,isMatch:null,offset:0,limit:1/0,error:i,or:r.or,valueMapper:s!==g_?s:null}})}(this),this.Table=function(e){return GT(VT.prototype,function(t,n,o){this.db=e,this._tx=o,this.name=t,this.schema=n,this.hook=e._allTables[t]?e._allTables[t].hook:HT(null,{creating:[y_,m_],reading:[f_,g_],updating:[w_,m_],deleting:[v_,m_]})})}(this),this.Transaction=function(e){return GT(gA.prototype,function(t,n,o,i){var r=this;this.db=e,this.mode=t,this.storeNames=n,this.schema=o,this.idbtrans=null,this.on=HT(this,"complete","error","abort"),this.parent=i||null,this.active=!0,this._reculock=0,this._blockedFuncs=[],this._resolve=null,this._reject=null,this._waitingFor=null,this._waitingQueue=null,this._spinCount=0,this._completion=new V_(function(e,t){r._resolve=e,r._reject=t}),this._completion.then(function(){r.active=!1,r.on.complete.fire()},function(e){var t=r.active;return r.active=!1,r.on.error.fire(e),r.parent?r.parent._reject(e):t&&r.idbtrans&&r.idbtrans.abort(),xT(e)})})}(this),this.Version=function(e){return GT(MA.prototype,function(t){this.db=e,this._cfg={version:t,storesSource:null,dbschema:{},tables:{},contentUpgrade:null}})}(this),this.WhereClause=function(e){return GT(dA.prototype,function(t,n,o){this.db=e,this._ctx={table:t,index:":id"===n?null:n,or:o};var i=e._deps.indexedDB;if(!i)throw new p_.MissingAPI("indexedDB API missing");this._cmp=this._ascending=i.cmp.bind(i),this._descending=function(e,t){return i.cmp(t,e)},this._max=function(e,t){return i.cmp(e,t)>0?e:t},this._min=function(e,t){return i.cmp(e,t)<0?e:t},this._IDBKeyRange=e._deps.IDBKeyRange})}(this),this.on("versionchange",function(e){e.newVersion>0?console.warn("Another connection wants to upgrade database '"+o.name+"'. Closing db now to resume the upgrade."):console.warn("Another connection wants to delete database '"+o.name+"'. Closing db now to resume the delete request."),o.close()}),this.on("blocked",function(e){!e.newVersion||e.newVersion<e.oldVersion?console.warn("Dexie.delete('"+o.name+"') was blocked"):console.warn("Upgrade '"+o.name+"' blocked by other connection holding version "+e.oldVersion/10)}),this._maxKey=uA(n.IDBKeyRange),this._createTransaction=function(e,t,n,i){return new o.Transaction(e,t,n,i)},this._fireOnBlocked=function(e){o.on("blocked").fire(e),qT.filter(function(e){return e.name===o.name&&e!==o&&!e._state.vcFired}).map(function(t){return t.on("versionchange").fire(e)})},this.use(UA),this.use(BA),r.forEach(function(e){return e(o)})}return e.prototype.version=function(e){if(isNaN(e)||e<.1)throw new p_.Type("Given version is not a positive number");if(e=Math.round(10*e)/10,this.idbdb||this._state.isBeingOpened)throw new p_.Schema("Cannot add version when database is open");this.verno=Math.max(this.verno,e);var t=this._versions,n=t.filter(function(t){return t._cfg.version===e})[0];return n||(n=new this.Version(e),t.push(n),t.sort(IA),n.stores({}),this._state.autoSchema=!1,n)},e.prototype._whenReady=function(e){var t=this;return this._state.openComplete||U_.letThrough?e():new V_(function(e,n){if(!t._state.isBeingOpened){if(!t._options.autoOpen)return void n(new p_.DatabaseClosed);t.open().catch(m_)}t._state.dbReadyPromise.then(e,n)}).then(e)},e.prototype.use=function(e){var t=e.stack,n=e.create,o=e.level,i=e.name;i&&this.unuse({stack:t,name:i});var r=this._middlewares[t]||(this._middlewares[t]=[]);return r.push({stack:t,create:n,level:null==o?10:o,name:i}),r.sort(function(e,t){return e.level-t.level}),this},e.prototype.unuse=function(e){var t=e.stack,n=e.name,o=e.create;return t&&this._middlewares[t]&&(this._middlewares[t]=this._middlewares[t].filter(function(e){return o?e.create!==o:!!n&&e.name!==n})),this},e.prototype.open=function(){return function(e){var t=e._state,n=e._deps.indexedDB;if(t.isBeingOpened||e.idbdb)return t.dbReadyPromise.then(function(){return t.dbOpenError?xT(t.dbOpenError):e});YS&&(t.openCanceller._stackHolder=e_()),t.isBeingOpened=!0,t.dbOpenError=null,t.openComplete=!1;var o=t.dbReadyResolve,i=null;return V_.race([t.openCanceller,new V_(function(o,r){if(!n)throw new p_.MissingAPI("indexedDB API not found. If using IE10+, make sure to run your code on a server URL (not locally). If using old Safari versions, make sure to include indexedDB polyfill.");var a=e.name,s=t.autoSchema?n.open(a):n.open(a,Math.round(10*e.verno));if(!s)throw new p_.MissingAPI("IndexedDB API not available");s.onerror=hA(r),s.onblocked=aT(e._fireOnBlocked),s.onupgradeneeded=aT(function(o){if(i=s.transaction,t.autoSchema&&!e._options.allowEmptyDB){s.onerror=mA,i.abort(),s.result.close();var l=n.deleteDatabase(a);l.onsuccess=l.onerror=aT(function(){r(new p_.NoSuchDatabase("Database "+a+" doesnt exist"))})}else{i.onerror=hA(r);var c=o.oldVersion>Math.pow(2,62)?0:o.oldVersion;e.idbdb=s.result,function(e,t,n,o){var i=e._dbSchema,r=e._createTransaction("readwrite",e._storeNames,i);r.create(n),r._completion.catch(o);var a=r._reject.bind(r),s=U_.transless||U_;hT(function(){U_.trans=r,U_.transless=s,0===t?(uS(i).forEach(function(e){DA(n,e,i[e].primKey,i[e].indexes)}),AA(e,n),V_.follow(function(){return e.on.populate.fire(r)}).catch(a)):function(e,t,n,o){var i=[],r=e._versions,a=e._dbSchema=jA(0,e.idbdb,o),s=!1;return r.filter(function(e){return e._cfg.version>=t}).forEach(function(r){i.push(function(){var i=a,l=r._cfg.dbschema;RA(e,i,o),RA(e,l,o),a=e._dbSchema=l;var c=EA(i,l);c.add.forEach(function(e){DA(o,e[0],e[1].primKey,e[1].indexes)}),c.change.forEach(function(e){if(e.recreate)throw new p_.Upgrade("Not yet support for changing primary key");var t=o.objectStore(e.name);e.add.forEach(function(e){return OA(t,e)}),e.change.forEach(function(e){t.deleteIndex(e.name),OA(t,e)}),e.del.forEach(function(e){return t.deleteIndex(e)})});var d=r._cfg.contentUpgrade;if(d&&r._cfg.version>t){AA(e,o),n._memoizedTables={},s=!0;var p=qS(l);c.del.forEach(function(e){p[e]=i[e]}),xA(e,[e.Transaction.prototype]),CA(e,[e.Transaction.prototype],uS(p),p),n.schema=p;var u,h=KS(d);h&&mT();var m=V_.follow(function(){if((u=d(n))&&h){var e=gT.bind(null,null);u.then(e,e)}});return u&&"function"==typeof u.then?V_.resolve(u):m.then(function(){return u})}}),i.push(function(t){s&&FT||function(e,t){for(var n=0;n<t.db.objectStoreNames.length;++n){var o=t.db.objectStoreNames[n];null==e[o]&&t.db.deleteObjectStore(o)}}(r._cfg.dbschema,t),xA(e,[e.Transaction.prototype]),CA(e,[e.Transaction.prototype],e._storeNames,e._dbSchema),n.schema=e._dbSchema})}),function e(){return i.length?V_.resolve(i.shift()(n.idbtrans)).then(e):V_.resolve()}().then(function(){var e,t;t=o,uS(e=a).forEach(function(n){t.db.objectStoreNames.contains(n)||DA(t,n,e[n].primKey,e[n].indexes)})})}(e,t,r,n).catch(a)})}(e,c/10,i,r)}},r),s.onsuccess=aT(function(){i=null;var n=e.idbdb=s.result,r=CS(n.objectStoreNames);if(r.length>0)try{var l=n.transaction(pA(r),"readonly");t.autoSchema?function(e,t,n){e.verno=t.version/10;var o=e._dbSchema=jA(0,t,n);e._storeNames=CS(t.objectStoreNames,0),CA(e,[e._allTables],uS(o),o)}(e,n,l):(RA(e,e._dbSchema,l),function(e,t){var n=EA(jA(0,e.idbdb,t),e._dbSchema);return!(n.add.length||n.change.some(function(e){return e.add.length||e.change.length}))}(e,l)||console.warn("Dexie SchemaDiff: Schema was extended without increasing the number passed to db.version(). Some queries may fail.")),AA(e,l)}catch(c){}qT.push(e),n.onversionchange=aT(function(n){t.vcFired=!0,e.on("versionchange").fire(n)}),qA.add(a),o()},r)})]).then(function(){return t.onReadyBeingFired=[],V_.resolve(FA(e.on.ready.fire)).then(function e(){if(t.onReadyBeingFired.length>0){var n=t.onReadyBeingFired.reduce(S_,m_);return t.onReadyBeingFired=[],V_.resolve(FA(n)).then(e)}})}).finally(function(){t.onReadyBeingFired=null}).then(function(){return t.isBeingOpened=!1,e}).catch(function(n){try{i&&i.abort()}catch(o){}return t.isBeingOpened=!1,e.close(),t.dbOpenError=n,xT(t.dbOpenError)}).finally(function(){t.openComplete=!0,o()})}(this)},e.prototype.close=function(){var e=qT.indexOf(this),t=this._state;if(e>=0&&qT.splice(e,1),this.idbdb){try{this.idbdb.close()}catch(n){}this.idbdb=null}this._options.autoOpen=!1,t.dbOpenError=new p_.DatabaseClosed,t.isBeingOpened&&t.cancelOpen(t.dbOpenError),t.dbReadyPromise=new V_(function(e){t.dbReadyResolve=e}),t.openCanceller=new V_(function(e,n){t.cancelOpen=n})},e.prototype.delete=function(){var e=this,t=arguments.length>0,n=this._state;return new V_(function(o,i){var r=function(){e.close();var t=e._deps.indexedDB.deleteDatabase(e.name);t.onsuccess=aT(function(){qA.remove(e.name),o()}),t.onerror=hA(i),t.onblocked=e._fireOnBlocked};if(t)throw new p_.InvalidArgument("Arguments not allowed in db.delete()");n.isBeingOpened?n.dbReadyPromise.then(r):r()})},e.prototype.backendDB=function(){return this.idbdb},e.prototype.isOpen=function(){return null!==this.idbdb},e.prototype.hasBeenClosed=function(){var e=this._state.dbOpenError;return e&&"DatabaseClosed"===e.name},e.prototype.hasFailed=function(){return null!==this._state.dbOpenError},e.prototype.dynamicallyOpened=function(){return this._state.autoSchema},Object.defineProperty(e.prototype,"tables",{get:function(){var e=this;return uS(this._allTables).map(function(t){return e._allTables[t]})},enumerable:!0,configurable:!0}),e.prototype.transaction=function(){var e=LA.apply(this,arguments);return this._transaction.apply(this,e)},e.prototype._transaction=function(e,t,n){var o=this,i=U_.trans;i&&i.db===this&&-1===e.indexOf("!")||(i=null);var r,a,s=-1!==e.indexOf("?");e=e.replace("!","").replace("?","");try{if(a=t.map(function(e){var t=e instanceof o.Table?e.name:e;if("string"!=typeof t)throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");return t}),"r"==e||e===NT)r=NT;else{if("rw"!=e&&e!=UT)throw new p_.InvalidArgument("Invalid transaction mode: "+e);r=UT}if(i){if(i.mode===NT&&r===UT){if(!s)throw new p_.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");i=null}i&&a.forEach(function(e){if(i&&-1===i.storeNames.indexOf(e)){if(!s)throw new p_.SubTransaction("Table "+e+" not included in parent transaction.");i=null}}),s&&i&&!i.active&&(i=null)}}catch(c){return i?i._promise(null,function(e,t){t(c)}):xT(c)}var l=zA.bind(null,this,r,a,i,n);return i?i._promise(r,l,"lock"):U_.trans?kT(U_.transless,function(){return o._whenReady(l)}):this._whenReady(l)},e.prototype.table=function(e){if(!yS(this._allTables,e))throw new p_.InvalidTable("Table "+e+" does not exist");return this._allTables[e]},e}(),$A=WA;vS($A,dS(dS({},h_),{delete:function(e){return new $A(e).delete()},exists:function(e){return new $A(e,{addons:[]}).open().then(function(e){return e.close(),!0}).catch("NoSuchDatabaseError",function(){return!1})},getDatabaseNames:function(e){return qA?qA.getDatabaseNames().then(e):V_.resolve([])},defineClass:function(){return function(e){gS(this,e)}},ignoreTransaction:function(e){return U_.trans?kT(U_.transless,e):e()},vip:FA,async:function(e){return function(){try{var t=PA(e.apply(this,arguments));return t&&"function"==typeof t.then?t:V_.resolve(t)}catch(n){return xT(n)}}},spawn:function(e,t,n){try{var o=PA(e.apply(n,t||[]));return o&&"function"==typeof o.then?o:V_.resolve(o)}catch(i){return xT(i)}},currentTransaction:{get:function(){return U_.trans||null}},waitFor:function(e,t){var n=V_.resolve("function"==typeof e?$A.ignoreTransaction(e):e).timeout(t||6e4);return U_.trans?U_.trans.waitFor(n):n},Promise:V_,debug:{get:function(){return YS},set:function(e){QS(e,"dexie"===e?function(){return!0}:LT)}},derive:SS,extend:gS,props:vS,override:xS,Events:HT,getByKeyPath:OS,setByKeyPath:jS,delByKeyPath:RS,shallowClone:qS,deepClone:NS,getObjectDiff:$S,asap:ES,minKey:OT,addons:[],connections:qT,errnames:c_,dependencies:function(){try{return{indexedDB:mS.indexedDB||mS.mozIndexedDB||mS.webkitIndexedDB||mS.msIndexedDB,IDBKeyRange:mS.IDBKeyRange||mS.webkitIDBKeyRange}}catch(e){return{indexedDB:null,IDBKeyRange:null}}}(),semVer:ET,version:ET.split(".").map(function(e){return parseInt(e)}).reduce(function(e,t,n){return e+t/Math.pow(10,2*n)}),default:$A,Dexie:$A})),$A.maxKey=uA($A.dependencies.IDBKeyRange),function(e){try{qA=function(e){var t,n=e&&"function"==typeof e.databases;if(!n){var o=new WA(zT,{addons:[]});o.version(1).stores({dbnames:"name"}),t=o.table("dbnames")}return{getDatabaseNames:function(){return n?V_.resolve(e.databases()).then(function(e){return e.map(function(e){return e.name}).filter(function(e){return e!==zT})}):t.toCollection().primaryKeys()},add:function(e){return!n&&e!==zT&&t.put({name:e}).catch(m_)},remove:function(e){return!n&&e!==zT&&t.delete(e).catch(m_)}}}(e)}catch(t){}}(WA.dependencies.indexedDB),V_.rejectionMapper=function(e,t){if(!e||e instanceof r_||e instanceof TypeError||e instanceof SyntaxError||!e.name||!u_[e.name])return e;var n=new u_[e.name](t||e.message,e);return"stack"in e&&kS(n,"stack",{get:function(){return this.inner.stack}}),n},QS(YS,LT);const VA=WA,HA=function(e,t){return{height:e,"background-image":t}};class GA{constructor(e,t,n,o,i,r){this.url=e,this.data=t,this.mimeType=n,this.tag=o,this.width=i,this.height=r}}const JA=new class extends VA{constructor(){super("ImageDB"),this.version(1).stores({images:"&url"}),this.images.mapToClass(GA)}};function KA(e){return JA.images.where("url").equals(e).toArray()}let YA=(()=>{class e{constructor(e,t){this.sanitizer=e,this.httpClient=t}getCSSBackgroundImageURL(e){return cS(this,void 0,void 0,function*(){let t=yield KA(e);if(0==t.length)return`url('${e}')`;const n=this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(t[0].data));return this.getSafeBackgroundImageUrl(n)})}getSafeBackgroundImageUrl(e){return`url("${e.changingThisBreaksApplicationSecurity}")`}fetchImage(e){return this.httpClient.get(e,{responseType:"blob"})}saveImageToDatabase(e,t){return cS(this,void 0,void 0,function*(){if(0==(yield KA(e)).length){const n=new GA(e,t,t.type);JA.images.put(n)}})}}return e.\u0275fac=function(t){return new(t||e)(ho(gu),ho(rk))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),QA=(()=>{class e{constructor(){}ngAfterViewInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["fs-background-image"]],inputs:{backgroundImageURL:"backgroundImageURL",height:"height"},decls:1,vars:4,consts:[[1,"fs-BackgroundImage",3,"ngStyle"]],template:function(e,t){1&e&&Pa(0,"div",0),2&e&&Ra("ngStyle",$l(1,HA,t.height,t.backgroundImageURL))},directives:[xp],styles:[".fs-BackgroundImage[_ngcontent-%COMP%] {\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 100%;\n}"]}),e})(),ZA=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp]]}),e})();function XA(e){return t=>t.lift(new eC(e))}class eC{constructor(e){this.notifier=e}call(e,t){const n=new tC(e),o=z(this.notifier,new P(n));return o&&!n.seenValue?(n.add(o),t.subscribe(n)):n}}class tC extends L{constructor(e){super(e),this.seenValue=!1}notifyNext(){this.seenValue=!0,this.complete()}notifyComplete(){}}const nC=Pe,oC=Symbol("__destroy"),iC=Symbol("__decoratorApplied");function rC(e){return"string"==typeof e?Symbol(`__destroy__${e}`):oC}function aC(e,t){e[t]||(e[t]=new _)}function sC(e,t){e[t]&&(e[t].next(),e[t].complete(),e[t]=null)}function lC(e){e&&"function"==typeof e.unsubscribe&&e.unsubscribe()}function cC(e,t){return function(){var n,o;if(e&&e.call(this),sC(this,rC()),t.arrayName)return o=this[t.arrayName],void(Array.isArray(o)&&o.forEach(lC));if(t.checkProperties)for(const e in this)(null===(n=t.blackList)||void 0===n?void 0:n.includes(e))||lC(this[e])}}function dC(e={}){return t=>{t[nC]?function(e,t){const n=e.\u0275pipe;n.onDestroy=cC(n.onDestroy,t)}(t,e):function(e,t){e.prototype.ngOnDestroy=cC(e.prototype.ngOnDestroy,t)}(t,e),function(e){e.prototype[iC]=!0}(t)}}function pC(e,t){return n=>{const o=rC(t);return"string"==typeof t?function(e,t,n){const o=e[t];aC(e,n),e[t]=function(){o.apply(this,arguments),sC(this,n),e[t]=o}}(e,t,o):aC(e,o),n.pipe(XA(e[o]))}}const uC=["mat-button",""],hC=["*"],mC=["mat-button","mat-flat-button","mat-icon-button","mat-raised-button","mat-stroked-button","mat-mini-fab","mat-fab"];class gC{constructor(e){this._elementRef=e}}const fC=lw(sw(cw(gC)));let bC=(()=>{class e extends fC{constructor(e,t,n){super(e),this._focusMonitor=t,this._animationMode=n,this.isRoundButton=this._hasHostAttributes("mat-fab","mat-mini-fab"),this.isIconButton=this._hasHostAttributes("mat-icon-button");for(const o of mC)this._hasHostAttributes(o)&&this._getHostElement().classList.add(o);e.nativeElement.classList.add("mat-button-base"),this.isRoundButton&&(this.color="accent")}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}focus(e,t){e?this._focusMonitor.focusVia(this._getHostElement(),e,t):this._getHostElement().focus(t)}_getHostElement(){return this._elementRef.nativeElement}_isRippleDisabled(){return this.disableRipple||this.disabled}_hasHostAttributes(...e){return e.some(e=>this._getHostElement().hasAttribute(e))}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(ab),ja(Xv,8))},e.\u0275cmp=We({type:e,selectors:[["button","mat-button",""],["button","mat-raised-button",""],["button","mat-icon-button",""],["button","mat-fab",""],["button","mat-mini-fab",""],["button","mat-stroked-button",""],["button","mat-flat-button",""]],viewQuery:function(e,t){if(1&e&&uc(Rw,5),2&e){let e;pc(e=mc())&&(t.ripple=e.first)}},hostAttrs:[1,"mat-focus-indicator"],hostVars:5,hostBindings:function(e,t){2&e&&(Ia("disabled",t.disabled||null),rs("_mat-animation-noopable","NoopAnimations"===t._animationMode)("mat-button-disabled",t.disabled))},inputs:{disabled:"disabled",disableRipple:"disableRipple",color:"color"},exportAs:["matButton"],features:[ga],attrs:uC,ngContentSelectors:hC,decls:4,vars:5,consts:[[1,"mat-button-wrapper"],["matRipple","",1,"mat-button-ripple",3,"matRippleDisabled","matRippleCentered","matRippleTrigger"],[1,"mat-button-focus-overlay"]],template:function(e,t){1&e&&(Qa(),Ma(0,"span",0),Za(1),Fa(),Pa(2,"span",1),Pa(3,"span",2)),2&e&&(tr(2),rs("mat-button-ripple-round",t.isRoundButton||t.isIconButton),Ra("matRippleDisabled",t._isRippleDisabled())("matRippleCentered",t.isIconButton)("matRippleTrigger",t._getHostElement()))},directives:[Rw],styles:[".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n"],encapsulation:2,changeDetection:0}),e})(),yC=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[qw,aw],aw]}),e})(),vC=1;const wC=(()=>Promise.resolve())(),kC={};function SC(e){return e in kC&&(delete kC[e],!0)}const _C={setImmediate(e){const t=vC++;return kC[t]=!0,wC.then(()=>SC(t)&&e()),t},clearImmediate(e){SC(e)}};class TC extends Sf{constructor(e,t){super(e,t),this.scheduler=e,this.work=t}requestAsyncId(e,t,n=0){return null!==n&&n>0?super.requestAsyncId(e,t,n):(e.actions.push(this),e.scheduled||(e.scheduled=_C.setImmediate(e.flush.bind(e,null))))}recycleAsyncId(e,t,n=0){if(null!==n&&n>0||null===n&&this.delay>0)return super.recycleAsyncId(e,t,n);0===e.actions.length&&(_C.clearImmediate(t),e.scheduled=void 0)}}class AC extends Tf{flush(e){this.active=!0,this.scheduled=void 0;const{actions:t}=this;let n,o=-1,i=t.length;e=e||t.shift();do{if(n=e.execute(e.state,e.delay))break}while(++o<i&&(e=t.shift()));if(this.active=!1,n){for(;++o<i&&(e=t.shift());)e.unsubscribe();throw n}}}const CC=new AC(TC);function xC(e,t=Af){var n;const o=(n=e)instanceof Date&&!isNaN(+n)?+e-t.now():Math.abs(e);return e=>e.lift(new IC(o,t))}class IC{constructor(e,t){this.delay=e,this.scheduler=t}call(e,t){return t.subscribe(new EC(e,this.delay,this.scheduler))}}class EC extends m{constructor(e,t,n){super(e),this.delay=t,this.scheduler=n,this.queue=[],this.active=!1,this.errored=!1}static dispatch(e){const t=e.source,n=t.queue,o=e.scheduler,i=e.destination;for(;n.length>0&&n[0].time-o.now()<=0;)n.shift().notification.observe(i);if(n.length>0){const t=Math.max(0,n[0].time-o.now());this.schedule(e,t)}else this.unsubscribe(),t.active=!1}_schedule(e){this.active=!0,this.destination.add(e.schedule(EC.dispatch,this.delay,{source:this,destination:this.destination,scheduler:e}))}scheduleNotification(e){if(!0===this.errored)return;const t=this.scheduler,n=new DC(t.now()+this.delay,e);this.queue.push(n),!1===this.active&&this._schedule(t)}_next(e){this.scheduleNotification(Nk.createNext(e))}_error(e){this.errored=!0,this.queue=[],this.destination.error(e),this.unsubscribe()}_complete(){this.scheduleNotification(Nk.createComplete()),this.unsubscribe()}}class DC{constructor(e,t){this.time=e,this.notification=t}}class OC{attach(e){return this._attachedHost=e,e.attach(this)}detach(){let e=this._attachedHost;null!=e&&(this._attachedHost=null,e.detach())}get isAttached(){return null!=this._attachedHost}setAttachedHost(e){this._attachedHost=e}}class jC extends OC{constructor(e,t,n,o){super(),this.component=e,this.viewContainerRef=t,this.injector=n,this.componentFactoryResolver=o}}class RC extends OC{constructor(e,t,n){super(),this.templateRef=e,this.viewContainerRef=t,this.context=n}get origin(){return this.templateRef.elementRef}attach(e,t=this.context){return this.context=t,super.attach(e)}detach(){return this.context=void 0,super.detach()}}class qC extends OC{constructor(e){super(),this.element=e instanceof $s?e.nativeElement:e}}class MC{constructor(){this._isDisposed=!1,this.attachDomPortal=null}hasAttached(){return!!this._attachedPortal}attach(e){return e instanceof jC?(this._attachedPortal=e,this.attachComponentPortal(e)):e instanceof RC?(this._attachedPortal=e,this.attachTemplatePortal(e)):this.attachDomPortal&&e instanceof qC?(this._attachedPortal=e,this.attachDomPortal(e)):void 0}detach(){this._attachedPortal&&(this._attachedPortal.setAttachedHost(null),this._attachedPortal=null),this._invokeDisposeFn()}dispose(){this.hasAttached()&&this.detach(),this._invokeDisposeFn(),this._isDisposed=!0}setDisposeFn(e){this._disposeFn=e}_invokeDisposeFn(){this._disposeFn&&(this._disposeFn(),this._disposeFn=null)}}class FC extends MC{constructor(e,t,n,o,i){super(),this.outletElement=e,this._componentFactoryResolver=t,this._appRef=n,this._defaultInjector=o,this.attachDomPortal=e=>{const t=e.element,n=this._document.createComment("dom-portal");t.parentNode.insertBefore(n,t),this.outletElement.appendChild(t),this._attachedPortal=e,super.setDisposeFn(()=>{n.parentNode&&n.parentNode.replaceChild(t,n)})},this._document=i}attachComponentPortal(e){const t=(e.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(e.component);let n;return e.viewContainerRef?(n=e.viewContainerRef.createComponent(t,e.viewContainerRef.length,e.injector||e.viewContainerRef.injector),this.setDisposeFn(()=>n.destroy())):(n=t.create(e.injector||this._defaultInjector),this._appRef.attachView(n.hostView),this.setDisposeFn(()=>{this._appRef.detachView(n.hostView),n.destroy()})),this.outletElement.appendChild(this._getComponentRootNode(n)),this._attachedPortal=e,n}attachTemplatePortal(e){let t=e.viewContainerRef,n=t.createEmbeddedView(e.templateRef,e.context);return n.rootNodes.forEach(e=>this.outletElement.appendChild(e)),n.detectChanges(),this.setDisposeFn(()=>{let e=t.indexOf(n);-1!==e&&t.remove(e)}),this._attachedPortal=e,n}dispose(){super.dispose(),null!=this.outletElement.parentNode&&this.outletElement.parentNode.removeChild(this.outletElement)}_getComponentRootNode(e){return e.hostView.rootNodes[0]}}let PC=(()=>{class e extends MC{constructor(e,t,n){super(),this._componentFactoryResolver=e,this._viewContainerRef=t,this._isInitialized=!1,this.attached=new Xl,this.attachDomPortal=e=>{const t=e.element,n=this._document.createComment("dom-portal");e.setAttachedHost(this),t.parentNode.insertBefore(n,t),this._getRootNode().appendChild(t),this._attachedPortal=e,super.setDisposeFn(()=>{n.parentNode&&n.parentNode.replaceChild(t,n)})},this._document=n}get portal(){return this._attachedPortal}set portal(e){(!this.hasAttached()||e||this._isInitialized)&&(this.hasAttached()&&super.detach(),e&&super.attach(e),this._attachedPortal=e)}get attachedRef(){return this._attachedRef}ngOnInit(){this._isInitialized=!0}ngOnDestroy(){super.dispose(),this._attachedPortal=null,this._attachedRef=null}attachComponentPortal(e){e.setAttachedHost(this);const t=null!=e.viewContainerRef?e.viewContainerRef:this._viewContainerRef,n=(e.componentFactoryResolver||this._componentFactoryResolver).resolveComponentFactory(e.component),o=t.createComponent(n,t.length,e.injector||t.injector);return t!==this._viewContainerRef&&this._getRootNode().appendChild(o.hostView.rootNodes[0]),super.setDisposeFn(()=>o.destroy()),this._attachedPortal=e,this._attachedRef=o,this.attached.emit(o),o}attachTemplatePortal(e){e.setAttachedHost(this);const t=this._viewContainerRef.createEmbeddedView(e.templateRef,e.context);return super.setDisposeFn(()=>this._viewContainerRef.clear()),this._attachedPortal=e,this._attachedRef=t,this.attached.emit(t),t}_getRootNode(){const e=this._viewContainerRef.element.nativeElement;return e.nodeType===e.ELEMENT_NODE?e:e.parentNode}}return e.\u0275fac=function(t){return new(t||e)(ja(Ns),ja(Il),ja(yd))},e.\u0275dir=Ke({type:e,selectors:[["","cdkPortalOutlet",""]],inputs:{portal:["cdkPortalOutlet","portal"]},outputs:{attached:"attached"},exportAs:["cdkPortalOutlet"],features:[ga]}),e})(),LC=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})();class zC{constructor(e){this.durationSelector=e}call(e,t){return t.subscribe(new NC(e,this.durationSelector))}}class NC extends L{constructor(e,t){super(e),this.durationSelector=t,this.hasValue=!1}_next(e){if(this.value=e,this.hasValue=!0,!this.throttled){let n;try{const{durationSelector:t}=this;n=t(e)}catch(t){return this.destination.error(t)}const o=z(n,new P(this));!o||o.closed?this.clearThrottle():this.add(this.throttled=o)}}clearThrottle(){const{value:e,hasValue:t,throttled:n}=this;n&&(this.remove(n),this.throttled=void 0,n.unsubscribe()),t&&(this.value=void 0,this.hasValue=!1,this.destination.next(e))}notifyNext(){this.clearThrottle()}notifyComplete(){this.clearThrottle()}}function UC(e){return!l(e)&&e-parseFloat(e)+1>=0}function BC(e){const{index:t,period:n,subscriber:o}=e;if(o.next(t),!o.closed){if(-1===n)return o.complete();e.index=t+1,this.schedule(e,n)}}function WC(e,t=Af){return n=()=>function(e=0,t,n){let o=-1;return UC(t)?o=Number(t)<1?1:Number(t):A(t)&&(n=t),A(n)||(n=Af),new y(t=>{const i=UC(e)?e:+e-n.now();return n.schedule(BC,i,{index:0,period:o,subscriber:t})})}(e,t),function(e){return e.lift(new zC(n))};var n}let $C=(()=>{class e{constructor(e,t,n){this._ngZone=e,this._platform=t,this._scrolled=new _,this._globalSubscription=null,this._scrolledCount=0,this.scrollContainers=new Map,this._document=n}register(e){this.scrollContainers.has(e)||this.scrollContainers.set(e,e.elementScrolled().subscribe(()=>this._scrolled.next(e)))}deregister(e){const t=this.scrollContainers.get(e);t&&(t.unsubscribe(),this.scrollContainers.delete(e))}scrolled(e=20){return this._platform.isBrowser?new y(t=>{this._globalSubscription||this._addGlobalListener();const n=e>0?this._scrolled.pipe(WC(e)).subscribe(t):this._scrolled.subscribe(t);return this._scrolledCount++,()=>{n.unsubscribe(),this._scrolledCount--,this._scrolledCount||this._removeGlobalListener()}}):Cu()}ngOnDestroy(){this._removeGlobalListener(),this.scrollContainers.forEach((e,t)=>this.deregister(t)),this._scrolled.complete()}ancestorScrolled(e,t){const n=this.getAncestorScrollContainers(e);return this.scrolled(t).pipe(Yu(e=>!e||n.indexOf(e)>-1))}getAncestorScrollContainers(e){const t=[];return this.scrollContainers.forEach((n,o)=>{this._scrollableContainsElement(o,e)&&t.push(o)}),t}_getWindow(){return this._document.defaultView||window}_scrollableContainsElement(e,t){let n=Rf(t),o=e.getElementRef().nativeElement;do{if(n==o)return!0}while(n=n.parentElement);return!1}_addGlobalListener(){this._globalSubscription=this._ngZone.runOutsideAngular(()=>Vk(this._getWindow().document,"scroll").subscribe(()=>this._scrolled.next()))}_removeGlobalListener(){this._globalSubscription&&(this._globalSubscription.unsubscribe(),this._globalSubscription=null)}}return e.\u0275fac=function(t){return new(t||e)(ho(zc),ho(Ff),ho(yd,8))},e.\u0275prov=ue({factory:function(){return new e(ho(zc),ho(Ff),ho(yd,8))},token:e,providedIn:"root"}),e})(),VC=(()=>{class e{constructor(e,t,n){this._platform=e,this._change=new _,this._changeListener=e=>{this._change.next(e)},this._document=n,t.runOutsideAngular(()=>{if(e.isBrowser){const e=this._getWindow();e.addEventListener("resize",this._changeListener),e.addEventListener("orientationchange",this._changeListener)}this.change().subscribe(()=>this._updateViewportSize())})}ngOnDestroy(){if(this._platform.isBrowser){const e=this._getWindow();e.removeEventListener("resize",this._changeListener),e.removeEventListener("orientationchange",this._changeListener)}this._change.complete()}getViewportSize(){this._viewportSize||this._updateViewportSize();const e={width:this._viewportSize.width,height:this._viewportSize.height};return this._platform.isBrowser||(this._viewportSize=null),e}getViewportRect(){const e=this.getViewportScrollPosition(),{width:t,height:n}=this.getViewportSize();return{top:e.top,left:e.left,bottom:e.top+n,right:e.left+t,height:n,width:t}}getViewportScrollPosition(){if(!this._platform.isBrowser)return{top:0,left:0};const e=this._document,t=this._getWindow(),n=e.documentElement,o=n.getBoundingClientRect();return{top:-o.top||e.body.scrollTop||t.scrollY||n.scrollTop||0,left:-o.left||e.body.scrollLeft||t.scrollX||n.scrollLeft||0}}change(e=20){return e>0?this._change.pipe(WC(e)):this._change}_getWindow(){return this._document.defaultView||window}_updateViewportSize(){const e=this._getWindow();this._viewportSize=this._platform.isBrowser?{width:e.innerWidth,height:e.innerHeight}:{width:0,height:0}}}return e.\u0275fac=function(t){return new(t||e)(ho(Ff),ho(zc),ho(yd,8))},e.\u0275prov=ue({factory:function(){return new e(ho(Ff),ho(zc),ho(yd,8))},token:e,providedIn:"root"}),e})(),HC=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),GC=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[gb,Pf,HC],gb,HC]}),e})();const JC=$f();class KC{constructor(e,t){this._viewportRuler=e,this._previousHTMLStyles={top:"",left:""},this._isEnabled=!1,this._document=t}attach(){}enable(){if(this._canBeEnabled()){const e=this._document.documentElement;this._previousScrollPosition=this._viewportRuler.getViewportScrollPosition(),this._previousHTMLStyles.left=e.style.left||"",this._previousHTMLStyles.top=e.style.top||"",e.style.left=jf(-this._previousScrollPosition.left),e.style.top=jf(-this._previousScrollPosition.top),e.classList.add("cdk-global-scrollblock"),this._isEnabled=!0}}disable(){if(this._isEnabled){const e=this._document.documentElement,t=e.style,n=this._document.body.style,o=t.scrollBehavior||"",i=n.scrollBehavior||"";this._isEnabled=!1,t.left=this._previousHTMLStyles.left,t.top=this._previousHTMLStyles.top,e.classList.remove("cdk-global-scrollblock"),JC&&(t.scrollBehavior=n.scrollBehavior="auto"),window.scroll(this._previousScrollPosition.left,this._previousScrollPosition.top),JC&&(t.scrollBehavior=o,n.scrollBehavior=i)}}_canBeEnabled(){if(this._document.documentElement.classList.contains("cdk-global-scrollblock")||this._isEnabled)return!1;const e=this._document.body,t=this._viewportRuler.getViewportSize();return e.scrollHeight>t.height||e.scrollWidth>t.width}}class YC{constructor(e,t,n,o){this._scrollDispatcher=e,this._ngZone=t,this._viewportRuler=n,this._config=o,this._scrollSubscription=null,this._detach=()=>{this.disable(),this._overlayRef.hasAttached()&&this._ngZone.run(()=>this._overlayRef.detach())}}attach(e){this._overlayRef=e}enable(){if(this._scrollSubscription)return;const e=this._scrollDispatcher.scrolled(0);this._config&&this._config.threshold&&this._config.threshold>1?(this._initialScrollPosition=this._viewportRuler.getViewportScrollPosition().top,this._scrollSubscription=e.subscribe(()=>{const e=this._viewportRuler.getViewportScrollPosition().top;Math.abs(e-this._initialScrollPosition)>this._config.threshold?this._detach():this._overlayRef.updatePosition()})):this._scrollSubscription=e.subscribe(this._detach)}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}class QC{enable(){}disable(){}attach(){}}function ZC(e,t){return t.some(t=>e.bottom<t.top||e.top>t.bottom||e.right<t.left||e.left>t.right)}function XC(e,t){return t.some(t=>e.top<t.top||e.bottom>t.bottom||e.left<t.left||e.right>t.right)}class ex{constructor(e,t,n,o){this._scrollDispatcher=e,this._viewportRuler=t,this._ngZone=n,this._config=o,this._scrollSubscription=null}attach(e){this._overlayRef=e}enable(){this._scrollSubscription||(this._scrollSubscription=this._scrollDispatcher.scrolled(this._config?this._config.scrollThrottle:0).subscribe(()=>{if(this._overlayRef.updatePosition(),this._config&&this._config.autoClose){const e=this._overlayRef.overlayElement.getBoundingClientRect(),{width:t,height:n}=this._viewportRuler.getViewportSize();ZC(e,[{width:t,height:n,bottom:n,right:t,top:0,left:0}])&&(this.disable(),this._ngZone.run(()=>this._overlayRef.detach()))}}))}disable(){this._scrollSubscription&&(this._scrollSubscription.unsubscribe(),this._scrollSubscription=null)}detach(){this.disable(),this._overlayRef=null}}let tx=(()=>{class e{constructor(e,t,n,o){this._scrollDispatcher=e,this._viewportRuler=t,this._ngZone=n,this.noop=()=>new QC,this.close=e=>new YC(this._scrollDispatcher,this._ngZone,this._viewportRuler,e),this.block=()=>new KC(this._viewportRuler,this._document),this.reposition=e=>new ex(this._scrollDispatcher,this._viewportRuler,this._ngZone,e),this._document=o}}return e.\u0275fac=function(t){return new(t||e)(ho($C),ho(VC),ho(zc),ho(yd))},e.\u0275prov=ue({factory:function(){return new e(ho($C),ho(VC),ho(zc),ho(yd))},token:e,providedIn:"root"}),e})();class nx{constructor(e){if(this.scrollStrategy=new QC,this.panelClass="",this.hasBackdrop=!1,this.backdropClass="cdk-overlay-dark-backdrop",this.disposeOnNavigation=!1,e){const t=Object.keys(e);for(const n of t)void 0!==e[n]&&(this[n]=e[n])}}}class ox{constructor(e,t,n,o,i){this.offsetX=n,this.offsetY=o,this.panelClass=i,this.originX=e.originX,this.originY=e.originY,this.overlayX=t.overlayX,this.overlayY=t.overlayY}}class ix{constructor(e,t){this.connectionPair=e,this.scrollableViewProperties=t}}let rx=(()=>{class e{constructor(e){this._attachedOverlays=[],this._document=e}ngOnDestroy(){this.detach()}add(e){this.remove(e),this._attachedOverlays.push(e)}remove(e){const t=this._attachedOverlays.indexOf(e);t>-1&&this._attachedOverlays.splice(t,1),0===this._attachedOverlays.length&&this.detach()}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:function(){return new e(ho(yd))},token:e,providedIn:"root"}),e})(),ax=(()=>{class e extends rx{constructor(e){super(e),this._keydownListener=e=>{const t=this._attachedOverlays;for(let n=t.length-1;n>-1;n--)if(t[n]._keydownEvents.observers.length>0){t[n]._keydownEvents.next(e);break}}}add(e){super.add(e),this._isAttached||(this._document.body.addEventListener("keydown",this._keydownListener),this._isAttached=!0)}detach(){this._isAttached&&(this._document.body.removeEventListener("keydown",this._keydownListener),this._isAttached=!1)}}return e.\u0275fac=function(t){return new(t||e)(ho(yd))},e.\u0275prov=ue({factory:function(){return new e(ho(yd))},token:e,providedIn:"root"}),e})(),sx=(()=>{class e extends rx{constructor(e,t){super(e),this._platform=t,this._cursorStyleIsSet=!1,this._clickListener=e=>{const t=e.composedPath?e.composedPath()[0]:e.target,n=this._attachedOverlays.slice();for(let o=n.length-1;o>-1;o--){const i=n[o];if(!(i._outsidePointerEvents.observers.length<1)&&i.hasAttached()){if(i.overlayElement.contains(t))break;i._outsidePointerEvents.next(e)}}}}add(e){if(super.add(e),!this._isAttached){const e=this._document.body;e.addEventListener("click",this._clickListener,!0),e.addEventListener("auxclick",this._clickListener,!0),e.addEventListener("contextmenu",this._clickListener,!0),this._platform.IOS&&!this._cursorStyleIsSet&&(this._cursorOriginalValue=e.style.cursor,e.style.cursor="pointer",this._cursorStyleIsSet=!0),this._isAttached=!0}}detach(){if(this._isAttached){const e=this._document.body;e.removeEventListener("click",this._clickListener,!0),e.removeEventListener("auxclick",this._clickListener,!0),e.removeEventListener("contextmenu",this._clickListener,!0),this._platform.IOS&&this._cursorStyleIsSet&&(e.style.cursor=this._cursorOriginalValue,this._cursorStyleIsSet=!1),this._isAttached=!1}}}return e.\u0275fac=function(t){return new(t||e)(ho(yd),ho(Ff))},e.\u0275prov=ue({factory:function(){return new e(ho(yd),ho(Ff))},token:e,providedIn:"root"}),e})();const lx=!("undefined"==typeof window||!window||!window.__karma__&&!window.jasmine);let cx=(()=>{class e{constructor(e,t){this._platform=t,this._document=e}ngOnDestroy(){const e=this._containerElement;e&&e.parentNode&&e.parentNode.removeChild(e)}getContainerElement(){return this._containerElement||this._createContainer(),this._containerElement}_createContainer(){const e="cdk-overlay-container";if(this._platform.isBrowser||lx){const t=this._document.querySelectorAll(`.${e}[platform="server"], .${e}[platform="test"]`);for(let e=0;e<t.length;e++)t[e].parentNode.removeChild(t[e])}const t=this._document.createElement("div");t.classList.add(e),lx?t.setAttribute("platform","test"):this._platform.isBrowser||t.setAttribute("platform","server"),this._document.body.appendChild(t),this._containerElement=t}}return e.\u0275fac=function(t){return new(t||e)(ho(yd),ho(Ff))},e.\u0275prov=ue({factory:function(){return new e(ho(yd),ho(Ff))},token:e,providedIn:"root"}),e})();class dx{constructor(e,t,n,o,i,r,a,s,l){this._portalOutlet=e,this._host=t,this._pane=n,this._config=o,this._ngZone=i,this._keyboardDispatcher=r,this._document=a,this._location=s,this._outsideClickDispatcher=l,this._backdropElement=null,this._backdropClick=new _,this._attachments=new _,this._detachments=new _,this._locationChanges=p.EMPTY,this._backdropClickHandler=e=>this._backdropClick.next(e),this._keydownEvents=new _,this._outsidePointerEvents=new _,o.scrollStrategy&&(this._scrollStrategy=o.scrollStrategy,this._scrollStrategy.attach(this)),this._positionStrategy=o.positionStrategy}get overlayElement(){return this._pane}get backdropElement(){return this._backdropElement}get hostElement(){return this._host}attach(e){let t=this._portalOutlet.attach(e);return!this._host.parentElement&&this._previousHostParent&&this._previousHostParent.appendChild(this._host),this._positionStrategy&&this._positionStrategy.attach(this),this._updateStackingOrder(),this._updateElementSize(),this._updateElementDirection(),this._scrollStrategy&&this._scrollStrategy.enable(),this._ngZone.onStable.pipe(Wu(1)).subscribe(()=>{this.hasAttached()&&this.updatePosition()}),this._togglePointerEvents(!0),this._config.hasBackdrop&&this._attachBackdrop(),this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!0),this._attachments.next(),this._keyboardDispatcher.add(this),this._config.disposeOnNavigation&&(this._locationChanges=this._location.subscribe(()=>this.dispose())),this._outsideClickDispatcher.add(this),t}detach(){if(!this.hasAttached())return;this.detachBackdrop(),this._togglePointerEvents(!1),this._positionStrategy&&this._positionStrategy.detach&&this._positionStrategy.detach(),this._scrollStrategy&&this._scrollStrategy.disable();const e=this._portalOutlet.detach();return this._detachments.next(),this._keyboardDispatcher.remove(this),this._detachContentWhenStable(),this._locationChanges.unsubscribe(),this._outsideClickDispatcher.remove(this),e}dispose(){const e=this.hasAttached();this._positionStrategy&&this._positionStrategy.dispose(),this._disposeScrollStrategy(),this.detachBackdrop(),this._locationChanges.unsubscribe(),this._keyboardDispatcher.remove(this),this._portalOutlet.dispose(),this._attachments.complete(),this._backdropClick.complete(),this._keydownEvents.complete(),this._outsidePointerEvents.complete(),this._outsideClickDispatcher.remove(this),this._host&&this._host.parentNode&&(this._host.parentNode.removeChild(this._host),this._host=null),this._previousHostParent=this._pane=null,e&&this._detachments.next(),this._detachments.complete()}hasAttached(){return this._portalOutlet.hasAttached()}backdropClick(){return this._backdropClick}attachments(){return this._attachments}detachments(){return this._detachments}keydownEvents(){return this._keydownEvents}outsidePointerEvents(){return this._outsidePointerEvents}getConfig(){return this._config}updatePosition(){this._positionStrategy&&this._positionStrategy.apply()}updatePositionStrategy(e){e!==this._positionStrategy&&(this._positionStrategy&&this._positionStrategy.dispose(),this._positionStrategy=e,this.hasAttached()&&(e.attach(this),this.updatePosition()))}updateSize(e){this._config=Object.assign(Object.assign({},this._config),e),this._updateElementSize()}setDirection(e){this._config=Object.assign(Object.assign({},this._config),{direction:e}),this._updateElementDirection()}addPanelClass(e){this._pane&&this._toggleClasses(this._pane,e,!0)}removePanelClass(e){this._pane&&this._toggleClasses(this._pane,e,!1)}getDirection(){const e=this._config.direction;return e?"string"==typeof e?e:e.value:"ltr"}updateScrollStrategy(e){e!==this._scrollStrategy&&(this._disposeScrollStrategy(),this._scrollStrategy=e,this.hasAttached()&&(e.attach(this),e.enable()))}_updateElementDirection(){this._host.setAttribute("dir",this.getDirection())}_updateElementSize(){if(!this._pane)return;const e=this._pane.style;e.width=jf(this._config.width),e.height=jf(this._config.height),e.minWidth=jf(this._config.minWidth),e.minHeight=jf(this._config.minHeight),e.maxWidth=jf(this._config.maxWidth),e.maxHeight=jf(this._config.maxHeight)}_togglePointerEvents(e){this._pane.style.pointerEvents=e?"":"none"}_attachBackdrop(){const e="cdk-overlay-backdrop-showing";this._backdropElement=this._document.createElement("div"),this._backdropElement.classList.add("cdk-overlay-backdrop"),this._config.backdropClass&&this._toggleClasses(this._backdropElement,this._config.backdropClass,!0),this._host.parentElement.insertBefore(this._backdropElement,this._host),this._backdropElement.addEventListener("click",this._backdropClickHandler),"undefined"!=typeof requestAnimationFrame?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>{this._backdropElement&&this._backdropElement.classList.add(e)})}):this._backdropElement.classList.add(e)}_updateStackingOrder(){this._host.nextSibling&&this._host.parentNode.appendChild(this._host)}detachBackdrop(){let e,t=this._backdropElement;if(!t)return;let n=()=>{t&&(t.removeEventListener("click",this._backdropClickHandler),t.removeEventListener("transitionend",n),t.parentNode&&t.parentNode.removeChild(t)),this._backdropElement==t&&(this._backdropElement=null),this._config.backdropClass&&this._toggleClasses(t,this._config.backdropClass,!1),clearTimeout(e)};t.classList.remove("cdk-overlay-backdrop-showing"),this._ngZone.runOutsideAngular(()=>{t.addEventListener("transitionend",n)}),t.style.pointerEvents="none",e=this._ngZone.runOutsideAngular(()=>setTimeout(n,500))}_toggleClasses(e,t,n){const o=e.classList;Of(t).forEach(e=>{e&&(n?o.add(e):o.remove(e))})}_detachContentWhenStable(){this._ngZone.runOutsideAngular(()=>{const e=this._ngZone.onStable.pipe(XA(V(this._attachments,this._detachments))).subscribe(()=>{this._pane&&this._host&&0!==this._pane.children.length||(this._pane&&this._config.panelClass&&this._toggleClasses(this._pane,this._config.panelClass,!1),this._host&&this._host.parentElement&&(this._previousHostParent=this._host.parentElement,this._previousHostParent.removeChild(this._host)),e.unsubscribe())})})}_disposeScrollStrategy(){const e=this._scrollStrategy;e&&(e.disable(),e.detach&&e.detach())}}const px="cdk-overlay-connected-position-bounding-box",ux=/([A-Za-z%]+)$/;class hx{constructor(e,t,n,o,i){this._viewportRuler=t,this._document=n,this._platform=o,this._overlayContainer=i,this._lastBoundingBoxSize={width:0,height:0},this._isPushed=!1,this._canPush=!0,this._growAfterOpen=!1,this._hasFlexibleDimensions=!0,this._positionLocked=!1,this._viewportMargin=0,this._scrollables=[],this._preferredPositions=[],this._positionChanges=new _,this._resizeSubscription=p.EMPTY,this._offsetX=0,this._offsetY=0,this._appliedPanelClasses=[],this.positionChanges=this._positionChanges,this.setOrigin(e)}get positions(){return this._preferredPositions}attach(e){this._validatePositions(),e.hostElement.classList.add(px),this._overlayRef=e,this._boundingBox=e.hostElement,this._pane=e.overlayElement,this._isDisposed=!1,this._isInitialRender=!0,this._lastPosition=null,this._resizeSubscription.unsubscribe(),this._resizeSubscription=this._viewportRuler.change().subscribe(()=>{this._isInitialRender=!0,this.apply()})}apply(){if(this._isDisposed||!this._platform.isBrowser)return;if(!this._isInitialRender&&this._positionLocked&&this._lastPosition)return void this.reapplyLastPosition();this._clearPanelClasses(),this._resetOverlayElementStyles(),this._resetBoundingBoxStyles(),this._viewportRect=this._getNarrowedViewportRect(),this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect();const e=this._originRect,t=this._overlayRect,n=this._viewportRect,o=[];let i;for(let r of this._preferredPositions){let a=this._getOriginPoint(e,r),s=this._getOverlayPoint(a,t,r),l=this._getOverlayFit(s,t,n,r);if(l.isCompletelyWithinViewport)return this._isPushed=!1,void this._applyPosition(r,a);this._canFitWithFlexibleDimensions(l,s,n)?o.push({position:r,origin:a,overlayRect:t,boundingBoxRect:this._calculateBoundingBoxRect(a,r)}):(!i||i.overlayFit.visibleArea<l.visibleArea)&&(i={overlayFit:l,overlayPoint:s,originPoint:a,position:r,overlayRect:t})}if(o.length){let e=null,t=-1;for(const n of o){const o=n.boundingBoxRect.width*n.boundingBoxRect.height*(n.position.weight||1);o>t&&(t=o,e=n)}return this._isPushed=!1,void this._applyPosition(e.position,e.origin)}if(this._canPush)return this._isPushed=!0,void this._applyPosition(i.position,i.originPoint);this._applyPosition(i.position,i.originPoint)}detach(){this._clearPanelClasses(),this._lastPosition=null,this._previousPushAmount=null,this._resizeSubscription.unsubscribe()}dispose(){this._isDisposed||(this._boundingBox&&mx(this._boundingBox.style,{top:"",left:"",right:"",bottom:"",height:"",width:"",alignItems:"",justifyContent:""}),this._pane&&this._resetOverlayElementStyles(),this._overlayRef&&this._overlayRef.hostElement.classList.remove(px),this.detach(),this._positionChanges.complete(),this._overlayRef=this._boundingBox=null,this._isDisposed=!0)}reapplyLastPosition(){if(!this._isDisposed&&(!this._platform||this._platform.isBrowser)){this._originRect=this._getOriginRect(),this._overlayRect=this._pane.getBoundingClientRect(),this._viewportRect=this._getNarrowedViewportRect();const e=this._lastPosition||this._preferredPositions[0],t=this._getOriginPoint(this._originRect,e);this._applyPosition(e,t)}}withScrollableContainers(e){return this._scrollables=e,this}withPositions(e){return this._preferredPositions=e,-1===e.indexOf(this._lastPosition)&&(this._lastPosition=null),this._validatePositions(),this}withViewportMargin(e){return this._viewportMargin=e,this}withFlexibleDimensions(e=!0){return this._hasFlexibleDimensions=e,this}withGrowAfterOpen(e=!0){return this._growAfterOpen=e,this}withPush(e=!0){return this._canPush=e,this}withLockedPosition(e=!0){return this._positionLocked=e,this}setOrigin(e){return this._origin=e,this}withDefaultOffsetX(e){return this._offsetX=e,this}withDefaultOffsetY(e){return this._offsetY=e,this}withTransformOriginOn(e){return this._transformOriginSelector=e,this}_getOriginPoint(e,t){let n,o;if("center"==t.originX)n=e.left+e.width/2;else{const o=this._isRtl()?e.right:e.left,i=this._isRtl()?e.left:e.right;n="start"==t.originX?o:i}return o="center"==t.originY?e.top+e.height/2:"top"==t.originY?e.top:e.bottom,{x:n,y:o}}_getOverlayPoint(e,t,n){let o,i;return o="center"==n.overlayX?-t.width/2:"start"===n.overlayX?this._isRtl()?-t.width:0:this._isRtl()?0:-t.width,i="center"==n.overlayY?-t.height/2:"top"==n.overlayY?0:-t.height,{x:e.x+o,y:e.y+i}}_getOverlayFit(e,t,n,o){const i=fx(t);let{x:r,y:a}=e,s=this._getOffset(o,"x"),l=this._getOffset(o,"y");s&&(r+=s),l&&(a+=l);let c=0-a,d=a+i.height-n.height,p=this._subtractOverflows(i.width,0-r,r+i.width-n.width),u=this._subtractOverflows(i.height,c,d),h=p*u;return{visibleArea:h,isCompletelyWithinViewport:i.width*i.height===h,fitsInViewportVertically:u===i.height,fitsInViewportHorizontally:p==i.width}}_canFitWithFlexibleDimensions(e,t,n){if(this._hasFlexibleDimensions){const o=n.bottom-t.y,i=n.right-t.x,r=gx(this._overlayRef.getConfig().minHeight),a=gx(this._overlayRef.getConfig().minWidth),s=e.fitsInViewportHorizontally||null!=a&&a<=i;return(e.fitsInViewportVertically||null!=r&&r<=o)&&s}return!1}_pushOverlayOnScreen(e,t,n){if(this._previousPushAmount&&this._positionLocked)return{x:e.x+this._previousPushAmount.x,y:e.y+this._previousPushAmount.y};const o=fx(t),i=this._viewportRect,r=Math.max(e.x+o.width-i.width,0),a=Math.max(e.y+o.height-i.height,0),s=Math.max(i.top-n.top-e.y,0),l=Math.max(i.left-n.left-e.x,0);let c=0,d=0;return c=o.width<=i.width?l||-r:e.x<this._viewportMargin?i.left-n.left-e.x:0,d=o.height<=i.height?s||-a:e.y<this._viewportMargin?i.top-n.top-e.y:0,this._previousPushAmount={x:c,y:d},{x:e.x+c,y:e.y+d}}_applyPosition(e,t){if(this._setTransformOrigin(e),this._setOverlayElementStyles(t,e),this._setBoundingBoxStyles(t,e),e.panelClass&&this._addPanelClasses(e.panelClass),this._lastPosition=e,this._positionChanges.observers.length){const t=this._getScrollVisibility(),n=new ix(e,t);this._positionChanges.next(n)}this._isInitialRender=!1}_setTransformOrigin(e){if(!this._transformOriginSelector)return;const t=this._boundingBox.querySelectorAll(this._transformOriginSelector);let n,o=e.overlayY;n="center"===e.overlayX?"center":this._isRtl()?"start"===e.overlayX?"right":"left":"start"===e.overlayX?"left":"right";for(let i=0;i<t.length;i++)t[i].style.transformOrigin=`${n} ${o}`}_calculateBoundingBoxRect(e,t){const n=this._viewportRect,o=this._isRtl();let i,r,a,s,l,c;if("top"===t.overlayY)r=e.y,i=n.height-r+this._viewportMargin;else if("bottom"===t.overlayY)a=n.height-e.y+2*this._viewportMargin,i=n.height-a+this._viewportMargin;else{const t=Math.min(n.bottom-e.y+n.top,e.y),o=this._lastBoundingBoxSize.height;i=2*t,r=e.y-t,i>o&&!this._isInitialRender&&!this._growAfterOpen&&(r=e.y-o/2)}if("end"===t.overlayX&&!o||"start"===t.overlayX&&o)c=n.width-e.x+this._viewportMargin,s=e.x-this._viewportMargin;else if("start"===t.overlayX&&!o||"end"===t.overlayX&&o)l=e.x,s=n.right-e.x;else{const t=Math.min(n.right-e.x+n.left,e.x),o=this._lastBoundingBoxSize.width;s=2*t,l=e.x-t,s>o&&!this._isInitialRender&&!this._growAfterOpen&&(l=e.x-o/2)}return{top:r,left:l,bottom:a,right:c,width:s,height:i}}_setBoundingBoxStyles(e,t){const n=this._calculateBoundingBoxRect(e,t);this._isInitialRender||this._growAfterOpen||(n.height=Math.min(n.height,this._lastBoundingBoxSize.height),n.width=Math.min(n.width,this._lastBoundingBoxSize.width));const o={};if(this._hasExactPosition())o.top=o.left="0",o.bottom=o.right=o.maxHeight=o.maxWidth="",o.width=o.height="100%";else{const e=this._overlayRef.getConfig().maxHeight,i=this._overlayRef.getConfig().maxWidth;o.height=jf(n.height),o.top=jf(n.top),o.bottom=jf(n.bottom),o.width=jf(n.width),o.left=jf(n.left),o.right=jf(n.right),o.alignItems="center"===t.overlayX?"center":"end"===t.overlayX?"flex-end":"flex-start",o.justifyContent="center"===t.overlayY?"center":"bottom"===t.overlayY?"flex-end":"flex-start",e&&(o.maxHeight=jf(e)),i&&(o.maxWidth=jf(i))}this._lastBoundingBoxSize=n,mx(this._boundingBox.style,o)}_resetBoundingBoxStyles(){mx(this._boundingBox.style,{top:"0",left:"0",right:"0",bottom:"0",height:"",width:"",alignItems:"",justifyContent:""})}_resetOverlayElementStyles(){mx(this._pane.style,{top:"",left:"",bottom:"",right:"",position:"",transform:""})}_setOverlayElementStyles(e,t){const n={},o=this._hasExactPosition(),i=this._hasFlexibleDimensions,r=this._overlayRef.getConfig();if(o){const o=this._viewportRuler.getViewportScrollPosition();mx(n,this._getExactOverlayY(t,e,o)),mx(n,this._getExactOverlayX(t,e,o))}else n.position="static";let a="",s=this._getOffset(t,"x"),l=this._getOffset(t,"y");s&&(a+=`translateX(${s}px) `),l&&(a+=`translateY(${l}px)`),n.transform=a.trim(),r.maxHeight&&(o?n.maxHeight=jf(r.maxHeight):i&&(n.maxHeight="")),r.maxWidth&&(o?n.maxWidth=jf(r.maxWidth):i&&(n.maxWidth="")),mx(this._pane.style,n)}_getExactOverlayY(e,t,n){let o={top:"",bottom:""},i=this._getOverlayPoint(t,this._overlayRect,e);this._isPushed&&(i=this._pushOverlayOnScreen(i,this._overlayRect,n));let r=this._overlayContainer.getContainerElement().getBoundingClientRect().top;return i.y-=r,"bottom"===e.overlayY?o.bottom=this._document.documentElement.clientHeight-(i.y+this._overlayRect.height)+"px":o.top=jf(i.y),o}_getExactOverlayX(e,t,n){let o,i={left:"",right:""},r=this._getOverlayPoint(t,this._overlayRect,e);return this._isPushed&&(r=this._pushOverlayOnScreen(r,this._overlayRect,n)),o=this._isRtl()?"end"===e.overlayX?"left":"right":"end"===e.overlayX?"right":"left","right"===o?i.right=this._document.documentElement.clientWidth-(r.x+this._overlayRect.width)+"px":i.left=jf(r.x),i}_getScrollVisibility(){const e=this._getOriginRect(),t=this._pane.getBoundingClientRect(),n=this._scrollables.map(e=>e.getElementRef().nativeElement.getBoundingClientRect());return{isOriginClipped:XC(e,n),isOriginOutsideView:ZC(e,n),isOverlayClipped:XC(t,n),isOverlayOutsideView:ZC(t,n)}}_subtractOverflows(e,...t){return t.reduce((e,t)=>e-Math.max(t,0),e)}_getNarrowedViewportRect(){const e=this._document.documentElement.clientWidth,t=this._document.documentElement.clientHeight,n=this._viewportRuler.getViewportScrollPosition();return{top:n.top+this._viewportMargin,left:n.left+this._viewportMargin,right:n.left+e-this._viewportMargin,bottom:n.top+t-this._viewportMargin,width:e-2*this._viewportMargin,height:t-2*this._viewportMargin}}_isRtl(){return"rtl"===this._overlayRef.getDirection()}_hasExactPosition(){return!this._hasFlexibleDimensions||this._isPushed}_getOffset(e,t){return"x"===t?null==e.offsetX?this._offsetX:e.offsetX:null==e.offsetY?this._offsetY:e.offsetY}_validatePositions(){}_addPanelClasses(e){this._pane&&Of(e).forEach(e=>{""!==e&&-1===this._appliedPanelClasses.indexOf(e)&&(this._appliedPanelClasses.push(e),this._pane.classList.add(e))})}_clearPanelClasses(){this._pane&&(this._appliedPanelClasses.forEach(e=>{this._pane.classList.remove(e)}),this._appliedPanelClasses=[])}_getOriginRect(){const e=this._origin;if(e instanceof $s)return e.nativeElement.getBoundingClientRect();if(e instanceof Element)return e.getBoundingClientRect();const t=e.width||0,n=e.height||0;return{top:e.y,bottom:e.y+n,left:e.x,right:e.x+t,height:n,width:t}}}function mx(e,t){for(let n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function gx(e){if("number"!=typeof e&&null!=e){const[t,n]=e.split(ux);return n&&"px"!==n?null:parseFloat(t)}return e||null}function fx(e){return{top:Math.floor(e.top),right:Math.floor(e.right),bottom:Math.floor(e.bottom),left:Math.floor(e.left),width:Math.floor(e.width),height:Math.floor(e.height)}}class bx{constructor(e,t,n,o,i,r,a){this._preferredPositions=[],this._positionStrategy=new hx(n,o,i,r,a).withFlexibleDimensions(!1).withPush(!1).withViewportMargin(0),this.withFallbackPosition(e,t),this.onPositionChange=this._positionStrategy.positionChanges}get positions(){return this._preferredPositions}attach(e){this._overlayRef=e,this._positionStrategy.attach(e),this._direction&&(e.setDirection(this._direction),this._direction=null)}dispose(){this._positionStrategy.dispose()}detach(){this._positionStrategy.detach()}apply(){this._positionStrategy.apply()}recalculateLastPosition(){this._positionStrategy.reapplyLastPosition()}withScrollableContainers(e){this._positionStrategy.withScrollableContainers(e)}withFallbackPosition(e,t,n,o){const i=new ox(e,t,n,o);return this._preferredPositions.push(i),this._positionStrategy.withPositions(this._preferredPositions),this}withDirection(e){return this._overlayRef?this._overlayRef.setDirection(e):this._direction=e,this}withOffsetX(e){return this._positionStrategy.withDefaultOffsetX(e),this}withOffsetY(e){return this._positionStrategy.withDefaultOffsetY(e),this}withLockedPosition(e){return this._positionStrategy.withLockedPosition(e),this}withPositions(e){return this._preferredPositions=e.slice(),this._positionStrategy.withPositions(this._preferredPositions),this}setOrigin(e){return this._positionStrategy.setOrigin(e),this}}const yx="cdk-global-overlay-wrapper";class vx{constructor(){this._cssPosition="static",this._topOffset="",this._bottomOffset="",this._leftOffset="",this._rightOffset="",this._alignItems="",this._justifyContent="",this._width="",this._height=""}attach(e){const t=e.getConfig();this._overlayRef=e,this._width&&!t.width&&e.updateSize({width:this._width}),this._height&&!t.height&&e.updateSize({height:this._height}),e.hostElement.classList.add(yx),this._isDisposed=!1}top(e=""){return this._bottomOffset="",this._topOffset=e,this._alignItems="flex-start",this}left(e=""){return this._rightOffset="",this._leftOffset=e,this._justifyContent="flex-start",this}bottom(e=""){return this._topOffset="",this._bottomOffset=e,this._alignItems="flex-end",this}right(e=""){return this._leftOffset="",this._rightOffset=e,this._justifyContent="flex-end",this}width(e=""){return this._overlayRef?this._overlayRef.updateSize({width:e}):this._width=e,this}height(e=""){return this._overlayRef?this._overlayRef.updateSize({height:e}):this._height=e,this}centerHorizontally(e=""){return this.left(e),this._justifyContent="center",this}centerVertically(e=""){return this.top(e),this._alignItems="center",this}apply(){if(!this._overlayRef||!this._overlayRef.hasAttached())return;const e=this._overlayRef.overlayElement.style,t=this._overlayRef.hostElement.style,n=this._overlayRef.getConfig(),{width:o,height:i,maxWidth:r,maxHeight:a}=n,s=!("100%"!==o&&"100vw"!==o||r&&"100%"!==r&&"100vw"!==r),l=!("100%"!==i&&"100vh"!==i||a&&"100%"!==a&&"100vh"!==a);e.position=this._cssPosition,e.marginLeft=s?"0":this._leftOffset,e.marginTop=l?"0":this._topOffset,e.marginBottom=this._bottomOffset,e.marginRight=this._rightOffset,s?t.justifyContent="flex-start":"center"===this._justifyContent?t.justifyContent="center":"rtl"===this._overlayRef.getConfig().direction?"flex-start"===this._justifyContent?t.justifyContent="flex-end":"flex-end"===this._justifyContent&&(t.justifyContent="flex-start"):t.justifyContent=this._justifyContent,t.alignItems=l?"flex-start":this._alignItems}dispose(){if(this._isDisposed||!this._overlayRef)return;const e=this._overlayRef.overlayElement.style,t=this._overlayRef.hostElement,n=t.style;t.classList.remove(yx),n.justifyContent=n.alignItems=e.marginTop=e.marginBottom=e.marginLeft=e.marginRight=e.position="",this._overlayRef=null,this._isDisposed=!0}}let wx=(()=>{class e{constructor(e,t,n,o){this._viewportRuler=e,this._document=t,this._platform=n,this._overlayContainer=o}global(){return new vx}connectedTo(e,t,n){return new bx(t,n,e,this._viewportRuler,this._document,this._platform,this._overlayContainer)}flexibleConnectedTo(e){return new hx(e,this._viewportRuler,this._document,this._platform,this._overlayContainer)}}return e.\u0275fac=function(t){return new(t||e)(ho(VC),ho(yd),ho(Ff),ho(cx))},e.\u0275prov=ue({factory:function(){return new e(ho(VC),ho(yd),ho(Ff),ho(cx))},token:e,providedIn:"root"}),e})(),kx=0,Sx=(()=>{class e{constructor(e,t,n,o,i,r,a,s,l,c,d){this.scrollStrategies=e,this._overlayContainer=t,this._componentFactoryResolver=n,this._positionBuilder=o,this._keyboardDispatcher=i,this._injector=r,this._ngZone=a,this._document=s,this._directionality=l,this._location=c,this._outsideClickDispatcher=d}create(e){const t=this._createHostElement(),n=this._createPaneElement(t),o=this._createPortalOutlet(n),i=new nx(e);return i.direction=i.direction||this._directionality.value,new dx(o,t,n,i,this._ngZone,this._keyboardDispatcher,this._document,this._location,this._outsideClickDispatcher)}position(){return this._positionBuilder}_createPaneElement(e){const t=this._document.createElement("div");return t.id="cdk-overlay-"+kx++,t.classList.add("cdk-overlay-pane"),e.appendChild(t),t}_createHostElement(){const e=this._document.createElement("div");return this._overlayContainer.getContainerElement().appendChild(e),e}_createPortalOutlet(e){return this._appRef||(this._appRef=this._injector.get(ad)),new FC(e,this._componentFactoryResolver,this._appRef,this._injector,this._document)}}return e.\u0275fac=function(t){return new(t||e)(ho(tx),ho(cx),ho(Ns),ho(wx),ho(ax),ho(ha),ho(zc),ho(yd),ho(mb),ho(Rd),ho(sx))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})();const _x={provide:new Jn("cdk-connected-overlay-scroll-strategy"),deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition()}};let Tx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[Sx,_x],imports:[[gb,LC,GC],GC]}),e})();const Ax=["mat-menu-item",""],Cx=["*"];function xx(e,t){if(1&e){const e=Na();Ma(0,"div",0),$a("keydown",function(t){return Rt(e),Ka()._handleKeydown(t)})("click",function(){return Rt(e),Ka().closed.emit("click")})("@transformMenu.start",function(t){return Rt(e),Ka()._onAnimationStart(t)})("@transformMenu.done",function(t){return Rt(e),Ka()._onAnimationDone(t)}),Ma(1,"div",1),Za(2),Fa(),Fa()}if(2&e){const e=Ka();Ra("id",e.panelId)("ngClass",e._classList)("@transformMenu",e._panelAnimationState),Ia("aria-label",e.ariaLabel||null)("aria-labelledby",e.ariaLabelledby||null)("aria-describedby",e.ariaDescribedby||null)}}const Ix={transformMenu:vb("transformMenu",[_b("void",Sb({opacity:0,transform:"scale(0.8)"})),Tb("void => enter",wb("120ms cubic-bezier(0, 0, 0.2, 1)",Sb({opacity:1,transform:"scale(1)"}))),Tb("* => void",wb("100ms 25ms linear",Sb({opacity:0})))]),fadeInItems:vb("fadeInItems",[_b("showing",Sb({opacity:1})),Tb("void => *",[Sb({opacity:0}),wb("400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])},Ex=new Jn("MatMenuContent"),Dx=new Jn("MAT_MENU_PANEL");class Ox{}const jx=cw(sw(Ox));let Rx=(()=>{class e extends jx{constructor(e,t,n,o){super(),this._elementRef=e,this._focusMonitor=n,this._parentMenu=o,this.role="menuitem",this._hovered=new _,this._focused=new _,this._highlighted=!1,this._triggersSubmenu=!1,o&&o.addItem&&o.addItem(this)}focus(e,t){this._focusMonitor&&e?this._focusMonitor.focusVia(this._getHostElement(),e,t):this._getHostElement().focus(t),this._focused.next(this)}ngAfterViewInit(){this._focusMonitor&&this._focusMonitor.monitor(this._elementRef,!1)}ngOnDestroy(){this._focusMonitor&&this._focusMonitor.stopMonitoring(this._elementRef),this._parentMenu&&this._parentMenu.removeItem&&this._parentMenu.removeItem(this),this._hovered.complete(),this._focused.complete()}_getTabIndex(){return this.disabled?"-1":"0"}_getHostElement(){return this._elementRef.nativeElement}_checkDisabled(e){this.disabled&&(e.preventDefault(),e.stopPropagation())}_handleMouseEnter(){this._hovered.next(this)}getLabel(){var e,t;const n=this._elementRef.nativeElement.cloneNode(!0),o=n.querySelectorAll("mat-icon, .material-icons");for(let i=0;i<o.length;i++){const t=o[i];null===(e=t.parentNode)||void 0===e||e.removeChild(t)}return(null===(t=n.textContent)||void 0===t?void 0:t.trim())||""}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(yd),ja(ab),ja(Dx,8))},e.\u0275cmp=We({type:e,selectors:[["","mat-menu-item",""]],hostAttrs:[1,"mat-focus-indicator"],hostVars:10,hostBindings:function(e,t){1&e&&$a("click",function(e){return t._checkDisabled(e)})("mouseenter",function(){return t._handleMouseEnter()}),2&e&&(Ia("role",t.role)("tabindex",t._getTabIndex())("aria-disabled",t.disabled.toString())("disabled",t.disabled||null),rs("mat-menu-item",!0)("mat-menu-item-highlighted",t._highlighted)("mat-menu-item-submenu-trigger",t._triggersSubmenu))},inputs:{disabled:"disabled",disableRipple:"disableRipple",role:"role"},exportAs:["matMenuItem"],features:[ga],attrs:Ax,ngContentSelectors:Cx,decls:2,vars:2,consts:[["matRipple","",1,"mat-menu-ripple",3,"matRippleDisabled","matRippleTrigger"]],template:function(e,t){1&e&&(Qa(),Za(0),Pa(1,"div",0)),2&e&&(tr(1),Ra("matRippleDisabled",t.disableRipple||t.disabled)("matRippleTrigger",t._getHostElement()))},directives:[Rw],encapsulation:2,changeDetection:0}),e})();const qx=new Jn("mat-menu-default-options",{providedIn:"root",factory:function(){return{overlapTrigger:!1,xPosition:"after",yPosition:"below",backdropClass:"cdk-overlay-transparent-backdrop"}}});let Mx=0,Fx=(()=>{class e{constructor(e,t,n){this._elementRef=e,this._ngZone=t,this._defaultOptions=n,this._xPosition=this._defaultOptions.xPosition,this._yPosition=this._defaultOptions.yPosition,this._directDescendantItems=new tc,this._tabSubscription=p.EMPTY,this._classList={},this._panelAnimationState="void",this._animationDone=new _,this.overlayPanelClass=this._defaultOptions.overlayPanelClass||"",this.backdropClass=this._defaultOptions.backdropClass,this._overlapTrigger=this._defaultOptions.overlapTrigger,this._hasBackdrop=this._defaultOptions.hasBackdrop,this.closed=new Xl,this.close=this.closed,this.panelId="mat-menu-panel-"+Mx++}get xPosition(){return this._xPosition}set xPosition(e){this._xPosition=e,this.setPositionClasses()}get yPosition(){return this._yPosition}set yPosition(e){this._yPosition=e,this.setPositionClasses()}get overlapTrigger(){return this._overlapTrigger}set overlapTrigger(e){this._overlapTrigger=Df(e)}get hasBackdrop(){return this._hasBackdrop}set hasBackdrop(e){this._hasBackdrop=Df(e)}set panelClass(e){const t=this._previousPanelClass;t&&t.length&&t.split(" ").forEach(e=>{this._classList[e]=!1}),this._previousPanelClass=e,e&&e.length&&(e.split(" ").forEach(e=>{this._classList[e]=!0}),this._elementRef.nativeElement.className="")}get classList(){return this.panelClass}set classList(e){this.panelClass=e}ngOnInit(){this.setPositionClasses()}ngAfterContentInit(){this._updateDirectDescendants(),this._keyManager=new Yf(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd(),this._tabSubscription=this._keyManager.tabOut.subscribe(()=>this.closed.emit("tab")),this._directDescendantItems.changes.pipe(Hu(this._directDescendantItems),zu(e=>V(...e.map(e=>e._focused)))).subscribe(e=>this._keyManager.updateActiveItem(e))}ngOnDestroy(){this._directDescendantItems.destroy(),this._tabSubscription.unsubscribe(),this.closed.complete()}_hovered(){return this._directDescendantItems.changes.pipe(Hu(this._directDescendantItems),zu(e=>V(...e.map(e=>e._hovered))))}addItem(e){}removeItem(e){}_handleKeydown(e){const t=e.keyCode,n=this._keyManager;switch(t){case 27:wf(e)||(e.preventDefault(),this.closed.emit("keydown"));break;case 37:this.parentMenu&&"ltr"===this.direction&&this.closed.emit("keydown");break;case 39:this.parentMenu&&"rtl"===this.direction&&this.closed.emit("keydown");break;default:38!==t&&40!==t||n.setFocusOrigin("keyboard"),n.onKeydown(e)}}focusFirstItem(e="program"){this.lazyContent?this._ngZone.onStable.pipe(Wu(1)).subscribe(()=>this._focusFirstItem(e)):this._focusFirstItem(e)}_focusFirstItem(e){const t=this._keyManager;if(t.setFocusOrigin(e).setFirstItemActive(),!t.activeItem&&this._directDescendantItems.length){let e=this._directDescendantItems.first._getHostElement().parentElement;for(;e;){if("menu"===e.getAttribute("role")){e.focus();break}e=e.parentElement}}}resetActiveItem(){this._keyManager.setActiveItem(-1)}setElevation(e){const t=`mat-elevation-z${Math.min(4+e,24)}`,n=Object.keys(this._classList).find(e=>e.startsWith("mat-elevation-z"));n&&n!==this._previousElevation||(this._previousElevation&&(this._classList[this._previousElevation]=!1),this._classList[t]=!0,this._previousElevation=t)}setPositionClasses(e=this.xPosition,t=this.yPosition){const n=this._classList;n["mat-menu-before"]="before"===e,n["mat-menu-after"]="after"===e,n["mat-menu-above"]="above"===t,n["mat-menu-below"]="below"===t}_startAnimation(){this._panelAnimationState="enter"}_resetAnimation(){this._panelAnimationState="void"}_onAnimationDone(e){this._animationDone.next(e),this._isAnimating=!1}_onAnimationStart(e){this._isAnimating=!0,"enter"===e.toState&&0===this._keyManager.activeItemIndex&&(e.element.scrollTop=0)}_updateDirectDescendants(){this._allItems.changes.pipe(Hu(this._allItems)).subscribe(e=>{this._directDescendantItems.reset(e.filter(e=>e._parentMenu===this)),this._directDescendantItems.notifyOnChanges()})}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(zc),ja(qx))},e.\u0275dir=Ke({type:e,contentQueries:function(e,t,n){if(1&e&&(hc(n,Ex,5),hc(n,Rx,5),hc(n,Rx,4)),2&e){let e;pc(e=mc())&&(t.lazyContent=e.first),pc(e=mc())&&(t._allItems=e),pc(e=mc())&&(t.items=e)}},viewQuery:function(e,t){if(1&e&&uc(kl,5),2&e){let e;pc(e=mc())&&(t.templateRef=e.first)}},inputs:{backdropClass:"backdropClass",xPosition:"xPosition",yPosition:"yPosition",overlapTrigger:"overlapTrigger",hasBackdrop:"hasBackdrop",panelClass:["class","panelClass"],classList:"classList",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],ariaDescribedby:["aria-describedby","ariaDescribedby"]},outputs:{closed:"closed",close:"close"}}),e})(),Px=(()=>{class e extends Fx{constructor(e,t,n){super(e,t,n)}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(zc),ja(qx))},e.\u0275cmp=We({type:e,selectors:[["mat-menu"]],hostVars:3,hostBindings:function(e,t){2&e&&Ia("aria-label",null)("aria-labelledby",null)("aria-describedby",null)},exportAs:["matMenu"],features:[Ps([{provide:Dx,useExisting:e}]),ga],ngContentSelectors:Cx,decls:1,vars:0,consts:[["tabindex","-1","role","menu",1,"mat-menu-panel",3,"id","ngClass","keydown","click"],[1,"mat-menu-content"]],template:function(e,t){1&e&&(Qa(),Da(0,xx,3,6,"ng-template"))},directives:[bp],styles:['mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:"";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n'],encapsulation:2,data:{animation:[Ix.transformMenu,Ix.fadeInItems]},changeDetection:0}),e})();const Lx=new Jn("mat-menu-scroll-strategy"),zx={provide:Lx,deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition()}},Nx=Wf({passive:!0});let Ux=(()=>{class e{constructor(e,t,n,o,i,r,a,s){this._overlay=e,this._element=t,this._viewContainerRef=n,this._menuItemInstance=r,this._dir=a,this._focusMonitor=s,this._overlayRef=null,this._menuOpen=!1,this._closingActionsSubscription=p.EMPTY,this._hoverSubscription=p.EMPTY,this._menuCloseSubscription=p.EMPTY,this._handleTouchStart=e=>{ob(e)||(this._openedBy="touch")},this._openedBy=void 0,this.restoreFocus=!0,this.menuOpened=new Xl,this.onMenuOpen=this.menuOpened,this.menuClosed=new Xl,this.onMenuClose=this.menuClosed,this._scrollStrategy=o,this._parentMaterialMenu=i instanceof Fx?i:void 0,t.nativeElement.addEventListener("touchstart",this._handleTouchStart,Nx),r&&(r._triggersSubmenu=this.triggersSubmenu())}get _deprecatedMatMenuTriggerFor(){return this.menu}set _deprecatedMatMenuTriggerFor(e){this.menu=e}get menu(){return this._menu}set menu(e){e!==this._menu&&(this._menu=e,this._menuCloseSubscription.unsubscribe(),e&&(this._menuCloseSubscription=e.close.subscribe(e=>{this._destroyMenu(e),"click"!==e&&"tab"!==e||!this._parentMaterialMenu||this._parentMaterialMenu.closed.emit(e)})))}ngAfterContentInit(){this._checkMenu(),this._handleHover()}ngOnDestroy(){this._overlayRef&&(this._overlayRef.dispose(),this._overlayRef=null),this._element.nativeElement.removeEventListener("touchstart",this._handleTouchStart,Nx),this._menuCloseSubscription.unsubscribe(),this._closingActionsSubscription.unsubscribe(),this._hoverSubscription.unsubscribe()}get menuOpen(){return this._menuOpen}get dir(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}triggersSubmenu(){return!(!this._menuItemInstance||!this._parentMaterialMenu)}toggleMenu(){return this._menuOpen?this.closeMenu():this.openMenu()}openMenu(){if(this._menuOpen)return;this._checkMenu();const e=this._createOverlay(),t=e.getConfig();this._setPosition(t.positionStrategy),t.hasBackdrop=null==this.menu.hasBackdrop?!this.triggersSubmenu():this.menu.hasBackdrop,e.attach(this._getPortal()),this.menu.lazyContent&&this.menu.lazyContent.attach(this.menuData),this._closingActionsSubscription=this._menuClosingActions().subscribe(()=>this.closeMenu()),this._initMenu(),this.menu instanceof Fx&&this.menu._startAnimation()}closeMenu(){this.menu.close.emit()}focus(e,t){this._focusMonitor&&e?this._focusMonitor.focusVia(this._element,e,t):this._element.nativeElement.focus(t)}updatePosition(){var e;null===(e=this._overlayRef)||void 0===e||e.updatePosition()}_destroyMenu(e){if(!this._overlayRef||!this.menuOpen)return;const t=this.menu;this._closingActionsSubscription.unsubscribe(),this._overlayRef.detach(),!this.restoreFocus||"keydown"!==e&&this._openedBy&&this.triggersSubmenu()||this.focus(this._openedBy),this._openedBy=void 0,t instanceof Fx?(t._resetAnimation(),t.lazyContent?t._animationDone.pipe(Yu(e=>"void"===e.toState),Wu(1),XA(t.lazyContent._attached)).subscribe({next:()=>t.lazyContent.detach(),complete:()=>this._setIsMenuOpen(!1)}):this._setIsMenuOpen(!1)):(this._setIsMenuOpen(!1),t.lazyContent&&t.lazyContent.detach())}_initMenu(){this.menu.parentMenu=this.triggersSubmenu()?this._parentMaterialMenu:void 0,this.menu.direction=this.dir,this._setMenuElevation(),this.menu.focusFirstItem(this._openedBy||"program"),this._setIsMenuOpen(!0)}_setMenuElevation(){if(this.menu.setElevation){let e=0,t=this.menu.parentMenu;for(;t;)e++,t=t.parentMenu;this.menu.setElevation(e)}}_setIsMenuOpen(e){this._menuOpen=e,this._menuOpen?this.menuOpened.emit():this.menuClosed.emit(),this.triggersSubmenu()&&(this._menuItemInstance._highlighted=e)}_checkMenu(){}_createOverlay(){if(!this._overlayRef){const e=this._getOverlayConfig();this._subscribeToPositions(e.positionStrategy),this._overlayRef=this._overlay.create(e),this._overlayRef.keydownEvents().subscribe()}return this._overlayRef}_getOverlayConfig(){return new nx({positionStrategy:this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn(".mat-menu-panel, .mat-mdc-menu-panel"),backdropClass:this.menu.backdropClass||"cdk-overlay-transparent-backdrop",panelClass:this.menu.overlayPanelClass,scrollStrategy:this._scrollStrategy(),direction:this._dir})}_subscribeToPositions(e){this.menu.setPositionClasses&&e.positionChanges.subscribe(e=>{this.menu.setPositionClasses("start"===e.connectionPair.overlayX?"after":"before","top"===e.connectionPair.overlayY?"below":"above")})}_setPosition(e){let[t,n]="before"===this.menu.xPosition?["end","start"]:["start","end"],[o,i]="above"===this.menu.yPosition?["bottom","top"]:["top","bottom"],[r,a]=[o,i],[s,l]=[t,n],c=0;this.triggersSubmenu()?(l=t="before"===this.menu.xPosition?"start":"end",n=s="end"===t?"start":"end",c="bottom"===o?8:-8):this.menu.overlapTrigger||(r="top"===o?"bottom":"top",a="top"===i?"bottom":"top"),e.withPositions([{originX:t,originY:r,overlayX:s,overlayY:o,offsetY:c},{originX:n,originY:r,overlayX:l,overlayY:o,offsetY:c},{originX:t,originY:a,overlayX:s,overlayY:i,offsetY:-c},{originX:n,originY:a,overlayX:l,overlayY:i,offsetY:-c}])}_menuClosingActions(){const e=this._overlayRef.backdropClick(),t=this._overlayRef.detachments();return V(e,this._parentMaterialMenu?this._parentMaterialMenu.closed:Cu(),this._parentMaterialMenu?this._parentMaterialMenu._hovered().pipe(Yu(e=>e!==this._menuItemInstance),Yu(()=>this._menuOpen)):Cu(),t)}_handleMousedown(e){nb(e)||(this._openedBy=0===e.button?"mouse":void 0,this.triggersSubmenu()&&e.preventDefault())}_handleKeydown(e){const t=e.keyCode;13!==t&&32!==t||(this._openedBy="keyboard"),this.triggersSubmenu()&&(39===t&&"ltr"===this.dir||37===t&&"rtl"===this.dir)&&(this._openedBy="keyboard",this.openMenu())}_handleClick(e){this.triggersSubmenu()?(e.stopPropagation(),this.openMenu()):this.toggleMenu()}_handleHover(){this.triggersSubmenu()&&this._parentMaterialMenu&&(this._hoverSubscription=this._parentMaterialMenu._hovered().pipe(Yu(e=>e===this._menuItemInstance&&!e.disabled),xC(0,CC)).subscribe(()=>{this._openedBy="mouse",this.menu instanceof Fx&&this.menu._isAnimating?this.menu._animationDone.pipe(Wu(1),xC(0,CC),XA(this._parentMaterialMenu._hovered())).subscribe(()=>this.openMenu()):this.openMenu()}))}_getPortal(){return this._portal&&this._portal.templateRef===this.menu.templateRef||(this._portal=new RC(this.menu.templateRef,this._viewContainerRef)),this._portal}}return e.\u0275fac=function(t){return new(t||e)(ja(Sx),ja($s),ja(Il),ja(Lx),ja(Dx,8),ja(Rx,10),ja(mb,8),ja(ab))},e.\u0275dir=Ke({type:e,selectors:[["","mat-menu-trigger-for",""],["","matMenuTriggerFor",""]],hostAttrs:["aria-haspopup","true",1,"mat-menu-trigger"],hostVars:2,hostBindings:function(e,t){1&e&&$a("mousedown",function(e){return t._handleMousedown(e)})("keydown",function(e){return t._handleKeydown(e)})("click",function(e){return t._handleClick(e)}),2&e&&Ia("aria-expanded",t.menuOpen||null)("aria-controls",t.menuOpen?t.menu.panelId:null)},inputs:{restoreFocus:["matMenuTriggerRestoreFocus","restoreFocus"],_deprecatedMatMenuTriggerFor:["mat-menu-trigger-for","_deprecatedMatMenuTriggerFor"],menu:["matMenuTriggerFor","menu"],menuData:["matMenuTriggerData","menuData"]},outputs:{menuOpened:"menuOpened",onMenuOpen:"onMenuOpen",menuClosed:"menuClosed",onMenuClose:"onMenuClose"},exportAs:["matMenuTrigger"]}),e})(),Bx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[zx],imports:[aw]}),e})(),Wx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[zx],imports:[[Pp,aw,qw,Tx,Bx],HC,aw,Bx]}),e})();const $x=["*",[["mat-toolbar-row"]]],Vx=["*","mat-toolbar-row"];class Hx{constructor(e){this._elementRef=e}}const Gx=lw(Hx);let Jx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["mat-toolbar-row"]],hostAttrs:[1,"mat-toolbar-row"],exportAs:["matToolbarRow"]}),e})(),Kx=(()=>{class e extends Gx{constructor(e,t,n){super(e),this._platform=t,this._document=n}ngAfterViewInit(){this._platform.isBrowser&&(this._checkToolbarMixedModes(),this._toolbarRows.changes.subscribe(()=>this._checkToolbarMixedModes()))}_checkToolbarMixedModes(){}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(Ff),ja(yd))},e.\u0275cmp=We({type:e,selectors:[["mat-toolbar"]],contentQueries:function(e,t,n){if(1&e&&hc(n,Jx,5),2&e){let e;pc(e=mc())&&(t._toolbarRows=e)}},hostAttrs:[1,"mat-toolbar"],hostVars:4,hostBindings:function(e,t){2&e&&rs("mat-toolbar-multiple-rows",t._toolbarRows.length>0)("mat-toolbar-single-row",0===t._toolbarRows.length)},inputs:{color:"color"},exportAs:["matToolbar"],features:[ga],ngContentSelectors:Vx,decls:2,vars:0,template:function(e,t){1&e&&(Qa($x),Za(0),Za(1,1))},styles:[".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\n"],encapsulation:2,changeDetection:0}),e})(),Yx=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw],aw]}),e})();const Qx=["underline"],Zx=["connectionContainer"],Xx=["inputContainer"],eI=["label"];function tI(e,t){1&e&&(La(0),Ma(1,"div",14),Pa(2,"div",15),Pa(3,"div",16),Pa(4,"div",17),Fa(),Ma(5,"div",18),Pa(6,"div",15),Pa(7,"div",16),Pa(8,"div",17),Fa(),za())}function nI(e,t){1&e&&(Ma(0,"div",19),Za(1,1),Fa())}function oI(e,t){if(1&e&&(La(0),Za(1,2),Ma(2,"span"),gs(3),Fa(),za()),2&e){const e=Ka(2);tr(3),fs(e._control.placeholder)}}function iI(e,t){1&e&&Za(0,3,["*ngSwitchCase","true"])}function rI(e,t){1&e&&(Ma(0,"span",23),gs(1," *"),Fa())}function aI(e,t){if(1&e){const e=Na();Ma(0,"label",20,21),$a("cdkObserveContent",function(){return Rt(e),Ka().updateOutlineGap()}),Da(2,oI,4,1,"ng-container",12),Da(3,iI,1,0,"ng-content",12),Da(4,rI,2,0,"span",22),Fa()}if(2&e){const e=Ka();rs("mat-empty",e._control.empty&&!e._shouldAlwaysFloat())("mat-form-field-empty",e._control.empty&&!e._shouldAlwaysFloat())("mat-accent","accent"==e.color)("mat-warn","warn"==e.color),Ra("cdkObserveContentDisabled","outline"!=e.appearance)("id",e._labelId)("ngSwitch",e._hasLabel()),Ia("for",e._control.id)("aria-owns",e._control.id),tr(2),Ra("ngSwitchCase",!1),tr(1),Ra("ngSwitchCase",!0),tr(1),Ra("ngIf",!e.hideRequiredMarker&&e._control.required&&!e._control.disabled)}}function sI(e,t){1&e&&(Ma(0,"div",24),Za(1,4),Fa())}function lI(e,t){if(1&e&&(Ma(0,"div",25,26),Pa(2,"span",27),Fa()),2&e){const e=Ka();tr(2),rs("mat-accent","accent"==e.color)("mat-warn","warn"==e.color)}}function cI(e,t){1&e&&(Ma(0,"div"),Za(1,5),Fa()),2&e&&Ra("@transitionMessages",Ka()._subscriptAnimationState)}function dI(e,t){if(1&e&&(Ma(0,"div",31),gs(1),Fa()),2&e){const e=Ka(2);Ra("id",e._hintLabelId),tr(1),fs(e.hintLabel)}}function pI(e,t){if(1&e&&(Ma(0,"div",28),Da(1,dI,2,2,"div",29),Za(2,6),Pa(3,"div",30),Za(4,7),Fa()),2&e){const e=Ka();Ra("@transitionMessages",e._subscriptAnimationState),tr(1),Ra("ngIf",e.hintLabel)}}const uI=["*",[["","matPrefix",""]],[["mat-placeholder"]],[["mat-label"]],[["","matSuffix",""]],[["mat-error"]],[["mat-hint",3,"align","end"]],[["mat-hint","align","end"]]],hI=["*","[matPrefix]","mat-placeholder","mat-label","[matSuffix]","mat-error","mat-hint:not([align='end'])","mat-hint[align='end']"],mI=new Jn("MatError"),gI={transitionMessages:vb("transitionMessages",[_b("enter",Sb({opacity:1,transform:"translateY(0%)"})),Tb("void => enter",[Sb({opacity:0,transform:"translateY(-5px)"}),wb("300ms cubic-bezier(0.55, 0, 0.55, 0.2)")])])};let fI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e}),e})();const bI=new Jn("MatHint");let yI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["mat-label"]]}),e})(),vI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["mat-placeholder"]]}),e})();const wI=new Jn("MatPrefix"),kI=new Jn("MatSuffix");let SI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e,selectors:[["","matSuffix",""]],features:[Ps([{provide:kI,useExisting:e}])]}),e})(),_I=0;class TI{constructor(e){this._elementRef=e}}const AI=lw(TI,"primary"),CI=new Jn("MAT_FORM_FIELD_DEFAULT_OPTIONS"),xI=new Jn("MatFormField");let II=(()=>{class e extends AI{constructor(e,t,n,o,i,r,a,s){super(e),this._elementRef=e,this._changeDetectorRef=t,this._dir=o,this._defaults=i,this._platform=r,this._ngZone=a,this._outlineGapCalculationNeededImmediately=!1,this._outlineGapCalculationNeededOnStable=!1,this._destroyed=new _,this._showAlwaysAnimate=!1,this._subscriptAnimationState="",this._hintLabel="",this._hintLabelId="mat-hint-"+_I++,this._labelId="mat-form-field-label-"+_I++,this.floatLabel=this._getDefaultFloatLabelState(),this._animationsEnabled="NoopAnimations"!==s,this.appearance=i&&i.appearance?i.appearance:"legacy",this._hideRequiredMarker=!(!i||null==i.hideRequiredMarker)&&i.hideRequiredMarker}get appearance(){return this._appearance}set appearance(e){const t=this._appearance;this._appearance=e||this._defaults&&this._defaults.appearance||"legacy","outline"===this._appearance&&t!==e&&(this._outlineGapCalculationNeededOnStable=!0)}get hideRequiredMarker(){return this._hideRequiredMarker}set hideRequiredMarker(e){this._hideRequiredMarker=Df(e)}_shouldAlwaysFloat(){return"always"===this.floatLabel&&!this._showAlwaysAnimate}_canLabelFloat(){return"never"!==this.floatLabel}get hintLabel(){return this._hintLabel}set hintLabel(e){this._hintLabel=e,this._processHints()}get floatLabel(){return"legacy"!==this.appearance&&"never"===this._floatLabel?"auto":this._floatLabel}set floatLabel(e){e!==this._floatLabel&&(this._floatLabel=e||this._getDefaultFloatLabelState(),this._changeDetectorRef.markForCheck())}get _control(){return this._explicitFormFieldControl||this._controlNonStatic||this._controlStatic}set _control(e){this._explicitFormFieldControl=e}getLabelId(){return this._hasFloatingLabel()?this._labelId:null}getConnectedOverlayOrigin(){return this._connectionContainerRef||this._elementRef}ngAfterContentInit(){this._validateControlChild();const e=this._control;e.controlType&&this._elementRef.nativeElement.classList.add(`mat-form-field-type-${e.controlType}`),e.stateChanges.pipe(Hu(null)).subscribe(()=>{this._validatePlaceholders(),this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),e.ngControl&&e.ngControl.valueChanges&&e.ngControl.valueChanges.pipe(XA(this._destroyed)).subscribe(()=>this._changeDetectorRef.markForCheck()),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.pipe(XA(this._destroyed)).subscribe(()=>{this._outlineGapCalculationNeededOnStable&&this.updateOutlineGap()})}),V(this._prefixChildren.changes,this._suffixChildren.changes).subscribe(()=>{this._outlineGapCalculationNeededOnStable=!0,this._changeDetectorRef.markForCheck()}),this._hintChildren.changes.pipe(Hu(null)).subscribe(()=>{this._processHints(),this._changeDetectorRef.markForCheck()}),this._errorChildren.changes.pipe(Hu(null)).subscribe(()=>{this._syncDescribedByIds(),this._changeDetectorRef.markForCheck()}),this._dir&&this._dir.change.pipe(XA(this._destroyed)).subscribe(()=>{"function"==typeof requestAnimationFrame?this._ngZone.runOutsideAngular(()=>{requestAnimationFrame(()=>this.updateOutlineGap())}):this.updateOutlineGap()})}ngAfterContentChecked(){this._validateControlChild(),this._outlineGapCalculationNeededImmediately&&this.updateOutlineGap()}ngAfterViewInit(){this._subscriptAnimationState="enter",this._changeDetectorRef.detectChanges()}ngOnDestroy(){this._destroyed.next(),this._destroyed.complete()}_shouldForward(e){const t=this._control?this._control.ngControl:null;return t&&t[e]}_hasPlaceholder(){return!!(this._control&&this._control.placeholder||this._placeholderChild)}_hasLabel(){return!(!this._labelChildNonStatic&&!this._labelChildStatic)}_shouldLabelFloat(){return this._canLabelFloat()&&(this._control&&this._control.shouldLabelFloat||this._shouldAlwaysFloat())}_hideControlPlaceholder(){return"legacy"===this.appearance&&!this._hasLabel()||this._hasLabel()&&!this._shouldLabelFloat()}_hasFloatingLabel(){return this._hasLabel()||"legacy"===this.appearance&&this._hasPlaceholder()}_getDisplayedMessages(){return this._errorChildren&&this._errorChildren.length>0&&this._control.errorState?"error":"hint"}_animateAndLockLabel(){this._hasFloatingLabel()&&this._canLabelFloat()&&(this._animationsEnabled&&this._label&&(this._showAlwaysAnimate=!0,Vk(this._label.nativeElement,"transitionend").pipe(Wu(1)).subscribe(()=>{this._showAlwaysAnimate=!1})),this.floatLabel="always",this._changeDetectorRef.markForCheck())}_validatePlaceholders(){}_processHints(){this._validateHints(),this._syncDescribedByIds()}_validateHints(){}_getDefaultFloatLabelState(){return this._defaults&&this._defaults.floatLabel||"auto"}_syncDescribedByIds(){if(this._control){let e=[];if(this._control.userAriaDescribedBy&&"string"==typeof this._control.userAriaDescribedBy&&e.push(...this._control.userAriaDescribedBy.split(" ")),"hint"===this._getDisplayedMessages()){const t=this._hintChildren?this._hintChildren.find(e=>"start"===e.align):null,n=this._hintChildren?this._hintChildren.find(e=>"end"===e.align):null;t?e.push(t.id):this._hintLabel&&e.push(this._hintLabelId),n&&e.push(n.id)}else this._errorChildren&&e.push(...this._errorChildren.map(e=>e.id));this._control.setDescribedByIds(e)}}_validateControlChild(){}updateOutlineGap(){const e=this._label?this._label.nativeElement:null;if("outline"!==this.appearance||!e||!e.children.length||!e.textContent.trim())return;if(!this._platform.isBrowser)return;if(!this._isAttachedToDOM())return void(this._outlineGapCalculationNeededImmediately=!0);let t=0,n=0;const o=this._connectionContainerRef.nativeElement,i=o.querySelectorAll(".mat-form-field-outline-start"),r=o.querySelectorAll(".mat-form-field-outline-gap");if(this._label&&this._label.nativeElement.children.length){const i=o.getBoundingClientRect();if(0===i.width&&0===i.height)return this._outlineGapCalculationNeededOnStable=!0,void(this._outlineGapCalculationNeededImmediately=!1);const r=this._getStartEnd(i),a=e.children,s=this._getStartEnd(a[0].getBoundingClientRect());let l=0;for(let e=0;e<a.length;e++)l+=a[e].offsetWidth;t=Math.abs(s-r)-5,n=l>0?.75*l+10:0}for(let a=0;a<i.length;a++)i[a].style.width=`${t}px`;for(let a=0;a<r.length;a++)r[a].style.width=`${n}px`;this._outlineGapCalculationNeededOnStable=this._outlineGapCalculationNeededImmediately=!1}_getStartEnd(e){return this._dir&&"rtl"===this._dir.value?e.right:e.left}_isAttachedToDOM(){const e=this._elementRef.nativeElement;if(e.getRootNode){const t=e.getRootNode();return t&&t!==e}return document.documentElement.contains(e)}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(fl),ja($s),ja(mb,8),ja(CI,8),ja(Ff),ja(zc),ja(Xv,8))},e.\u0275cmp=We({type:e,selectors:[["mat-form-field"]],contentQueries:function(e,t,n){if(1&e&&(hc(n,fI,5),hc(n,fI,7),hc(n,yI,5),hc(n,yI,7),hc(n,vI,5),hc(n,mI,5),hc(n,bI,5),hc(n,wI,5),hc(n,kI,5)),2&e){let e;pc(e=mc())&&(t._controlNonStatic=e.first),pc(e=mc())&&(t._controlStatic=e.first),pc(e=mc())&&(t._labelChildNonStatic=e.first),pc(e=mc())&&(t._labelChildStatic=e.first),pc(e=mc())&&(t._placeholderChild=e.first),pc(e=mc())&&(t._errorChildren=e),pc(e=mc())&&(t._hintChildren=e),pc(e=mc())&&(t._prefixChildren=e),pc(e=mc())&&(t._suffixChildren=e)}},viewQuery:function(e,t){if(1&e&&(uc(Qx,5),uc(Zx,7),uc(Xx,5),uc(eI,5)),2&e){let e;pc(e=mc())&&(t.underlineRef=e.first),pc(e=mc())&&(t._connectionContainerRef=e.first),pc(e=mc())&&(t._inputContainerRef=e.first),pc(e=mc())&&(t._label=e.first)}},hostAttrs:[1,"mat-form-field"],hostVars:40,hostBindings:function(e,t){2&e&&rs("mat-form-field-appearance-standard","standard"==t.appearance)("mat-form-field-appearance-fill","fill"==t.appearance)("mat-form-field-appearance-outline","outline"==t.appearance)("mat-form-field-appearance-legacy","legacy"==t.appearance)("mat-form-field-invalid",t._control.errorState)("mat-form-field-can-float",t._canLabelFloat())("mat-form-field-should-float",t._shouldLabelFloat())("mat-form-field-has-label",t._hasFloatingLabel())("mat-form-field-hide-placeholder",t._hideControlPlaceholder())("mat-form-field-disabled",t._control.disabled)("mat-form-field-autofilled",t._control.autofilled)("mat-focused",t._control.focused)("ng-untouched",t._shouldForward("untouched"))("ng-touched",t._shouldForward("touched"))("ng-pristine",t._shouldForward("pristine"))("ng-dirty",t._shouldForward("dirty"))("ng-valid",t._shouldForward("valid"))("ng-invalid",t._shouldForward("invalid"))("ng-pending",t._shouldForward("pending"))("_mat-animation-noopable",!t._animationsEnabled)},inputs:{color:"color",floatLabel:"floatLabel",appearance:"appearance",hideRequiredMarker:"hideRequiredMarker",hintLabel:"hintLabel"},exportAs:["matFormField"],features:[Ps([{provide:xI,useExisting:e}]),ga],ngContentSelectors:hI,decls:15,vars:8,consts:[[1,"mat-form-field-wrapper"],[1,"mat-form-field-flex",3,"click"],["connectionContainer",""],[4,"ngIf"],["class","mat-form-field-prefix",4,"ngIf"],[1,"mat-form-field-infix"],["inputContainer",""],[1,"mat-form-field-label-wrapper"],["class","mat-form-field-label",3,"cdkObserveContentDisabled","id","mat-empty","mat-form-field-empty","mat-accent","mat-warn","ngSwitch","cdkObserveContent",4,"ngIf"],["class","mat-form-field-suffix",4,"ngIf"],["class","mat-form-field-underline",4,"ngIf"],[1,"mat-form-field-subscript-wrapper",3,"ngSwitch"],[4,"ngSwitchCase"],["class","mat-form-field-hint-wrapper",4,"ngSwitchCase"],[1,"mat-form-field-outline"],[1,"mat-form-field-outline-start"],[1,"mat-form-field-outline-gap"],[1,"mat-form-field-outline-end"],[1,"mat-form-field-outline","mat-form-field-outline-thick"],[1,"mat-form-field-prefix"],[1,"mat-form-field-label",3,"cdkObserveContentDisabled","id","ngSwitch","cdkObserveContent"],["label",""],["class","mat-placeholder-required mat-form-field-required-marker","aria-hidden","true",4,"ngIf"],["aria-hidden","true",1,"mat-placeholder-required","mat-form-field-required-marker"],[1,"mat-form-field-suffix"],[1,"mat-form-field-underline"],["underline",""],[1,"mat-form-field-ripple"],[1,"mat-form-field-hint-wrapper"],["class","mat-hint",3,"id",4,"ngIf"],[1,"mat-form-field-hint-spacer"],[1,"mat-hint",3,"id"]],template:function(e,t){1&e&&(Qa(uI),Ma(0,"div",0),Ma(1,"div",1,2),$a("click",function(e){return t._control.onContainerClick&&t._control.onContainerClick(e)}),Da(3,tI,9,0,"ng-container",3),Da(4,nI,2,0,"div",4),Ma(5,"div",5,6),Za(7),Ma(8,"span",7),Da(9,aI,5,16,"label",8),Fa(),Fa(),Da(10,sI,2,0,"div",9),Fa(),Da(11,lI,3,4,"div",10),Ma(12,"div",11),Da(13,cI,2,1,"div",12),Da(14,pI,5,2,"div",13),Fa(),Fa()),2&e&&(tr(3),Ra("ngIf","outline"==t.appearance),tr(1),Ra("ngIf",t._prefixChildren.length),tr(5),Ra("ngIf",t._hasFloatingLabel()),tr(1),Ra("ngIf",t._suffixChildren.length),tr(1),Ra("ngIf","outline"!=t.appearance),tr(1),Ra("ngSwitch",t._getDisplayedMessages()),tr(1),Ra("ngSwitchCase","error"),tr(1),Ra("ngSwitchCase","hint"))},directives:[kp,Ap,Cp,Jf],styles:[".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n",'.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n','.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n",".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n",".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n"],encapsulation:2,data:{animation:[gI.transitionMessages]},changeDetection:0}),e})(),EI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw,Kf],aw]}),e})();const DI=Wf({passive:!0});let OI=(()=>{class e{constructor(e,t){this._platform=e,this._ngZone=t,this._monitoredElements=new Map}monitor(e){if(!this._platform.isBrowser)return Fu;const t=Rf(e),n=this._monitoredElements.get(t);if(n)return n.subject;const o=new _,i="cdk-text-field-autofilled",r=e=>{"cdk-text-field-autofill-start"!==e.animationName||t.classList.contains(i)?"cdk-text-field-autofill-end"===e.animationName&&t.classList.contains(i)&&(t.classList.remove(i),this._ngZone.run(()=>o.next({target:e.target,isAutofilled:!1}))):(t.classList.add(i),this._ngZone.run(()=>o.next({target:e.target,isAutofilled:!0})))};return this._ngZone.runOutsideAngular(()=>{t.addEventListener("animationstart",r,DI),t.classList.add("cdk-text-field-autofill-monitored")}),this._monitoredElements.set(t,{subject:o,unlisten:()=>{t.removeEventListener("animationstart",r,DI)}}),o}stopMonitoring(e){const t=Rf(e),n=this._monitoredElements.get(t);n&&(n.unlisten(),n.subject.complete(),t.classList.remove("cdk-text-field-autofill-monitored"),t.classList.remove("cdk-text-field-autofilled"),this._monitoredElements.delete(t))}ngOnDestroy(){this._monitoredElements.forEach((e,t)=>this.stopMonitoring(t))}}return e.\u0275fac=function(t){return new(t||e)(ho(Ff),ho(zc))},e.\u0275prov=ue({factory:function(){return new e(ho(Ff),ho(zc))},token:e,providedIn:"root"}),e})(),jI=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pf]]}),e})();const RI=new Jn("NgValidators"),qI=new Jn("NgAsyncValidators");function MI(e){return null!=e}function FI(e){const t=Ua(e)?F(e):e;return Wa(t),t}function PI(e){let t={};return e.forEach(e=>{t=null!=e?Object.assign(Object.assign({},t),e):t}),0===Object.keys(t).length?null:t}function LI(e,t){return t.map(t=>t(e))}function zI(e){return e.map(e=>function(e){return!e.validate}(e)?e:t=>e.validate(t))}function NI(e){return null!=e?function(e){if(!e)return null;const t=e.filter(MI);return 0==t.length?null:function(e){return PI(LI(e,t))}}(zI(e)):null}function UI(e){return null!=e?function(e){if(!e)return null;const t=e.filter(MI);return 0==t.length?null:function(e){return zw(LI(e,t).map(FI)).pipe(C(PI))}}(zI(e)):null}function BI(e,t){return null===e?[t]:Array.isArray(e)?[...e,t]:[e,t]}function WI(e){return e._rawValidators}function $I(e){return e._rawAsyncValidators}let VI=(()=>{class e{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(e){this._rawValidators=e||[],this._composedValidatorFn=NI(this._rawValidators)}_setAsyncValidators(e){this._rawAsyncValidators=e||[],this._composedAsyncValidatorFn=UI(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(e){this._onDestroyCallbacks.push(e)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(e=>e()),this._onDestroyCallbacks=[]}reset(e){this.control&&this.control.reset(e)}hasError(e,t){return!!this.control&&this.control.hasError(e,t)}getError(e,t){return this.control?this.control.getError(e,t):null}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275dir=Ke({type:e}),e})(),HI=(()=>{class e extends VI{get formDirective(){return null}get path(){return null}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=Wn(e)))(n||e)}}(),e.\u0275dir=Ke({type:e,features:[ga]}),e})();class GI extends VI{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}}function JI(e,t){QI(e,t),t.valueAccessor.writeValue(e.value),function(e,t){t.valueAccessor.registerOnChange(n=>{e._pendingValue=n,e._pendingChange=!0,e._pendingDirty=!0,"change"===e.updateOn&&XI(e,t)})}(e,t),function(e,t){const n=(e,n)=>{t.valueAccessor.writeValue(e),n&&t.viewToModelUpdate(e)};e.registerOnChange(n),t._registerOnDestroy(()=>{e._unregisterOnChange(n)})}(e,t),function(e,t){t.valueAccessor.registerOnTouched(()=>{e._pendingTouched=!0,"blur"===e.updateOn&&e._pendingChange&&XI(e,t),"submit"!==e.updateOn&&e.markAsTouched()})}(e,t),function(e,t){if(t.valueAccessor.setDisabledState){const n=e=>{t.valueAccessor.setDisabledState(e)};e.registerOnDisabledChange(n),t._registerOnDestroy(()=>{e._unregisterOnDisabledChange(n)})}}(e,t)}function KI(e,t,n=!0){const o=()=>{};t.valueAccessor&&(t.valueAccessor.registerOnChange(o),t.valueAccessor.registerOnTouched(o)),ZI(e,t),e&&(t._invokeOnDestroyCallbacks(),e._registerOnCollectionChange(()=>{}))}function YI(e,t){e.forEach(e=>{e.registerOnValidatorChange&&e.registerOnValidatorChange(t)})}function QI(e,t){const n=WI(e);null!==t.validator?e.setValidators(BI(n,t.validator)):"function"==typeof n&&e.setValidators([n]);const o=$I(e);null!==t.asyncValidator?e.setAsyncValidators(BI(o,t.asyncValidator)):"function"==typeof o&&e.setAsyncValidators([o]);const i=()=>e.updateValueAndValidity();YI(t._rawValidators,i),YI(t._rawAsyncValidators,i)}function ZI(e,t){let n=!1;if(null!==e){if(null!==t.validator){const o=WI(e);if(Array.isArray(o)&&o.length>0){const i=o.filter(e=>e!==t.validator);i.length!==o.length&&(n=!0,e.setValidators(i))}}if(null!==t.asyncValidator){const o=$I(e);if(Array.isArray(o)&&o.length>0){const i=o.filter(e=>e!==t.asyncValidator);i.length!==o.length&&(n=!0,e.setAsyncValidators(i))}}}const o=()=>{};return YI(t._rawValidators,o),YI(t._rawAsyncValidators,o),n}function XI(e,t){e._pendingDirty&&e.markAsDirty(),e.setValue(e._pendingValue,{emitModelToViewChange:!1}),t.viewToModelUpdate(e._pendingValue),e._pendingChange=!1}function eE(e,t){QI(e,t)}function tE(e,t){e._syncPendingControls(),t.forEach(e=>{const t=e.control;"submit"===t.updateOn&&t._pendingChange&&(e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1)})}function nE(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}const oE="VALID",iE="INVALID",rE="PENDING",aE="DISABLED";function sE(e){return(pE(e)?e.validators:e)||null}function lE(e){return Array.isArray(e)?NI(e):e||null}function cE(e,t){return(pE(t)?t.asyncValidators:e)||null}function dE(e){return Array.isArray(e)?UI(e):e||null}function pE(e){return null!=e&&!Array.isArray(e)&&"object"==typeof e}class uE{constructor(e,t){this._hasOwnPendingAsyncValidator=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._rawValidators=e,this._rawAsyncValidators=t,this._composedValidatorFn=lE(this._rawValidators),this._composedAsyncValidatorFn=dE(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn}set validator(e){this._rawValidators=this._composedValidatorFn=e}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(e){this._rawAsyncValidators=this._composedAsyncValidatorFn=e}get parent(){return this._parent}get valid(){return this.status===oE}get invalid(){return this.status===iE}get pending(){return this.status==rE}get disabled(){return this.status===aE}get enabled(){return this.status!==aE}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(e){this._rawValidators=e,this._composedValidatorFn=lE(e)}setAsyncValidators(e){this._rawAsyncValidators=e,this._composedAsyncValidatorFn=dE(e)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(e={}){this.touched=!0,this._parent&&!e.onlySelf&&this._parent.markAsTouched(e)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(e=>e.markAllAsTouched())}markAsUntouched(e={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(e=>{e.markAsUntouched({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}markAsDirty(e={}){this.pristine=!1,this._parent&&!e.onlySelf&&this._parent.markAsDirty(e)}markAsPristine(e={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(e=>{e.markAsPristine({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}markAsPending(e={}){this.status=rE,!1!==e.emitEvent&&this.statusChanges.emit(this.status),this._parent&&!e.onlySelf&&this._parent.markAsPending(e)}disable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=aE,this.errors=null,this._forEachChild(t=>{t.disable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this._updateValue(),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!0))}enable(e={}){const t=this._parentMarkedDirty(e.onlySelf);this.status=oE,this._forEachChild(t=>{t.enable(Object.assign(Object.assign({},e),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent}),this._updateAncestors(Object.assign(Object.assign({},e),{skipPristineCheck:t})),this._onDisabledChange.forEach(e=>e(!1))}_updateAncestors(e){this._parent&&!e.onlySelf&&(this._parent.updateValueAndValidity(e),e.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(e){this._parent=e}updateValueAndValidity(e={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),this.status!==oE&&this.status!==rE||this._runAsyncValidator(e.emitEvent)),!1!==e.emitEvent&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!e.onlySelf&&this._parent.updateValueAndValidity(e)}_updateTreeValidity(e={emitEvent:!0}){this._forEachChild(t=>t._updateTreeValidity(e)),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?aE:oE}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(e){if(this.asyncValidator){this.status=rE,this._hasOwnPendingAsyncValidator=!0;const t=FI(this.asyncValidator(this));this._asyncValidationSubscription=t.subscribe(t=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(t,{emitEvent:e})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(e,t={}){this.errors=e,this._updateControlsErrors(!1!==t.emitEvent)}get(e){return function(e,t,n){if(null==t)return null;if(Array.isArray(t)||(t=t.split(".")),Array.isArray(t)&&0===t.length)return null;let o=e;return t.forEach(e=>{o=o instanceof mE?o.controls.hasOwnProperty(e)?o.controls[e]:null:o instanceof gE&&o.at(e)||null}),o}(this,e)}getError(e,t){const n=t?this.get(t):this;return n&&n.errors?n.errors[e]:null}hasError(e,t){return!!this.getError(e,t)}get root(){let e=this;for(;e._parent;)e=e._parent;return e}_updateControlsErrors(e){this.status=this._calculateStatus(),e&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(e)}_initObservables(){this.valueChanges=new Xl,this.statusChanges=new Xl}_calculateStatus(){return this._allControlsDisabled()?aE:this.errors?iE:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(rE)?rE:this._anyControlsHaveStatus(iE)?iE:oE}_anyControlsHaveStatus(e){return this._anyControls(t=>t.status===e)}_anyControlsDirty(){return this._anyControls(e=>e.dirty)}_anyControlsTouched(){return this._anyControls(e=>e.touched)}_updatePristine(e={}){this.pristine=!this._anyControlsDirty(),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}_updateTouched(e={}){this.touched=this._anyControlsTouched(),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}_isBoxedValue(e){return"object"==typeof e&&null!==e&&2===Object.keys(e).length&&"value"in e&&"disabled"in e}_registerOnCollectionChange(e){this._onCollectionChange=e}_setUpdateStrategy(e){pE(e)&&null!=e.updateOn&&(this._updateOn=e.updateOn)}_parentMarkedDirty(e){return!e&&!(!this._parent||!this._parent.dirty)&&!this._parent._anyControlsDirty()}}class hE extends uE{constructor(e=null,t,n){super(sE(t),cE(n,t)),this._onChange=[],this._applyFormState(e),this._setUpdateStrategy(t),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}setValue(e,t={}){this.value=this._pendingValue=e,this._onChange.length&&!1!==t.emitModelToViewChange&&this._onChange.forEach(e=>e(this.value,!1!==t.emitViewToModelChange)),this.updateValueAndValidity(t)}patchValue(e,t={}){this.setValue(e,t)}reset(e=null,t={}){this._applyFormState(e),this.markAsPristine(t),this.markAsUntouched(t),this.setValue(this.value,t),this._pendingChange=!1}_updateValue(){}_anyControls(e){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(e){this._onChange.push(e)}_unregisterOnChange(e){nE(this._onChange,e)}registerOnDisabledChange(e){this._onDisabledChange.push(e)}_unregisterOnDisabledChange(e){nE(this._onDisabledChange,e)}_forEachChild(e){}_syncPendingControls(){return!("submit"!==this.updateOn||(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),!this._pendingChange)||(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),0))}_applyFormState(e){this._isBoxedValue(e)?(this.value=this._pendingValue=e.value,e.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=e}}class mE extends uE{constructor(e,t,n){super(sE(t),cE(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}registerControl(e,t){return this.controls[e]?this.controls[e]:(this.controls[e]=t,t.setParent(this),t._registerOnCollectionChange(this._onCollectionChange),t)}addControl(e,t,n={}){this.registerControl(e,t),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}removeControl(e,t={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}setControl(e,t,n={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),delete this.controls[e],t&&this.registerControl(e,t),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}contains(e){return this.controls.hasOwnProperty(e)&&this.controls[e].enabled}setValue(e,t={}){this._checkAllValuesPresent(e),Object.keys(e).forEach(n=>{this._throwIfControlMissing(n),this.controls[n].setValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(Object.keys(e).forEach(n=>{this.controls[n]&&this.controls[n].patchValue(e[n],{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e={},t={}){this._forEachChild((n,o)=>{n.reset(e[o],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this._reduceChildren({},(e,t,n)=>(e[n]=t instanceof hE?t.value:t.getRawValue(),e))}_syncPendingControls(){let e=this._reduceChildren(!1,(e,t)=>!!t._syncPendingControls()||e);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!Object.keys(this.controls).length)throw new Error("\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.controls[e])throw new Error(`Cannot find form control with name: ${e}.`)}_forEachChild(e){Object.keys(this.controls).forEach(t=>{const n=this.controls[t];n&&e(n,t)})}_setUpControls(){this._forEachChild(e=>{e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)})}_updateValue(){this.value=this._reduceValue()}_anyControls(e){for(const t of Object.keys(this.controls)){const n=this.controls[t];if(this.contains(t)&&e(n))return!0}return!1}_reduceValue(){return this._reduceChildren({},(e,t,n)=>((t.enabled||this.disabled)&&(e[n]=t.value),e))}_reduceChildren(e,t){let n=e;return this._forEachChild((e,o)=>{n=t(n,e,o)}),n}_allControlsDisabled(){for(const e of Object.keys(this.controls))if(this.controls[e].enabled)return!1;return Object.keys(this.controls).length>0||this.disabled}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control with name: '${n}'.`)})}}class gE extends uE{constructor(e,t,n){super(sE(t),cE(n,t)),this.controls=e,this._initObservables(),this._setUpdateStrategy(t),this._setUpControls(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!n})}at(e){return this.controls[e]}push(e,t={}){this.controls.push(e),this._registerControl(e),this.updateValueAndValidity({emitEvent:t.emitEvent}),this._onCollectionChange()}insert(e,t,n={}){this.controls.splice(e,0,t),this._registerControl(t),this.updateValueAndValidity({emitEvent:n.emitEvent})}removeAt(e,t={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),this.updateValueAndValidity({emitEvent:t.emitEvent})}setControl(e,t,n={}){this.controls[e]&&this.controls[e]._registerOnCollectionChange(()=>{}),this.controls.splice(e,1),t&&(this.controls.splice(e,0,t),this._registerControl(t)),this.updateValueAndValidity({emitEvent:n.emitEvent}),this._onCollectionChange()}get length(){return this.controls.length}setValue(e,t={}){this._checkAllValuesPresent(e),e.forEach((e,n)=>{this._throwIfControlMissing(n),this.at(n).setValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t)}patchValue(e,t={}){null!=e&&(e.forEach((e,n)=>{this.at(n)&&this.at(n).patchValue(e,{onlySelf:!0,emitEvent:t.emitEvent})}),this.updateValueAndValidity(t))}reset(e=[],t={}){this._forEachChild((n,o)=>{n.reset(e[o],{onlySelf:!0,emitEvent:t.emitEvent})}),this._updatePristine(t),this._updateTouched(t),this.updateValueAndValidity(t)}getRawValue(){return this.controls.map(e=>e instanceof hE?e.value:e.getRawValue())}clear(e={}){this.controls.length<1||(this._forEachChild(e=>e._registerOnCollectionChange(()=>{})),this.controls.splice(0),this.updateValueAndValidity({emitEvent:e.emitEvent}))}_syncPendingControls(){let e=this.controls.reduce((e,t)=>!!t._syncPendingControls()||e,!1);return e&&this.updateValueAndValidity({onlySelf:!0}),e}_throwIfControlMissing(e){if(!this.controls.length)throw new Error("\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      ");if(!this.at(e))throw new Error(`Cannot find form control at index ${e}`)}_forEachChild(e){this.controls.forEach((t,n)=>{e(t,n)})}_updateValue(){this.value=this.controls.filter(e=>e.enabled||this.disabled).map(e=>e.value)}_anyControls(e){return this.controls.some(t=>t.enabled&&e(t))}_setUpControls(){this._forEachChild(e=>this._registerControl(e))}_checkAllValuesPresent(e){this._forEachChild((t,n)=>{if(void 0===e[n])throw new Error(`Must supply a value for form control at index: ${n}.`)})}_allControlsDisabled(){for(const e of this.controls)if(e.enabled)return!1;return this.controls.length>0||this.disabled}_registerControl(e){e.setParent(this),e._registerOnCollectionChange(this._onCollectionChange)}}const fE={provide:HI,useExisting:re(()=>yE)},bE=(()=>Promise.resolve(null))();let yE=(()=>{class e extends HI{constructor(e,t){super(),this.submitted=!1,this._directives=[],this.ngSubmit=new Xl,this.form=new mE({},NI(e),UI(t))}ngAfterViewInit(){this._setUpdateStrategy()}get formDirective(){return this}get control(){return this.form}get path(){return[]}get controls(){return this.form.controls}addControl(e){bE.then(()=>{const t=this._findContainer(e.path);e.control=t.registerControl(e.name,e.control),JI(e.control,e),e.control.updateValueAndValidity({emitEvent:!1}),this._directives.push(e)})}getControl(e){return this.form.get(e.path)}removeControl(e){bE.then(()=>{const t=this._findContainer(e.path);t&&t.removeControl(e.name),nE(this._directives,e)})}addFormGroup(e){bE.then(()=>{const t=this._findContainer(e.path),n=new mE({});eE(n,e),t.registerControl(e.name,n),n.updateValueAndValidity({emitEvent:!1})})}removeFormGroup(e){bE.then(()=>{const t=this._findContainer(e.path);t&&t.removeControl(e.name)})}getFormGroup(e){return this.form.get(e.path)}updateModel(e,t){bE.then(()=>{this.form.get(e.path).setValue(t)})}setValue(e){this.control.setValue(e)}onSubmit(e){return this.submitted=!0,tE(this.form,this._directives),this.ngSubmit.emit(e),!1}onReset(){this.resetForm()}resetForm(e){this.form.reset(e),this.submitted=!1}_setUpdateStrategy(){this.options&&null!=this.options.updateOn&&(this.form._updateOn=this.options.updateOn)}_findContainer(e){return e.pop(),e.length?this.form.get(e):this.form}}return e.\u0275fac=function(t){return new(t||e)(ja(RI,10),ja(qI,10))},e.\u0275dir=Ke({type:e,selectors:[["form",3,"ngNoForm","",3,"formGroup",""],["ng-form"],["","ngForm",""]],hostBindings:function(e,t){1&e&&$a("submit",function(e){return t.onSubmit(e)})("reset",function(){return t.onReset()})},inputs:{options:["ngFormOptions","options"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[Ps([fE]),ga]}),e})();const vE={provide:HI,useExisting:re(()=>wE)};let wE=(()=>{class e extends HI{constructor(e,t){super(),this.validators=e,this.asyncValidators=t,this.submitted=!1,this._onCollectionChange=()=>this._updateDomValue(),this.directives=[],this.form=null,this.ngSubmit=new Xl,this._setValidators(e),this._setAsyncValidators(t)}ngOnChanges(e){this._checkFormPresent(),e.hasOwnProperty("form")&&(this._updateValidators(),this._updateDomValue(),this._updateRegistrations(),this._oldForm=this.form)}ngOnDestroy(){this.form&&(ZI(this.form,this),this.form._onCollectionChange===this._onCollectionChange&&this.form._registerOnCollectionChange(()=>{}))}get formDirective(){return this}get control(){return this.form}get path(){return[]}addControl(e){const t=this.form.get(e.path);return JI(t,e),t.updateValueAndValidity({emitEvent:!1}),this.directives.push(e),t}getControl(e){return this.form.get(e.path)}removeControl(e){KI(e.control||null,e,!1),nE(this.directives,e)}addFormGroup(e){this._setUpFormContainer(e)}removeFormGroup(e){this._cleanUpFormContainer(e)}getFormGroup(e){return this.form.get(e.path)}addFormArray(e){this._setUpFormContainer(e)}removeFormArray(e){this._cleanUpFormContainer(e)}getFormArray(e){return this.form.get(e.path)}updateModel(e,t){this.form.get(e.path).setValue(t)}onSubmit(e){return this.submitted=!0,tE(this.form,this.directives),this.ngSubmit.emit(e),!1}onReset(){this.resetForm()}resetForm(e){this.form.reset(e),this.submitted=!1}_updateDomValue(){this.directives.forEach(e=>{const t=e.control,n=this.form.get(e.path);t!==n&&(KI(t||null,e),n instanceof hE&&(JI(n,e),e.control=n))}),this.form._updateTreeValidity({emitEvent:!1})}_setUpFormContainer(e){const t=this.form.get(e.path);eE(t,e),t.updateValueAndValidity({emitEvent:!1})}_cleanUpFormContainer(e){if(this.form){const t=this.form.get(e.path);t&&function(e,t){return ZI(e,t)}(t,e)&&t.updateValueAndValidity({emitEvent:!1})}}_updateRegistrations(){this.form._registerOnCollectionChange(this._onCollectionChange),this._oldForm&&this._oldForm._registerOnCollectionChange(()=>{})}_updateValidators(){QI(this.form,this),this._oldForm&&ZI(this._oldForm,this)}_checkFormPresent(){}}return e.\u0275fac=function(t){return new(t||e)(ja(RI,10),ja(qI,10))},e.\u0275dir=Ke({type:e,selectors:[["","formGroup",""]],hostBindings:function(e,t){1&e&&$a("submit",function(e){return t.onSubmit(e)})("reset",function(){return t.onReset()})},inputs:{form:["formGroup","form"]},outputs:{ngSubmit:"ngSubmit"},exportAs:["ngForm"],features:[Ps([vE]),ga,ct]}),e})();const kE=new Jn("MAT_INPUT_VALUE_ACCESSOR"),SE=["button","checkbox","file","hidden","image","radio","range","reset","submit"];let _E=0;class TE{constructor(e,t,n,o){this._defaultErrorStateMatcher=e,this._parentForm=t,this._parentFormGroup=n,this.ngControl=o}}const AE=dw(TE);let CE=(()=>{class e extends AE{constructor(e,t,n,o,i,r,a,s,l,c){super(r,o,i,n),this._elementRef=e,this._platform=t,this.ngControl=n,this._autofillMonitor=s,this._formField=c,this._uid="mat-input-"+_E++,this.focused=!1,this.stateChanges=new _,this.controlType="mat-input",this.autofilled=!1,this._disabled=!1,this._required=!1,this._type="text",this._readonly=!1,this._neverEmptyInputTypes=["date","datetime","datetime-local","month","time","week"].filter(e=>zf().has(e));const d=this._elementRef.nativeElement,p=d.nodeName.toLowerCase();this._inputValueAccessor=a||d,this._previousNativeValue=this.value,this.id=this.id,t.IOS&&l.runOutsideAngular(()=>{e.nativeElement.addEventListener("keyup",e=>{const t=e.target;t.value||0!==t.selectionStart||0!==t.selectionEnd||(t.setSelectionRange(1,1),t.setSelectionRange(0,0))})}),this._isServer=!this._platform.isBrowser,this._isNativeSelect="select"===p,this._isTextarea="textarea"===p,this._isNativeSelect&&(this.controlType=d.multiple?"mat-native-select-multiple":"mat-native-select")}get disabled(){return this.ngControl&&null!==this.ngControl.disabled?this.ngControl.disabled:this._disabled}set disabled(e){this._disabled=Df(e),this.focused&&(this.focused=!1,this.stateChanges.next())}get id(){return this._id}set id(e){this._id=e||this._uid}get required(){return this._required}set required(e){this._required=Df(e)}get type(){return this._type}set type(e){this._type=e||"text",this._validateType(),!this._isTextarea&&zf().has(this._type)&&(this._elementRef.nativeElement.type=this._type)}get value(){return this._inputValueAccessor.value}set value(e){e!==this.value&&(this._inputValueAccessor.value=e,this.stateChanges.next())}get readonly(){return this._readonly}set readonly(e){this._readonly=Df(e)}ngAfterViewInit(){this._platform.isBrowser&&this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(e=>{this.autofilled=e.isAutofilled,this.stateChanges.next()})}ngOnChanges(){this.stateChanges.next()}ngOnDestroy(){this.stateChanges.complete(),this._platform.isBrowser&&this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement)}ngDoCheck(){this.ngControl&&this.updateErrorState(),this._dirtyCheckNativeValue(),this._dirtyCheckPlaceholder()}focus(e){this._elementRef.nativeElement.focus(e)}_focusChanged(e){e===this.focused||this.readonly&&e||(this.focused=e,this.stateChanges.next())}_onInput(){}_dirtyCheckPlaceholder(){var e,t;const n=(null===(t=null===(e=this._formField)||void 0===e?void 0:e._hideControlPlaceholder)||void 0===t?void 0:t.call(e))?null:this.placeholder;if(n!==this._previousPlaceholder){const e=this._elementRef.nativeElement;this._previousPlaceholder=n,n?e.setAttribute("placeholder",n):e.removeAttribute("placeholder")}}_dirtyCheckNativeValue(){const e=this._elementRef.nativeElement.value;this._previousNativeValue!==e&&(this._previousNativeValue=e,this.stateChanges.next())}_validateType(){SE.indexOf(this._type)}_isNeverEmpty(){return this._neverEmptyInputTypes.indexOf(this._type)>-1}_isBadInput(){let e=this._elementRef.nativeElement.validity;return e&&e.badInput}get empty(){return!(this._isNeverEmpty()||this._elementRef.nativeElement.value||this._isBadInput()||this.autofilled)}get shouldLabelFloat(){if(this._isNativeSelect){const e=this._elementRef.nativeElement,t=e.options[0];return this.focused||e.multiple||!this.empty||!!(e.selectedIndex>-1&&t&&t.label)}return this.focused||!this.empty}setDescribedByIds(e){e.length?this._elementRef.nativeElement.setAttribute("aria-describedby",e.join(" ")):this._elementRef.nativeElement.removeAttribute("aria-describedby")}onContainerClick(){this.focused||this.focus()}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(Ff),ja(GI,10),ja(yE,8),ja(wE,8),ja(Tw),ja(kE,10),ja(OI),ja(zc),ja(xI,8))},e.\u0275dir=Ke({type:e,selectors:[["input","matInput",""],["textarea","matInput",""],["select","matNativeControl",""],["input","matNativeControl",""],["textarea","matNativeControl",""]],hostAttrs:[1,"mat-input-element","mat-form-field-autofill-control"],hostVars:9,hostBindings:function(e,t){1&e&&$a("focus",function(){return t._focusChanged(!0)})("blur",function(){return t._focusChanged(!1)})("input",function(){return t._onInput()}),2&e&&(vs("disabled",t.disabled)("required",t.required),Ia("id",t.id)("data-placeholder",t.placeholder)("readonly",t.readonly&&!t._isNativeSelect||null)("aria-invalid",t.errorState&&!t.empty)("aria-required",t.required),rs("mat-input-server",t._isServer))},inputs:{id:"id",disabled:"disabled",required:"required",type:"type",value:"value",readonly:"readonly",placeholder:"placeholder",errorStateMatcher:"errorStateMatcher",userAriaDescribedBy:["aria-describedby","userAriaDescribedBy"]},exportAs:["matInput"],features:[Ps([{provide:fI,useExisting:e}]),ga,ct]}),e})(),xE=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[Tw],imports:[[jI,EI,aw],jI,EI]}),e})();function IE(e,t){if(1&e&&(Ma(0,"div"),Ma(1,"h2"),gs(2,"Summary"),Fa(),Pa(3,"summary",4),Fa()),2&e){const e=Ka();tr(3),Ra("innerHTML",e.summary,oi)}}const EE=function(){return{"u-font-zilla-slab-400":!0}},DE=function(e,t){return["/",e,t]};function OE(e,t){1&e&&Pa(0,"fs-summary-card",1),2&e&&Ra("topic",t.$implicit)}function jE(e,t){1&e&&(Ma(0,"h1"),gs(1,"Scenario"),Fa())}const RE=function(e){return["/",e]};function qE(e,t){if(1&e&&Pa(0,"button",8),2&e){const e=t.$implicit;Ra("routerLink",(2,n=RE,o=e.toLowerCase(),Hl(Ot(),Ut(),2,n,o,undefined)))("innerHtml",e,oi)}var n,o}const ME=["input"],FE=function(){return["/"]};var PE=function(e){return e[e.TWITTER=0]="TWITTER",e[e.FACEBOOK=1]="FACEBOOK",e[e.LINKEDIN=2]="LINKEDIN",e}({});const LE="description",zE="keywords",NE="author",UE="twitter:card",BE="twitter:site",WE="twitter:title",$E="twitter:description",VE="twitter:creator",HE="twitter:image",GE="og:title",JE="og:type",KE="og:url",YE="og:image",QE="og:description",ZE="og:site_name",XE={ALL:"All",GUIDES:"Guides",BLOGS:"Blogs",CONCEPTS:"Concepts",TASKS:"Tasks",FORMULAS:"Formulas",EXAMPLES:"examples"},eD={GUIDE:"guide",TASK:"task",CONCEPT:"concept",FORMULA:"formula",BLOG:"blog",EXAMPLE:"example"},tD=Object.values(eD),nD=new Map;nD.set(XE.TASKS,eD.TASK),nD.set(XE.GUIDES,eD.GUIDE),nD.set(XE.CONCEPTS,eD.CONCEPT),nD.set(XE.FORMULAS,eD.FORMULA),nD.set(XE.BLOGS,eD.BLOG),nD.set(XE.EXAMPLES,eD.EXAMPLE);let oD=(()=>{class e{constructor(e){var t,n;this.vc=e,this.topicStore=new sS,this.searchStore=new sS,this.scrollingUp$=(t=window,n=()=>this.vc.getScrollPosition(),Vk(t,"scroll").pipe(Cf(20),Gk(),C(e=>n()),e=>e.lift(new Yk),zu(e=>Cu(!(e[0][1]-e[1][1]>0)))))}init(e){this.topicContainer=e,this.initializeTopicStore(),this.initializeSearchStore(),this.initializeSlices()}initializeTopicStore(){this.topicContainer.categories.forEach(e=>{this.topicContainer.categorizedTopics[e].forEach(e=>{this.topicStore.post(e)})})}initializeSlices(){tD.forEach(e=>{this.topicStore.addSlice(t=>t.type==e,e)})}initializeSearchStore(){this.topicContainer.categories.forEach(e=>{this.topicContainer.categorizedTopics[e].forEach(e=>{this.searchStore.post({meta:null,topic:e}.topic)})})}}return e.\u0275fac=function(t){return new(t||e)(ho(Lp))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),iD=(()=>{class e{constructor(e){this.s=e,this.initializeSearchIndex(e.topicStore.allSnapshot())}initializeSearchIndex(e){this.idx=Fk(function(){this.field("title"),this.field("summary"),this.field("markdown"),e.forEach(e=>{this.add(e)})})}search(e){this.s.searchStore.reset(),""!=e?this.idx.search(e).map(e=>{const t={meta:e,topic:this.s.topicStore.findOneByID(e.ref)};this.s.searchStore.post(t.topic)}):this.s.initializeSearchStore()}}return e.\u0275fac=function(t){return new(t||e)(ho(oD))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),rD=(()=>{class e{constructor(e,t){this.metaService=e,this.titleService=t}setTitle(e){this.titleService.setTitle(e)}addTags(e){this.metaService.addTags(e)}updateTitleAndMeta(e,t,n,o){this.titleService.setTitle(e.title||""),this.metaService.updateTag({name:LE,content:e.summary||""}),this.metaService.updateTag({name:zE,content:e.tagString||""}),this.metaService.updateTag({name:NE,content:o}),this.metaService.updateTag({name:UE,content:"summary"}),this.metaService.updateTag({name:BE,content:t}),this.metaService.updateTag({name:WE,content:e.title||""}),this.metaService.updateTag({name:$E,content:e.summary||""}),this.metaService.updateTag({name:VE,content:"@fireflysmtics"}),this.metaService.updateTag({name:HE,content:e.headerImageURL}),this.metaService.updateTag({name:GE,content:e.title||""}),this.metaService.updateTag({name:JE,content:"article"}),this.metaService.updateTag({name:KE,content:t}),this.metaService.updateTag({name:YE,content:e.headerImageURL}),this.metaService.updateTag({name:QE,content:e.summary||""}),this.metaService.updateTag({name:ZE,content:n})}}return e.\u0275fac=function(t){return new(t||e)(ho(Su),ho(Au))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),aD=(()=>{class e{constructor(e){this.router=e}canActivate(e){const t=e.data.TOPIC_STORE_KEY,n=e.paramMap.get("topic");return!!t.findOneByID(n||"")||(this.router.navigate(["/404"]),!1)}}return e.\u0275fac=function(t){return new(t||e)(ho(Yg))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),sD=(()=>{class e{constructor(){}resolve(e){const t=e.data.TOPIC_STORE_KEY;let n=e.paramMap.get("topic");return t.findOneByID(n||"")}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),lD=(()=>{class e{constructor(e){this.router=e}canActivate(e){const t=e.data.TOPIC_STORE_KEY;let n=e.paramMap.get("category");if(n){n=n.toLowerCase().slice(0,-1);const e=t.getSlice(n);if(e&&e.allSnapshot().length)return!0}return this.router.navigate(["/404"]),!1}}return e.\u0275fac=function(t){return new(t||e)(ho(Yg))},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),cD=(()=>{class e{constructor(){}resolve(e){const t=e.data.TOPIC_STORE_KEY;let n=e.paramMap.get("category");if(n){n=n.toLocaleLowerCase().slice(0,-1);const e=t.getSlice(n);if(e)return e.allSnapshot()}return[]}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({token:e,factory:e.\u0275fac,providedIn:"root"}),e})(),dD=(()=>{class e{constructor(){}get author(){return this.topic.author}get date(){return this.topic.date}get readTime(){return this.topic.readingTime}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["fs-article-meta"]],inputs:{topic:"topic"},decls:11,vars:6,consts:[[1,"TopicMeta"],[1,"TopicMeta_iconContainer"],[1,"TopicMeta_icon"],[1,"TopicMeta_contentContainer"],[1,"TopicMeta_author"]],template:function(e,t){1&e&&(Ma(0,"div",0),Ma(1,"div",1),Ma(2,"mat-icon",2),gs(3,"account_circle"),Fa(),Fa(),Ma(4,"div",3),Ma(5,"span",4),gs(6),Fa(),Ma(7,"div"),Ma(8,"span"),gs(9),Jl(10,"date"),Fa(),Fa(),Fa(),Fa()),2&e&&(tr(6),fs(t.author),tr(3),ys("",function(e,t,n,o){const i=Ot(),r=St(i,30);return Ql(i,Yl(i,30)?Gl(i,Ut(),3,r.transform,n,o,r):r.transform(n,o))}(0,0,t.date,"MMM - dd")," \xa0-\xa0 ",t.readTime," min "))},directives:[Rk],pipes:[Fp],styles:[".TopicMeta[_ngcontent-%COMP%]{display:flex;margin-top:0;margin-bottom:1rem;font-size:16px}.TopicMeta_author[_ngcontent-%COMP%]{margin-bottom:4px}.TopicMeta_icon[_ngcontent-%COMP%]{font-size:60px;height:60px;width:60px}.TopicMeta_iconContainer[_ngcontent-%COMP%]{width:60px;height:100px}.TopicMeta_contentContainer[_ngcontent-%COMP%], .TopicMeta_iconContainer[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center}.TopicMeta_contentContainer[_ngcontent-%COMP%]{font-family:Saira;font-weight:400;margin-left:1rem}"]}),e})(),pD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,qk]]}),e})(),uD=(()=>{class e{constructor(e){this.DS=e}ngOnInit(){this.topic.documentURL=window.location.href,this.safeDocumentURL=this.DS.bypassSecurityTrustUrl(this.href)}get href(){switch(this.type){case PE.TWITTER:return`https://twitter.com/share?text=${this.topic.title}&url=${this.topic.documentURL}`;case PE.FACEBOOK:return`https://www.facebook.com/sharer/sharer.php?u=${this.topic.documentURL}`;case PE.LINKEDIN:return`https://www.linkedin.com/shareArticle?mini=true&summary=${this.topic.summary}&title=${this.topic.title}&url=${this.topic.documentURL}`;default:return null}}get icon(){switch(this.type){case PE.TWITTER:return"fa-twitter";case PE.FACEBOOK:return"fa-facebook";case PE.LINKEDIN:return"fa-linkedin-in";default:return null}}}return e.\u0275fac=function(t){return new(t||e)(ja(gu))},e.\u0275cmp=We({type:e,selectors:[["fs-social-icon"]],inputs:{topic:"topic",type:"type"},decls:2,vars:4,consts:[[1,"SocialIconLink",3,"href"]],template:function(e,t){var n,o,i;1&e&&(Ma(0,"a",0),Pa(1,"i"),Fa()),2&e&&(Ra("href",t.href,ii),tr(1),n="fab ",o=t.icon,i="",function(e,t,n,o){const i=jt(),r=$t(2);i.firstUpdatePass&&ls(i,null,r,o);const a=Ot();if(n!==er&&Ca(a,r,n)){const s=i.data[rn()];if(ms(s,o)&&!ss(i,r)){let e=s.classesWithoutHost;null!==e&&(n=oe(e,n||"")),qa(i,s,a,n,o)}else!function(e,t,n,o,i,r,a,s){i===er&&(i=qe);let l=0,c=0,d=0<i.length?i[0]:null,p=0<r.length?r[0]:null;for(;null!==d||null!==p;){const a=l<i.length?i[l+1]:void 0,u=c<r.length?r[c+1]:void 0;let h,m=null;d===p?(l+=2,c+=2,a!==u&&(m=p,h=u)):null===p||null!==d&&d<p?(l+=2,m=d):(c+=2,m=p,h=u),null!==m&&ps(e,t,n,o,m,h,!0,s),d=l<i.length?i[l]:null,p=c<r.length?r[c]:null}}(i,s,a,a[11],a[r+1],a[r+1]=function(e,t,n){if(null==n||""===n)return qe;const o=[],i=Do(n);if(Array.isArray(i))for(let r=0;r<i.length;r++)e(o,i[r],!0);else if("object"==typeof i)for(const r in i)i.hasOwnProperty(r)&&e(o,r,i[r]);else"string"==typeof i&&t(o,i);return o}(e,t,n),0,r)}}(no,as,Ea(Ot(),n,o,i),!0))},styles:[".SocialIconLink[_ngcontent-%COMP%]{background-color:rgba(0,0,0,.1);transition:1s}.SocialIconLink[_ngcontent-%COMP%], .SocialIconLink[_ngcontent-%COMP%]:hover{color:#000;display:flex;justify-content:center;align-items:center;width:50px;height:50px}.SocialIconLink[_ngcontent-%COMP%]:hover{background-color:rgba(0,0,0,.6);transition:.5s}.SocialIconLink[_ngcontent-%COMP%]:hover   i[_ngcontent-%COMP%]{color:azure}i[_ngcontent-%COMP%]{font-size:22px;color:rgba(0,0,0,.5);transition:.5s}a[_ngcontent-%COMP%]{text-decoration:none;margin-right:1rem}"]}),e})(),hD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,qk]]}),e})(),mD=(()=>{class e{constructor(e){this.IS=e}ngOnInit(){}ngAfterViewInit(){return cS(this,void 0,void 0,function*(){this.backgroundImageURL$=Cu(yield this.IS.getCSSBackgroundImageURL(this.topic.headerImageURL))})}get author(){return this.topic.author}get title(){return this.topic.title}get type(){return(e=this.topic.type||"").charAt(0).toUpperCase()+e.slice(1);var e}get summary(){return this.topic.summary}get date(){return this.topic.date}get readTime(){return this.topic.readingTime}get hasSummary(){return!!this.topic.summary&&this.topic.summary.length>1}}return e.\u0275fac=function(t){return new(t||e)(ja(YA))},e.\u0275cmp=We({type:e,selectors:[["fs-summary-card"]],inputs:{topic:"topic"},decls:7,vars:14,consts:[[3,"ngClass","routerLink"],[3,"topic"],[3,"backgroundImageURL","height"],[4,"ngIf"],[3,"innerHTML"]],template:function(e,t){1&e&&(Ma(0,"a",0),Ma(1,"h1"),gs(2),Fa(),Pa(3,"fs-article-meta",1),Pa(4,"fs-background-image",2),Jl(5,"async"),Da(6,IE,4,1,"div",3),Fa()),2&e&&(Ra("ngClass",Wl(10,EE))("routerLink",$l(11,DE,t.topic.category.toLowerCase(),t.topic.id)),tr(2),ys("",t.title," | ",t.type,""),tr(1),Ra("topic",t.topic),tr(1),Ra("backgroundImageURL",Kl(5,8,t.backgroundImageURL$))("height","200px"),tr(2),Ra("ngIf",t.hasSummary))},directives:[Zg,bp,dD,QA,kp],pipes:[Rp],styles:["summary[_ngcontent-%COMP%]{font-size:22px;line-height:46px;letter-spacing:.6px;word-spacing:.02em;margin-bottom:5rem}a[_ngcontent-%COMP%]{display:flex;flex-direction:column;flex-grow:1;color:inherit;text-decoration:none}"]}),e})(),gD=(()=>{class e{constructor(){}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["fs-summary-card-list"]],inputs:{topics:"topics"},decls:1,vars:1,consts:[[3,"topic",4,"ngFor","ngForOf"],[3,"topic"]],template:function(e,t){1&e&&Da(0,OE,1,1,"fs-summary-card",0),2&e&&Ra("ngForOf",t.topics)},directives:[vp,mD],encapsulation:2}),e})(),fD=(()=>{class e{constructor(e,t,n){this.route=e,this.router=t,this.seo=n}ngOnInit(){const e=this.route.snapshot.data;this.topics=e.topics;const t=e.GLOBAL_META_TAGS_KEY;this.seo.setTitle(e.GLOBAL_TITLE_KEY),this.seo.addTags(t),this.topics&&this.topics.length||this.router.navigate(["/404"])}}return e.\u0275fac=function(t){return new(t||e)(ja(Im),ja(Yg),ja(rD))},e.\u0275cmp=We({type:e,selectors:[["app-category"]],decls:1,vars:1,consts:[[3,"topics"]],template:function(e,t){1&e&&Pa(0,"fs-summary-card-list",0),2&e&&Ra("topics",t.topics)},directives:[gD],styles:[""]}),e})(),bD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,ZA,pD,pf]]}),e})(),yD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,bD]]}),e})(),vD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,yD]]}),e})(),wD=(()=>{let e=class{constructor(e,t,n,o){this.dm=e,this.route=t,this.seo=n,this.IS=o,this.SMD=PE}ngAfterViewInit(){return cS(this,void 0,void 0,function*(){this.backgroundImageURL$=Cu(yield this.IS.getCSSBackgroundImageURL(this.topic.headerImageURL))})}ngOnInit(){this.route.data.pipe(pC(this)).subscribe(e=>{const t=e.GLOBAL_AUTHOR_KEY,n=e.GLOBAL_SITE_NAME_KEY,o=e.GLOBAL_SITE_URL_KEY;this.topic=e.topic,this.seo.updateTitleAndMeta(this.topic,o,n,t)})}ngOnDestroy(){}};return e.\u0275fac=function(t){return new(t||e)(ja(gu),ja(Im),ja(rD),ja(YA))},e.\u0275cmp=We({type:e,selectors:[["app-topic"]],decls:14,vars:17,consts:[[1,"TopicTitle",2,"margin-bottom","2rem"],[3,"topic"],[2,"display","flex"],[3,"topic","type"],[2,"margin-bottom","3rem",3,"backgroundImageURL","height"],[4,"ngIf"],[1,"TopicContent",3,"innerHTML"]],template:function(e,t){1&e&&(Ma(0,"main"),Ma(1,"h1",0),gs(2),Jl(3,"titlecase"),Fa(),Ma(4,"section"),Pa(5,"fs-article-meta",1),Ma(6,"div",2),Pa(7,"fs-social-icon",3),Pa(8,"fs-social-icon",3),Pa(9,"fs-social-icon",3),Fa(),Fa(),Pa(10,"fs-background-image",4),Jl(11,"async"),Da(12,jE,2,0,"h1",5),Pa(13,"article",6),Fa()),2&e&&(tr(2),ys("",t.topic.title," | ",Kl(3,13,t.topic.type),""),tr(3),Ra("topic",t.topic),tr(2),Ra("topic",t.topic)("type",t.SMD.TWITTER),tr(1),Ra("topic",t.topic)("type",t.SMD.FACEBOOK),tr(1),Ra("topic",t.topic)("type",t.SMD.LINKEDIN),tr(1),Ra("backgroundImageURL",Kl(11,15,t.backgroundImageURL$))("height","400px"),tr(2),Ra("ngIf","task"==t.topic.type),tr(1),Ra("innerHTML",t.dm.bypassSecurityTrustHtml(t.topic.html||""),oi))},directives:[dD,uD,QA,kp],pipes:[Mp,Rp],styles:["code{color:#000;display:inline-block;font-weight:700;opacity:.6;font-family:monospace;font-size:80%;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px}.TopicHeaderImage{background-size:cover;background-position:50%;background-repeat:no-repeat;height:400px;width:100%}pre{color:#000;background-color:rgba(0,0,0,.15);display:block;font-weight:700;opacity:.8;font-family:monospace;font-size:80%;-webkit-padding-start:24px;padding-inline-start:24px;-webkit-padding-end:24px;padding-inline-end:24px;padding-top:.8rem;padding-bottom:.8rem;white-space:pre-wrap;word-wrap:break-word;word-break:keep-all}ul{padding-left:20px;list-style:none;list-style-image:none;margin:0;word-break:break-word;font-weight:400;font-family:Arial,Helvetica,sans-serif}li{list-style-type:disc}article.TopicContent a,article.TopicContent a:active,article.TopicContent a:focus,article.TopicContent a:hover,article.TopicContent a:link,article.TopicContent a:visited{text-decoration:none}article.TopicContent a,article.TopicContent a:link,article.TopicContent a:visited{outline:none;opacity:.7;color:#0e648f!important;font-weight:700;text-decoration:none;font-family:Saira;font-size:23px;letter-spacing:.06em;padding:0 1px;transition:opacity .3s}article.TopicContent a:active,article.TopicContent a:focus,article.TopicContent a:hover{opacity:1}article{font-size:22px;line-height:48px;letter-spacing:.015em;word-spacing:.02em;font-family:Inter;font-weight:400}p{margin-bottom:2.5rem}main{display:flex;flex-direction:column}.TopicTitle{font-size:44px;font-weight:400}.TopicTitle,h1{font-family:Zilla Slab}h1{font-size:36px}h2{font-family:Zilla Slab;font-size:28px}section{display:flex;align-items:center;justify-content:space-between}"],encapsulation:2}),e=lS([dC()],e),e})(),kD=(()=>{let e=class{constructor(e,t){this.s=e,this.ss=t,this.s.searchStore.observeQuery().pipe(pC(this)).subscribe(e=>{this.ss.search(e)})}};return e.\u0275fac=function(t){return new(t||e)(ja(oD),ja(iD))},e.\u0275cmp=We({type:e,selectors:[["app-search"]],decls:2,vars:3,consts:[[3,"topics"]],template:function(e,t){1&e&&(Pa(0,"fs-summary-card-list",0),Jl(1,"async")),2&e&&Ra("topics",Kl(1,1,t.s.searchStore.observe()))},directives:[gD],pipes:[Rp],styles:[""]}),e=lS([dC()],e),e})(),SD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,yD]]}),e})(),_D=(()=>{class e{constructor(){this.URL_404='url("https://fireflysemantics.github.io/i/404/crash-5435071_1920.png")'}ngOnInit(){}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["app-notfound"]],decls:10,vars:1,consts:[[2,"font-size","4rem","margin-bottom","4rem"],[2,"font-family","Saira","font-size","26px","line-height","20px"],[2,"cursor","pointer",3,"routerLink"],[2,"opacity","70%","padding","0rem 2rem 0rem","display","flex","align-items","center","background-color","lightblue"],[2,"font-size","3rem","height","3rem","width","3rem","margin-right","1rem"],[2,"font-family","Saira","font-size","26px"]],template:function(e,t){1&e&&(Ma(0,"h1",0),gs(1,"404"),Fa(),Ma(2,"p",1),gs(3,"Oh oh. The link does not match anything."),Fa(),Ma(4,"div",2),Ma(5,"div",3),Ma(6,"mat-icon",4),gs(7,"search"),Fa(),Ma(8,"p",5),gs(9,"Try searching for what you are looking for."),Fa(),Fa(),Fa()),2&e&&(tr(4),Ra("routerLink","/search"))},directives:[Qg,Rk],styles:[""]}),e})(),TD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,pf,qk]]}),e})(),AD=(()=>{class e{constructor(){this.menus=[]}ngOnInit(){this.menus.length||(this.menus=Object.values(XE))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=We({type:e,selectors:[["fs-menu"]],inputs:{menus:"menus"},decls:16,vars:3,consts:[["mat-icon-button","",3,"matMenuTriggerFor"],["menu","matMenu"],["mat-menu-item","",3,"routerLink","innerHtml",4,"ngFor","ngForOf"],["mat-menu-item","",3,"matMenuTriggerFor"],["policies","matMenu"],["mat-menu-item",""],["href","https://legal.fireflysemantics.com/privacy-policy/","target","_blank","mat-menu-item","",1,"fs-MenuLink"],["href","https://legal.fireflysemantics.com/terms-of-service/","target","_blank","mat-menu-item","",1,"fs-MenuLink"],["mat-menu-item","",3,"routerLink","innerHtml"]],template:function(e,t){if(1&e&&(Ma(0,"button",0),Ma(1,"mat-icon"),gs(2,"more_vert"),Fa(),Fa(),Ma(3,"mat-menu",null,1),Da(5,qE,1,4,"button",2),Ma(6,"button",3),gs(7,"Policies"),Fa(),Ma(8,"mat-menu",null,4),Ma(10,"button",5),Ma(11,"a",6),gs(12,"Privacy Policy"),Fa(),Fa(),Ma(13,"button",5),Ma(14,"a",7),gs(15,"Terms of Service"),Fa(),Fa(),Fa(),Fa()),2&e){const e=Oa(4),n=Oa(9);Ra("matMenuTriggerFor",e),tr(5),Ra("ngForOf",t.menus),tr(1),Ra("matMenuTriggerFor",n)}},directives:[bC,Ux,Rk,Px,vp,Rx,Qg],styles:[".fs-MenuLink[_ngcontent-%COMP%]{text-decoration:none;font-size:inherit;width:100%;display:flex;justify-content:center;padding:0;margin:0}.fs-MenuLink[_ngcontent-%COMP%], .fs-MenuLink[_ngcontent-%COMP%]:hover{background-color:transparent}"]}),e})(),CD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,qk,yC,Wx,pf]]}),e})(),xD=(()=>{let e=class{constructor(e,t,n,o){this.matIconRegistry=e,this.domSanitizer=t,this.s=n,this.router=o,this.menus=[],this.matIconRegistry.addSvgIcon("fs-logo",this.domSanitizer.bypassSecurityTrustResourceUrl("https://raw.githubusercontent.com/fireflysemantics/logo/master/l1.svg"))}ngOnInit(){}ngOnDestroy(){}ngAfterViewInit(){Vk(this.input.nativeElement,"keyup").pipe(pC(this),Yu(Boolean),Cf(300),Gk(),gh(()=>{this.s.searchStore.query=this.input.nativeElement.value})).subscribe()}onSearchFocus(){this.router.navigate(["/search"])}};return e.\u0275fac=function(t){return new(t||e)(ja(Tk),ja(gu),ja(oD),ja(Yg))},e.\u0275cmp=We({type:e,selectors:[["fs-toolbar"]],viewQuery:function(e,t){if(1&e&&uc(ME,5),2&e){let e;pc(e=mc())&&(t.input=e.first)}},inputs:{menus:"menus"},decls:10,vars:8,consts:[[1,"hideShowToolbar",3,"ngClass"],["svgIcon","fs-logo",1,"Logo",2,"outline","none","text-decoration","none",3,"routerLink"],["floatLabel","never"],["matInput","","type","text","placeholder","Search","autocomplete","off",3,"value","focus"],["searchInput","matInput","input",""],["matSuffix","",3,"color"],[3,"menus"]],template:function(e,t){if(1&e&&(Ma(0,"mat-toolbar",0),Jl(1,"async"),Pa(2,"mat-icon",1),Ma(3,"mat-form-field",2),Ma(4,"input",3,4),$a("focus",function(){return t.onSearchFocus()}),Fa(),Ma(7,"mat-icon",5),gs(8,"search"),Fa(),Fa(),Pa(9,"fs-menu",6),Fa()),2&e){const e=Oa(5);Ra("ngClass",Kl(1,5,t.s.scrollingUp$)?"hideToolbar":"showToolbar"),tr(2),Ra("routerLink",Wl(7,FE)),tr(2),Ra("value",t.s.searchStore.query),tr(3),Ra("color",e.focused?"primary":""),tr(2),Ra("menus",t.menus)}},directives:[Kx,bp,Rk,Qg,II,CE,SI,AD],pipes:[Rp],styles:["mat-toolbar[_ngcontent-%COMP%]{display:flex;position:fixed;justify-content:space-between;align-items:center;min-height:100px;width:100%;padding:40px}.Logo[_ngcontent-%COMP%]{color:gray;width:64px;height:64px}mat-form-field[_ngcontent-%COMP%]{margin-left:1rem;width:100%;max-width:48rem;height:70px;padding:0 2rem}@media only screen and (min-width:992px){mat-form-field[_ngcontent-%COMP%]{width:100%;margin-left:-2rem;max-width:48rem;height:70px}}.hideShowToolbar[_ngcontent-%COMP%]{transition:all .4s ease-in-out!important;position:fixed;top:0}.hideToolbar[_ngcontent-%COMP%]{transform:translateY(-100%)}.showToolbar[_ngcontent-%COMP%]{transform:translateY(0)}"]}),e=lS([dC()],e),e})(),ID=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,qk,yC,Wx,pf,Yx,EI,xE,CD]]}),e})();const ED="Firefly Semantics Developer Center",DD="https://developer.fireflysemantics.com/",OD="Firefly Semantics Corporation",jD="https://fireflysemantics.github.io/i/developer/developer-social-card-logo.jpg",RD="Firefly Semantics Developer Center",qD={};qD.GLOBAL_META_TAGS_KEY=[{name:LE,content:ED},{name:zE,content:"UX,SVG,Data Validaiton,Typedoc,Git,Firefly Semantics Developer Center,Google Analytics,Angular,AI,Amplify,Angular Material,AWS,HTML,VSCode,Scully,Flexbox,JavaScript,Jest,XML,TypeScript,NodeJS,CommanderJS,Material Design,SuperflyCSS,Probability,SPA,Firefly Semantics,Slice,CSS,RxJs,CSV,Linux,Unit Testing,NPM,Browser,Dexie,Crypto,Blockchain,Verdaccio,Design,Design Thinking,Productivity,Programming,Entrepreneurship,Strategy,Web Development,Web Component,Web Design,Lunr"},{name:NE,content:OD},{name:UE,content:"summary"},{name:BE,content:DD},{name:WE,content:RD},{name:$E,content:ED},{name:VE,content:"@fireflysmtics"},{name:HE,content:jD},{name:GE,content:RD},{name:JE,content:"article"},{name:KE,content:DD},{name:YE,content:jD},{name:QE,content:ED},{name:ZE,content:ED}],qD.GLOBAL_TITLE_KEY=RD,qD.GLOBAL_AUTHOR_KEY=OD,qD.GLOBAL_SITE_NAME_KEY=RD,qD.GLOBAL_SITE_URL_KEY=DD,qD.GLOBAL_SITE_NAME_KEY=RD;const MD=[{path:"",component:Mk},{path:"search",component:kD},{path:"404",component:_D},{path:":category",component:fD,data:qD,resolve:{topics:cD},canActivate:[lD]},{path:":category/:topic",component:wD,data:qD,resolve:{topic:sD},canActivate:[aD]},{path:"**",redirectTo:"/404"}];let FD=(()=>{class e{constructor(e){this.s=e,qD.TOPIC_STORE_KEY=this.s.topicStore}}return e.\u0275fac=function(t){return new(t||e)(ho(oD))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[pf.forRoot(MD)],pf]}),e})();const PD={provide:new Jn("mat-autocomplete-scroll-strategy"),deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition()}};let LD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[PD],imports:[[Tx,Fw,aw,Pp],HC,Fw,aw]}),e})(),zD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[ub,aw],aw]}),e})(),ND=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw,qw],aw]}),e})(),UD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw],aw]}),e})(),BD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),WD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[qw,aw,Kf,BD],aw,BD]}),e})();const $D=new Jn("mat-chips-default-options"),VD={separatorKeyCodes:[13]};let HD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[Tw,{provide:$D,useValue:VD}],imports:[[aw]]}),e})(),GD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[gb]]}),e})(),JD=(()=>{class e{constructor(){this.changes=new _,this.optionalLabel="Optional"}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})();const KD={provide:JD,deps:[[new yo,new vo,JD]],useFactory:function(e){return e||new JD}};let YD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[KD,Tw],imports:[[aw,Pp,LC,yC,GD,qk,qw],aw]}),e})(),QD=(()=>{class e{constructor(){this.changes=new _,this.calendarLabel="Calendar",this.openCalendarLabel="Open calendar",this.closeCalendarLabel="Close calendar",this.prevMonthLabel="Previous month",this.nextMonthLabel="Next month",this.prevYearLabel="Previous year",this.nextYearLabel="Next year",this.prevMultiYearLabel="Previous 24 years",this.nextMultiYearLabel="Next 24 years",this.switchToMonthViewLabel="Choose date",this.switchToMultiYearViewLabel="Choose month and year"}formatYearRange(e,t){return`${e} \u2013 ${t}`}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})();const ZD={provide:new Jn("mat-datepicker-scroll-strategy"),deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition()}};let XD=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[QD,ZD],imports:[[Pp,yC,Tx,ub,LC,aw],HC]}),e})();function eO(e,t){}class tO{constructor(){this.role="dialog",this.panelClass="",this.hasBackdrop=!0,this.backdropClass="",this.disableClose=!1,this.width="",this.height="",this.maxWidth="80vw",this.data=null,this.ariaDescribedBy=null,this.ariaLabelledBy=null,this.ariaLabel=null,this.autoFocus=!0,this.restoreFocus=!0,this.closeOnNavigation=!0}}const nO={dialogContainer:vb("dialogContainer",[_b("void, exit",Sb({opacity:0,transform:"scale(0.7)"})),_b("enter",Sb({transform:"none"})),Tb("* => enter",wb("150ms cubic-bezier(0, 0, 0.2, 1)",Sb({transform:"none",opacity:1}))),Tb("* => void, * => exit",wb("75ms cubic-bezier(0.4, 0.0, 0.2, 1)",Sb({opacity:0})))])};let oO=(()=>{class e extends MC{constructor(e,t,n,o,i,r){super(),this._elementRef=e,this._focusTrapFactory=t,this._changeDetectorRef=n,this._config=i,this._focusMonitor=r,this._animationStateChanged=new Xl,this._elementFocusedBeforeDialogWasOpened=null,this._closeInteractionType=null,this.attachDomPortal=e=>(this._portalOutlet.hasAttached(),this._portalOutlet.attachDomPortal(e)),this._ariaLabelledBy=i.ariaLabelledBy||null,this._document=o}_initializeWithAttachedContent(){this._setupFocusTrap(),this._capturePreviouslyFocusedElement(),this._focusDialogContainer()}attachComponentPortal(e){return this._portalOutlet.hasAttached(),this._portalOutlet.attachComponentPortal(e)}attachTemplatePortal(e){return this._portalOutlet.hasAttached(),this._portalOutlet.attachTemplatePortal(e)}_recaptureFocus(){this._containsFocus()||(!this._config.autoFocus||!this._focusTrap.focusInitialElement())&&this._elementRef.nativeElement.focus()}_trapFocus(){this._config.autoFocus?this._focusTrap.focusInitialElementWhenReady():this._containsFocus()||this._elementRef.nativeElement.focus()}_restoreFocus(){const e=this._elementFocusedBeforeDialogWasOpened;if(this._config.restoreFocus&&e&&"function"==typeof e.focus){const t=Vf(),n=this._elementRef.nativeElement;t&&t!==this._document.body&&t!==n&&!n.contains(t)||(this._focusMonitor?(this._focusMonitor.focusVia(e,this._closeInteractionType),this._closeInteractionType=null):e.focus())}this._focusTrap&&this._focusTrap.destroy()}_setupFocusTrap(){this._focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement)}_capturePreviouslyFocusedElement(){this._document&&(this._elementFocusedBeforeDialogWasOpened=Vf())}_focusDialogContainer(){this._elementRef.nativeElement.focus&&this._elementRef.nativeElement.focus()}_containsFocus(){const e=this._elementRef.nativeElement,t=Vf();return e===t||e.contains(t)}}return e.\u0275fac=function(t){return new(t||e)(ja($s),ja(tb),ja(fl),ja(yd,8),ja(tO),ja(ab))},e.\u0275dir=Ke({type:e,viewQuery:function(e,t){if(1&e&&uc(PC,7),2&e){let e;pc(e=mc())&&(t._portalOutlet=e.first)}},features:[ga]}),e})(),iO=(()=>{class e extends oO{constructor(){super(...arguments),this._state="enter"}_onAnimationDone({toState:e,totalTime:t}){"enter"===e?(this._trapFocus(),this._animationStateChanged.next({state:"opened",totalTime:t})):"exit"===e&&(this._restoreFocus(),this._animationStateChanged.next({state:"closed",totalTime:t}))}_onAnimationStart({toState:e,totalTime:t}){"enter"===e?this._animationStateChanged.next({state:"opening",totalTime:t}):"exit"!==e&&"void"!==e||this._animationStateChanged.next({state:"closing",totalTime:t})}_startExitAnimation(){this._state="exit",this._changeDetectorRef.markForCheck()}}return e.\u0275fac=function(){let t;return function(n){return(t||(t=Wn(e)))(n||e)}}(),e.\u0275cmp=We({type:e,selectors:[["mat-dialog-container"]],hostAttrs:["tabindex","-1","aria-modal","true",1,"mat-dialog-container"],hostVars:6,hostBindings:function(e,t){1&e&&Va("@dialogContainer.start",function(e){return t._onAnimationStart(e)})("@dialogContainer.done",function(e){return t._onAnimationDone(e)}),2&e&&(vs("id",t._id),Ia("role",t._config.role)("aria-labelledby",t._config.ariaLabel?null:t._ariaLabelledBy)("aria-label",t._config.ariaLabel)("aria-describedby",t._config.ariaDescribedBy||null),ws("@dialogContainer",t._state))},features:[ga],decls:1,vars:0,consts:[["cdkPortalOutlet",""]],template:function(e,t){1&e&&Da(0,eO,0,0,"ng-template",0)},directives:[PC],styles:[".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n"],encapsulation:2,data:{animation:[nO.dialogContainer]}}),e})(),rO=0;class aO{constructor(e,t,n="mat-dialog-"+rO++){this._overlayRef=e,this._containerInstance=t,this.id=n,this.disableClose=this._containerInstance._config.disableClose,this._afterOpened=new _,this._afterClosed=new _,this._beforeClosed=new _,this._state=0,t._id=n,t._animationStateChanged.pipe(Yu(e=>"opened"===e.state),Wu(1)).subscribe(()=>{this._afterOpened.next(),this._afterOpened.complete()}),t._animationStateChanged.pipe(Yu(e=>"closed"===e.state),Wu(1)).subscribe(()=>{clearTimeout(this._closeFallbackTimeout),this._finishDialogClose()}),e.detachments().subscribe(()=>{this._beforeClosed.next(this._result),this._beforeClosed.complete(),this._afterClosed.next(this._result),this._afterClosed.complete(),this.componentInstance=null,this._overlayRef.dispose()}),e.keydownEvents().pipe(Yu(e=>27===e.keyCode&&!this.disableClose&&!wf(e))).subscribe(e=>{e.preventDefault(),sO(this,"keyboard")}),e.backdropClick().subscribe(()=>{this.disableClose?this._containerInstance._recaptureFocus():sO(this,"mouse")})}close(e){this._result=e,this._containerInstance._animationStateChanged.pipe(Yu(e=>"closing"===e.state),Wu(1)).subscribe(t=>{this._beforeClosed.next(e),this._beforeClosed.complete(),this._overlayRef.detachBackdrop(),this._closeFallbackTimeout=setTimeout(()=>this._finishDialogClose(),t.totalTime+100)}),this._state=1,this._containerInstance._startExitAnimation()}afterOpened(){return this._afterOpened}afterClosed(){return this._afterClosed}beforeClosed(){return this._beforeClosed}backdropClick(){return this._overlayRef.backdropClick()}keydownEvents(){return this._overlayRef.keydownEvents()}updatePosition(e){let t=this._getPositionStrategy();return e&&(e.left||e.right)?e.left?t.left(e.left):t.right(e.right):t.centerHorizontally(),e&&(e.top||e.bottom)?e.top?t.top(e.top):t.bottom(e.bottom):t.centerVertically(),this._overlayRef.updatePosition(),this}updateSize(e="",t=""){return this._overlayRef.updateSize({width:e,height:t}),this._overlayRef.updatePosition(),this}addPanelClass(e){return this._overlayRef.addPanelClass(e),this}removePanelClass(e){return this._overlayRef.removePanelClass(e),this}getState(){return this._state}_finishDialogClose(){this._state=2,this._overlayRef.dispose()}_getPositionStrategy(){return this._overlayRef.getConfig().positionStrategy}}function sO(e,t,n){return void 0!==e._containerInstance&&(e._containerInstance._closeInteractionType=t),e.close(n)}const lO=new Jn("MatDialogData"),cO=new Jn("mat-dialog-default-options"),dO=new Jn("mat-dialog-scroll-strategy"),pO={provide:dO,deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.block()}};let uO=(()=>{class e{constructor(e,t,n,o,i,r,a,s,l){this._overlay=e,this._injector=t,this._defaultOptions=n,this._parentDialog=o,this._overlayContainer=i,this._dialogRefConstructor=a,this._dialogContainerType=s,this._dialogDataToken=l,this._openDialogsAtThisLevel=[],this._afterAllClosedAtThisLevel=new _,this._afterOpenedAtThisLevel=new _,this._ariaHiddenElements=new Map,this.afterAllClosed=Lu(()=>this.openDialogs.length?this._getAfterAllClosed():this._getAfterAllClosed().pipe(Hu(void 0))),this._scrollStrategy=r}get openDialogs(){return this._parentDialog?this._parentDialog.openDialogs:this._openDialogsAtThisLevel}get afterOpened(){return this._parentDialog?this._parentDialog.afterOpened:this._afterOpenedAtThisLevel}_getAfterAllClosed(){const e=this._parentDialog;return e?e._getAfterAllClosed():this._afterAllClosedAtThisLevel}open(e,t){(t=function(e,t){return Object.assign(Object.assign({},t),e)}(t,this._defaultOptions||new tO)).id&&this.getDialogById(t.id);const n=this._createOverlay(t),o=this._attachDialogContainer(n,t),i=this._attachDialogContent(e,o,n,t);return this.openDialogs.length||this._hideNonDialogContentFromAssistiveTechnology(),this.openDialogs.push(i),i.afterClosed().subscribe(()=>this._removeOpenDialog(i)),this.afterOpened.next(i),o._initializeWithAttachedContent(),i}closeAll(){this._closeDialogs(this.openDialogs)}getDialogById(e){return this.openDialogs.find(t=>t.id===e)}ngOnDestroy(){this._closeDialogs(this._openDialogsAtThisLevel),this._afterAllClosedAtThisLevel.complete(),this._afterOpenedAtThisLevel.complete()}_createOverlay(e){const t=this._getOverlayConfig(e);return this._overlay.create(t)}_getOverlayConfig(e){const t=new nx({positionStrategy:this._overlay.position().global(),scrollStrategy:e.scrollStrategy||this._scrollStrategy(),panelClass:e.panelClass,hasBackdrop:e.hasBackdrop,direction:e.direction,minWidth:e.minWidth,minHeight:e.minHeight,maxWidth:e.maxWidth,maxHeight:e.maxHeight,disposeOnNavigation:e.closeOnNavigation});return e.backdropClass&&(t.backdropClass=e.backdropClass),t}_attachDialogContainer(e,t){const n=ha.create({parent:t&&t.viewContainerRef&&t.viewContainerRef.injector||this._injector,providers:[{provide:tO,useValue:t}]}),o=new jC(this._dialogContainerType,t.viewContainerRef,n,t.componentFactoryResolver);return e.attach(o).instance}_attachDialogContent(e,t,n,o){const i=new this._dialogRefConstructor(n,t,o.id);if(e instanceof kl)t.attachTemplatePortal(new RC(e,null,{$implicit:o.data,dialogRef:i}));else{const n=this._createInjector(o,i,t),r=t.attachComponentPortal(new jC(e,o.viewContainerRef,n));i.componentInstance=r.instance}return i.updateSize(o.width,o.height).updatePosition(o.position),i}_createInjector(e,t,n){const o=e&&e.viewContainerRef&&e.viewContainerRef.injector,i=[{provide:this._dialogContainerType,useValue:n},{provide:this._dialogDataToken,useValue:e.data},{provide:this._dialogRefConstructor,useValue:t}];return!e.direction||o&&o.get(mb,null)||i.push({provide:mb,useValue:{value:e.direction,change:Cu()}}),ha.create({parent:o||this._injector,providers:i})}_removeOpenDialog(e){const t=this.openDialogs.indexOf(e);t>-1&&(this.openDialogs.splice(t,1),this.openDialogs.length||(this._ariaHiddenElements.forEach((e,t)=>{e?t.setAttribute("aria-hidden",e):t.removeAttribute("aria-hidden")}),this._ariaHiddenElements.clear(),this._getAfterAllClosed().next()))}_hideNonDialogContentFromAssistiveTechnology(){const e=this._overlayContainer.getContainerElement();if(e.parentElement){const t=e.parentElement.children;for(let n=t.length-1;n>-1;n--){let o=t[n];o===e||"SCRIPT"===o.nodeName||"STYLE"===o.nodeName||o.hasAttribute("aria-live")||(this._ariaHiddenElements.set(o,o.getAttribute("aria-hidden")),o.setAttribute("aria-hidden","true"))}}}_closeDialogs(e){let t=e.length;for(;t--;)e[t].close()}}return e.\u0275fac=function(t){return new(t||e)(ja(Sx),ja(ha),ja(void 0),ja(void 0),ja(cx),ja(void 0),ja(Yn),ja(Yn),ja(Jn))},e.\u0275dir=Ke({type:e}),e})(),hO=(()=>{class e extends uO{constructor(e,t,n,o,i,r,a){super(e,t,o,r,a,i,aO,iO,lO)}}return e.\u0275fac=function(t){return new(t||e)(ho(Sx),ho(ha),ho(Rd,8),ho(cO,8),ho(dO),ho(e,12),ho(cx))},e.\u0275prov=ue({token:e,factory:e.\u0275fac}),e})(),mO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[hO,pO],imports:[[Tx,LC,aw],aw]}),e})(),gO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),fO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw,gO,LC]]}),e})(),bO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Aw,aw],Aw,aw]}),e})(),yO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw],aw]}),e})(),vO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Aw,qw,aw,Mw,Pp],Aw,aw,Mw,yO]}),e})();const wO={provide:new Jn("mat-select-scroll-strategy"),deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition()}};let kO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[wO],imports:[[Pp,Tx,Fw,aw],HC,EI,Fw,aw]}),e})();const SO={provide:new Jn("mat-tooltip-scroll-strategy"),deps:[Sx],useFactory:function(e){return()=>e.scrollStrategies.reposition({scrollThrottle:20})}};let _O=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[SO],imports:[[ub,Pp,Tx,aw],aw,HC]}),e})(),TO=(()=>{class e{constructor(){this.changes=new _,this.itemsPerPageLabel="Items per page:",this.nextPageLabel="Next page",this.previousPageLabel="Previous page",this.firstPageLabel="First page",this.lastPageLabel="Last page",this.getRangeLabel=(e,t,n)=>{if(0==n||0==t)return`0 of ${n}`;const o=e*t;return`${o+1} \u2013 ${o<(n=Math.max(n,0))?Math.min(o+t,n):o+t} of ${n}`}}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})();const AO={provide:TO,deps:[[new yo,new vo,TO]],useFactory:function(e){return e||new TO}};let CO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[AO],imports:[[Pp,yC,kO,_O,aw]]}),e})(),xO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw],aw]}),e})(),IO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[aw,Pp],aw]}),e})(),EO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[qw,aw],aw]}),e})(),DO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw,Pf,HC],HC,aw]}),e})(),OO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw],aw]}),e})(),jO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),RO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[jO,qw,aw,Kf],jO,aw]}),e})(),qO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Tx,LC,Pp,yC,aw],aw]}),e})(),MO=(()=>{class e{constructor(){this.changes=new _}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275prov=ue({factory:function(){return new e},token:e,providedIn:"root"}),e})();const FO={provide:MO,deps:[[new yo,new vo,MO]],useFactory:function(e){return e||new MO}};let PO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[FO],imports:[[Pp,aw]]}),e})(),LO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[GC]]}),e})(),zO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[LO,aw],aw]}),e})(),NO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[Pp,aw,LC,qw,Kf,ub],aw]}),e})(),UO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),BO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[UO,aw],aw]}),e})();const WO=[LD,zD,yC,ND,UD,WD,HD,YD,XD,mO,fO,EI,bO,qk,xE,vO,Wx,CO,xO,IO,EO,qw,kO,DO,OO,RO,qO,PO,zO,NO,Yx,_O,BO,_w];let $O=(()=>{class e{constructor(e){this.matIconRegistry=e}static forRoot(){return{ngModule:e,providers:[Tk]}}}return e.\u0275fac=function(t){return new(t||e)(ho(Tk))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({providers:[],imports:[[...WO],LD,zD,yC,ND,UD,WD,HD,YD,XD,mO,fO,EI,bO,qk,xE,vO,Wx,CO,xO,IO,EO,qw,kO,DO,OO,RO,qO,PO,zO,NO,Yx,_O,BO,_w]}),e})();const VO=[pD,vD,TD,CD,SD,yD,bD,ID,hD];let HO=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[...VO],pD,vD,TD,CD,SD,yD,bD,ID,hD]}),e})();const GO=new y(mh);function JO(...e){const t=e.length;if(0===t)throw new Error("list of properties cannot be empty.");return n=>C(function(e,t){return n=>{let o=n;for(let i=0;i<t;i++){const t=null!=o?o[e[i]]:void 0;if(void 0===t)return;o=t}return o}}(e,t))(n)}const KO={useTransferState:!0,alwaysMonitor:!1,manualIdle:!1,baseURIForScullyContent:"http://localhost:1668"},YO=new Jn("scullyLibConfig",{factory:()=>KO}),QO=e=>(e.includes("#")&&(e=e.split("#")[0]),e.includes("?")&&(e=e.split("?")[0]),e.endsWith("/")?e.slice(0,-1):e);function ZO(e,t="json"){return new Promise((n,o)=>{const i=new XMLHttpRequest;i.responseType=t,i.addEventListener("load",e=>{if(200!==i.status)return o(i);n(i.response)}),i.addEventListener("error",(...e)=>o(e)),i.open("get",e,!0),i.send()})}const XO=()=>window&&"running"===window.ScullyIO,ej=()=>window&&"generated"===window.ScullyIO;function tj(e,t){return e.endsWith("/")&&t.startsWith("/")?`${e}${t.substr(1)}`:e.endsWith("/")||t.startsWith("/")?`${e}${t}`:`${e}/${t}`}const nj="ScullyIO-transfer-state",oj="/** ___SCULLY_STATE_START___ */",ij="/** ___SCULLY_STATE_END___ */";let rj=(()=>{class e{constructor(e,t){this.document=e,this.router=t,this.inlineOnly=!1,this.currentBaseUrl="//",this.stateBS=new xu({}),this.state$=this.stateBS.pipe(Yu(e=>void 0!==e)),this.nextUrl=this.router.events.pipe(Yu(e=>e instanceof Sh),zu(e=>QO(this.initialUrl)===QO(e.url)?(this.initialUrl="__done__with__Initial__navigation__",GO):Cu(e)),gh(()=>this.stateBS.next(void 0)),zu(e=>this.router.events.pipe(Yu(t=>t instanceof _h&&t.url===e.url),hh())),C(e=>QO(e.urlAfterRedirects||e.url)),function(e,t,n){let o;return o={bufferSize:1,windowTime:void 0,refCount:!1,scheduler:void 0},e=>e.lift(function({bufferSize:e=Number.POSITIVE_INFINITY,windowTime:t=Number.POSITIVE_INFINITY,refCount:n,scheduler:o}){let i,r,a=0,s=!1,l=!1;return function(c){let d;a++,!i||s?(s=!1,i=new Wk(e,t,o),d=i.subscribe(this),r=c.subscribe({next(e){i.next(e)},error(e){s=!0,i.error(e)},complete(){l=!0,r=void 0,i.complete()}}),l&&(r=void 0)):d=i.subscribe(this),this.add(()=>{a--,d.unsubscribe(),d=void 0,r&&!l&&n&&0===a&&(r.unsubscribe(),r=void 0,i=void 0)})}}(o))}())}startMonitoring(){window&&window["ScullyIO-injected"]&&window["ScullyIO-injected"].inlineStateOnly&&(this.inlineOnly=!0),this.setupEnvForTransferState(),this.setupStartNavMonitoring()}setupEnvForTransferState(){if(XO()){this.injectScript();const e=window["ScullyIO-exposed"]||{};e.transferState&&(this.stateBS.next(e.transferState),this.saveState(e.transferState))}else ej()&&(this.initialUrl=window.location.pathname||"__no_NO_no__",this.initialUrl="/"!==this.initialUrl&&this.initialUrl.endsWith("/")?this.initialUrl.slice(0,-1):this.initialUrl,this.stateBS.next(window&&window[nj]||{}))}injectScript(){this.script=this.document.createElement("script"),this.script.setAttribute("id",nj);let e=document.body.lastChild;for(;"SCRIPT"===e.previousSibling.nodeName;)e=e.previousSibling;document.body.insertBefore(this.script,e)}getState(e){return this.fetchTransferState(),this.state$.pipe(JO(e))}stateHasKey(e){return this.stateBS.value&&this.stateBS.value.hasOwnProperty(e)}stateKeyHasValue(e){return this.stateBS.value&&this.stateBS.value.hasOwnProperty(e)&&null!=this.stateBS.value[e]}setState(e,t){const n=Object.assign(Object.assign({},this.stateBS.value),{[e]:t});this.stateBS.next(n),this.saveState(n)}saveState(e){XO()&&(this.script.textContent=`{window['${nj}']=_u(\`${oj}${function(e){const t={"'":"_~q~",$:"_~o~","`":"_~b~","/":"_~s~","<":"_~l~",">":"_~g~"};return e.replace(/[\$`'<>\/]/g,e=>t[e]).replace(/\\\"/g,"_~d~")}(JSON.stringify(e))}${ij}\`);function _u(t){t=t.split('${oj}')[1].split('${ij}')[0];const u={'_~b~': "\`",'_~q~': "'",'_~o~': '$','_~s~': '/','_~l~': '<','_~g~': '>'};return JSON.parse(t.replace(/_~d~/g,'\\\\"').replace(/_~[^]~/g, (s) => u[s]).replace(/\\n/g,'\\\\n').replace(/\\t/g,'\\\\t').replace(/\\r/g,'\\\\r'));}}`)}setupStartNavMonitoring(){ej()&&this.nextUrl.subscribe()}useScullyTransferState(e,t){return ej()?this.getState(e):t.pipe(gh(t=>this.setState(e,t)))}fetchTransferState(){return cS(this,void 0,void 0,function*(){const e=e=>e.split("/").filter(e=>""!==e.trim())[0];yield new Promise(e=>setTimeout(e,0));const t=yield this.nextUrl.pipe(Wu(1)).toPromise(),n=e(t);this.currentBaseUrl!==n&&(this.currentBaseUrl=n,this.nextUrl.pipe(Zk(t=>e(t)===this.currentBaseUrl),zu(e=>this.inlineOnly?this.readFromIndex(e):this.readFromJson(e)),Xu(e=>(console.warn("Error while loading of parsing Scully state:",e),Cu({}))),gh(e=>{this.stateBS.next(e)})).subscribe({complete:()=>{this.currentBaseUrl="//"}}))})}readFromJson(e){return ZO(aj(tj(e,"/data.json")))}readFromIndex(e){return ZO(aj(tj(e,"/index.html")),"text").then(e=>{const t=e.split(oj)[1].split(ij)[0];return JSON.parse(function(e){const t={"_~q~":"'","_~b~":"`","_~o~":"$","_~s~":"/","_~l~":"<","_~g~":">"};return e.replace(/_~d~/g,'\\"').replace(/_~[^]~/g,e=>t[e]).replace(/\n/g,"\\n").replace(/\r/g,"\\r")}(t))})}}return e.\u0275fac=function(t){return new(t||e)(ho(yd),ho(Yg))},e.\u0275prov=ue({factory:function(){return new e(ho(yd),ho(Yg))},token:e,providedIn:"root"}),e})();function aj(e){return e.startsWith("/")?e.slice(1):e}let sj=(()=>{class e{constructor(e,t,n,o){var i;this.zone=e,this.router=t,this.initialUrl=((i=window&&window.location&&window.location.pathname).endsWith("/")?i.slice(0,-1):i)||"",this.imState=new xu({idle:!1,timeOut:5e3}),this.idle$=this.imState.pipe(JO("idle")),this.initApp=new Event("AngularInitialized",{bubbles:!0,cancelable:!1}),this.appReady=new Event("AngularReady",{bubbles:!0,cancelable:!1}),this.appTimeout=new Event("AngularTimeout",{bubbles:!0,cancelable:!1}),this.scullyLibConfig=Object.assign({},KO,n);const r=!!(window["ScullyIO-exposed"]||{}).manualIdle;!this.scullyLibConfig.manualIdle&&window&&(this.scullyLibConfig.alwaysMonitor||XO())&&(window.dispatchEvent(this.initApp),this.router.events.pipe(Yu(e=>e instanceof _h&&void 0!==e.urlAfterRedirects),Yu(e=>!r||e.urlAfterRedirects!==this.initialUrl),gh(()=>this.zoneIdleCheck())).subscribe()),this.scullyLibConfig.manualIdle&&window.dispatchEvent(this.initApp),this.scullyLibConfig.useTransferState&&o.startMonitoring()}fireManualMyAppReadyEvent(){return cS(this,void 0,void 0,function*(){return window.dispatchEvent(this.appReady)})}init(){return cS(this,void 0,void 0,function*(){return this.idle$.pipe(Wu(1)).toPromise()})}zoneIdleCheck(){return cS(this,void 0,void 0,function*(){if(void 0===Zone)return this.simpleTimeout();const e=Zone.current.get("TaskTrackingZone");if(void 0===e)return this.simpleTimeout();this.imState.value.idle&&(yield this.setState("idle",!1)),this.zone.runOutsideAngular(()=>{let t,n=0;const o=Date.now(),i=()=>{clearTimeout(t),Date.now()-o>3e4?window.dispatchEvent(this.appTimeout):e.macroTasks.length>0&&void 0!==e.macroTasks.find(e=>e.source.includes("XMLHttpRequest"))||n<1?t=setTimeout(()=>{n+=1,i()},50):this.zone.run(()=>{setTimeout(()=>{window.dispatchEvent(this.appReady),this.setState("idle",!0)},250)})};i()})})}simpleTimeout(){return cS(this,void 0,void 0,function*(){console.warn("Scully is using timeouts, add the needed polyfills instead!"),yield new Promise(e=>setTimeout(e,this.imState.value.timeOut)),window.dispatchEvent(this.appReady)})}setPupeteerTimeoutValue(e){this.imState.next(Object.assign(Object.assign({},this.imState.value),{timeOut:e}))}setState(e,t){this.imState.next(Object.assign(Object.assign({},this.imState.value),{[e]:t}))}}return e.\u0275fac=function(t){return new(t||e)(ho(zc),ho(Yg),ho(YO),ho(rj))},e.\u0275prov=ue({factory:function(){return new e(ho(zc),ho(Yg),ho(YO),ho(rj))},token:e,providedIn:"root"}),e})(),lj=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({}),e})(),cj=(()=>{class e{constructor(e){this.idle=e}static forRoot(t=KO){return t=Object.assign({},KO,t),{ngModule:e,providers:[{provide:YO,useValue:t}]}}}return e.\u0275fac=function(t){return new(t||e)(ho(sj))},e.\u0275mod=Ge({type:e}),e.\u0275inj=he({imports:[[lj],lj]}),e})();const dj=JSON.parse('{"categories":["blogs","guides","tasks","formulas","concepts","examples"],"categorizedTopics":{"blogs":[{"category":"Blogs","type":"blog","md5":"706f63ee3cbd2d62c1025f5d83e57b05","filename":"the-power-of-the-simplest-possible-example.md","path":"blogs/design/the-power-of-the-simplest-possible-example.md","id":"blogs--design--the-power-of-the-simplest-possible-example","markdown":"\\n# What is the\xa0Median?\\n\\n```\\n  //The median is undefined\\n1 //The median is 1\\n1,3 //The median is 2 - The average of 1 and 3.\\n1,2,3 //The median is 2\\n1,2,3,4 //The median is (2+3)/2\\n1,2,3,4,5 //The median is 3\\n```\\n\\nThere are lots of other examples. Do they help us remember, understand, design, and communicate clearly?\\n\\n# Related Concepts\\n\\n- [Occam\'s razor](https://en.wikipedia.org/wiki/Occam%27s_razor)\\n- [MECE Framework McKinsey](https://www.mbacrystalball.com/blog/strategy/mece-framework/)\\n\\n\\n# Code\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"The Power of the Simplest Possible Example\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-2njmx7?file=index.ts\\">\\n</fs-link-preview>\\n","html":"<h1 id=\'what-is-the-median\'>What is the\xa0Median?</h1>\\n<pre><code>  //The median is undefined\\n1 //The median is 1\\n1,3 //The median is 2 - The average of 1 and 3.\\n1,2,3 //The median is 2\\n1,2,3,4 //The median is (2+3)/2\\n1,2,3,4,5 //The median is 3\\n</code></pre>\\n<p>There are lots of other examples. Do they help us remember, understand, design, and communicate clearly?</p>\\n<h1 id=\'related-concepts\'>Related Concepts</h1>\\n<ul>\\n<li><a href=\'https://en.wikipedia.org/wiki/Occam%27s_razor\'>Occam&#39;s razor</a></li>\\n<li><a href=\'https://www.mbacrystalball.com/blog/strategy/mece-framework/\'>MECE Framework McKinsey</a></li>\\n</ul>\\n<h1 id=\'code\'>Code</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'The Power of the Simplest Possible Example\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-2njmx7?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"The Power of the Simplest Possible Example.","tags":["Design","Design Thinking","Strategy","Entrepreneurship","Productivity","Programming"],"tagString":"Design, Design Thinking, Strategy, Entrepreneurship, Productivity, Programming","author":"Ole Ersoy","date":"2/21/2021","headerImage":"drop-of-water-2256201_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/drop-of-water-2256201_1920.jpg","title":"The Power of the Simplest Possible Example","readingTime":1,"wordCount":130}],"guides":[{"category":"Guides","type":"guide","md5":"abec5d510f5db6cd811300396c8056e7","filename":"introduction-to-the-firefly-semantics-slice-reactive-entity-store.md","path":"guides/introduction-to-the-firefly-semantics-slice-reactive-entity-store.md","id":"guides--introduction-to-the-firefly-semantics-slice-reactive-entity-store","markdown":"\\n# Introduction\\n\\n[This guide is also available on youtube here](https://youtu.be/Boj3-va-TKk).\\n\\nThe **Firefly Semantics Slice** Entity Store ( `EStore<E>` ) manages an observable array of entity instances.\\n\\nUse it in single page, web, mobile, and server side applications for reactive state management.\\n\\nEach `EStore<E>` instance also has utility `Observable`s used to indicate whether the store is `loading` or if a search associated with the store is being conducted as indicated by the `searching` property.\\n\\nIn this guide we will use `EStore<E>` instances to store `Todo` entities and show applications of the API that `EStore<E>` supports.\\n\\nWill will also add reactive `Slice` instances that track which `Todo` entities are complete and which are incomplete.\\n\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/logos/png/slicelogo.png\\"\\n\\ttitle=\\"@fireflysemantics/slice\\" \\n  description=\\"Lightweight Reactive Web Application State Management\\"\\n\\tdomain=\\"www.npmjs.com\\" \\n  url=\\"https://www.npmjs.com/package/@fireflysemantics/slice\\">\\n</fs-link-preview>\\n\\n\\n# Stackblitz\\n\\nOpen a new Stackblitz Typescript project and add `@fireflysemantics/slice` to the dependencies.\\n\\nNotice the peer dependencies that are automatically pulled in.\\n\\nThis is a completed version. Feel free to fork it or add the snippets as we are going along.\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Object Store Feature Demo\\" \\n  description=\\"Demonstration of the Firefly Semantics Slice Entity Store API\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/firefly-semantics-slice-entity-guide\\">\\n</fs-link-preview>\\n\\n# Model\\nWe will be storing Todo entities. This is the model:\\n```\\ninterface Todo {\\n    id?: string;\\n    gid?: string;\\n    complete: boolean;\\n    title: string;\\n}\\n```\\n\\nWe are using Typescript interfaces.\\n\\nFeel free to switch the interface out with classes, types, etc.\\n\\n# Entities\\n\\nWe will use these Todo entity instances for demoing:\\n\\n```\\nconst TODO_ID_1 = \\"1\\";\\nconst TODO_ID_2 = \\"2\\";\\nconst TODO1: Todo = {\\n   id: TODO_ID_1,\\n   complete: false,\\n   title: \\"You complete me!\\"\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: \\"You completed me!\\"\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n```\\n\\n# ID Assignment\\n\\nOur `Todo` interface has two ids. The `gid` (Global ID) is assigned by **Slice**, such that the store can always identify an entity once it is added.\\n\\nThe `id` property can be assigned by the server (It is not managed by **Slice**). In this case we will initialize it while creating the sample data.\\n\\nGenerally speaking this type of approach supports Optimistic User Interfaces, where entities have an ID that allows both the client and the server to identify the entity consistently. \\n\\nFor example consider a chat message. Before it is sent, it will have a unique ID generated on the client. Once it hits the server the server can also assign a unique ID to it and now it will be consistent on both ends.\\n\\n# Constructor Initialization\\n\\n```\\nlet store: EStore<Todo> = new EStore<Todo>(todos);\\n```\\n\\nEach entity will have a global ID ( `gid` ) assigned to it, unless the property is already initialized.\\n\\n# Observing Store Entities\\n\\nThe store can be observed with the `obs` property bound to the `store` instance.\\n\\n```\\nstore.obs.subscribe(todos => {\\n   console.log(todos)\\n})\\n```\\n\\nThe above snippet will log the initial `todo` entities that the store is initialized with.  Whenever we perform operations (`post`, `put`, `delete` ) on the `store` the `obs` will fire notifying the subscriber function.\\n\\nWe can also perform a sort the observed entities by passing in a sort function to `observe`. \\nIn the below case the sort function sorts by title:\\n\\n# Sorting Observed Entities\\n\\n```\\nlet todos$ = store11.observe((a, b)=>(a.title > b.title ? -1 : 1));\\n```\\n\\n# Retrieve Entities from the Store by ID\\n\\n```\\nconst todo1 = store.findOneByID(TODO_ID_1);\\nconst todo2 = store.findOneByID(TODO_ID_2);\\n```\\n\\n# Retrieve Store Entities by Predicate\\n\\nSelect all Todo instances that have a `title` length greater than 10:\\n```\\nlet predicateTodos:Todo[]=store.select(todo=>todo.title.length>10);\\n```\\n\\n# Retrieve a Snapshot of All Entities\\n\\nTo retrieve a `Todo[]` array snapshot of all the entities \\nin the store call `allSnapshot()`:\\n\\n```\\nconst snapshot:Todo[] = store.allSnapshot();\\n```\\n\\n# Check Entity Equality by Global ID\\n\\nSince the `EStore` assigns the `gid` for us, we can use it to compare entities for equality:\\n\\n```\\nlet todo1EqualsTodo1:boolean = store.equalsByGUID(todo1, todo1);\\n```\\n\\n# Check Entity Equality by ID\\n\\nWe assigned a unique `id` to the entities, thus we can use it to check for equality:\\n```\\nlet todo1EqualsTodo1 = store.equalsByID(todo1, todo1);\\n```\\n\\n# Add a Single Entity\\n\\nUse `post` to post a single entity.\\n```\\nlet store2: EStore<Todo> = new EStore<Todo>();\\nstore2.post(todoPost);\\n```\\n\\n# Add an Array of Entities to the Store\\n\\nUse `postA` to post an array of entities.\\n```\\nstore2.postA(todos);\\n```\\n\\n# Add Multiple Individual Entities to the Store\\n\\nUse `postN` to post multiple individual entities.\\n```\\nstore2.postN(TODO1, TODO2);\\n```\\n\\n# Update a Single Store Entity\\n\\n```\\nlet store5 = new EStore<Todo>();\\nstore5.post(TODO1);\\nlet T1 = store5.findOneByID(TODO1.id);\\nT1.title = \\"This Todo has been Updated\\";\\nstore5.put(T1);\\n```\\n\\n# Update an Array of Store Entities\\n\\n```\\nlet store6 = new EStore<Todo>(todos);\\nT1 = store6.findOneByID(TODO1.id);\\nT1.title = \\"This Todo has been Updated\\";\\nlet T2 = store6.findOneByID(TODO2.id);\\nT2.title = \\"This Todo has also been Updated\\";\\nstore5.putA([T1, T2]);\\n```\\n\\n# Update Multiple Individual Entities\\n```\\nlet store7 = new EStore<Todo>(todos);\\nT1 = store7.findOneByID(TODO1.id);\\nT1.title = \\"This Todo has been Updated\\";\\nT2 = store7.findOneByID(TODO2.id);\\nT2.title = \\"This Todo has also been Updated\\";\\nstore5.putN(T1, T2);\\n```\\n\\n\\n# Delete a Single Entity\\n```\\nlet store8 = new EStore<Todo>();\\nstore8.post(TODO1);\\nT1 = store5.findOneByID(TODO1.id);\\nstore5.delete(T1);\\n```\\n\\n# Delete an Array of Entities\\n```\\nlet store9 = new EStore<Todo>(todos);\\nT1 = store9.findOneByID(TODO1.id);\\nT2 = store6.findOneByID(TODO2.id);\\nstore5.deleteA([T1, T2]);\\n```\\n\\n# Delete Multiple Individual Entities\\n```\\nlet store10 = new EStore<Todo>(todos);\\nT1 = store10.findOneByID(TODO1.id);\\nT2 = store10.findOneByID(TODO2.id);\\nstore10.deleteN(T1, T2);\\n```\\n\\n\\n# Indicate that the Store is Loading\\n\\n```\\nstore.loading = true\\n// When done loading\\nstore.loading = false\\n// Observe Store Loading\\nconst loading$ = store.observeLoading()\\nloading$.subscribe(\\n    loading => {\\n       console.log(loading);  \\n});\\n```\\n\\n# Indicate that the Store is Searching\\n\\n```\\nstore.searching = true;\\n// When done searching\\nstore.searching = false\\n// Observe Store Searching\\nconst searching$ = store.observeSearching()\\nsearching$.subscribe(\\n    loading => {\\n       console.log(loading);  \\n});\\n```\\n\\n# Set the Store Query\\n\\nSetting the `store.query` property will trigger \\nnotification to any observers of this property.\\n\\n```\\nstore.query = \\"Slice is Awesome!\\"\\n```\\n\\n# Observe the Store Query\\n\\n```\\nconst query$ = store.observeQuery()\\nIndicate That the Store is Being Searched\\nstore.searching = true\\n// When done loading\\nstore.searching = false\\n```\\n\\n# Add / Remove Active Entities\\n\\n```\\nstore.addActive(todo1)\\nstore.deleteActive(todo1)\\n```\\n\\n# Add an Entity Via Toggle\\n\\nIf `todo1` is not in the store the `toggle` call will add it.\\n```\\nstore.toggle(todo1)\\n```\\n\\n# Remove an Entity Via Toggle\\n\\nIf `todo1` is in the store the `toggle` call will remove it.\\n```\\nstore.toggle(todo1)\\n```\\n\\n# Check Whether the Store is Empty\\n\\n```\\nstore.isEmptySnapshot()\\n```\\n\\n# Observe Whether the Store is Empty\\n```\\nstore.isEmpty().subscribe(empty => {   \\n    console.log(empty) \\n});\\n```\\n\\n\\n# Reset the Store\\n```\\nstore.reset()\\n```\\n\\n# Check Store Entity Count\\n```\\nstore.countSnapshot()\\n```\\n\\n# Observe Store Entity Count\\n\\n```\\nstore.count().subscribe( c => {    \\n     console.log(c)\\n});\\n```\\n\\n# Contains Entity\\n\\nTo check whether the store contains `entity` call `contains`:\\n```\\nlet containsEntity:boolean = store.contains(entity)\\n```\\n\\n# Adding Complete and Incomplete Slices\\n\\nSlices are live observable filters. \\nWe will add two slices for `complete` and `incomplete` todos.\\n\\n```\\nexport const enum TodoSlices {\\nCOMPLETE = \\"Complete\\",\\nINCOMPLETE = \\"Incomplete\\"\\n}\\nlet store12 = new EStore<Todo>(todos);\\nT1 = store12.findOneByID(TODO1.id);\\nT2 = store12.findOneByID(TODO2.id);\\nstore12.addSlice(todo => todo.complete, TodoSlices.COMPLETE);\\nstore12.addSlice(todo => !todo.complete, TodoSlices.INCOMPLETE);\\nconst completeTodos = store12.getSlice(TodoSlices.COMPLETE).allSnapshot();\\nconst incompletedTodos = store12.getSlice(TodoSlices.INCOMPLETE).allSnapshot();\\nconst completeTodos$ = store12.getSlice(TodoSlices.COMPLETE).observe();\\ncompleteTodos$.subscribe(todos => {\\nconsole.log(\\"COMPLETED TODOS\\");\\nconsole.log(JSON.stringify(todos));\\n});\\nstore12.post({\\nid: \\"3\\",\\ntitle: \\"Adding a Complete Todo\\",\\ncomplete: true\\n});\\n```\\n\\nWhen we post the Todo instance with id \\n`3` the completeTodos$ observable fires, \\nand the Todo is logged by the subscriber of the `completeTodos$`.","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p><a href=\'https://youtu.be/Boj3-va-TKk\'>This guide is also available on youtube here</a>.</p>\\n<p>The <strong>Firefly Semantics Slice</strong> Entity Store ( <code>EStore&lt;E&gt;</code> ) manages an observable array of entity instances.</p>\\n<p>Use it in single page, web, mobile, and server side applications for reactive state management.</p>\\n<p>Each <code>EStore&lt;E&gt;</code> instance also has utility <code>Observable</code>s used to indicate whether the store is <code>loading</code> or if a search associated with the store is being conducted as indicated by the <code>searching</code> property.</p>\\n<p>In this guide we will use <code>EStore&lt;E&gt;</code> instances to store <code>Todo</code> entities and show applications of the API that <code>EStore&lt;E&gt;</code> supports.</p>\\n<p>Will will also add reactive <code>Slice</code> instances that track which <code>Todo</code> entities are complete and which are incomplete.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/logos/png/slicelogo.png\'\\n    title=\'@fireflysemantics/slice\' \\n  description=\'Lightweight Reactive Web Application State Management\'\\n    domain=\'www.npmjs.com\' \\n  url=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>\\n</fs-link-preview></p>\\n<h1 id=\'stackblitz\'>Stackblitz</h1>\\n<p>Open a new Stackblitz Typescript project and add <code>@fireflysemantics/slice</code> to the dependencies.</p>\\n<p>Notice the peer dependencies that are automatically pulled in.</p>\\n<p>This is a completed version. Feel free to fork it or add the snippets as we are going along.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Object Store Feature Demo\' \\n  description=\'Demonstration of the Firefly Semantics Slice Entity Store API\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/firefly-semantics-slice-entity-guide\'>\\n</fs-link-preview></p>\\n<h1 id=\'model\'>Model</h1>\\n<p>We will be storing Todo entities. This is the model:</p>\\n<pre><code>interface Todo {\\n    id?: string;\\n    gid?: string;\\n    complete: boolean;\\n    title: string;\\n}\\n</code></pre>\\n<p>We are using Typescript interfaces.</p>\\n<p>Feel free to switch the interface out with classes, types, etc.</p>\\n<h1 id=\'entities\'>Entities</h1>\\n<p>We will use these Todo entity instances for demoing:</p>\\n<pre><code>const TODO_ID_1 = &quot;1&quot;;\\nconst TODO_ID_2 = &quot;2&quot;;\\nconst TODO1: Todo = {\\n   id: TODO_ID_1,\\n   complete: false,\\n   title: &quot;You complete me!&quot;\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: &quot;You completed me!&quot;\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n</code></pre>\\n<h1 id=\'id-assignment\'>ID Assignment</h1>\\n<p>Our <code>Todo</code> interface has two ids. The <code>gid</code> (Global ID) is assigned by <strong>Slice</strong>, such that the store can always identify an entity once it is added.</p>\\n<p>The <code>id</code> property can be assigned by the server (It is not managed by <strong>Slice</strong>). In this case we will initialize it while creating the sample data.</p>\\n<p>Generally speaking this type of approach supports Optimistic User Interfaces, where entities have an ID that allows both the client and the server to identify the entity consistently. </p>\\n<p>For example consider a chat message. Before it is sent, it will have a unique ID generated on the client. Once it hits the server the server can also assign a unique ID to it and now it will be consistent on both ends.</p>\\n<h1 id=\'constructor-initialization\'>Constructor Initialization</h1>\\n<pre><code>let store: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;(todos);\\n</code></pre>\\n<p>Each entity will have a global ID ( <code>gid</code> ) assigned to it, unless the property is already initialized.</p>\\n<h1 id=\'observing-store-entities\'>Observing Store Entities</h1>\\n<p>The store can be observed with the <code>obs</code> property bound to the <code>store</code> instance.</p>\\n<pre><code>store.obs.subscribe(todos =&gt; {\\n   console.log(todos)\\n})\\n</code></pre>\\n<p>The above snippet will log the initial <code>todo</code> entities that the store is initialized with.  Whenever we perform operations (<code>post</code>, <code>put</code>, <code>delete</code> ) on the <code>store</code> the <code>obs</code> will fire notifying the subscriber function.</p>\\n<p>We can also perform a sort the observed entities by passing in a sort function to <code>observe</code>. \\nIn the below case the sort function sorts by title:</p>\\n<h1 id=\'sorting-observed-entities\'>Sorting Observed Entities</h1>\\n<pre><code>let todos$ = store11.observe((a, b)=&gt;(a.title &gt; b.title ? -1 : 1));\\n</code></pre>\\n<h1 id=\'retrieve-entities-from-the-store-by-id\'>Retrieve Entities from the Store by ID</h1>\\n<pre><code>const todo1 = store.findOneByID(TODO_ID_1);\\nconst todo2 = store.findOneByID(TODO_ID_2);\\n</code></pre>\\n<h1 id=\'retrieve-store-entities-by-predicate\'>Retrieve Store Entities by Predicate</h1>\\n<p>Select all Todo instances that have a <code>title</code> length greater than 10:</p>\\n<pre><code>let predicateTodos:Todo[]=store.select(todo=&gt;todo.title.length&gt;10);\\n</code></pre>\\n<h1 id=\'retrieve-a-snapshot-of-all-entities\'>Retrieve a Snapshot of All Entities</h1>\\n<p>To retrieve a <code>Todo[]</code> array snapshot of all the entities \\nin the store call <code>allSnapshot()</code>:</p>\\n<pre><code>const snapshot:Todo[] = store.allSnapshot();\\n</code></pre>\\n<h1 id=\'check-entity-equality-by-global-id\'>Check Entity Equality by Global ID</h1>\\n<p>Since the <code>EStore</code> assigns the <code>gid</code> for us, we can use it to compare entities for equality:</p>\\n<pre><code>let todo1EqualsTodo1:boolean = store.equalsByGUID(todo1, todo1);\\n</code></pre>\\n<h1 id=\'check-entity-equality-by-id\'>Check Entity Equality by ID</h1>\\n<p>We assigned a unique <code>id</code> to the entities, thus we can use it to check for equality:</p>\\n<pre><code>let todo1EqualsTodo1 = store.equalsByID(todo1, todo1);\\n</code></pre>\\n<h1 id=\'add-a-single-entity\'>Add a Single Entity</h1>\\n<p>Use <code>post</code> to post a single entity.</p>\\n<pre><code>let store2: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;();\\nstore2.post(todoPost);\\n</code></pre>\\n<h1 id=\'add-an-array-of-entities-to-the-store\'>Add an Array of Entities to the Store</h1>\\n<p>Use <code>postA</code> to post an array of entities.</p>\\n<pre><code>store2.postA(todos);\\n</code></pre>\\n<h1 id=\'add-multiple-individual-entities-to-the-store\'>Add Multiple Individual Entities to the Store</h1>\\n<p>Use <code>postN</code> to post multiple individual entities.</p>\\n<pre><code>store2.postN(TODO1, TODO2);\\n</code></pre>\\n<h1 id=\'update-a-single-store-entity\'>Update a Single Store Entity</h1>\\n<pre><code>let store5 = new EStore&lt;Todo&gt;();\\nstore5.post(TODO1);\\nlet T1 = store5.findOneByID(TODO1.id);\\nT1.title = &quot;This Todo has been Updated&quot;;\\nstore5.put(T1);\\n</code></pre>\\n<h1 id=\'update-an-array-of-store-entities\'>Update an Array of Store Entities</h1>\\n<pre><code>let store6 = new EStore&lt;Todo&gt;(todos);\\nT1 = store6.findOneByID(TODO1.id);\\nT1.title = &quot;This Todo has been Updated&quot;;\\nlet T2 = store6.findOneByID(TODO2.id);\\nT2.title = &quot;This Todo has also been Updated&quot;;\\nstore5.putA([T1, T2]);\\n</code></pre>\\n<h1 id=\'update-multiple-individual-entities\'>Update Multiple Individual Entities</h1>\\n<pre><code>let store7 = new EStore&lt;Todo&gt;(todos);\\nT1 = store7.findOneByID(TODO1.id);\\nT1.title = &quot;This Todo has been Updated&quot;;\\nT2 = store7.findOneByID(TODO2.id);\\nT2.title = &quot;This Todo has also been Updated&quot;;\\nstore5.putN(T1, T2);\\n</code></pre>\\n<h1 id=\'delete-a-single-entity\'>Delete a Single Entity</h1>\\n<pre><code>let store8 = new EStore&lt;Todo&gt;();\\nstore8.post(TODO1);\\nT1 = store5.findOneByID(TODO1.id);\\nstore5.delete(T1);\\n</code></pre>\\n<h1 id=\'delete-an-array-of-entities\'>Delete an Array of Entities</h1>\\n<pre><code>let store9 = new EStore&lt;Todo&gt;(todos);\\nT1 = store9.findOneByID(TODO1.id);\\nT2 = store6.findOneByID(TODO2.id);\\nstore5.deleteA([T1, T2]);\\n</code></pre>\\n<h1 id=\'delete-multiple-individual-entities\'>Delete Multiple Individual Entities</h1>\\n<pre><code>let store10 = new EStore&lt;Todo&gt;(todos);\\nT1 = store10.findOneByID(TODO1.id);\\nT2 = store10.findOneByID(TODO2.id);\\nstore10.deleteN(T1, T2);\\n</code></pre>\\n<h1 id=\'indicate-that-the-store-is-loading\'>Indicate that the Store is Loading</h1>\\n<pre><code>store.loading = true\\n// When done loading\\nstore.loading = false\\n// Observe Store Loading\\nconst loading$ = store.observeLoading()\\nloading$.subscribe(\\n    loading =&gt; {\\n       console.log(loading);  \\n});\\n</code></pre>\\n<h1 id=\'indicate-that-the-store-is-searching\'>Indicate that the Store is Searching</h1>\\n<pre><code>store.searching = true;\\n// When done searching\\nstore.searching = false\\n// Observe Store Searching\\nconst searching$ = store.observeSearching()\\nsearching$.subscribe(\\n    loading =&gt; {\\n       console.log(loading);  \\n});\\n</code></pre>\\n<h1 id=\'set-the-store-query\'>Set the Store Query</h1>\\n<p>Setting the <code>store.query</code> property will trigger \\nnotification to any observers of this property.</p>\\n<pre><code>store.query = &quot;Slice is Awesome!&quot;\\n</code></pre>\\n<h1 id=\'observe-the-store-query\'>Observe the Store Query</h1>\\n<pre><code>const query$ = store.observeQuery()\\nIndicate That the Store is Being Searched\\nstore.searching = true\\n// When done loading\\nstore.searching = false\\n</code></pre>\\n<h1 id=\'add--remove-active-entities\'>Add / Remove Active Entities</h1>\\n<pre><code>store.addActive(todo1)\\nstore.deleteActive(todo1)\\n</code></pre>\\n<h1 id=\'add-an-entity-via-toggle\'>Add an Entity Via Toggle</h1>\\n<p>If <code>todo1</code> is not in the store the <code>toggle</code> call will add it.</p>\\n<pre><code>store.toggle(todo1)\\n</code></pre>\\n<h1 id=\'remove-an-entity-via-toggle\'>Remove an Entity Via Toggle</h1>\\n<p>If <code>todo1</code> is in the store the <code>toggle</code> call will remove it.</p>\\n<pre><code>store.toggle(todo1)\\n</code></pre>\\n<h1 id=\'check-whether-the-store-is-empty\'>Check Whether the Store is Empty</h1>\\n<pre><code>store.isEmptySnapshot()\\n</code></pre>\\n<h1 id=\'observe-whether-the-store-is-empty\'>Observe Whether the Store is Empty</h1>\\n<pre><code>store.isEmpty().subscribe(empty =&gt; {   \\n    console.log(empty) \\n});\\n</code></pre>\\n<h1 id=\'reset-the-store\'>Reset the Store</h1>\\n<pre><code>store.reset()\\n</code></pre>\\n<h1 id=\'check-store-entity-count\'>Check Store Entity Count</h1>\\n<pre><code>store.countSnapshot()\\n</code></pre>\\n<h1 id=\'observe-store-entity-count\'>Observe Store Entity Count</h1>\\n<pre><code>store.count().subscribe( c =&gt; {    \\n     console.log(c)\\n});\\n</code></pre>\\n<h1 id=\'contains-entity\'>Contains Entity</h1>\\n<p>To check whether the store contains <code>entity</code> call <code>contains</code>:</p>\\n<pre><code>let containsEntity:boolean = store.contains(entity)\\n</code></pre>\\n<h1 id=\'adding-complete-and-incomplete-slices\'>Adding Complete and Incomplete Slices</h1>\\n<p>Slices are live observable filters. \\nWe will add two slices for <code>complete</code> and <code>incomplete</code> todos.</p>\\n<pre><code>export const enum TodoSlices {\\nCOMPLETE = &quot;Complete&quot;,\\nINCOMPLETE = &quot;Incomplete&quot;\\n}\\nlet store12 = new EStore&lt;Todo&gt;(todos);\\nT1 = store12.findOneByID(TODO1.id);\\nT2 = store12.findOneByID(TODO2.id);\\nstore12.addSlice(todo =&gt; todo.complete, TodoSlices.COMPLETE);\\nstore12.addSlice(todo =&gt; !todo.complete, TodoSlices.INCOMPLETE);\\nconst completeTodos = store12.getSlice(TodoSlices.COMPLETE).allSnapshot();\\nconst incompletedTodos = store12.getSlice(TodoSlices.INCOMPLETE).allSnapshot();\\nconst completeTodos$ = store12.getSlice(TodoSlices.COMPLETE).observe();\\ncompleteTodos$.subscribe(todos =&gt; {\\nconsole.log(&quot;COMPLETED TODOS&quot;);\\nconsole.log(JSON.stringify(todos));\\n});\\nstore12.post({\\nid: &quot;3&quot;,\\ntitle: &quot;Adding a Complete Todo&quot;,\\ncomplete: true\\n});\\n</code></pre>\\n<p>When we post the Todo instance with id \\n<code>3</code> the completeTodos$ observable fires, \\nand the Todo is logged by the subscriber of the <code>completeTodos$</code>.</p>\\n","summary":"Review of Firefly Semantics Reactive Entity Store Capabilities.","tags":["Firefly Semantics","Slice","Angular","JavaScript","TypeScript"],"tagString":"Firefly Semantics, Slice, Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/08/2021","headerImage":"cobweb-3725540_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/cobweb-3725540_1920.jpg","title":"Introduction to the Firefly Semantics Slice Reactive Entity Store","readingTime":7,"wordCount":1284},{"category":"Guides","type":"guide","md5":"eaa4e3a4ebae80d3175dd4282b81e8d1","filename":"introduction-to-the-firefly-semantics-slice-reactive-object-store.md","path":"guides/introduction-to-the-firefly-semantics-slice-reactive-object-store.md","id":"guides--introduction-to-the-firefly-semantics-slice-reactive-object-store","markdown":"\\n# Introduction\\n\\nThe **Firefly Semantics Slice Object Store** ( `OStore` ) contains observable key value pairs.\\n\\nUse it in single page, web, mobile, and server side applications for reactive state management.\\n\\nIn this guide we will go through it\u2019s capabilities.\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/logos/png/slicelogo.png\\"\\n\\ttitle=\\"@fireflysemantics/slice\\" \\n  description=\\"Lightweight Reactive Web Application State Management\\"\\n\\tdomain=\\"www.npmjs.com\\" \\n  url=\\"https://www.npmjs.com/package/@fireflysemantics/slice\\">\\n</fs-link-preview>\\n\\n[You may also wish to follow along on Youtube.](https://youtu.be/_3_mEKw3bM0)\\n\\n# Stackblitz\\n\\nTo follow along in this guide, open a new Stackblitz Typescript project and add `@fireflysemantics/slice` to the dependencies.\\n\\nNotice the peer dependencies that are automatically pulled in.  \\n\\nThis is a completed version. Feel free to fork it or add the snippets as we are going along.\\n\\n<div>\\n    <fs-link-preview \\n      imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n    \\ttitle=\\"Stackblitz Slice Object Store Feature Demo\\" \\n      description=\\"Demonstration of the Firefly Semantics Slice Object Store API\\"\\n    \\tdomain=\\"stackblitz.com\\" \\n      url=\\"https://stackblitz.com/edit/typescript-slice-ostore-guide\\">\\n    </fs-link-preview>\\n</div>\\n\\n# Store Initialization\\n\\nIn order to illustrate how the Firefly Semantics Slice Object Store works we will store 2 values.  \\n\\nOne for `name` which will be a `string` value and a `count` which will be a `number`.\\n\\nWe use an `OStoreStart` configuration instance to initialize our store like this:\\n```\\ninterface ISTART extends KeyObsValueReset {\\n  name: ObsValueReset;\\n  count: ObsValueReset;\\n}\\nconst START: OStoreStart = {\\n  name: { value: \'Calvin\', reset: \'Calvin\' },\\n  count: { value: 0, reset: 100000 },\\n};\\nlet OS: OStore<ISTART> = new OStore(START);\\n```\\n\\nNotice that for both `name` and `count` we have provide an initial `value` and a `reset` value.\\n\\nIf we call `reset` on the store the `reseet` values will  be used to reinitialize the store.\\n\\n# IDE Auto Completion and Observable References\\n\\nYou\'ll notice that we created an `ISTART` interface.  \\n\\nWe initialize the Object Store using this interface in order to get autocomplete in our IDE.\\n\\nThe `interface` values are typed `ObsValueReset` and that interface is defined like this:\\n\\n```\\n/**\\n * OStore Key Value Reset \\n */\\nexport interface ObsValueReset {    \\n    value:any\\n    reset?:any    \\n    obs?: Observable<any>}\\n```\\n\\nAnd so each initialization object passed to the store contains the initial `value`, the `reset` value, and an `obs` refrence to an `Observable<any>` that will emit the current value stored.\\n\\nThe `obs` reference is set when the store is initialized by the store itself.\\n\\n# Snapshot Values\\n\\nOnce the store is initialized we can retrieve snapshots of keyed values like this:\\n```\\n//=====================================\\n// Take a snapshot of the count value\\n//=====================================\\nlet countSnapshot = OS.snapshot(OS.S.count);\\nconsole.log(`The snapshot for the count key is: ${countSnapshot}`);\\n\\n//=====================================\\n// Take a snapshot of the name value\\n//=====================================\\nlet nameSnapshot = OS.snapshot(OS.S.name);\\nconsole.log(nameSnapshot);\\n```\\n\\nNotice that we are using the `OS.S` property to get auto completion for the keys that are contained in the store.\\n\\nIf we try to retrieve a value of a key that is not in the store then we get `undefined` back:\\n```\\n//=====================================\\n// Use a key that has is not included\\n// in our initialization object.\\n//=====================================\\nlet undefinedSnapshot = OS.snapshot(\'nothere\');\\nconsole.log(`The snapshot for the nothere key is: ${undefinedSnapshot}`);\\n```\\n\\n# Subscribing to Store Observables\\n\\nWe can subscribe to the `name` entry `Observable` like this:\\n\\n```\\n//=====================================\\n// Create an observable reference for the\\n// value keyed by name.\\n//=====================================\\nlet name$: Observable<string> = OS.S.name.obs;\\nname$.subscribe((v) => console.log(`The value for name$ is ${v}`));\\n```\\n\\nThis will log the initial value contained in the store (`Calvin`).\\n\\nThe process for subscribing the the `count` `Observable` is the same.\\n\\n# Updating Values\\n\\nWe can update `name` from `Calvin` to `Suzie `like this:\\n\\n```\\nOS.put(OS.S.name, \'Suzie\');\\n```\\n\\nOur `name$` subscription will now log `Suzie` as the name.\\n\\nIf we take a snapshot of the `name` key we get `Suzie` back:\\n\\n```\\n//=====================================\\n// Get a snapshot of the\\n// updated name value\\n//=====================================\\nnameSnapshot = OS.snapshot(OS.S.name);\\n```\\n\\n# Resetting the Store\\n\\nTo reset the store call reset :\\n```\\nOS.reset()\\n```\\n\\nAfter the reset the value of `name` is now `Calvin` again, \\nsince that\u2019s the value we configured reset to.\\n\\nThe value of `count` is `10000`, since that is the configured `reset` value for `count`.\\n\\n# Deleting Values\\n\\nWe can delete the `count` entry like this:\\n```\\nOS.delete(OS.S.count);\\ncountSnapshot = OS.snapshot(OS.S.count);\\nconsole.log(`The deleted count value is ${countSnapshot}`);\\n```\\n\\nNow when we log the value of the `count` snapshot it logs undefined.\\n\\n# Checking if a Value Exists\\n\\nWe can can check whether the name entry exists using the `exists` API call like this:\\n```\\nconst exists = OS.exists(OS.S.count)\\n```\\nIn this case exists will be false since we deleted the entry.\\n\\n# Entry Count\\n\\nWe check check the number of entries in the store like this:\\n```\\nOS.count()\\n```\\n\\nSince we deleted `name` we only have one value left in the store.\\n\\n# Clear\\n\\nRun `clear()` to delete all entries.\\n```\\nOS.clear()\\n```\\n# Store Empty\\n\\nWe can check whether the store is empty using `isEmpty()`:\\n```\\nOS.isEmpty()\\n```\\n\\nAnd since we ran `OS.clear()` the store is empty.\\n\\n# Summary\\n\\nThis has been a review of the features and API that the OStore supports. For a real world use case demonstraing the API check out [Recreating the NgRx Demo App With the Firefly Semantics Slice State Manager](https://developer.fireflysemantics.com/guides/guides--recreating-the-ngrx-demo-app-with-firefly-semantics-slice-state-manager).\\n","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>The <strong>Firefly Semantics Slice Object Store</strong> ( <code>OStore</code> ) contains observable key value pairs.</p>\\n<p>Use it in single page, web, mobile, and server side applications for reactive state management.</p>\\n<p>In this guide we will go through it\u2019s capabilities.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/logos/png/slicelogo.png\'\\n    title=\'@fireflysemantics/slice\' \\n  description=\'Lightweight Reactive Web Application State Management\'\\n    domain=\'www.npmjs.com\' \\n  url=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>\\n</fs-link-preview></p>\\n<p><a href=\'https://youtu.be/_3_mEKw3bM0\'>You may also wish to follow along on Youtube.</a></p>\\n<h1 id=\'stackblitz\'>Stackblitz</h1>\\n<p>To follow along in this guide, open a new Stackblitz Typescript project and add <code>@fireflysemantics/slice</code> to the dependencies.</p>\\n<p>Notice the peer dependencies that are automatically pulled in.  </p>\\n<p>This is a completed version. Feel free to fork it or add the snippets as we are going along.</p>\\n<div>\\n    <fs-link-preview \\n      imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n        title=\'Stackblitz Slice Object Store Feature Demo\' \\n      description=\'Demonstration of the Firefly Semantics Slice Object Store API\'\\n        domain=\'stackblitz.com\' \\n      url=\'https://stackblitz.com/edit/typescript-slice-ostore-guide\'>\\n    </fs-link-preview>\\n</div>\\n\\n<h1 id=\'store-initialization\'>Store Initialization</h1>\\n<p>In order to illustrate how the Firefly Semantics Slice Object Store works we will store 2 values.  </p>\\n<p>One for <code>name</code> which will be a <code>string</code> value and a <code>count</code> which will be a <code>number</code>.</p>\\n<p>We use an <code>OStoreStart</code> configuration instance to initialize our store like this:</p>\\n<pre><code>interface ISTART extends KeyObsValueReset {\\n  name: ObsValueReset;\\n  count: ObsValueReset;\\n}\\nconst START: OStoreStart = {\\n  name: { value: &#39;Calvin&#39;, reset: &#39;Calvin&#39; },\\n  count: { value: 0, reset: 100000 },\\n};\\nlet OS: OStore&lt;ISTART&gt; = new OStore(START);\\n</code></pre>\\n<p>Notice that for both <code>name</code> and <code>count</code> we have provide an initial <code>value</code> and a <code>reset</code> value.</p>\\n<p>If we call <code>reset</code> on the store the <code>reseet</code> values will  be used to reinitialize the store.</p>\\n<h1 id=\'ide-auto-completion-and-observable-references\'>IDE Auto Completion and Observable References</h1>\\n<p>You&#39;ll notice that we created an <code>ISTART</code> interface.  </p>\\n<p>We initialize the Object Store using this interface in order to get autocomplete in our IDE.</p>\\n<p>The <code>interface</code> values are typed <code>ObsValueReset</code> and that interface is defined like this:</p>\\n<pre><code>/**\\n * OStore Key Value Reset \\n */\\nexport interface ObsValueReset {    \\n    value:any\\n    reset?:any    \\n    obs?: Observable&lt;any&gt;}\\n</code></pre>\\n<p>And so each initialization object passed to the store contains the initial <code>value</code>, the <code>reset</code> value, and an <code>obs</code> refrence to an <code>Observable&lt;any&gt;</code> that will emit the current value stored.</p>\\n<p>The <code>obs</code> reference is set when the store is initialized by the store itself.</p>\\n<h1 id=\'snapshot-values\'>Snapshot Values</h1>\\n<p>Once the store is initialized we can retrieve snapshots of keyed values like this:</p>\\n<pre><code>//=====================================\\n// Take a snapshot of the count value\\n//=====================================\\nlet countSnapshot = OS.snapshot(OS.S.count);\\nconsole.log(`The snapshot for the count key is: ${countSnapshot}`);\\n\\n//=====================================\\n// Take a snapshot of the name value\\n//=====================================\\nlet nameSnapshot = OS.snapshot(OS.S.name);\\nconsole.log(nameSnapshot);\\n</code></pre>\\n<p>Notice that we are using the <code>OS.S</code> property to get auto completion for the keys that are contained in the store.</p>\\n<p>If we try to retrieve a value of a key that is not in the store then we get <code>undefined</code> back:</p>\\n<pre><code>//=====================================\\n// Use a key that has is not included\\n// in our initialization object.\\n//=====================================\\nlet undefinedSnapshot = OS.snapshot(&#39;nothere&#39;);\\nconsole.log(`The snapshot for the nothere key is: ${undefinedSnapshot}`);\\n</code></pre>\\n<h1 id=\'subscribing-to-store-observables\'>Subscribing to Store Observables</h1>\\n<p>We can subscribe to the <code>name</code> entry <code>Observable</code> like this:</p>\\n<pre><code>//=====================================\\n// Create an observable reference for the\\n// value keyed by name.\\n//=====================================\\nlet name$: Observable&lt;string&gt; = OS.S.name.obs;\\nname$.subscribe((v) =&gt; console.log(`The value for name$ is ${v}`));\\n</code></pre>\\n<p>This will log the initial value contained in the store (<code>Calvin</code>).</p>\\n<p>The process for subscribing the the <code>count</code> <code>Observable</code> is the same.</p>\\n<h1 id=\'updating-values\'>Updating Values</h1>\\n<p>We can update <code>name</code> from <code>Calvin</code> to <code>Suzie </code>like this:</p>\\n<pre><code>OS.put(OS.S.name, &#39;Suzie&#39;);\\n</code></pre>\\n<p>Our <code>name$</code> subscription will now log <code>Suzie</code> as the name.</p>\\n<p>If we take a snapshot of the <code>name</code> key we get <code>Suzie</code> back:</p>\\n<pre><code>//=====================================\\n// Get a snapshot of the\\n// updated name value\\n//=====================================\\nnameSnapshot = OS.snapshot(OS.S.name);\\n</code></pre>\\n<h1 id=\'resetting-the-store\'>Resetting the Store</h1>\\n<p>To reset the store call reset :</p>\\n<pre><code>OS.reset()\\n</code></pre>\\n<p>After the reset the value of <code>name</code> is now <code>Calvin</code> again, \\nsince that\u2019s the value we configured reset to.</p>\\n<p>The value of <code>count</code> is <code>10000</code>, since that is the configured <code>reset</code> value for <code>count</code>.</p>\\n<h1 id=\'deleting-values\'>Deleting Values</h1>\\n<p>We can delete the <code>count</code> entry like this:</p>\\n<pre><code>OS.delete(OS.S.count);\\ncountSnapshot = OS.snapshot(OS.S.count);\\nconsole.log(`The deleted count value is ${countSnapshot}`);\\n</code></pre>\\n<p>Now when we log the value of the <code>count</code> snapshot it logs undefined.</p>\\n<h1 id=\'checking-if-a-value-exists\'>Checking if a Value Exists</h1>\\n<p>We can can check whether the name entry exists using the <code>exists</code> API call like this:</p>\\n<pre><code>const exists = OS.exists(OS.S.count)\\n</code></pre>\\n<p>In this case exists will be false since we deleted the entry.</p>\\n<h1 id=\'entry-count\'>Entry Count</h1>\\n<p>We check check the number of entries in the store like this:</p>\\n<pre><code>OS.count()\\n</code></pre>\\n<p>Since we deleted <code>name</code> we only have one value left in the store.</p>\\n<h1 id=\'clear\'>Clear</h1>\\n<p>Run <code>clear()</code> to delete all entries.</p>\\n<pre><code>OS.clear()\\n</code></pre>\\n<h1 id=\'store-empty\'>Store Empty</h1>\\n<p>We can check whether the store is empty using <code>isEmpty()</code>:</p>\\n<pre><code>OS.isEmpty()\\n</code></pre>\\n<p>And since we ran <code>OS.clear()</code> the store is empty.</p>\\n<h1 id=\'summary\'>Summary</h1>\\n<p>This has been a review of the features and API that the OStore supports. For a real world use case demonstraing the API check out <a href=\'https://developer.fireflysemantics.com/guides/guides--recreating-the-ngrx-demo-app-with-firefly-semantics-slice-state-manager\'>Recreating the NgRx Demo App With the Firefly Semantics Slice State Manager</a>.</p>\\n","summary":"Review of Firefly Semantics Reactive Object Store Capabilities.","tags":["Firefly Semantics","Slice","Angular","JavaScript","TypeScript"],"tagString":"Firefly Semantics, Slice, Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/08/2021","headerImage":"bee-4458633_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bee-4458633_1920.jpg","title":"Introduction to the Firefly Semantics Slice Reactive Object Store","readingTime":5,"wordCount":888},{"category":"Guides","type":"guide","md5":"df1b7c2e116f17493c4219cf0df75896","filename":"recreating-the-ngrx-demo-app-with-firefly-semantics-slice-state-manager.md","path":"guides/recreating-the-ngrx-demo-app-with-firefly-semantics-slice-state-manager.md","id":"guides--recreating-the-ngrx-demo-app-with-firefly-semantics-slice-state-manager","markdown":"\\n# Introduction\\n\\nWe will be creating the NgRx demo application from scratch using the [Firefly Semantics Slice Lightweight Reactive Application State Manager](https://www.npmjs.com/package/@fireflysemantics/slice).\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/logos/png/slicelogo.png\\"\\n\\ttitle=\\"@fireflysemantics/slice\\" \\n  description=\\"Lightweight Reactive Web Application State Management\\"\\n\\tdomain=\\"www.npmjs.com\\" \\n  url=\\"https://www.npmjs.com/package/@fireflysemantics/slice\\">\\n</fs-link-preview>\\n\\nThe NgRx Demo allows us to search the Google Books API and place books in our own collection.\\n\\nWe will be doing this incrementally in phases describing the [Slice](https://www.npmjs.com/package/@fireflysemantics/slice) state management implementation details as we go along.\\n\\n# Final Stackblitz Demo\\n\\nTo play around with this demo log in with the username **test** and use any password.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n    title=\\"Stackblitz Slice NgRx Demo\\" \\n    description=\\"Firefly Semantics Slice NgRx Demo Application\\"\\n    domain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ivy-ydvn8y\\">\\n</fs-link-preview>\\n\\n# Stackblitz\\n\\nGo to [Stackblitz](https://stackblitz.com/) and start a brand new Angular project.\\n\\nDelete the `hello.component.ts` and remove it from `app.module.ts` correspondingly.\\n\\nRemove the `<hello name=\u201d{{ name }}\u201d></hello>` from `app.component.html`.\\n\\n# Dependencies\\n\\nThe dependencies for this project are as follows:\\n\\n- `@angular/material`\\n- `@fireflysemantics/slice`\\n- `@fireflysemantics/material-base-module`\\n- `@ngneat/until-destroy`\\n- `@types/nanoid`\\n- `nanoid`\\n\\nThese need to be installed using NPM via the command line in a desktop angular project.\\n\\nStackblitz will automatically pull in peer dependencies, so when [Slice](https://www.npmjs.com/package/@fireflysemantics/slice) is declared as a dependency it automatically pulls in `@types/nanoid` and `naonoid`.\\n\\nThe dependency `@ngneat/until-destroy` is used to automatically unsubscribe when a component is destroyed.\\n\\n# Styling and Icons\\n\\nUpdate `src/styles.css` with:\\n\\n```\\n@import \\"~@angular/material/prebuilt-themes/indigo-pink.css\\";\\n```\\n\\nAdd the material icons cdn link to `src/index.html`:\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\">\\n```\\n\\n# Model\\n\\nThe folder `src/app/model` will hold our model types within `index.ts`:\\n\\n```\\nexport type Book = {\\n  id: string;\\n  volumeInfo: {\\n    title: string;\\n    subtitle: string;\\n    authors: string[];\\n    publisher: string;\\n    publishDate: string;\\n    description: string;\\n    averageRating: number;\\n    ratingsCount: number;\\n    imageLinks: {\\n      thumbnail: string;\\n      smallThumbnail: string;\\n    };\\n  };\\n};\\n\\nexport type Credentials = {\\n  username: string;\\n  password: string;\\n};\\n\\nexport type User = {\\n  name: string;\\n};\\n```\\n\\nThe `Book` model represents book instances we have retrieved via the Google Books API.\\n\\nThe `Credentials` are login credentials.\\n\\nThe `User` type represents an authenticated user.\\n\\n\\n# Services\\n\\nThe folder `src/app/services` will contain all our services.\\n\\n## Application State Service\\n\\nThe application state service allows us to observe the state of:\\n\\n- Side navigation (Open or Closed)\\n- User ( Null if not logged in)\\n- Authentication Error\\n\\nThese have been modeled in a [Firefly Semantics Slice Object Store. Click on this link for an introduction](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store/).\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport {\\n  KeyObsValueReset,\\n  ObsValueReset,\\n  OStore,\\n  OStoreStart,\\n} from \'@fireflysemantics/slice\';\\n\\nimport { Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport { User } from \'../model\';\\n\\n//===================================\\n//Create the User Key for local storage\\n//===================================\\nexport const USER_KEY = \'USER_KEY\';\\n\\ninterface ISTART extends KeyObsValueReset {\\n  SIDENAV: ObsValueReset;\\n  USER: ObsValueReset;\\n  AUTHENTICATION_ERROR: ObsValueReset;\\n}\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class AppStateService {\\n  START: OStoreStart = {\\n    SIDENAV: { value: false, reset: false },\\n    USER: { value: null, reset: null },\\n    AUTHENTICATION_ERROR: { value: false, reset: false },\\n  };\\n  public OS: OStore<ISTART> = new OStore(this.START);\\n\\n  //===================================\\n  //State parameters that we wish to observe\\n  //===================================\\n  public sideNavOpen$: Observable<boolean> = this.OS.S.SIDENAV.obs;\\n  public user$: Observable<User> = this.OS.S.USER.obs;\\n  public isLoggedIn$: Observable<boolean> = this.user$.pipe(map((u) => !!u));\\n  public authenticationError$: Observable<boolean> =\\n    this.OS.S.AUTHENTICATION_ERROR.obs;\\n\\n  constructor() {\\n    const user = JSON.parse(localStorage.getItem(USER_KEY)) || null;\\n    this.OS.put(this.OS.S.USER, user);\\n  }\\n\\n  /**\\n   * If the user is logged out just call\\n   * updateUser() without an argument.\\n   */\\n  updateUser(user?: User) {\\n    if (user) {\\n      this.OS.put(this.OS.S.USER, user);\\n      localStorage.setItem(USER_KEY, JSON.stringify(user));\\n    } else {\\n      this.OS.put(this.OS.S.USER, null);\\n      localStorage.setItem(USER_KEY, null);\\n    }\\n  }\\n\\n  setAuthenticationError(e: boolean) {\\n    this.OS.put(this.OS.S.AUTHENTICATION_ERROR, e);\\n  }\\n\\n  /**\\n   * Toggle the sidenav\\n   */\\n  toggleSidenav() {\\n    this.OS.put(this.OS.S.SIDENAV, !this.OS.snapshot(this.OS.S.SIDENAV));\\n  }\\n}\\n```\\n\\nThe interface `ISTART` is used to name the reactive state properties and it gives us autocomplete for these values on the store:\\n\\n```\\ninterface ISTART extends KeyObsValueReset {\\n    SIDENAV: ObsValueReset;\\n    USER: ObsValueReset;\\n    AUTHENTICATION_ERROR: ObsValueReset;\\n}\\n```\\n\\nThe `START` object provides the initial set of values for the reactive state:\\n```\\nSTART: OStoreStart = {\\n    SIDENAV: { value: false, reset: false },\\n    USER: { value: null, reset: null },\\n    AUTHENTICATION_ERROR: { value: false, reset: false }\\n};\\n```\\n\\nThe Object Store (`OStore`) is created like this:\\n```\\npublic OS: OStore<ISTART> = new OStore(this.START);\\n```\\n\\nFor convenience we will provide typed Observable references within the app-state.service:\\n```\\n//===================================\\n//State parameters that we wish to observe\\n//===================================\\npublic sideNavOpen$: Observable<boolean> = this.OS.S.SIDENAV.obs;\\npublic user$: Observable<User> = this.OS.S.USER.obs;\\npublic isLoggedIn$: Observable<boolean> = this.user$.pipe(map((u) => !!u));\\npublic authenticationError$: Observable<boolean> = this.OS.S.AUTHENTICATION_ERROR.obs;\\n```\\n\\nIn the constructor we also load the user from local storage:\\n```\\nconst user = JSON.parse(localStorage.getItem(USER_KEY)) || null;\\nthis.OS.put(this.OS.S.USER, user);\\n```\\n\\nIf the user does not log out this will simulate the user remaining authenticated.\\nThe `updateUser` method is called by the login component when the user authenticates:\\n```\\n/**\\n * If the user is logged out just call\\n * updateUser() without an argument.\\n */\\nupdateUser(user?: User) {\\nif (user) {\\n    this.OS.put(this.OS.S.USER, user);\\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\\n} else {\\n    this.OS.put(this.OS.S.USER, null);\\n    localStorage.setItem(USER_KEY, null);\\n    }\\n}\\n```\\nThe setAuthenticationError allows us to indicate when the login does not succeed:\\n```\\nsetAuthenticationError(e: boolean) {\\n   this.OS.put(this.OS.S.AUTHENTICATION_ERROR, e);\\n}\\n```\\n\\nThe toggleSidenav method is a utility for setting the sidenav state:\\n```\\n/**\\n * Toggle the sidenav\\n */\\ntoggleSidenav() {\\n    this.OS.put(this.OS.S.SIDENAV, \\n    !this.OS.snapshot(this.OS.S.SIDENAV));\\n}\\n```\\n\\n## Authentication Service\\n\\nThe `auth.service.ts` authenticates the user:\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AppStateService } from \'./app-state.service\';\\nimport { Credentials } from \'../model\';\\n\\nexport type Creds = { password: string; username: string };\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class AuthService {\\n  constructor(private s: AppStateService, private r: Router) {}\\n\\n  login({ username, password }: Credentials) {\\n    if (username !== \'test\') {\\n      this.s.setAuthenticationError(true);\\n    } else {\\n      this.s.setAuthenticationError(false);\\n      this.s.updateUser({ name: username });\\n      this.r.navigate([\'/\']);\\n    }\\n  }\\n\\n  logout() {\\n    this.s.updateUser();\\n    this.r.navigate([\'/login\']);\\n  }\\n}\\n```\\n\\nThis service uses the application state service to update the user on login:\\n\\n```\\nthis.state.updateUser({name:username});\\n```\\n\\nAnd clear the user on logout:\\n```\\nthis.state.updateUser();\\n```\\n\\n## Authentication Guard Service\\n\\nThe `auth-guard.service.ts` guards the application from being accessed when the user is not authenticated.\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { CanActivate, Router } from \'@angular/router\';\\nimport { Observable, of } from \'rxjs\';\\nimport { switchMap } from \'rxjs/operators\';\\nimport { AppStateService } from \'./app-state.service\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class AuthGuard implements CanActivate {\\n  constructor(private s: AppStateService, private router: Router) {}\\n\\n  canActivate(): Observable<boolean> {\\n    return this.s.isLoggedIn$.pipe(\\n      switchMap((isLoggedIn) => {\\n        if (!isLoggedIn) {\\n          this.router.navigate([\'/login\']);\\n        }\\n        return of(isLoggedIn);\\n      })\\n    );\\n  }\\n}\\n```\\n\\nIf the user is not authenticated then the `router` navigates to `/login`:\\n\\n```\\nreturn this.appState.isLoggedIn$.pipe(\\n   switchMap((isLoggedIn) => {\\n      if (!isLoggedIn) {\\n         this.router.navigate([\'/login\']);\\n}\\n```\\n\\n## Book Service\\n\\nThe `book.service.ts` contains the Entity Stores for book search results and the book collection.\\n\\nFor an introduction to Entity Stores see [Introduction to the Firefly Semantics Slice Reactive Entity Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-entity-store).\\n\\n\\nThe service also has the methods for performing API queries:\\n\\n```\\nimport { HttpClient } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport {\\n  map,\\n  tap,\\n  filter,\\n  debounceTime,\\n  distinctUntilChanged,\\n} from \'rxjs/operators\';\\nimport { Book } from \'../model\';\\nimport { EStore } from \'@fireflysemantics/slice\';\\n\\n@Injectable()\\nexport class BookService {\\n  private API_PATH = \'https://www.googleapis.com/books/v1/volumes\';\\n\\n  public bookStore: EStore<Book> = new EStore();\\n  public bookCollection: EStore<Book> = new EStore();\\n  \\n  public books$: Observable<Book[]> = this.bookStore.observe();\\n  public collection$: Observable<Book[]> = this.bookCollection.observe();\\n\\n  constructor(private http: HttpClient) {\\n    this.bookStore\\n      .observeQuery()\\n      .pipe(\\n        filter(Boolean),\\n        debounceTime(200),\\n        distinctUntilChanged(),\\n        tap(async (query: string) => {\\n          const bo: Observable<Book[]> = this.searchAPI(query);\\n          const books: Book[] = await bo.toPromise();\\n          this.bookStore.reset();\\n          this.bookStore.postA(books);\\n        })\\n      )\\n      .subscribe();\\n  }\\n\\n  onSearch(query: string) {\\n    this.bookStore.query = query;\\n  }\\n\\n  searchAPI(query: string): Observable<Book[]> {\\n    return this.http\\n      .get<{ items: Book[] }>(`${this.API_PATH}?q=${query}`)\\n      .pipe(map((books) => books.items || []));\\n  }\\n\\n  getById(volumeId: string): Observable<Book> {\\n    return this.http.get<Book>(`${this.API_PATH}/${volumeId}`);\\n  }\\n\\n  /**\\n   * Toggle the book collection with the `book` inttance.\\n   * @param book The book to remove or add.\\n   */\\n  toggleCollection(book: Book) {\\n    this.bookCollection.toggle(book);\\n  }\\n}\\n```\\n\\nThe book entity store is created like this:\\n\\n```\\npublic bookStore: EStore<Book> = new EStore();\\n```\\n\\nAnd the entity store for the collection like this:\\n\\n```\\npublic bookCollection: EStore<Book> = new EStore();\\n```\\n\\nWe observe the books in the book entity store like this:\\n\\n```\\npublic books$: Observable<Book[]> = this.bookStore.observe();\\n```\\n\\nThe `books$` observable is used by the search component to render books found by the Google Books API.\\n\\nThe `collection$` is used to observe the book collection:\\n\\n```\\npublic collection$: Observable<Book[]> = this.bookCollection.observe();\\n```\\n\\nThis observable will be used by the collection component to render the books in our collection.\\n\\n## Listening For and Fetching Book Query Changes\\n\\nWhen the user types in a search query we will store the query string on the `bookStore.query` property such that we can observe this property and react to changes in its state:\\n\\n```\\nonSearch(query: string) {\\n    this.bookStore.query = query;\\n}\\n```\\n\\nWe implement the observation of this property in the constructor of the `BookService`:\\n\\n```\\nconstructor(private http: HttpClient) {\\n    this.bookStore.observeQuery().pipe(filter(Boolean),\\n      debounceTime(200),\\n      distinctUntilChanged(),\\n      tap(async (query: string) => {\\n        const bo: Observable<Book[]> = this.searchAPI(query);\\n        const books: Book[] = await bo.toPromise();\\n        this.bookStore.reset();\\n        this.bookStore.postA(books);\\n      })\\n    )\\n    .subscribe();\\n}\\n```\\n\\nBy calling `this.bookStore.observeQuery()` we create an observable that fires whenever the user creates `keyup` events in the search field.\\n\\nWe `debounce` these events so that we react to them at most every `200` milliseconds.\\n\\nWe then search the API for books that match the query, reset the store, and post the new search result to the store.\\n\\nPosting the new results to the store will cause the `books$` observable to emit the new search results and this will then be rendered by the search component.\\n\\nThe other methods in the service are for searching the Google Book API and toggling our book collection with Book instances:\\n\\n```\\ntoggleCollection(book:Book) {\\n    this.bookCollection.toggle(book);\\n}\\n```\\n\\n## Book Resolver Service\\n\\nThe `book-resolver.service.ts` makes the selected book available to the `ViewBookComponent` route. \\nWe wire it up like this:\\n\\n```\\n{\\n    path: \':id\',\\n    component: ViewBookComponent,\\n    resolve: { book: BookResolverService }\\n}\\n```\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { Resolve, ActivatedRouteSnapshot, Router } from \'@angular/router\';\\nimport { Book } from \'../model\';\\nimport { BookService } from \'./book.service\';\\n\\n@Injectable()\\nexport class BookResolverService implements Resolve<Book> {\\n  constructor(private router: Router, private bookService: BookService) {}\\n  async resolve(route: ActivatedRouteSnapshot) {\\n    const id = route.paramMap.get(\'id\');\\n    let book = this.bookService.bookStore.findOneByID(id);\\n\\n    if (!book) {\\n      try {\\n        book = await this.bookService.getById(id).toPromise();\\n        return book;\\n      } catch (err) {\\n        this.router.navigate([\'/404\']);\\n        return null;\\n      }\\n    }\\n    return book;\\n  }\\n}\\n```\\n\\nThe resolver first tries to lookup the book based on the provided\xa0:id parameter:\\n\\n```\\nconst id = route.paramMap.get(\'id\');\\nlet book = this.bookService.bookStore.findOneByID(id);\\n```\\n\\nIf it can\'t find the book it looks for it in the API:\\n```\\nbook = await this.bookService.getById(id).toPromise();\\nreturn book;\\n```\\n\\nIf it still can\'t find it it will navigate to the `NotFound` component.\\n\\n# Pipes\\n\\n## Ellipsis Pipe\\n\\nThe `src/app/pipes/ellipsis.pipe.ts` abbreviates the title of the book if it is longer than 250 characters..\\n\\n## Commas Pipe\\n\\nThe `src/app/pipes/commas.pipe.ts` creates a string with correct grammar from the array of authors.\\n\\n# Components\\n\\n## Authors Presentation Component\\n\\nThe `src/app/components/book/authors.component.ts` renders the authors associated with a book.\\n\\n## Book Detail Presentation Component\\n\\nThe `src/app/components/book/book-detail.component.ts` renders the detailed display of a Book instance.\\n\\n## Collection Page Component\\n\\nThe `src/app/components/book/collection.component.ts` renders the book collection.\\n\\nThe collection rendered by the component is retrieved from the `BookService` like this:\\n```\\nthis.books$ = this.bookService.\\n              bookCollection.observe().\\n              pipe(untilDestroyed(this));\\n```\\n\\n## Preview List Presentation Component\\n\\nThe `src/app/components/book/preview-list.component.ts` is used to preview books contained in the user collection and also to display books in the search result listing.\\n\\n## Preview Presentation Component\\n\\nThe `src/app/components/book/preview.component.ts` component renders a preview of a `Book` instance.\\n\\n## Search Smart Component\\n\\nThe `src/app/components/book/search.component.ts` binds the query to the `bookStore.query` parameter that we are observing in the `BookService` via this method.\\n```\\nsearch(query:string) {\\n    this.bookService.onSearch(query);\\n}\\n```\\n\\nThe search method is triggered when the user types in the search field.\\nThis is all that is needed to trigger the search. The search will update the `books$` observable and then the search results are rendered by this part of the search component template:\\n```\\n<bc-book-preview-list\\n[books]=\\"bookService.books$ | async\\">\\n</bc-book-preview-list>\\nAlso note the template for the search field:\\n<mat-form-field>\\n<input matInput\\nplaceholder=\\"Search books\\"\\n[value]=\\"bookService.bookStore.query\\"\\n(keyup)=\\"search($event.target.value)\\" autocomplete=off>\\n</mat-form-field>\\n```\\n\\nWe are initializing the value of the field using the query string stored on the `bookStore.query` field.\\nThis way if we navigate away from the search component and come back it will remember our last query.\\n\\n## View Book Smart Component\\n\\nThe `src/app/components/book/view-book.component.ts` retrieves the book from the route:\\n```\\nthis.book = this.route.snapshot.data[\'book\'];\\n```\\n\\nIt then clears the bookStore active books:\\n```\\nthis.bookService.bookStore.clearActive();\\nthis.bookService.bookStore.addActive(this.book);\\nthis.isSelectedBookInCollection$ = this.bookCollection$.pipe(map(() => this.bookCollection.contains(this.book)));\\n```\\n\\nThen we add the book to the `bookStore.active` map of active books.\\n\\nAnd finally we initialize the `isSelectedBookInCollection$` observable so that we can notify the UI as to whether the currently active book is in the collection or not.\\n\\n## Login Component\\n\\nThe `src/app/components/core/login.component.ts` logs the user in via submit:\\n```\\nsubmit() {\\nif (this.form.valid) {\\n        this.authService.login(this.form.value);\\n    }\\n}\\n```\\n\\nIf there is an error the `authService` will notify the application of it by calling the `AppStateService.setAuthenticationError` method causing `authenticationError$: Observable<boolean>` to broadcast true:\\n```\\nif (username !== \'test\') {\\n    this.state.setAuthenticationError(true);\\n}\\n```\\n\\nThis in turn causes the UI to display the error.\\n\\n## Nav Item Presentation Component\\n\\nThe component `src/app/core/nav-item.component.ts` renders navigation items.\\n\\n## Not Found Presentation Component\\n\\nThe `src/app/components/core/not-found.component.ts` is routed to when the user enters a path that is not valid, but more specifically it is used if the `/books/:id` path tries to access an\xa0:id that does not exist. The resolver will route to `/404`.\\n\\n## Side Nav Presentation Component\\n\\nThe component `src/app/components/core/side-nav.component.ts` renders the side navigation menu.\\n\\n## Toolbar Component\\n\\nThe component `src/app/components/core/toolbar.component.ts` renders the side toolbar.\\n\\n\\n# Application Shell\\n\\nThe `src/app/app.component.ts` contains our application shell.\\n\\n```\\nimport { Component } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AppStateService } from \'./services/app-state.service\';\\nimport { AuthService } from \'./services/auth.service\';\\n\\n@Component({\\n  selector: \'my-app\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.css\'],\\n})\\nexport class AppComponent {\\n  constructor(\\n    private router: Router,\\n    public s: AppStateService,\\n    public authService: AuthService\\n  ) {}\\n\\n  signIn() {\\n    this.s.toggleSidenav();\\n    this.router.navigate([\'login\']);\\n  }\\n  logout() {\\n    this.s.toggleSidenav();\\n    this.authService.logout();\\n    this.router.navigate([\'login\']);\\n  }\\n}\\n```\\n\\nThe file `app.component.html` contains the application shell template:\\n\\n```\\n<mat-sidenav-container fullscreen>\\n  <bc-sidenav [open]=\\"s.sideNavOpen$ | async\\">\\n    <bc-nav-item (navigate)=\\"signIn()\\" *ngIf=\\"!(s.isLoggedIn$ | async)\\">\\n      Sign In\\n    </bc-nav-item>\\n\\n    <bc-nav-item\\n      (navigate)=\\"s.toggleSidenav()\\"\\n      *ngIf=\\"s.isLoggedIn$ | async\\"\\n      routerLink=\\"/books/collection\\"\\n      icon=\\"book\\"\\n      hint=\\"View your book collection\\"\\n    >\\n      My Collection\\n    </bc-nav-item>\\n\\n    <bc-nav-item\\n      (navigate)=\\"s.toggleSidenav()\\"\\n      *ngIf=\\"s.isLoggedIn$ | async\\"\\n      routerLink=\\"/books\\"\\n      icon=\\"search\\"\\n      hint=\\"Find your next book!\\"\\n    >\\n      Browse Books\\n    </bc-nav-item>\\n\\n    <bc-nav-item (navigate)=\\"logout()\\" *ngIf=\\"s.isLoggedIn$ | async\\">\\n      Sign Out\\n    </bc-nav-item>\\n  </bc-sidenav>\\n  <bc-toolbar (openMenu)=\\"s.toggleSidenav()\\"> Book Collection </bc-toolbar>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\\n```\\n\\nWhen the user not signed in then the navigation item is shown via this `*ngIf` directive:\\n```\\n<bc-nav-item (navigate)=\\"signIn()\\" *ngIf=\\"!(state.isLoggedIn$ | async)\\">\\n   Sign In\\n</bc-nav-item>\\n```\\n\\nAlso note that the side navigation is gets the open and close state from the `sideNavOpen$` observable:\\n```\\n<bc-sidenav [open]=\\"state.sideNavOpen$ | async\\">\\n```\\n\\n# Modules\\n\\nWe will create a `core.module.ts` containing the core components used to boot the application. The `book.module.ts` is lazy loaded once the user authenticates and accesses the `/books` path.\\n\\nHave a look at the Stackblitz demo to see the design of the various components.\\n\\n## Material Module\\n\\nWe will be getting all the Angular Material components from the module:\\n\\n`@fireflysemantics/material-base-module`\\n\\nThe `MaterialBaseModule` needs to be imported into all the application modules, except for the `app-routing.module.ts`, since all the other modules use the various Angular Material components.\\n\\n## Book Module\\n\\nThe `src/app/modules/book.module.ts` is a lazy loaded module containing all the components used to search for and create a book collection.\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { MaterialBaseModule } from \'@fireflysemantics/material-base-module\';\\nimport { PipesModule } from \'../pipes\';\\n\\nimport { BookAuthorsComponent } from \'../components/book/authors.component\';\\nimport { BookDetailComponent } from \'../components/book/book-detail.component\';\\nimport { CollectionComponent } from \'../components/book/collection.component\';\\nimport { BookPreviewListComponent } from \'../components/book/preview-list.component\';\\nimport { BookPreviewComponent } from \'../components/book/preview.component\';\\nimport { BookSearchComponent } from \'../components/book/search.component\';\\nimport { ViewBookComponent } from \'../components/book/view-book.component\';\\n\\nimport { BookService } from \'../services/book.service\';\\nimport { BookResolverService } from \'../services/book-resolver.service\';\\n\\nexport const routes: Routes = [\\n  { path: \'\', component: BookSearchComponent, pathMatch: \'full\' },\\n  { path: \'collection\', component: CollectionComponent },\\n  {\\n    path: \':id\',\\n    component: ViewBookComponent,\\n    resolve: { book: BookResolverService },\\n  },\\n];\\n\\n@NgModule({\\n  imports: [\\n    PipesModule,\\n    HttpClientModule,\\n    MaterialBaseModule,\\n    RouterModule.forChild(routes),\\n    CommonModule,\\n  ],\\n  declarations: [\\n    BookSearchComponent,\\n    BookPreviewListComponent,\\n    BookPreviewComponent,\\n    BookAuthorsComponent,\\n    BookDetailComponent,\\n    ViewBookComponent,\\n    CollectionComponent,\\n  ],\\n  providers: [BookService, BookResolverService],\\n})\\nexport class BookModule {}\\n```\\n\\n\\nThe module also contains the `Routes` for the the various components that the module bundles.\\n\\n\\n## Pipes Module\\n\\nThe module `src/app/modules/pipes.module.ts` contains the pipes:\\n\\n- `commas.pipe.ts`: Used to format the authors component\\n- `ellipsis.pipe.ts`: Used to abbreviate content\\n\\nThis module is imported into the `books.module.ts`.\\n\\n## Core Module\\n\\nThe core module contains all the custom components used to instantiate the application shell:\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule } from \'@angular/router\';\\nimport { MaterialBaseModule } from \'@fireflysemantics/material-base-module\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { LoginComponent } from \'../components/core/login.component\';\\nimport { NavItemComponent } from \'../components/core/nav-item.component\';\\nimport { NotFoundComponent } from \'../components/core/not-found.component\';\\nimport { SideNavComponent } from \'../components/core/sidenav.component\';\\nimport { ToolbarComponent } from \'../components/core/toolbar.component\';\\n\\nconst COMPONENTS = [\\n  SideNavComponent,\\n  NavItemComponent,\\n  ToolbarComponent,\\n  LoginComponent,\\n  NotFoundComponent,\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    RouterModule,\\n    MaterialBaseModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n  ],\\n  declarations: COMPONENTS,\\n  exports: COMPONENTS,\\n})\\nexport class CoreModule {}\\n```\\n\\n## App Routing Module\\n\\nThe `app-routing.module.ts` contains our main application routes. The books route handles loading lazy loading of the `book.module.ts`.\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { Routes, RouterModule } from \'@angular/router\';\\nimport { AuthGuard } from \'./services/auth-guard.service\';\\nimport { LoginComponent } from \'./components/core/login.component\';\\n\\nconst routes: Routes = [\\n  { path: \'\', redirectTo: \'/books\', pathMatch: \'full\' },\\n  {\\n    path: \'books\',\\n    loadChildren: () =>\\n      import(\'./modules/book.module\').then((m) => m.BookModule),\\n    canActivate: [AuthGuard],\\n  },\\n  { path: \'login\', component: LoginComponent },\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes, {})],\\n  exports: [RouterModule],\\n})\\nexport class AppRoutingModule {}\\n```\\n\\n## App Module\\n\\nThe `app.module` imports the `core.module`,  the `app-routing.module`, the Firefly Semantics Material Base Module and the Angular Forms Modules.\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { AppComponent } from \'./app.component\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { CoreModule } from \'./modules/core.module\';\\nimport { AppRoutingModule } from \'./app-routing.module\';\\nimport { MaterialBaseModule } from \'@fireflysemantics/material-base-module\';\\n\\n@NgModule({\\n  imports: [\\n    BrowserModule,\\n    BrowserAnimationsModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    CoreModule,\\n    AppRoutingModule,\\n    MaterialBaseModule,\\n  ],\\n  declarations: [AppComponent],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n```\\n\\n# Application Component\\n\\nNow we just need to ready our application component by dependency injecting the services it needs and declaring a the `signIn` and `logout` methods:\\n\\n```\\nimport { Component } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AppStateService } from \'./services/app-state.service\';\\nimport { AuthService } from \'./services/auth.service\';\\n\\n@Component({\\n  selector: \'my-app\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.css\'],\\n})\\nexport class AppComponent {\\n  constructor(\\n    private router: Router,\\n    public s: AppStateService,\\n    public authService: AuthService\\n  ) {}\\n\\n  signIn() {\\n    this.s.toggleSidenav();\\n    this.router.navigate([\'login\']);\\n  }\\n  logout() {\\n    this.s.toggleSidenav();\\n    this.authService.logout();\\n    this.router.navigate([\'login\']);\\n  }\\n}\\n\\n```\\n\\nThe shell template looks like this:\\n\\n\\n```\\n<mat-sidenav-container fullscreen>\\n  <bc-sidenav [open]=\\"s.sideNavOpen$ | async\\">\\n    <bc-nav-item (navigate)=\\"signIn()\\" *ngIf=\\"!(s.isLoggedIn$ | async)\\">\\n      Sign In\\n    </bc-nav-item>\\n\\n    <bc-nav-item\\n      (navigate)=\\"s.toggleSidenav()\\"\\n      *ngIf=\\"s.isLoggedIn$ | async\\"\\n      routerLink=\\"/books/collection\\"\\n      icon=\\"book\\"\\n      hint=\\"View your book collection\\"\\n    >\\n      My Collection\\n    </bc-nav-item>\\n\\n    <bc-nav-item\\n      (navigate)=\\"s.toggleSidenav()\\"\\n      *ngIf=\\"s.isLoggedIn$ | async\\"\\n      routerLink=\\"/books\\"\\n      icon=\\"search\\"\\n      hint=\\"Find your next book!\\"\\n    >\\n      Browse Books\\n    </bc-nav-item>\\n\\n    <bc-nav-item (navigate)=\\"logout()\\" *ngIf=\\"s.isLoggedIn$ | async\\">\\n      Sign Out\\n    </bc-nav-item>\\n  </bc-sidenav>\\n  <bc-toolbar (openMenu)=\\"s.toggleSidenav()\\"> Book Collection </bc-toolbar>\\n  <router-outlet></router-outlet>\\n</mat-sidenav-container>\\n\\n```\\n\\n\\nAnd that\u2019s it. Our application is ready. We hope you enjoyed this article and if you like Firefly Semantics Slice please star our [Github Repository](https://github.com/fireflysemantics/slice).\\n\\n# Material Icons\\n\\nWithin `index.html` we need to add our material icons:\\n\\n```\\n<link\\n  href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\"\\n  rel=\\"stylesheet\\"\\n/>\\n\\n<my-app>loading</my-app>\\n\\n```\\n\\n# Summary\\n\\nIn this guide we reviewed the implementation of the NgRx demo application using the [Firefly Semantics Slice](https://www.npmjs.com/package/@fireflysemantics/slice) Lightweight Reactive State Manager for web and mobile applications.\\n\\nIf you have any comments or suggestion for the guide please add them to the [Slice Github Repository](https://github.com/fireflysemantics/slice/issues) as an issue.\\n\\nWe would also love it if you could star the repository.","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>We will be creating the NgRx demo application from scratch using the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice Lightweight Reactive Application State Manager</a>.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/logos/png/slicelogo.png\'\\n    title=\'@fireflysemantics/slice\' \\n  description=\'Lightweight Reactive Web Application State Management\'\\n    domain=\'www.npmjs.com\' \\n  url=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>\\n</fs-link-preview></p>\\n<p>The NgRx Demo allows us to search the Google Books API and place books in our own collection.</p>\\n<p>We will be doing this incrementally in phases describing the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Slice</a> state management implementation details as we go along.</p>\\n<h1 id=\'final-stackblitz-demo\'>Final Stackblitz Demo</h1>\\n<p>To play around with this demo log in with the username <strong>test</strong> and use any password.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice NgRx Demo\' \\n    description=\'Firefly Semantics Slice NgRx Demo Application\'\\n    domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ivy-ydvn8y\'>\\n</fs-link-preview></p>\\n<h1 id=\'stackblitz\'>Stackblitz</h1>\\n<p>Go to <a href=\'https://stackblitz.com/\'>Stackblitz</a> and start a brand new Angular project.</p>\\n<p>Delete the <code>hello.component.ts</code> and remove it from <code>app.module.ts</code> correspondingly.</p>\\n<p>Remove the <code>&lt;hello name=\u201d{{ name }}\u201d&gt;&lt;/hello&gt;</code> from <code>app.component.html</code>.</p>\\n<h1 id=\'dependencies\'>Dependencies</h1>\\n<p>The dependencies for this project are as follows:</p>\\n<ul>\\n<li><code>@angular/material</code></li>\\n<li><code>@fireflysemantics/slice</code></li>\\n<li><code>@fireflysemantics/material-base-module</code></li>\\n<li><code>@ngneat/until-destroy</code></li>\\n<li><code>@types/nanoid</code></li>\\n<li><code>nanoid</code></li>\\n</ul>\\n<p>These need to be installed using NPM via the command line in a desktop angular project.</p>\\n<p>Stackblitz will automatically pull in peer dependencies, so when <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Slice</a> is declared as a dependency it automatically pulls in <code>@types/nanoid</code> and <code>naonoid</code>.</p>\\n<p>The dependency <code>@ngneat/until-destroy</code> is used to automatically unsubscribe when a component is destroyed.</p>\\n<h1 id=\'styling-and-icons\'>Styling and Icons</h1>\\n<p>Update <code>src/styles.css</code> with:</p>\\n<pre><code>@import &quot;~@angular/material/prebuilt-themes/indigo-pink.css&quot;;\\n</code></pre>\\n<p>Add the material icons cdn link to <code>src/index.html</code>:</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n</code></pre>\\n<h1 id=\'model\'>Model</h1>\\n<p>The folder <code>src/app/model</code> will hold our model types within <code>index.ts</code>:</p>\\n<pre><code>export type Book = {\\n  id: string;\\n  volumeInfo: {\\n    title: string;\\n    subtitle: string;\\n    authors: string[];\\n    publisher: string;\\n    publishDate: string;\\n    description: string;\\n    averageRating: number;\\n    ratingsCount: number;\\n    imageLinks: {\\n      thumbnail: string;\\n      smallThumbnail: string;\\n    };\\n  };\\n};\\n\\nexport type Credentials = {\\n  username: string;\\n  password: string;\\n};\\n\\nexport type User = {\\n  name: string;\\n};\\n</code></pre>\\n<p>The <code>Book</code> model represents book instances we have retrieved via the Google Books API.</p>\\n<p>The <code>Credentials</code> are login credentials.</p>\\n<p>The <code>User</code> type represents an authenticated user.</p>\\n<h1 id=\'services\'>Services</h1>\\n<p>The folder <code>src/app/services</code> will contain all our services.</p>\\n<h2 id=\'application-state-service\'>Application State Service</h2>\\n<p>The application state service allows us to observe the state of:</p>\\n<ul>\\n<li>Side navigation (Open or Closed)</li>\\n<li>User ( Null if not logged in)</li>\\n<li>Authentication Error</li>\\n</ul>\\n<p>These have been modeled in a <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store/\'>Firefly Semantics Slice Object Store. Click on this link for an introduction</a>.</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport {\\n  KeyObsValueReset,\\n  ObsValueReset,\\n  OStore,\\n  OStoreStart,\\n} from &#39;@fireflysemantics/slice&#39;;\\n\\nimport { Observable } from &#39;rxjs&#39;;\\nimport { map } from &#39;rxjs/operators&#39;;\\nimport { User } from &#39;../model&#39;;\\n\\n//===================================\\n//Create the User Key for local storage\\n//===================================\\nexport const USER_KEY = &#39;USER_KEY&#39;;\\n\\ninterface ISTART extends KeyObsValueReset {\\n  SIDENAV: ObsValueReset;\\n  USER: ObsValueReset;\\n  AUTHENTICATION_ERROR: ObsValueReset;\\n}\\n\\n@Injectable({ providedIn: &#39;root&#39; })\\nexport class AppStateService {\\n  START: OStoreStart = {\\n    SIDENAV: { value: false, reset: false },\\n    USER: { value: null, reset: null },\\n    AUTHENTICATION_ERROR: { value: false, reset: false },\\n  };\\n  public OS: OStore&lt;ISTART&gt; = new OStore(this.START);\\n\\n  //===================================\\n  //State parameters that we wish to observe\\n  //===================================\\n  public sideNavOpen$: Observable&lt;boolean&gt; = this.OS.S.SIDENAV.obs;\\n  public user$: Observable&lt;User&gt; = this.OS.S.USER.obs;\\n  public isLoggedIn$: Observable&lt;boolean&gt; = this.user$.pipe(map((u) =&gt; !!u));\\n  public authenticationError$: Observable&lt;boolean&gt; =\\n    this.OS.S.AUTHENTICATION_ERROR.obs;\\n\\n  constructor() {\\n    const user = JSON.parse(localStorage.getItem(USER_KEY)) || null;\\n    this.OS.put(this.OS.S.USER, user);\\n  }\\n\\n  /**\\n   * If the user is logged out just call\\n   * updateUser() without an argument.\\n   */\\n  updateUser(user?: User) {\\n    if (user) {\\n      this.OS.put(this.OS.S.USER, user);\\n      localStorage.setItem(USER_KEY, JSON.stringify(user));\\n    } else {\\n      this.OS.put(this.OS.S.USER, null);\\n      localStorage.setItem(USER_KEY, null);\\n    }\\n  }\\n\\n  setAuthenticationError(e: boolean) {\\n    this.OS.put(this.OS.S.AUTHENTICATION_ERROR, e);\\n  }\\n\\n  /**\\n   * Toggle the sidenav\\n   */\\n  toggleSidenav() {\\n    this.OS.put(this.OS.S.SIDENAV, !this.OS.snapshot(this.OS.S.SIDENAV));\\n  }\\n}\\n</code></pre>\\n<p>The interface <code>ISTART</code> is used to name the reactive state properties and it gives us autocomplete for these values on the store:</p>\\n<pre><code>interface ISTART extends KeyObsValueReset {\\n    SIDENAV: ObsValueReset;\\n    USER: ObsValueReset;\\n    AUTHENTICATION_ERROR: ObsValueReset;\\n}\\n</code></pre>\\n<p>The <code>START</code> object provides the initial set of values for the reactive state:</p>\\n<pre><code>START: OStoreStart = {\\n    SIDENAV: { value: false, reset: false },\\n    USER: { value: null, reset: null },\\n    AUTHENTICATION_ERROR: { value: false, reset: false }\\n};\\n</code></pre>\\n<p>The Object Store (<code>OStore</code>) is created like this:</p>\\n<pre><code>public OS: OStore&lt;ISTART&gt; = new OStore(this.START);\\n</code></pre>\\n<p>For convenience we will provide typed Observable references within the app-state.service:</p>\\n<pre><code>//===================================\\n//State parameters that we wish to observe\\n//===================================\\npublic sideNavOpen$: Observable&lt;boolean&gt; = this.OS.S.SIDENAV.obs;\\npublic user$: Observable&lt;User&gt; = this.OS.S.USER.obs;\\npublic isLoggedIn$: Observable&lt;boolean&gt; = this.user$.pipe(map((u) =&gt; !!u));\\npublic authenticationError$: Observable&lt;boolean&gt; = this.OS.S.AUTHENTICATION_ERROR.obs;\\n</code></pre>\\n<p>In the constructor we also load the user from local storage:</p>\\n<pre><code>const user = JSON.parse(localStorage.getItem(USER_KEY)) || null;\\nthis.OS.put(this.OS.S.USER, user);\\n</code></pre>\\n<p>If the user does not log out this will simulate the user remaining authenticated.\\nThe <code>updateUser</code> method is called by the login component when the user authenticates:</p>\\n<pre><code>/**\\n * If the user is logged out just call\\n * updateUser() without an argument.\\n */\\nupdateUser(user?: User) {\\nif (user) {\\n    this.OS.put(this.OS.S.USER, user);\\n    localStorage.setItem(USER_KEY, JSON.stringify(user));\\n} else {\\n    this.OS.put(this.OS.S.USER, null);\\n    localStorage.setItem(USER_KEY, null);\\n    }\\n}\\n</code></pre>\\n<p>The setAuthenticationError allows us to indicate when the login does not succeed:</p>\\n<pre><code>setAuthenticationError(e: boolean) {\\n   this.OS.put(this.OS.S.AUTHENTICATION_ERROR, e);\\n}\\n</code></pre>\\n<p>The toggleSidenav method is a utility for setting the sidenav state:</p>\\n<pre><code>/**\\n * Toggle the sidenav\\n */\\ntoggleSidenav() {\\n    this.OS.put(this.OS.S.SIDENAV, \\n    !this.OS.snapshot(this.OS.S.SIDENAV));\\n}\\n</code></pre>\\n<h2 id=\'authentication-service\'>Authentication Service</h2>\\n<p>The <code>auth.service.ts</code> authenticates the user:</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { Router } from &#39;@angular/router&#39;;\\nimport { AppStateService } from &#39;./app-state.service&#39;;\\nimport { Credentials } from &#39;../model&#39;;\\n\\nexport type Creds = { password: string; username: string };\\n\\n@Injectable({ providedIn: &#39;root&#39; })\\nexport class AuthService {\\n  constructor(private s: AppStateService, private r: Router) {}\\n\\n  login({ username, password }: Credentials) {\\n    if (username !== &#39;test&#39;) {\\n      this.s.setAuthenticationError(true);\\n    } else {\\n      this.s.setAuthenticationError(false);\\n      this.s.updateUser({ name: username });\\n      this.r.navigate([&#39;/&#39;]);\\n    }\\n  }\\n\\n  logout() {\\n    this.s.updateUser();\\n    this.r.navigate([&#39;/login&#39;]);\\n  }\\n}\\n</code></pre>\\n<p>This service uses the application state service to update the user on login:</p>\\n<pre><code>this.state.updateUser({name:username});\\n</code></pre>\\n<p>And clear the user on logout:</p>\\n<pre><code>this.state.updateUser();\\n</code></pre>\\n<h2 id=\'authentication-guard-service\'>Authentication Guard Service</h2>\\n<p>The <code>auth-guard.service.ts</code> guards the application from being accessed when the user is not authenticated.</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { CanActivate, Router } from &#39;@angular/router&#39;;\\nimport { Observable, of } from &#39;rxjs&#39;;\\nimport { switchMap } from &#39;rxjs/operators&#39;;\\nimport { AppStateService } from &#39;./app-state.service&#39;;\\n\\n@Injectable({ providedIn: &#39;root&#39; })\\nexport class AuthGuard implements CanActivate {\\n  constructor(private s: AppStateService, private router: Router) {}\\n\\n  canActivate(): Observable&lt;boolean&gt; {\\n    return this.s.isLoggedIn$.pipe(\\n      switchMap((isLoggedIn) =&gt; {\\n        if (!isLoggedIn) {\\n          this.router.navigate([&#39;/login&#39;]);\\n        }\\n        return of(isLoggedIn);\\n      })\\n    );\\n  }\\n}\\n</code></pre>\\n<p>If the user is not authenticated then the <code>router</code> navigates to <code>/login</code>:</p>\\n<pre><code>return this.appState.isLoggedIn$.pipe(\\n   switchMap((isLoggedIn) =&gt; {\\n      if (!isLoggedIn) {\\n         this.router.navigate([&#39;/login&#39;]);\\n}\\n</code></pre>\\n<h2 id=\'book-service\'>Book Service</h2>\\n<p>The <code>book.service.ts</code> contains the Entity Stores for book search results and the book collection.</p>\\n<p>For an introduction to Entity Stores see <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-entity-store\'>Introduction to the Firefly Semantics Slice Reactive Entity Store</a>.</p>\\n<p>The service also has the methods for performing API queries:</p>\\n<pre><code>import { HttpClient } from &#39;@angular/common/http&#39;;\\nimport { Injectable } from &#39;@angular/core&#39;;\\nimport { Observable } from &#39;rxjs&#39;;\\nimport {\\n  map,\\n  tap,\\n  filter,\\n  debounceTime,\\n  distinctUntilChanged,\\n} from &#39;rxjs/operators&#39;;\\nimport { Book } from &#39;../model&#39;;\\nimport { EStore } from &#39;@fireflysemantics/slice&#39;;\\n\\n@Injectable()\\nexport class BookService {\\n  private API_PATH = &#39;https://www.googleapis.com/books/v1/volumes&#39;;\\n\\n  public bookStore: EStore&lt;Book&gt; = new EStore();\\n  public bookCollection: EStore&lt;Book&gt; = new EStore();\\n  \\n  public books$: Observable&lt;Book[]&gt; = this.bookStore.observe();\\n  public collection$: Observable&lt;Book[]&gt; = this.bookCollection.observe();\\n\\n  constructor(private http: HttpClient) {\\n    this.bookStore\\n      .observeQuery()\\n      .pipe(\\n        filter(Boolean),\\n        debounceTime(200),\\n        distinctUntilChanged(),\\n        tap(async (query: string) =&gt; {\\n          const bo: Observable&lt;Book[]&gt; = this.searchAPI(query);\\n          const books: Book[] = await bo.toPromise();\\n          this.bookStore.reset();\\n          this.bookStore.postA(books);\\n        })\\n      )\\n      .subscribe();\\n  }\\n\\n  onSearch(query: string) {\\n    this.bookStore.query = query;\\n  }\\n\\n  searchAPI(query: string): Observable&lt;Book[]&gt; {\\n    return this.http\\n      .get&lt;{ items: Book[] }&gt;(`${this.API_PATH}?q=${query}`)\\n      .pipe(map((books) =&gt; books.items || []));\\n  }\\n\\n  getById(volumeId: string): Observable&lt;Book&gt; {\\n    return this.http.get&lt;Book&gt;(`${this.API_PATH}/${volumeId}`);\\n  }\\n\\n  /**\\n   * Toggle the book collection with the `book` inttance.\\n   * @param book The book to remove or add.\\n   */\\n  toggleCollection(book: Book) {\\n    this.bookCollection.toggle(book);\\n  }\\n}\\n</code></pre>\\n<p>The book entity store is created like this:</p>\\n<pre><code>public bookStore: EStore&lt;Book&gt; = new EStore();\\n</code></pre>\\n<p>And the entity store for the collection like this:</p>\\n<pre><code>public bookCollection: EStore&lt;Book&gt; = new EStore();\\n</code></pre>\\n<p>We observe the books in the book entity store like this:</p>\\n<pre><code>public books$: Observable&lt;Book[]&gt; = this.bookStore.observe();\\n</code></pre>\\n<p>The <code>books$</code> observable is used by the search component to render books found by the Google Books API.</p>\\n<p>The <code>collection$</code> is used to observe the book collection:</p>\\n<pre><code>public collection$: Observable&lt;Book[]&gt; = this.bookCollection.observe();\\n</code></pre>\\n<p>This observable will be used by the collection component to render the books in our collection.</p>\\n<h2 id=\'listening-for-and-fetching-book-query-changes\'>Listening For and Fetching Book Query Changes</h2>\\n<p>When the user types in a search query we will store the query string on the <code>bookStore.query</code> property such that we can observe this property and react to changes in its state:</p>\\n<pre><code>onSearch(query: string) {\\n    this.bookStore.query = query;\\n}\\n</code></pre>\\n<p>We implement the observation of this property in the constructor of the <code>BookService</code>:</p>\\n<pre><code>constructor(private http: HttpClient) {\\n    this.bookStore.observeQuery().pipe(filter(Boolean),\\n      debounceTime(200),\\n      distinctUntilChanged(),\\n      tap(async (query: string) =&gt; {\\n        const bo: Observable&lt;Book[]&gt; = this.searchAPI(query);\\n        const books: Book[] = await bo.toPromise();\\n        this.bookStore.reset();\\n        this.bookStore.postA(books);\\n      })\\n    )\\n    .subscribe();\\n}\\n</code></pre>\\n<p>By calling <code>this.bookStore.observeQuery()</code> we create an observable that fires whenever the user creates <code>keyup</code> events in the search field.</p>\\n<p>We <code>debounce</code> these events so that we react to them at most every <code>200</code> milliseconds.</p>\\n<p>We then search the API for books that match the query, reset the store, and post the new search result to the store.</p>\\n<p>Posting the new results to the store will cause the <code>books$</code> observable to emit the new search results and this will then be rendered by the search component.</p>\\n<p>The other methods in the service are for searching the Google Book API and toggling our book collection with Book instances:</p>\\n<pre><code>toggleCollection(book:Book) {\\n    this.bookCollection.toggle(book);\\n}\\n</code></pre>\\n<h2 id=\'book-resolver-service\'>Book Resolver Service</h2>\\n<p>The <code>book-resolver.service.ts</code> makes the selected book available to the <code>ViewBookComponent</code> route. \\nWe wire it up like this:</p>\\n<pre><code>{\\n    path: &#39;:id&#39;,\\n    component: ViewBookComponent,\\n    resolve: { book: BookResolverService }\\n}\\n</code></pre>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { Resolve, ActivatedRouteSnapshot, Router } from &#39;@angular/router&#39;;\\nimport { Book } from &#39;../model&#39;;\\nimport { BookService } from &#39;./book.service&#39;;\\n\\n@Injectable()\\nexport class BookResolverService implements Resolve&lt;Book&gt; {\\n  constructor(private router: Router, private bookService: BookService) {}\\n  async resolve(route: ActivatedRouteSnapshot) {\\n    const id = route.paramMap.get(&#39;id&#39;);\\n    let book = this.bookService.bookStore.findOneByID(id);\\n\\n    if (!book) {\\n      try {\\n        book = await this.bookService.getById(id).toPromise();\\n        return book;\\n      } catch (err) {\\n        this.router.navigate([&#39;/404&#39;]);\\n        return null;\\n      }\\n    }\\n    return book;\\n  }\\n}\\n</code></pre>\\n<p>The resolver first tries to lookup the book based on the provided\xa0:id parameter:</p>\\n<pre><code>const id = route.paramMap.get(&#39;id&#39;);\\nlet book = this.bookService.bookStore.findOneByID(id);\\n</code></pre>\\n<p>If it can&#39;t find the book it looks for it in the API:</p>\\n<pre><code>book = await this.bookService.getById(id).toPromise();\\nreturn book;\\n</code></pre>\\n<p>If it still can&#39;t find it it will navigate to the <code>NotFound</code> component.</p>\\n<h1 id=\'pipes\'>Pipes</h1>\\n<h2 id=\'ellipsis-pipe\'>Ellipsis Pipe</h2>\\n<p>The <code>src/app/pipes/ellipsis.pipe.ts</code> abbreviates the title of the book if it is longer than 250 characters..</p>\\n<h2 id=\'commas-pipe\'>Commas Pipe</h2>\\n<p>The <code>src/app/pipes/commas.pipe.ts</code> creates a string with correct grammar from the array of authors.</p>\\n<h1 id=\'components\'>Components</h1>\\n<h2 id=\'authors-presentation-component\'>Authors Presentation Component</h2>\\n<p>The <code>src/app/components/book/authors.component.ts</code> renders the authors associated with a book.</p>\\n<h2 id=\'book-detail-presentation-component\'>Book Detail Presentation Component</h2>\\n<p>The <code>src/app/components/book/book-detail.component.ts</code> renders the detailed display of a Book instance.</p>\\n<h2 id=\'collection-page-component\'>Collection Page Component</h2>\\n<p>The <code>src/app/components/book/collection.component.ts</code> renders the book collection.</p>\\n<p>The collection rendered by the component is retrieved from the <code>BookService</code> like this:</p>\\n<pre><code>this.books$ = this.bookService.\\n              bookCollection.observe().\\n              pipe(untilDestroyed(this));\\n</code></pre>\\n<h2 id=\'preview-list-presentation-component\'>Preview List Presentation Component</h2>\\n<p>The <code>src/app/components/book/preview-list.component.ts</code> is used to preview books contained in the user collection and also to display books in the search result listing.</p>\\n<h2 id=\'preview-presentation-component\'>Preview Presentation Component</h2>\\n<p>The <code>src/app/components/book/preview.component.ts</code> component renders a preview of a <code>Book</code> instance.</p>\\n<h2 id=\'search-smart-component\'>Search Smart Component</h2>\\n<p>The <code>src/app/components/book/search.component.ts</code> binds the query to the <code>bookStore.query</code> parameter that we are observing in the <code>BookService</code> via this method.</p>\\n<pre><code>search(query:string) {\\n    this.bookService.onSearch(query);\\n}\\n</code></pre>\\n<p>The search method is triggered when the user types in the search field.\\nThis is all that is needed to trigger the search. The search will update the <code>books$</code> observable and then the search results are rendered by this part of the search component template:</p>\\n<pre><code>&lt;bc-book-preview-list\\n[books]=&quot;bookService.books$ | async&quot;&gt;\\n&lt;/bc-book-preview-list&gt;\\nAlso note the template for the search field:\\n&lt;mat-form-field&gt;\\n&lt;input matInput\\nplaceholder=&quot;Search books&quot;\\n[value]=&quot;bookService.bookStore.query&quot;\\n(keyup)=&quot;search($event.target.value)&quot; autocomplete=off&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<p>We are initializing the value of the field using the query string stored on the <code>bookStore.query</code> field.\\nThis way if we navigate away from the search component and come back it will remember our last query.</p>\\n<h2 id=\'view-book-smart-component\'>View Book Smart Component</h2>\\n<p>The <code>src/app/components/book/view-book.component.ts</code> retrieves the book from the route:</p>\\n<pre><code>this.book = this.route.snapshot.data[&#39;book&#39;];\\n</code></pre>\\n<p>It then clears the bookStore active books:</p>\\n<pre><code>this.bookService.bookStore.clearActive();\\nthis.bookService.bookStore.addActive(this.book);\\nthis.isSelectedBookInCollection$ = this.bookCollection$.pipe(map(() =&gt; this.bookCollection.contains(this.book)));\\n</code></pre>\\n<p>Then we add the book to the <code>bookStore.active</code> map of active books.</p>\\n<p>And finally we initialize the <code>isSelectedBookInCollection$</code> observable so that we can notify the UI as to whether the currently active book is in the collection or not.</p>\\n<h2 id=\'login-component\'>Login Component</h2>\\n<p>The <code>src/app/components/core/login.component.ts</code> logs the user in via submit:</p>\\n<pre><code>submit() {\\nif (this.form.valid) {\\n        this.authService.login(this.form.value);\\n    }\\n}\\n</code></pre>\\n<p>If there is an error the <code>authService</code> will notify the application of it by calling the <code>AppStateService.setAuthenticationError</code> method causing <code>authenticationError$: Observable&lt;boolean&gt;</code> to broadcast true:</p>\\n<pre><code>if (username !== &#39;test&#39;) {\\n    this.state.setAuthenticationError(true);\\n}\\n</code></pre>\\n<p>This in turn causes the UI to display the error.</p>\\n<h2 id=\'nav-item-presentation-component\'>Nav Item Presentation Component</h2>\\n<p>The component <code>src/app/core/nav-item.component.ts</code> renders navigation items.</p>\\n<h2 id=\'not-found-presentation-component\'>Not Found Presentation Component</h2>\\n<p>The <code>src/app/components/core/not-found.component.ts</code> is routed to when the user enters a path that is not valid, but more specifically it is used if the <code>/books/:id</code> path tries to access an\xa0:id that does not exist. The resolver will route to <code>/404</code>.</p>\\n<h2 id=\'side-nav-presentation-component\'>Side Nav Presentation Component</h2>\\n<p>The component <code>src/app/components/core/side-nav.component.ts</code> renders the side navigation menu.</p>\\n<h2 id=\'toolbar-component\'>Toolbar Component</h2>\\n<p>The component <code>src/app/components/core/toolbar.component.ts</code> renders the side toolbar.</p>\\n<h1 id=\'application-shell\'>Application Shell</h1>\\n<p>The <code>src/app/app.component.ts</code> contains our application shell.</p>\\n<pre><code>import { Component } from &#39;@angular/core&#39;;\\nimport { Router } from &#39;@angular/router&#39;;\\nimport { AppStateService } from &#39;./services/app-state.service&#39;;\\nimport { AuthService } from &#39;./services/auth.service&#39;;\\n\\n@Component({\\n  selector: &#39;my-app&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [&#39;./app.component.css&#39;],\\n})\\nexport class AppComponent {\\n  constructor(\\n    private router: Router,\\n    public s: AppStateService,\\n    public authService: AuthService\\n  ) {}\\n\\n  signIn() {\\n    this.s.toggleSidenav();\\n    this.router.navigate([&#39;login&#39;]);\\n  }\\n  logout() {\\n    this.s.toggleSidenav();\\n    this.authService.logout();\\n    this.router.navigate([&#39;login&#39;]);\\n  }\\n}\\n</code></pre>\\n<p>The file <code>app.component.html</code> contains the application shell template:</p>\\n<pre><code>&lt;mat-sidenav-container fullscreen&gt;\\n  &lt;bc-sidenav [open]=&quot;s.sideNavOpen$ | async&quot;&gt;\\n    &lt;bc-nav-item (navigate)=&quot;signIn()&quot; *ngIf=&quot;!(s.isLoggedIn$ | async)&quot;&gt;\\n      Sign In\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item\\n      (navigate)=&quot;s.toggleSidenav()&quot;\\n      *ngIf=&quot;s.isLoggedIn$ | async&quot;\\n      routerLink=&quot;/books/collection&quot;\\n      icon=&quot;book&quot;\\n      hint=&quot;View your book collection&quot;\\n    &gt;\\n      My Collection\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item\\n      (navigate)=&quot;s.toggleSidenav()&quot;\\n      *ngIf=&quot;s.isLoggedIn$ | async&quot;\\n      routerLink=&quot;/books&quot;\\n      icon=&quot;search&quot;\\n      hint=&quot;Find your next book!&quot;\\n    &gt;\\n      Browse Books\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item (navigate)=&quot;logout()&quot; *ngIf=&quot;s.isLoggedIn$ | async&quot;&gt;\\n      Sign Out\\n    &lt;/bc-nav-item&gt;\\n  &lt;/bc-sidenav&gt;\\n  &lt;bc-toolbar (openMenu)=&quot;s.toggleSidenav()&quot;&gt; Book Collection &lt;/bc-toolbar&gt;\\n  &lt;router-outlet&gt;&lt;/router-outlet&gt;\\n&lt;/mat-sidenav-container&gt;\\n</code></pre>\\n<p>When the user not signed in then the navigation item is shown via this <code>*ngIf</code> directive:</p>\\n<pre><code>&lt;bc-nav-item (navigate)=&quot;signIn()&quot; *ngIf=&quot;!(state.isLoggedIn$ | async)&quot;&gt;\\n   Sign In\\n&lt;/bc-nav-item&gt;\\n</code></pre>\\n<p>Also note that the side navigation is gets the open and close state from the <code>sideNavOpen$</code> observable:</p>\\n<pre><code>&lt;bc-sidenav [open]=&quot;state.sideNavOpen$ | async&quot;&gt;\\n</code></pre>\\n<h1 id=\'modules\'>Modules</h1>\\n<p>We will create a <code>core.module.ts</code> containing the core components used to boot the application. The <code>book.module.ts</code> is lazy loaded once the user authenticates and accesses the <code>/books</code> path.</p>\\n<p>Have a look at the Stackblitz demo to see the design of the various components.</p>\\n<h2 id=\'material-module\'>Material Module</h2>\\n<p>We will be getting all the Angular Material components from the module:</p>\\n<p><code>@fireflysemantics/material-base-module</code></p>\\n<p>The <code>MaterialBaseModule</code> needs to be imported into all the application modules, except for the <code>app-routing.module.ts</code>, since all the other modules use the various Angular Material components.</p>\\n<h2 id=\'book-module\'>Book Module</h2>\\n<p>The <code>src/app/modules/book.module.ts</code> is a lazy loaded module containing all the components used to search for and create a book collection.</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { CommonModule } from &#39;@angular/common&#39;;\\nimport { Routes, RouterModule } from &#39;@angular/router&#39;;\\nimport { HttpClientModule } from &#39;@angular/common/http&#39;;\\nimport { MaterialBaseModule } from &#39;@fireflysemantics/material-base-module&#39;;\\nimport { PipesModule } from &#39;../pipes&#39;;\\n\\nimport { BookAuthorsComponent } from &#39;../components/book/authors.component&#39;;\\nimport { BookDetailComponent } from &#39;../components/book/book-detail.component&#39;;\\nimport { CollectionComponent } from &#39;../components/book/collection.component&#39;;\\nimport { BookPreviewListComponent } from &#39;../components/book/preview-list.component&#39;;\\nimport { BookPreviewComponent } from &#39;../components/book/preview.component&#39;;\\nimport { BookSearchComponent } from &#39;../components/book/search.component&#39;;\\nimport { ViewBookComponent } from &#39;../components/book/view-book.component&#39;;\\n\\nimport { BookService } from &#39;../services/book.service&#39;;\\nimport { BookResolverService } from &#39;../services/book-resolver.service&#39;;\\n\\nexport const routes: Routes = [\\n  { path: &#39;&#39;, component: BookSearchComponent, pathMatch: &#39;full&#39; },\\n  { path: &#39;collection&#39;, component: CollectionComponent },\\n  {\\n    path: &#39;:id&#39;,\\n    component: ViewBookComponent,\\n    resolve: { book: BookResolverService },\\n  },\\n];\\n\\n@NgModule({\\n  imports: [\\n    PipesModule,\\n    HttpClientModule,\\n    MaterialBaseModule,\\n    RouterModule.forChild(routes),\\n    CommonModule,\\n  ],\\n  declarations: [\\n    BookSearchComponent,\\n    BookPreviewListComponent,\\n    BookPreviewComponent,\\n    BookAuthorsComponent,\\n    BookDetailComponent,\\n    ViewBookComponent,\\n    CollectionComponent,\\n  ],\\n  providers: [BookService, BookResolverService],\\n})\\nexport class BookModule {}\\n</code></pre>\\n<p>The module also contains the <code>Routes</code> for the the various components that the module bundles.</p>\\n<h2 id=\'pipes-module\'>Pipes Module</h2>\\n<p>The module <code>src/app/modules/pipes.module.ts</code> contains the pipes:</p>\\n<ul>\\n<li><code>commas.pipe.ts</code>: Used to format the authors component</li>\\n<li><code>ellipsis.pipe.ts</code>: Used to abbreviate content</li>\\n</ul>\\n<p>This module is imported into the <code>books.module.ts</code>.</p>\\n<h2 id=\'core-module\'>Core Module</h2>\\n<p>The core module contains all the custom components used to instantiate the application shell:</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { CommonModule } from &#39;@angular/common&#39;;\\nimport { RouterModule } from &#39;@angular/router&#39;;\\nimport { MaterialBaseModule } from &#39;@fireflysemantics/material-base-module&#39;;\\nimport { FormsModule, ReactiveFormsModule } from &#39;@angular/forms&#39;;\\n\\nimport { LoginComponent } from &#39;../components/core/login.component&#39;;\\nimport { NavItemComponent } from &#39;../components/core/nav-item.component&#39;;\\nimport { NotFoundComponent } from &#39;../components/core/not-found.component&#39;;\\nimport { SideNavComponent } from &#39;../components/core/sidenav.component&#39;;\\nimport { ToolbarComponent } from &#39;../components/core/toolbar.component&#39;;\\n\\nconst COMPONENTS = [\\n  SideNavComponent,\\n  NavItemComponent,\\n  ToolbarComponent,\\n  LoginComponent,\\n  NotFoundComponent,\\n];\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    RouterModule,\\n    MaterialBaseModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n  ],\\n  declarations: COMPONENTS,\\n  exports: COMPONENTS,\\n})\\nexport class CoreModule {}\\n</code></pre>\\n<h2 id=\'app-routing-module\'>App Routing Module</h2>\\n<p>The <code>app-routing.module.ts</code> contains our main application routes. The books route handles loading lazy loading of the <code>book.module.ts</code>.</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { Routes, RouterModule } from &#39;@angular/router&#39;;\\nimport { AuthGuard } from &#39;./services/auth-guard.service&#39;;\\nimport { LoginComponent } from &#39;./components/core/login.component&#39;;\\n\\nconst routes: Routes = [\\n  { path: &#39;&#39;, redirectTo: &#39;/books&#39;, pathMatch: &#39;full&#39; },\\n  {\\n    path: &#39;books&#39;,\\n    loadChildren: () =&gt;\\n      import(&#39;./modules/book.module&#39;).then((m) =&gt; m.BookModule),\\n    canActivate: [AuthGuard],\\n  },\\n  { path: &#39;login&#39;, component: LoginComponent },\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes, {})],\\n  exports: [RouterModule],\\n})\\nexport class AppRoutingModule {}\\n</code></pre>\\n<h2 id=\'app-module\'>App Module</h2>\\n<p>The <code>app.module</code> imports the <code>core.module</code>,  the <code>app-routing.module</code>, the Firefly Semantics Material Base Module and the Angular Forms Modules.</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { BrowserModule } from &#39;@angular/platform-browser&#39;;\\nimport { FormsModule, ReactiveFormsModule } from &#39;@angular/forms&#39;;\\nimport { AppComponent } from &#39;./app.component&#39;;\\nimport { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;;\\nimport { CoreModule } from &#39;./modules/core.module&#39;;\\nimport { AppRoutingModule } from &#39;./app-routing.module&#39;;\\nimport { MaterialBaseModule } from &#39;@fireflysemantics/material-base-module&#39;;\\n\\n@NgModule({\\n  imports: [\\n    BrowserModule,\\n    BrowserAnimationsModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    CoreModule,\\n    AppRoutingModule,\\n    MaterialBaseModule,\\n  ],\\n  declarations: [AppComponent],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n</code></pre>\\n<h1 id=\'application-component\'>Application Component</h1>\\n<p>Now we just need to ready our application component by dependency injecting the services it needs and declaring a the <code>signIn</code> and <code>logout</code> methods:</p>\\n<pre><code>import { Component } from &#39;@angular/core&#39;;\\nimport { Router } from &#39;@angular/router&#39;;\\nimport { AppStateService } from &#39;./services/app-state.service&#39;;\\nimport { AuthService } from &#39;./services/auth.service&#39;;\\n\\n@Component({\\n  selector: &#39;my-app&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [&#39;./app.component.css&#39;],\\n})\\nexport class AppComponent {\\n  constructor(\\n    private router: Router,\\n    public s: AppStateService,\\n    public authService: AuthService\\n  ) {}\\n\\n  signIn() {\\n    this.s.toggleSidenav();\\n    this.router.navigate([&#39;login&#39;]);\\n  }\\n  logout() {\\n    this.s.toggleSidenav();\\n    this.authService.logout();\\n    this.router.navigate([&#39;login&#39;]);\\n  }\\n}\\n</code></pre>\\n<p>The shell template looks like this:</p>\\n<pre><code>&lt;mat-sidenav-container fullscreen&gt;\\n  &lt;bc-sidenav [open]=&quot;s.sideNavOpen$ | async&quot;&gt;\\n    &lt;bc-nav-item (navigate)=&quot;signIn()&quot; *ngIf=&quot;!(s.isLoggedIn$ | async)&quot;&gt;\\n      Sign In\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item\\n      (navigate)=&quot;s.toggleSidenav()&quot;\\n      *ngIf=&quot;s.isLoggedIn$ | async&quot;\\n      routerLink=&quot;/books/collection&quot;\\n      icon=&quot;book&quot;\\n      hint=&quot;View your book collection&quot;\\n    &gt;\\n      My Collection\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item\\n      (navigate)=&quot;s.toggleSidenav()&quot;\\n      *ngIf=&quot;s.isLoggedIn$ | async&quot;\\n      routerLink=&quot;/books&quot;\\n      icon=&quot;search&quot;\\n      hint=&quot;Find your next book!&quot;\\n    &gt;\\n      Browse Books\\n    &lt;/bc-nav-item&gt;\\n\\n    &lt;bc-nav-item (navigate)=&quot;logout()&quot; *ngIf=&quot;s.isLoggedIn$ | async&quot;&gt;\\n      Sign Out\\n    &lt;/bc-nav-item&gt;\\n  &lt;/bc-sidenav&gt;\\n  &lt;bc-toolbar (openMenu)=&quot;s.toggleSidenav()&quot;&gt; Book Collection &lt;/bc-toolbar&gt;\\n  &lt;router-outlet&gt;&lt;/router-outlet&gt;\\n&lt;/mat-sidenav-container&gt;\\n</code></pre>\\n<p>And that\u2019s it. Our application is ready. We hope you enjoyed this article and if you like Firefly Semantics Slice please star our <a href=\'https://github.com/fireflysemantics/slice\'>Github Repository</a>.</p>\\n<h1 id=\'material-icons\'>Material Icons</h1>\\n<p>Within <code>index.html</code> we need to add our material icons:</p>\\n<pre><code>&lt;link\\n  href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;\\n  rel=&quot;stylesheet&quot;\\n/&gt;\\n\\n&lt;my-app&gt;loading&lt;/my-app&gt;\\n</code></pre>\\n<h1 id=\'summary\'>Summary</h1>\\n<p>In this guide we reviewed the implementation of the NgRx demo application using the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice</a> Lightweight Reactive State Manager for web and mobile applications.</p>\\n<p>If you have any comments or suggestion for the guide please add them to the <a href=\'https://github.com/fireflysemantics/slice/issues\'>Slice Github Repository</a> as an issue.</p>\\n<p>We would also love it if you could star the repository.</p>\\n","summary":"Recreation of the NgRx demo application in order to illustrate Slice simplicity and capabilities.","tags":["Firefly Semantics","Slice","Angular","JavaScript","TypeScript"],"tagString":"Firefly Semantics, Slice, Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/16/2022","headerImage":"glowing-2245832_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/glowing-2245832_1920.jpg","title":"Recreating the NgRx Demo App With the Firefly Semantics Slice State Manager","readingTime":19,"wordCount":3669},{"category":"Guides","type":"guide","md5":"bebe7fcb84376a6d192c9adecbb7a0d0","filename":"browser-big-data-with-dexie-and-typescript.md","path":"guides/dexie/browser-big-data-with-dexie-and-typescript.md","id":"guides--dexie--browser-big-data-with-dexie-and-typescript","markdown":"\\n# Introduction\\n\\nDexieJS is a mind blowingly well designed API wrapper for `IndexedDB`:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/women-5893419_1920.jpg\\"\\n\\ttitle=\\"Dexie.js\\" \\n  description=\\"A Minimalistic Wrapper for IndexedDB\\"\\n\\tdomain=\\"dexie.org\\" \\n  url=\\"https://dexie.org/\\">\\n</fs-link-preview>\\n\\nPlay with in in the browser and learn:\\n\\n- Entity Modeling\\n- Relational design\\n- `Await/async` semantics\\n- `Promise` semantics\\n\\nAll while creating a brilliant local storage solution all at the same time.\\n\\nYes it\u2019s that good! The people that created it are even better. You know Swedes make good stuff! Volvo, Ikea, Dexie, and the Swedish Chef \u2014 Need we say more?\\n\\nYou can work with Dexie in plain Javascript but here we will be using Typescript.\\n\\n# Playground\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Browser Big Data with Dexie and Typescript\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-dexie-appdemo-fs?file=index.ts\\">\\n</fs-link-preview>\\n\\n# Console\\n\\nIn order to be able to see what Dexie is doing we will use the Dexie Typescript console implemented like this within within our Stackblitz `index.ts`:\\n\\n```\\nimport Dexie from \'dexie\';\\nimport { Console } from \'./console\';\\nimport { db } from \'./db\';\\nimport { Contact } from \'./Contact\';\\nconst console = new Console();\\n// Test it:\\nconsole.log(\\"Hello Dexie Lovers!\\");\\nconsole.log(\\"==================\\\\n\\");\\n```\\n\\nNow when we do `console.log` it will log directly to the Stackblitz rendering pane and we wont have to open the console to see logging statements.\\n\\n# Model\\n\\nWe will store contacts, phone numbers, and emails.\\n\\nThe `Contact` instances have a One to Many relationship with the `IEmailAddress` and `IPhoneNumber` instances, and thus we have a `contactId` field on these instances such that we can look them up using the `id` property on our `Contact` instance.\\n\\nBelow is the content of our `model.ts` file:\\n\\n```\\n/* Just for code completion and compilation - defines\\n * the interface of objects stored in the emails table.\\n */\\nexport interface IEmailAddress {\\n    id?: number;\\n    contactId: number;\\n    type: string;\\n    email: string;\\n}\\n\\n/* Just for code completion and compilation - defines\\n * the interface of objects stored in the phones table.\\n */\\nexport interface IPhoneNumber {\\n    id?: number;\\n    contactId: number;\\n    type: string;\\n    phone: string;\\n}\\n\\n/* This is a \'physical\' class that is mapped to\\n * the contacts table. We can have methods on it that\\n * we could call on retrieved database objects.\\n */\\nexport class Contact {\\n    id: number;\\n    firstName: string;\\n    lastName: string;\\n    emails: IEmailAddress[];\\n    phones: IPhoneNumber[];\\n\\n    constructor(first: string, last: string, id?:number) {\\n        this.firstName = first;\\n        this.lastName = last;\\n        if (id) this.id = id;\\n        // Define navigation properties.\\n        // Making them non-enumerable will prevent them from being handled by indexedDB\\n        // when doing put() or add().\\n        Object.defineProperties(this, {\\n            emails: {value: [], enumerable: false, writable: true },\\n            phones: {value: [], enumerable: false, writable: true }\\n        });\\n    }\\n}\\n```\\n\\nMethods containing references to the database are contained in a utility for performing database operations, instead of being located on the model classes or interfaces themselves.\\n\\nAlso note how `Object.defineProperties` is used to avoid double saving `IEmailAddress` and `IPhoneNumber` instances when the `Contact` instance is saved or updated.\\n\\nWe\u2019ll have a look at these next.\\n\\n# Database Utilities\\n\\nThese utilities are used to save contacts and load navigation properties (emails and phone records):\\n\\n```\\n/**\\n * Load navgiation properties (Email and Phone records) and\\n * update the corresponding contact fields.\\n */\\nexport async function loadNavigationProperties(contact, db) {\\n    [contact.emails, contact.phones] = await Promise.all([\\n        db.emails.where(\'contactId\').equals(this.id).toArray(),\\n        db.phones.where(\'contactId\').equals(this.id).toArray()\\n    ]);\\n}\\n\\n/**\\n * Load email records and\\n * update the corresponding ocntact fields.\\n */\\nexport async function loadContactEmails(contact, db) {\\n    contact.emails =\\n    await db.emails.where(\'contactId\').equals(contact.id).toArray();\\n}\\n/**\\n * Load phone records and\\n * update the corresponding contact fields.\\n */\\nexport async function loadContactPhones(contact, db) {\\n    contact.phones =\\n    await db.phones.where(\'contactId\').equals(contact.id).toArray();\\n}\\n/**\\n * Save a contact entity.  If email or phone records\\n * were removed from the contact, then these will also\\n * be deleted from the database.\\n */\\nexport async function save(contact, db) {\\n    return db.transaction(\'rw\', db.contacts, db.emails, db.phones, async() => {\\n\\n        // Add or update contact. If add, record contact.id.\\n        contact.id = await db.contacts.put(contact);\\n        // Save all navigation properties (arrays of emails and phones)\\n        // Some may be new and some may be updates of existing objects.\\n        // put() will handle both cases.\\n        // (record the result keys from the put() operations into emailIds and phoneIds\\n        //  so that we can find local deletes)\\n        let [emailIds, phoneIds] = await Promise.all ([\\n            Promise.all(contact.emails.map(email => db.emails.put(email))),\\n            Promise.all(contact.phones.map(phone => db.phones.put(phone)))\\n        ]);\\n\\n        // Was any email or phone number deleted from out navigation properties?\\n        // Delete any item in DB that reference us, but is not present\\n        // in our navigation properties:\\n        await Promise.all([\\n            db.emails.where(\'contactId\').equals(contact.id) // references us\\n                .and(email => emailIds.indexOf(email.id) === -1) // Not anymore in our array\\n                .delete(),\\n\\n            db.phones.where(\'contactId\').equals(contact.id)\\n                .and(phone => phoneIds.indexOf(phone.id) === -1)\\n                .delete()\\n        ]);\\n    });\\n}\\n```\\n\\n# Database\\n\\nThe database will be defined in the db.ts file (The code contains elaboration comments from the Dexie repository implementation):\\n\\n```\\nimport Dexie from \'dexie\';\\n\\nimport {IEmailAddress, IPhoneNumber, Contact} from \'./model\';\\n\\nexport class AppDatabase extends Dexie {\\n    public contacts: Dexie.Table<Contact, number>;\\n    public emails: Dexie.Table<IEmailAddress, number>;\\n    public phones: Dexie.Table<IPhoneNumber, number>;\\n\\n    constructor() {\\n\\n        super(\\"ContactsDatabase\\");\\n\\n        var db = this;\\n\\n        //\\n        // Define tables and indexes\\n        //\\n        db.version(1).stores({\\n            contacts: \'++id, firstName, lastName\',\\n            emails: \'++id, contactId, type, email\',\\n            phones: \'++id, contactId, type, phone\',\\n        });\\n\\n        db.contacts.mapToClass(Contact);\\n    }\\n}\\n\\nexport var db = new AppDatabase();\\n```\\n\\nAlso the table properties ( contacts, emails, phones) are `public` such that we can access these properties in our `utilities.ts` file.\\n\\n\\n\\n# Application Script\\n\\nTime to use the Dexi API:\\n\\n```\\n// Import stylesheets\\nimport \'./style.css\';\\nimport Dexie from \'dexie\';\\nimport { Console } from \'./console\';\\nimport { db} from \'./db\';\\nimport { Contact} from \'./model\';\\nimport { loadNavigationProperties, loadContactEmails, loadContactPhones, saveContact } from \'./utilities\';\\n\\n\\n// Write TypeScript code!\\nconst appDiv: HTMLElement = document.getElementById(\'app\');\\nappDiv.innerHTML = `<h1>Dexie Lovers TypeScript Demo</h1>\\n<div id=\\"consoleArea\\"></div>`;\\n\\nconst console = new Console();\\n\\n// ===================================\\n// Bootstrapping\\n// Add a console element\\n// ===================================\\ndocument.getElementById(\'consoleArea\').appendChild(console.textarea);\\n\\n// Test it:\\nconsole.log(\\"Hello Dexie Lovers!\\");\\nconsole.log(\\"==================\\\\n\\");\\nasync function test() {   \\n    // Initialize our Console widget - it will log browser window.\\n    try {\\n        //\\n        // Let\'s clear and re-seed the database:\\n        //\\n        console.log(\\"Clearing database...\\");\\n        //await db.delete();\\n        //await db.open();\\n        await Promise.all([db.contacts.clear(), db.emails.clear(), db.phones.clear()]);\\n        \\n        await haveSomeFun();\\n    } catch (ex) {\\n        console.error(ex);\\n    }\\n}\\n\\ntest();\\n\\nasync function haveSomeFun() {\\n    //\\n    // Seed Database\\n    //\\n    console.log(\\"Seeding database with some contacts...\\");\\n    await db.transaction(\'rw\', db.contacts, db.emails, db.phones, async function () {\\n        // Populate a contact\\n        let arnoldId = await db.contacts.add(new Contact(\'Arnold\', \'Fitzgerald\'));\\n\\n        // Populate some emails and phone numbers for the contact\\n        db.emails.add({ contactId: arnoldId, type: \'home\', email: \'arnold@email.com\' });\\n        db.emails.add({ contactId: arnoldId, type: \'work\', email: \'arnold@abc.com\' });\\n        db.phones.add({ contactId: arnoldId, type: \'home\', phone: \'12345678\' });\\n        db.phones.add({ contactId: arnoldId, type: \'work\', phone: \'987654321\' });\\n\\n        // ... and another one...\\n        let adamId = await db.contacts.add(new Contact(\'Adam\', \'Tensta\'));\\n        // Populate some emails and phone numbers for the contact\\n        db.emails.add({ contactId: adamId, type: \'home\', email: \'adam@tensta.se\' });\\n        db.phones.add({ contactId: adamId, type: \'work\', phone: \'88888888\' });\\n    });\\n\\n    //\\n    // For fun - add a phone number to Adam\\n    //\\n    // Now, just to examplify how to use the save() method as an alternative\\n    // to db.phones.add(), we will add yet another phone number\\n    // to an existing contact and then re-save it:\\n    console.log(\\"Playing a little: adding another phone entry for Adam Tensta...\\");\\n    let adam = await db.contacts.orderBy(\'lastName\').last();\\n    console.log(`Found contact: ${adam.firstName} ${adam.lastName} (id: ${adam.id})`);\\n    \\n    // To add another phone number to adam, the straight forward way would be this:\\n    await db.phones.add({contactId: adam.id, type: \\"custom\\", phone: \\"+46 7777777\\"});\\n\\n    // But now let\'s do that same thing by manipulating navigation property instead:\\n    // Load emails and phones navigation properties\\n    await loadNavigationProperties(adam, db);\\n    \\n    // Now, just push another phone number to adam.phones navigation property:\\n    adam.phones.push({\\n        contactId: adam.id,\\n        type: \'custom\',\\n        phone: \'112\'\\n    });\\n\\n    // And just save adam:\\n    console.log(\\"Saving contact\\");\\n    await saveContact(adam, db);\\n    \\n    // Now, print out all contacts\\n    console.log(\\"Now dumping some contacts to console:\\");\\n    await printContacts();\\n}\\n\\nasync function printContacts() {\\n\\n    // Now we\'re gonna list all contacts starting with letter \'A\',\'B\' or \'C\'\\n    // and print them out.\\n    // For each contact, also resolve the navigation properties.\\n\\n    // For atomicity and speed, use a single transaction for the\\n    // queries to make:    \\n    let contacts = await db.transaction(\'r\', [db.contacts, db.phones, db.emails], async()=>{\\n\\n        // Query some contacts\\n        let contacts = await db.contacts\\n            .where(\'firstName\').startsWithAnyOfIgnoreCase(\'a\',\'b\',\'c\')\\n            .sortBy(\'id\');      \\n\\n        // Resolve array properties \'emails\' and \'phones\'\\n        // on each and every contact:\\n        await Promise.all (contacts.map(contact => loadNavigationProperties(contact, db)));\\n\\n        return contacts;\\n    });\\n\\n    // Print result\\n    console.log(\\"Database contains the following contacts:\\");\\n    contacts.forEach(contact => {\\n        console.log(contact.id + \\". \\" + contact.firstName + \\" \\" + contact.lastName);\\n        console.log(\\"   Phone numbers: \\");\\n        contact.phones.forEach(phone => {\\n            console.log(\\"     \\" + phone.phone + \\"(\\" + phone.type + \\")\\");\\n        });\\n        console.log(\\"   Emails: \\");\\n        contact.emails.forEach(email => {\\n            console.log(\\"     \\" + email.email + \\"(\\" + email.type + \\")\\");\\n        });\\n    });\\n}\\n```\\n\\n","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>DexieJS is a mind blowingly well designed API wrapper for <code>IndexedDB</code>:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/women-5893419_1920.jpg\'\\n    title=\'Dexie.js\' \\n  description=\'A Minimalistic Wrapper for IndexedDB\'\\n    domain=\'dexie.org\' \\n  url=\'https://dexie.org/\'>\\n</fs-link-preview></p>\\n<p>Play with in in the browser and learn:</p>\\n<ul>\\n<li>Entity Modeling</li>\\n<li>Relational design</li>\\n<li><code>Await/async</code> semantics</li>\\n<li><code>Promise</code> semantics</li>\\n</ul>\\n<p>All while creating a brilliant local storage solution all at the same time.</p>\\n<p>Yes it\u2019s that good! The people that created it are even better. You know Swedes make good stuff! Volvo, Ikea, Dexie, and the Swedish Chef \u2014 Need we say more?</p>\\n<p>You can work with Dexie in plain Javascript but here we will be using Typescript.</p>\\n<h1 id=\'playground\'>Playground</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Browser Big Data with Dexie and Typescript\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-dexie-appdemo-fs?file=index.ts\'>\\n</fs-link-preview></p>\\n<h1 id=\'console\'>Console</h1>\\n<p>In order to be able to see what Dexie is doing we will use the Dexie Typescript console implemented like this within within our Stackblitz <code>index.ts</code>:</p>\\n<pre><code>import Dexie from &#39;dexie&#39;;\\nimport { Console } from &#39;./console&#39;;\\nimport { db } from &#39;./db&#39;;\\nimport { Contact } from &#39;./Contact&#39;;\\nconst console = new Console();\\n// Test it:\\nconsole.log(&quot;Hello Dexie Lovers!&quot;);\\nconsole.log(&quot;==================\\\\n&quot;);\\n</code></pre>\\n<p>Now when we do <code>console.log</code> it will log directly to the Stackblitz rendering pane and we wont have to open the console to see logging statements.</p>\\n<h1 id=\'model\'>Model</h1>\\n<p>We will store contacts, phone numbers, and emails.</p>\\n<p>The <code>Contact</code> instances have a One to Many relationship with the <code>IEmailAddress</code> and <code>IPhoneNumber</code> instances, and thus we have a <code>contactId</code> field on these instances such that we can look them up using the <code>id</code> property on our <code>Contact</code> instance.</p>\\n<p>Below is the content of our <code>model.ts</code> file:</p>\\n<pre><code>/* Just for code completion and compilation - defines\\n * the interface of objects stored in the emails table.\\n */\\nexport interface IEmailAddress {\\n    id?: number;\\n    contactId: number;\\n    type: string;\\n    email: string;\\n}\\n\\n/* Just for code completion and compilation - defines\\n * the interface of objects stored in the phones table.\\n */\\nexport interface IPhoneNumber {\\n    id?: number;\\n    contactId: number;\\n    type: string;\\n    phone: string;\\n}\\n\\n/* This is a &#39;physical&#39; class that is mapped to\\n * the contacts table. We can have methods on it that\\n * we could call on retrieved database objects.\\n */\\nexport class Contact {\\n    id: number;\\n    firstName: string;\\n    lastName: string;\\n    emails: IEmailAddress[];\\n    phones: IPhoneNumber[];\\n\\n    constructor(first: string, last: string, id?:number) {\\n        this.firstName = first;\\n        this.lastName = last;\\n        if (id) this.id = id;\\n        // Define navigation properties.\\n        // Making them non-enumerable will prevent them from being handled by indexedDB\\n        // when doing put() or add().\\n        Object.defineProperties(this, {\\n            emails: {value: [], enumerable: false, writable: true },\\n            phones: {value: [], enumerable: false, writable: true }\\n        });\\n    }\\n}\\n</code></pre>\\n<p>Methods containing references to the database are contained in a utility for performing database operations, instead of being located on the model classes or interfaces themselves.</p>\\n<p>Also note how <code>Object.defineProperties</code> is used to avoid double saving <code>IEmailAddress</code> and <code>IPhoneNumber</code> instances when the <code>Contact</code> instance is saved or updated.</p>\\n<p>We\u2019ll have a look at these next.</p>\\n<h1 id=\'database-utilities\'>Database Utilities</h1>\\n<p>These utilities are used to save contacts and load navigation properties (emails and phone records):</p>\\n<pre><code>/**\\n * Load navgiation properties (Email and Phone records) and\\n * update the corresponding contact fields.\\n */\\nexport async function loadNavigationProperties(contact, db) {\\n    [contact.emails, contact.phones] = await Promise.all([\\n        db.emails.where(&#39;contactId&#39;).equals(this.id).toArray(),\\n        db.phones.where(&#39;contactId&#39;).equals(this.id).toArray()\\n    ]);\\n}\\n\\n/**\\n * Load email records and\\n * update the corresponding ocntact fields.\\n */\\nexport async function loadContactEmails(contact, db) {\\n    contact.emails =\\n    await db.emails.where(&#39;contactId&#39;).equals(contact.id).toArray();\\n}\\n/**\\n * Load phone records and\\n * update the corresponding contact fields.\\n */\\nexport async function loadContactPhones(contact, db) {\\n    contact.phones =\\n    await db.phones.where(&#39;contactId&#39;).equals(contact.id).toArray();\\n}\\n/**\\n * Save a contact entity.  If email or phone records\\n * were removed from the contact, then these will also\\n * be deleted from the database.\\n */\\nexport async function save(contact, db) {\\n    return db.transaction(&#39;rw&#39;, db.contacts, db.emails, db.phones, async() =&gt; {\\n\\n        // Add or update contact. If add, record contact.id.\\n        contact.id = await db.contacts.put(contact);\\n        // Save all navigation properties (arrays of emails and phones)\\n        // Some may be new and some may be updates of existing objects.\\n        // put() will handle both cases.\\n        // (record the result keys from the put() operations into emailIds and phoneIds\\n        //  so that we can find local deletes)\\n        let [emailIds, phoneIds] = await Promise.all ([\\n            Promise.all(contact.emails.map(email =&gt; db.emails.put(email))),\\n            Promise.all(contact.phones.map(phone =&gt; db.phones.put(phone)))\\n        ]);\\n\\n        // Was any email or phone number deleted from out navigation properties?\\n        // Delete any item in DB that reference us, but is not present\\n        // in our navigation properties:\\n        await Promise.all([\\n            db.emails.where(&#39;contactId&#39;).equals(contact.id) // references us\\n                .and(email =&gt; emailIds.indexOf(email.id) === -1) // Not anymore in our array\\n                .delete(),\\n\\n            db.phones.where(&#39;contactId&#39;).equals(contact.id)\\n                .and(phone =&gt; phoneIds.indexOf(phone.id) === -1)\\n                .delete()\\n        ]);\\n    });\\n}\\n</code></pre>\\n<h1 id=\'database\'>Database</h1>\\n<p>The database will be defined in the db.ts file (The code contains elaboration comments from the Dexie repository implementation):</p>\\n<pre><code>import Dexie from &#39;dexie&#39;;\\n\\nimport {IEmailAddress, IPhoneNumber, Contact} from &#39;./model&#39;;\\n\\nexport class AppDatabase extends Dexie {\\n    public contacts: Dexie.Table&lt;Contact, number&gt;;\\n    public emails: Dexie.Table&lt;IEmailAddress, number&gt;;\\n    public phones: Dexie.Table&lt;IPhoneNumber, number&gt;;\\n\\n    constructor() {\\n\\n        super(&quot;ContactsDatabase&quot;);\\n\\n        var db = this;\\n\\n        //\\n        // Define tables and indexes\\n        //\\n        db.version(1).stores({\\n            contacts: &#39;++id, firstName, lastName&#39;,\\n            emails: &#39;++id, contactId, type, email&#39;,\\n            phones: &#39;++id, contactId, type, phone&#39;,\\n        });\\n\\n        db.contacts.mapToClass(Contact);\\n    }\\n}\\n\\nexport var db = new AppDatabase();\\n</code></pre>\\n<p>Also the table properties ( contacts, emails, phones) are <code>public</code> such that we can access these properties in our <code>utilities.ts</code> file.</p>\\n<h1 id=\'application-script\'>Application Script</h1>\\n<p>Time to use the Dexi API:</p>\\n<pre><code>// Import stylesheets\\nimport &#39;./style.css&#39;;\\nimport Dexie from &#39;dexie&#39;;\\nimport { Console } from &#39;./console&#39;;\\nimport { db} from &#39;./db&#39;;\\nimport { Contact} from &#39;./model&#39;;\\nimport { loadNavigationProperties, loadContactEmails, loadContactPhones, saveContact } from &#39;./utilities&#39;;\\n\\n\\n// Write TypeScript code!\\nconst appDiv: HTMLElement = document.getElementById(&#39;app&#39;);\\nappDiv.innerHTML = `&lt;h1&gt;Dexie Lovers TypeScript Demo&lt;/h1&gt;\\n&lt;div id=&quot;consoleArea&quot;&gt;&lt;/div&gt;`;\\n\\nconst console = new Console();\\n\\n// ===================================\\n// Bootstrapping\\n// Add a console element\\n// ===================================\\ndocument.getElementById(&#39;consoleArea&#39;).appendChild(console.textarea);\\n\\n// Test it:\\nconsole.log(&quot;Hello Dexie Lovers!&quot;);\\nconsole.log(&quot;==================\\\\n&quot;);\\nasync function test() {   \\n    // Initialize our Console widget - it will log browser window.\\n    try {\\n        //\\n        // Let&#39;s clear and re-seed the database:\\n        //\\n        console.log(&quot;Clearing database...&quot;);\\n        //await db.delete();\\n        //await db.open();\\n        await Promise.all([db.contacts.clear(), db.emails.clear(), db.phones.clear()]);\\n        \\n        await haveSomeFun();\\n    } catch (ex) {\\n        console.error(ex);\\n    }\\n}\\n\\ntest();\\n\\nasync function haveSomeFun() {\\n    //\\n    // Seed Database\\n    //\\n    console.log(&quot;Seeding database with some contacts...&quot;);\\n    await db.transaction(&#39;rw&#39;, db.contacts, db.emails, db.phones, async function () {\\n        // Populate a contact\\n        let arnoldId = await db.contacts.add(new Contact(&#39;Arnold&#39;, &#39;Fitzgerald&#39;));\\n\\n        // Populate some emails and phone numbers for the contact\\n        db.emails.add({ contactId: arnoldId, type: &#39;home&#39;, email: &#39;arnold@email.com&#39; });\\n        db.emails.add({ contactId: arnoldId, type: &#39;work&#39;, email: &#39;arnold@abc.com&#39; });\\n        db.phones.add({ contactId: arnoldId, type: &#39;home&#39;, phone: &#39;12345678&#39; });\\n        db.phones.add({ contactId: arnoldId, type: &#39;work&#39;, phone: &#39;987654321&#39; });\\n\\n        // ... and another one...\\n        let adamId = await db.contacts.add(new Contact(&#39;Adam&#39;, &#39;Tensta&#39;));\\n        // Populate some emails and phone numbers for the contact\\n        db.emails.add({ contactId: adamId, type: &#39;home&#39;, email: &#39;adam@tensta.se&#39; });\\n        db.phones.add({ contactId: adamId, type: &#39;work&#39;, phone: &#39;88888888&#39; });\\n    });\\n\\n    //\\n    // For fun - add a phone number to Adam\\n    //\\n    // Now, just to examplify how to use the save() method as an alternative\\n    // to db.phones.add(), we will add yet another phone number\\n    // to an existing contact and then re-save it:\\n    console.log(&quot;Playing a little: adding another phone entry for Adam Tensta...&quot;);\\n    let adam = await db.contacts.orderBy(&#39;lastName&#39;).last();\\n    console.log(`Found contact: ${adam.firstName} ${adam.lastName} (id: ${adam.id})`);\\n    \\n    // To add another phone number to adam, the straight forward way would be this:\\n    await db.phones.add({contactId: adam.id, type: &quot;custom&quot;, phone: &quot;+46 7777777&quot;});\\n\\n    // But now let&#39;s do that same thing by manipulating navigation property instead:\\n    // Load emails and phones navigation properties\\n    await loadNavigationProperties(adam, db);\\n    \\n    // Now, just push another phone number to adam.phones navigation property:\\n    adam.phones.push({\\n        contactId: adam.id,\\n        type: &#39;custom&#39;,\\n        phone: &#39;112&#39;\\n    });\\n\\n    // And just save adam:\\n    console.log(&quot;Saving contact&quot;);\\n    await saveContact(adam, db);\\n    \\n    // Now, print out all contacts\\n    console.log(&quot;Now dumping some contacts to console:&quot;);\\n    await printContacts();\\n}\\n\\nasync function printContacts() {\\n\\n    // Now we&#39;re gonna list all contacts starting with letter &#39;A&#39;,&#39;B&#39; or &#39;C&#39;\\n    // and print them out.\\n    // For each contact, also resolve the navigation properties.\\n\\n    // For atomicity and speed, use a single transaction for the\\n    // queries to make:    \\n    let contacts = await db.transaction(&#39;r&#39;, [db.contacts, db.phones, db.emails], async()=&gt;{\\n\\n        // Query some contacts\\n        let contacts = await db.contacts\\n            .where(&#39;firstName&#39;).startsWithAnyOfIgnoreCase(&#39;a&#39;,&#39;b&#39;,&#39;c&#39;)\\n            .sortBy(&#39;id&#39;);      \\n\\n        // Resolve array properties &#39;emails&#39; and &#39;phones&#39;\\n        // on each and every contact:\\n        await Promise.all (contacts.map(contact =&gt; loadNavigationProperties(contact, db)));\\n\\n        return contacts;\\n    });\\n\\n    // Print result\\n    console.log(&quot;Database contains the following contacts:&quot;);\\n    contacts.forEach(contact =&gt; {\\n        console.log(contact.id + &quot;. &quot; + contact.firstName + &quot; &quot; + contact.lastName);\\n        console.log(&quot;   Phone numbers: &quot;);\\n        contact.phones.forEach(phone =&gt; {\\n            console.log(&quot;     &quot; + phone.phone + &quot;(&quot; + phone.type + &quot;)&quot;);\\n        });\\n        console.log(&quot;   Emails: &quot;);\\n        contact.emails.forEach(email =&gt; {\\n            console.log(&quot;     &quot; + email.email + &quot;(&quot; + email.type + &quot;)&quot;);\\n        });\\n    });\\n}\\n</code></pre>\\n","summary":"Browser Big Data with Dexie and Typescript.","tags":["Browser","JavaScript","TypeScript","Dexie"],"tagString":"Browser, JavaScript, TypeScript, Dexie","author":"Ole Ersoy","date":"2/08/2021","headerImage":"sunset-3156440_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sunset-3156440_1920.jpg","title":"Browser Big Data with Dexie and Typescript","readingTime":8,"wordCount":1494},{"category":"Guides","type":"guide","md5":"84380f77284281c14c813527d113a844","filename":"mac-os-keyboard-shortcuts.md","path":"guides/macos/mac-os-keyboard-shortcuts.md","id":"guides--macos--mac-os-keyboard-shortcuts","markdown":"\\n## Switch Chrome Browser Tabs\\n\\n`command + option` and arrow keys\\n\\n## Switch Terminal Tabs\\n\\n`command + shift` and arrow keys\\n\\n## New Terminal Window\\n\\n`command + n`\\n\\n## New Terminal Tab\\n\\n`command + t`\\n\\n## VSCode Select Column\\n\\n`Shift + Option + Cmd` and arrow keys\\n\\n## VSCode Search for Code \\n\\n`Cmd + p`\\n\\n## VSCode Bring Up Terminal \\n\\n`ctrl + ~`\\n\\n## VSCode Switch Between Multiple Editor Windows \\n\\n`cmd + ~`\\n\\n## VSCode Search Replace Within Document \\n\\n`cmd + option + f`\\n","html":"<h2 id=\'switch-chrome-browser-tabs\'>Switch Chrome Browser Tabs</h2>\\n<p><code>command + option</code> and arrow keys</p>\\n<h2 id=\'switch-terminal-tabs\'>Switch Terminal Tabs</h2>\\n<p><code>command + shift</code> and arrow keys</p>\\n<h2 id=\'new-terminal-window\'>New Terminal Window</h2>\\n<p><code>command + n</code></p>\\n<h2 id=\'new-terminal-tab\'>New Terminal Tab</h2>\\n<p><code>command + t</code></p>\\n<h2 id=\'vscode-select-column\'>VSCode Select Column</h2>\\n<p><code>Shift + Option + Cmd</code> and arrow keys</p>\\n<h2 id=\'vscode-search-for-code\'>VSCode Search for Code</h2>\\n<p><code>Cmd + p</code></p>\\n<h2 id=\'vscode-bring-up-terminal\'>VSCode Bring Up Terminal</h2>\\n<p><code>ctrl + ~</code></p>\\n<h2 id=\'vscode-switch-between-multiple-editor-windows\'>VSCode Switch Between Multiple Editor Windows</h2>\\n<p><code>cmd + ~</code></p>\\n<h2 id=\'vscode-search-replace-within-document\'>VSCode Search Replace Within Document</h2>\\n<p><code>cmd + option + f</code></p>\\n","summary":"MacOS Keyboard Shortcuts.","tags":["MacOS"],"tagString":"MacOS","author":"Ole Ersoy","date":"10/10/2021","headerImage":"leopard-2873127_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/leopard-2873127_1920.jpg","title":"MacOS Keyboard Shortcuts","readingTime":1,"wordCount":62},{"category":"Guides","type":"guide","md5":"b6f65bec3849d230b5fc9ea61598057d","filename":"when-to-use-rxjs-subject-replay-subject-and-behavior-subject.md","path":"guides/rxjs/when-to-use-rxjs-subject-replay-subject-and-behavior-subject.md","id":"guides--rxjs--when-to-use-rxjs-subject-replay-subject-and-behavior-subject","markdown":"\\n# Introduction\\n\\nComing into RxJS we have a choice between various `Observable` emitting types including.\\n\\n- `Subject`\\n- `BehaviorSubject`\\n- `ReplaySubject`\\n\\n# Subject<number>\\n\\nWhen subscribing to a `Subject` we only receive values after the subscription was initiated.\\n```\\nconst subject:Subject<number> = new Subject<number>();\\nsubject.next(1);\\nsubject.next(2);\\nsubject.subscribe({\\n    next: (v) => console.log(`Subject emitted: ${v}`)\\n});\\nsubject.next(3);\\n```\\n\\nSo in the above case see that `Subject emitted: 3` gets logged.\\n\\n# BehaviorSubject<number>\\n\\nThe `BehaviorSubject` caches the last value and we receive the last value upon initial subscription.\\n\\n```\\nconst behaviorSubject: BehaviorSubject<number> = new BehaviorSubject<number>(1);\\nbehaviorSubject.next(1);\\nbehaviorSubject.next(2);\\nbehaviorSubject.subscribe({\\n    next: (v) => console.log(`BehaviorSubject emitted: ${v}`),\\n});\\nbehaviorSubject.next(3);\\n```\\nSo in the above case see that the following is logged.\\n\\n```\\nBehaviorSubject emitted: 2\\nBehaviorSubject emitted: 3\\n```\\n\\n# ReplaySubject<number>\\n\\nThe `ReplaySubject` caches a specified (Constructor argument) number of emissions when initialized. In the below demo we did not specify a number, thus all the emissions are replayed.\\n\\n```\\nconst replaySubject: ReplaySubject<number> = new ReplaySubject<number>();\\nreplaySubject.next(1);\\nreplaySubject.next(2);\\nreplaySubject.subscribe({\\n    next: (v) => console.log(`ReplaySubject emitted: ${v}`),\\n});\\nreplaySubject.next(3);\\n```\\n\\nSo in the above case see that the following is logged.\\n\\n```\\nReplaySubject emitted: 1\\nReplaySubject emitted: 2\\nReplaySubject emitted: 3\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"When to Use RxJS Subject, ReplaySubject, and Behavior Subject\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/rxjs-cwm1wp?devtoolsheight=60&file=index.ts\\">\\n</fs-link-preview>\\n","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>Coming into RxJS we have a choice between various <code>Observable</code> emitting types including.</p>\\n<ul>\\n<li><code>Subject</code></li>\\n<li><code>BehaviorSubject</code></li>\\n<li><code>ReplaySubject</code></li>\\n</ul>\\n<h1 id=\'subject\'>Subject<number></h1>\\n<p>When subscribing to a <code>Subject</code> we only receive values after the subscription was initiated.</p>\\n<pre><code>const subject:Subject&lt;number&gt; = new Subject&lt;number&gt;();\\nsubject.next(1);\\nsubject.next(2);\\nsubject.subscribe({\\n    next: (v) =&gt; console.log(`Subject emitted: ${v}`)\\n});\\nsubject.next(3);\\n</code></pre>\\n<p>So in the above case see that <code>Subject emitted: 3</code> gets logged.</p>\\n<h1 id=\'behaviorsubject\'>BehaviorSubject<number></h1>\\n<p>The <code>BehaviorSubject</code> caches the last value and we receive the last value upon initial subscription.</p>\\n<pre><code>const behaviorSubject: BehaviorSubject&lt;number&gt; = new BehaviorSubject&lt;number&gt;(1);\\nbehaviorSubject.next(1);\\nbehaviorSubject.next(2);\\nbehaviorSubject.subscribe({\\n    next: (v) =&gt; console.log(`BehaviorSubject emitted: ${v}`),\\n});\\nbehaviorSubject.next(3);\\n</code></pre>\\n<p>So in the above case see that the following is logged.</p>\\n<pre><code>BehaviorSubject emitted: 2\\nBehaviorSubject emitted: 3\\n</code></pre>\\n<h1 id=\'replaysubject\'>ReplaySubject<number></h1>\\n<p>The <code>ReplaySubject</code> caches a specified (Constructor argument) number of emissions when initialized. In the below demo we did not specify a number, thus all the emissions are replayed.</p>\\n<pre><code>const replaySubject: ReplaySubject&lt;number&gt; = new ReplaySubject&lt;number&gt;();\\nreplaySubject.next(1);\\nreplaySubject.next(2);\\nreplaySubject.subscribe({\\n    next: (v) =&gt; console.log(`ReplaySubject emitted: ${v}`),\\n});\\nreplaySubject.next(3);\\n</code></pre>\\n<p>So in the above case see that the following is logged.</p>\\n<pre><code>ReplaySubject emitted: 1\\nReplaySubject emitted: 2\\nReplaySubject emitted: 3\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'When to Use RxJS Subject, ReplaySubject, and Behavior Subject\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/rxjs-cwm1wp?devtoolsheight=60&file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"When to Use RxJS Subject, ReplaySubject, and Behavior Subject.","tags":["Slice",null,"JavaScript","TypeScript"],"tagString":"Slice, , JavaScript, TypeScript","author":"Ole Ersoy","date":"6/30/2022","headerImage":"jellyfish-1410669_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1410669_1920.jpg","title":"When to Use RxJS Subject, ReplaySubject, and Behavior Subject","readingTime":2,"wordCount":249},{"category":"Guides","type":"guide","md5":"101d6c686e0fec07925f36efa67e32cd","filename":"creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager.md","path":"guides/slice/creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager.md","id":"guides--slice--creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager","markdown":"\\n# Introduction\\n\\nThis articles guides us through how to go about building a minimal reactive **Angular Todo** application with the [Firefly Semantics Slice State Manager](https://www.npmjs.com/package/@fireflysemantics/slice).\\n\\nWe have also created a [Todo Application Youtube Tutorial](https://youtu.be/Y3AxSIiBdWg).\\n\\nThe application allows us to add `Todo` instances / entities and also <i>Slice</i> the rendering of the instances using the categories `All`, `Completed`, and `Active`.\\n\\nIf the `All` filter is selected then all the `Todo` instances will be rendered regardless of whether they have been marked as `Completed` or not.\\n\\nIf the `Completed` filter is selected then only `Completed` `Todo` instances are rendered, and if their `checkbox` is unchecked, then the Todo instance will be hidden reactively.\\n\\nIf the `Active` filter is selected then only `Active` `Todo` instances are rendered, and if their `checkbox` is checked, then the `Todo` instance will be hidden reactively.\\n\\nAlso `Finito!` is rendered at the bottom of the application when all of the `Todo` instances have been marked as completed.\\n\\nHere is the Stackblitz Demo of what we will be creating:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-ekv3yt\\">\\n</fs-link-preview>\\n\\n# UX and Styling\\n\\nWe will be using [MaterializeCSS](https://materializecss.com/) for styling.\\n\\nIn our Stackblitz we have added the following to our `index.html`:\\n\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\">\\n<link rel=\\"stylesheet\\" href=\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css\\">\\n```\\n\\n# Dependencies\\n\\nFirst install Firefly Semantics Slice and the peer dependencies:\\n```\\nnpm i @fireflysemantics/slice @types/nanoid nanoid\\n```\\n\\nIn order to unsubscribe from our component observable state we will use the package [@ngneat/until-destroy](https://www.npmjs.com/package/@ngneat/until-destroy).\\n\\nSince Angular already includes RxJS we don\u2019t need to install it.\\n\\n# Model\\n\\n## Visibility Filter\\n\\nThe `VISIBILITY_FILTER` `enum` below is used to provide the `filter.component.ts` with values that are used to reactively filter the list of `Todo` instances.\\n\\nThe code is contained within `model/todo-filter.enum.ts`:\\n```\\nexport enum VISIBILITY_FILTER {\\n    SHOW_COMPLETED = \'Completed\',\\n    SHOW_ACTIVE = \'Active\',\\n    SHOW_ALL = \'All\'\\n}\\n```\\n\\n\\n## Visibility Filter Values\\n\\nIn order to get the selectable values used to populate the select dropdown `control` we will create `model/todo-filter-values.function.ts`:\\n\\n```\\nimport { VISIBILITY_FILTER } from \'./todo-filter.enum\';\\nexport function VISIBILITY_FILTER_VALUES(): string[] {\\n    return Object.keys(VISIBILITY_FILTER).map((k) =>\\n           VISIBILITY_FILTER[k]);\\n}\\n```\\n\\n## Slices\\n\\nThe `Entity` slices for separating `complete` and `incomplete` `Todo` instances are modeled in `model/todo-slices.enum.ts`:\\n```\\n/**\\n * The Slice Keys\\n */\\nexport const enum TodoSliceEnum {\\n    COMPLETE = \'Complete\',\\n    INCOMPLETE = \'Incomplete\'\\n}\\n```\\n\\nWe use this to initialize the Slice predicates of the entity store like this:\\n```\\nthis.todoStore.addSlice((todo) => todo.completed,\\n    TodoSliceEnum.COMPLETE);\\nthis.todoStore.addSlice((todo) => !todo.completed,\\n    TodoSliceEnum.INCOMPLETE);\\n```\\n\\n## Todo Class\\n\\nThe `Todo` class is modeled in `model/Todo.class`:\\n\\n```\\n/**\\n * The Todo Model\\n */\\nexport class Todo {\\n  gid: string;\\n  constructor(public title: string, public completed: boolean) {}\\n}\\n```\\n\\n# State Service\\n\\nWe will create our application state service in `services/state.service.ts`:\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { combineLatest, Observable } from \'rxjs\';\\nimport { map } from \'rxjs/operators\';\\nimport {\\n  KeyObsValueReset,\\n  ObsValueReset,\\n  OStore,\\n  EStore,\\n  OStoreStart,\\n} from \'@fireflysemantics/slice\';\\n\\nimport { VISIBILITY_FILTER } from \'../model/todo-filter.enum\';\\nimport { Todo } from \'../model/todo.class\';\\nimport { TodoSliceEnum } from \'../model/todo-slices.enum\';\\n\\ninterface ISTART extends KeyObsValueReset {\\n  ACTIVE_FILTER_KEY: ObsValueReset;\\n}\\n\\n@Injectable({\\n  providedIn: \'root\',\\n})\\nexport class StateService {\\n  //============================================\\n  // Define the Object Store\\n  //============================================\\n  START: OStoreStart = {\\n    ACTIVE_FILTER_KEY: {\\n      value: VISIBILITY_FILTER.SHOW_ALL,\\n      reset: VISIBILITY_FILTER.SHOW_ALL,\\n    },\\n  };\\n  public OS: OStore<ISTART> = new OStore(this.START);\\n  //============================================\\n  // Observe the Active Filter\\n  //============================================\\n  public activeFilter$: Observable<VISIBILITY_FILTER> = this.OS.observe(\\n    this.START.ACTIVE_FILTER_KEY\\n  );\\n\\n  //============================================\\n  // Define the Todo Entity Store\\n  //============================================\\n  public todoStore: EStore<Todo> = new EStore<Todo>();\\n  //============================================\\n  // Create an Observable Reference\\n  // to the current set of Todo instances\\n  //============================================\\n  public todos$: Observable<Todo[]> = this.todoStore.observe();\\n\\n  //============================================\\n  // References for our remaining Observable state\\n  //============================================\\n  public completeTodos$: Observable<Todo[]>;\\n  public incompleteTodos$: Observable<Todo[]>;\\n  public selectedTodos$: Observable<Todo[]>;\\n\\n  //============================================\\n  // Observable state for when all Todo instances\\n  // have been marked as completed\\n  //============================================\\n  public finito$: Observable<boolean>;\\n\\n  constructor() {\\n    //============================================\\n    // Initialize Entity Store Slices\\n    //============================================\\n    this.todoStore.addSlice((todo) => todo.completed, TodoSliceEnum.COMPLETE);\\n    this.todoStore.addSlice(\\n      (todo) => !todo.completed,\\n      TodoSliceEnum.INCOMPLETE\\n    );\\n\\n    //============================================\\n    // Observe Entity Store Slices\\n    //============================================\\n    this.completeTodos$ = this.todoStore\\n      .getSlice(TodoSliceEnum.COMPLETE)\\n      .observe();\\n\\n    this.incompleteTodos$ = this.todoStore\\n      .getSlice(TodoSliceEnum.INCOMPLETE)\\n      .observe();\\n\\n    //============================================\\n    // Observe the Selected Todo category\\n    //============================================\\n    this.selectedTodos$ = combineLatest([\\n      this.activeFilter$,\\n      this.completeTodos$,\\n      this.incompleteTodos$,\\n      this.todos$,\\n    ]).pipe(\\n      map((arr) => {\\n        return this.applyFilter(arr[0], arr[1], arr[2], arr[3]);\\n      })\\n    );\\n\\n    //============================================\\n    // Observe whether all Todo instances\\n    // have been completed\\n    //============================================\\n    this.finito$ = combineLatest([this.completeTodos$, this.todos$]).pipe(\\n      map((arr) => {\\n        return this.isComplete(arr[0], arr[1]);\\n      })\\n    );\\n  }\\n\\n  public applyFilter(filter, completeTodos, incompleteTodos, todos): Todo[] {\\n    switch (filter) {\\n      case VISIBILITY_FILTER.SHOW_COMPLETED:\\n        return completeTodos;\\n      case VISIBILITY_FILTER.SHOW_ACTIVE:\\n        return incompleteTodos;\\n      default:\\n        return todos;\\n    }\\n  }\\n\\n  isComplete(completeTodos: Todo[], todos: Todo[]): boolean {\\n    if (todos.length > 0) {\\n      return completeTodos.length == todos.length ? true : false;\\n    }\\n    return false;\\n  }\\n\\n  //============================================\\n  // State API Methods\\n  //============================================\\n  complete(todo: Todo) {\\n    this.todoStore.put(todo);\\n  }\\n  add(title: string) {\\n    const todo = new Todo(title, false);\\n    this.todoStore.post(todo);\\n  }\\n  delete(todo: Todo) {\\n    this.todoStore.delete(todo);\\n  }\\n}\\n```\\n\\n## Object Store\\n\\nThe [object store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store) is used to model the state of the currently active filter.\\n\\nWe initialize the store like this:\\n\\n```\\nSTART: OStoreStart = {\\n  ACTIVE_FILTER_KEY: {\\n    value: VISIBILITY_FILTER.SHOW_ALL,\\n    reset: VISIBILITY_FILTER.SHOW_ALL,\\n  },\\n};\\npublic OS: OStore<ISTART> = new OStore(this.START);\\n//============================================\\n// Observe the Active Filter\\n//============================================\\npublic activeFilter$: Observable<VISIBILITY_FILTER> = this.OS.observe(\\n  this.START.ACTIVE_FILTER_KEY\\n);\\n```\\n\\nAnd we create an `Observable` of the currently active filter value like this:\\n\\n```\\npublic activeFilter$: Observable<VISIBILITY_FILTER> = this.OS.observe(\\n  this.START.ACTIVE_FILTER_KEY\\n);\\n```\\n\\nFor more info on how this works see [Introduction to the Firefly Semantics Slice Reactive Object Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store).\\n\\n## Entity Store\\n\\n\\nThe `Todo` entity store is initialized like this:\\n```\\npublic todoStore: EStore<Todo> = new EStore<Todo>();\\n```\\n\\nAnd the slices used to observe active and complete Todo entities are initialized like this:\\n\\n```\\nthis.todoStore.addSlice(\\n    (todo) => todo.completed, \\n    TodoSliceEnum.COMPLETE);\\nthis.todoStore.addSlice(\\n    (todo) => !todo.completed,\\n    TodoSliceEnum.INCOMPLETE\\n);\\n```\\n\\nFor more details on the Entity Store (EStore) API see [Introduction to the Firefly Semantics Slice Reactive Entity Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-entity-store).\\n\\n## Observable Todo State\\n\\nWe create an observable for all the `Todo` instances in the store like this:\\n```\\npublic todos$: Observable<Todo[]> = this.todoStore.observe()\\n```\\n\\nThe completed `Todo` instance are observed by getting the corresponding slice and observing it like this:\\n```\\nthis.completeTodos$ = this.todoStore\\n.getSlice(TodoSliceEnum.COMPLETE).observe();\\n```\\n\\nThe active Todo instance are observed by getting the corresponding slice and observing it like this:\\n```\\nthis.incompleteTodos$ = this.todoStore      .getSlice(TodoSliceEnum.INCOMPLETE).observe();\\n```\\nIn order to be able to react to and render the `Todo` instances based on the filter selection we listen for filter selection events using combineLatest:\\n\\n```\\nthis.selectedTodos$ = combineLatest([\\n  this.activeFilter$,\\n  this.completeTodos$,\\n  this.incompleteTodos$,\\n  this.todos$,\\n]).pipe(\\n  map((arr) => {\\n    return this.applyFilter(arr[0], arr[1], arr[2], arr[3]);\\n  })\\n);\\n```\\n\\nFinally in order to notify when all Todo instances have been marked as completed we observe the `finito$` observable:\\n```\\nthis.finito$ = combineLatest(\\n    [this.completeTodos$, this.todos$]).\\n    pipe(map( (arr) => {        \\n        return this.isComplete(arr[0], arr[1]);      \\n   })    \\n);\\n```\\n\\nThe `isComplete` function checks whether the length of the todo array containing all the Todo instances equals the length of the `Todo` instances in the slice that contains `Todo` instances marked as `completed`.\\n\\nThe remaining methods ( `add` , `delete`, and `complete` are used by our components to update application state.\\n\\n\\n\\n\\n\\n\\n\\n# Components\\n\\n## Add Component\\n\\nThe `components/add.component.ts` is used to add `Todo` instances to the entity store:\\n\\nThe input control is bound to the `keydown.enter` event and when the user presses enter `addTodo()` on the state service is called with the value of the input control.\\n```\\naddTodo() {\\n   this.s.add(this.titleControl.value);\\n   this.titleControl.reset();\\n}\\n```\\n\\n## Filter Component\\n\\nThe filter component `components/filter.component.ts` is used to select the current `Todo` filter:\\n\\nThe `control` is initialized by the currently active filter value stored in the state service:\\n```\\nthis.active = this.s.OS.snapshot(this.s.OS.S.ACTIVE_FILTER_KEY);    \\nthis.control = new FormControl(this.active);\\n```\\n\\nThe state service is updated with user selected values like this:\\n```\\nthis.control.valueChanges.pipe(untilDestroyed(this)).subscribe((c) => {\\n      this.s.OS.put(this.s.OS.S.ACTIVE_FILTER_KEY, c);    \\n});\\n```\\n\\n## Todos Component\\n\\nThe `components/todos.component.ts` renders all the `Todo` instances in the entity store based on the current filter selection:\\n\\n```\\nimport { ChangeDetectionStrategy, Component } from \'@angular/core\';\\nimport { StateService } from \'../services/state.service\';\\n\\n@Component({\\n  selector: \'app-todos\',\\n  template: `\\n    <div class=\\"collection with-header\\">\\n      <h4 class=\\"collection-header\\">Todos:</h4>\\n      <app-todo *ngFor=\\"let todo of s.selectedTodos$ | async;\\"\\n                class=\\"collection-item\\"\\n                [todo]=\\"todo\\"></app-todo>\\n    </div>`,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TodosComponent {\\n  constructor(public s: StateService) {}\\n}\\n```\\n\\n\\nThe template accesses the selected `Todo` instances directly from the state service:\\n```\\n<app-todo *ngFor=\\"let todo of s.selectedTodos$ | async;\\"\\n          class=\\"collection-item\\"[todo]=\\"todo\\">\\n</app-todo>\\n```\\n\\n## Todo Component\\n\\nThe `components/todo.component.ts` is used to render each `Todo` instances contained in the entity store. It also contains a `delete` button and allows the `Todo` instance to be marked as `completed`:\\n\\nThe component receives the `Todo` instance it renders via the `todo:Todo` input property.\\n\\nThe `control` checkbox is initialized with the `completed` property of the `Todo` instance bound to the `control` via the `todo` input property.\\n\\nThe `control` checkbox is subscribed to and the value of the `completed` property of the `Todo` instance is updated when the user clicks on the control:\\n```\\nthis.control.valueChanges.pipe(untilDestroyed(this)).subscribe(\\n   (completed: boolean) => {        \\n       this.todo.completed = completed;\\n       this.complete();      \\n});\\n```\\n\\n## App Component\\n\\nIn `app.component.ts` we inject the state service in order to be able to detect when all the `Todo` instances have been marked as completed:\\n\\n```\\nexport class AppComponent {\\n    constructor(public s: StateService) {}\\n}\\n```\\n\\nFinally we put it all together in `app.component.html`:\\n```\\n<div style=\\"margin: 2rem;\\">\\n    <app-add-todo></app-add-todo>\\n    <app-todos-filter></app-todos-filter>\\n    <app-todos></app-todos>\\n    <div *ngIf=\\"s.finito$ | async\\">Finito!</div>\\n</div>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-ekv3yt\\">\\n</fs-link-preview>\\n","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>This articles guides us through how to go about building a minimal reactive <strong>Angular Todo</strong> application with the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice State Manager</a>.</p>\\n<p>We have also created a <a href=\'https://youtu.be/Y3AxSIiBdWg\'>Todo Application Youtube Tutorial</a>.</p>\\n<p>The application allows us to add <code>Todo</code> instances / entities and also <i>Slice</i> the rendering of the instances using the categories <code>All</code>, <code>Completed</code>, and <code>Active</code>.</p>\\n<p>If the <code>All</code> filter is selected then all the <code>Todo</code> instances will be rendered regardless of whether they have been marked as <code>Completed</code> or not.</p>\\n<p>If the <code>Completed</code> filter is selected then only <code>Completed</code> <code>Todo</code> instances are rendered, and if their <code>checkbox</code> is unchecked, then the Todo instance will be hidden reactively.</p>\\n<p>If the <code>Active</code> filter is selected then only <code>Active</code> <code>Todo</code> instances are rendered, and if their <code>checkbox</code> is checked, then the <code>Todo</code> instance will be hidden reactively.</p>\\n<p>Also <code>Finito!</code> is rendered at the bottom of the application when all of the <code>Todo</code> instances have been marked as completed.</p>\\n<p>Here is the Stackblitz Demo of what we will be creating:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-ekv3yt\'>\\n</fs-link-preview></p>\\n<h1 id=\'ux-and-styling\'>UX and Styling</h1>\\n<p>We will be using <a href=\'https://materializecss.com/\'>MaterializeCSS</a> for styling.</p>\\n<p>In our Stackblitz we have added the following to our <code>index.html</code>:</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css&quot;&gt;\\n</code></pre>\\n<h1 id=\'dependencies\'>Dependencies</h1>\\n<p>First install Firefly Semantics Slice and the peer dependencies:</p>\\n<pre><code>npm i @fireflysemantics/slice @types/nanoid nanoid\\n</code></pre>\\n<p>In order to unsubscribe from our component observable state we will use the package <a href=\'https://www.npmjs.com/package/@ngneat/until-destroy\'>@ngneat/until-destroy</a>.</p>\\n<p>Since Angular already includes RxJS we don\u2019t need to install it.</p>\\n<h1 id=\'model\'>Model</h1>\\n<h2 id=\'visibility-filter\'>Visibility Filter</h2>\\n<p>The <code>VISIBILITY_FILTER</code> <code>enum</code> below is used to provide the <code>filter.component.ts</code> with values that are used to reactively filter the list of <code>Todo</code> instances.</p>\\n<p>The code is contained within <code>model/todo-filter.enum.ts</code>:</p>\\n<pre><code>export enum VISIBILITY_FILTER {\\n    SHOW_COMPLETED = &#39;Completed&#39;,\\n    SHOW_ACTIVE = &#39;Active&#39;,\\n    SHOW_ALL = &#39;All&#39;\\n}\\n</code></pre>\\n<h2 id=\'visibility-filter-values\'>Visibility Filter Values</h2>\\n<p>In order to get the selectable values used to populate the select dropdown <code>control</code> we will create <code>model/todo-filter-values.function.ts</code>:</p>\\n<pre><code>import { VISIBILITY_FILTER } from &#39;./todo-filter.enum&#39;;\\nexport function VISIBILITY_FILTER_VALUES(): string[] {\\n    return Object.keys(VISIBILITY_FILTER).map((k) =&gt;\\n           VISIBILITY_FILTER[k]);\\n}\\n</code></pre>\\n<h2 id=\'slices\'>Slices</h2>\\n<p>The <code>Entity</code> slices for separating <code>complete</code> and <code>incomplete</code> <code>Todo</code> instances are modeled in <code>model/todo-slices.enum.ts</code>:</p>\\n<pre><code>/**\\n * The Slice Keys\\n */\\nexport const enum TodoSliceEnum {\\n    COMPLETE = &#39;Complete&#39;,\\n    INCOMPLETE = &#39;Incomplete&#39;\\n}\\n</code></pre>\\n<p>We use this to initialize the Slice predicates of the entity store like this:</p>\\n<pre><code>this.todoStore.addSlice((todo) =&gt; todo.completed,\\n    TodoSliceEnum.COMPLETE);\\nthis.todoStore.addSlice((todo) =&gt; !todo.completed,\\n    TodoSliceEnum.INCOMPLETE);\\n</code></pre>\\n<h2 id=\'todo-class\'>Todo Class</h2>\\n<p>The <code>Todo</code> class is modeled in <code>model/Todo.class</code>:</p>\\n<pre><code>/**\\n * The Todo Model\\n */\\nexport class Todo {\\n  gid: string;\\n  constructor(public title: string, public completed: boolean) {}\\n}\\n</code></pre>\\n<h1 id=\'state-service\'>State Service</h1>\\n<p>We will create our application state service in <code>services/state.service.ts</code>:</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { combineLatest, Observable } from &#39;rxjs&#39;;\\nimport { map } from &#39;rxjs/operators&#39;;\\nimport {\\n  KeyObsValueReset,\\n  ObsValueReset,\\n  OStore,\\n  EStore,\\n  OStoreStart,\\n} from &#39;@fireflysemantics/slice&#39;;\\n\\nimport { VISIBILITY_FILTER } from &#39;../model/todo-filter.enum&#39;;\\nimport { Todo } from &#39;../model/todo.class&#39;;\\nimport { TodoSliceEnum } from &#39;../model/todo-slices.enum&#39;;\\n\\ninterface ISTART extends KeyObsValueReset {\\n  ACTIVE_FILTER_KEY: ObsValueReset;\\n}\\n\\n@Injectable({\\n  providedIn: &#39;root&#39;,\\n})\\nexport class StateService {\\n  //============================================\\n  // Define the Object Store\\n  //============================================\\n  START: OStoreStart = {\\n    ACTIVE_FILTER_KEY: {\\n      value: VISIBILITY_FILTER.SHOW_ALL,\\n      reset: VISIBILITY_FILTER.SHOW_ALL,\\n    },\\n  };\\n  public OS: OStore&lt;ISTART&gt; = new OStore(this.START);\\n  //============================================\\n  // Observe the Active Filter\\n  //============================================\\n  public activeFilter$: Observable&lt;VISIBILITY_FILTER&gt; = this.OS.observe(\\n    this.START.ACTIVE_FILTER_KEY\\n  );\\n\\n  //============================================\\n  // Define the Todo Entity Store\\n  //============================================\\n  public todoStore: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;();\\n  //============================================\\n  // Create an Observable Reference\\n  // to the current set of Todo instances\\n  //============================================\\n  public todos$: Observable&lt;Todo[]&gt; = this.todoStore.observe();\\n\\n  //============================================\\n  // References for our remaining Observable state\\n  //============================================\\n  public completeTodos$: Observable&lt;Todo[]&gt;;\\n  public incompleteTodos$: Observable&lt;Todo[]&gt;;\\n  public selectedTodos$: Observable&lt;Todo[]&gt;;\\n\\n  //============================================\\n  // Observable state for when all Todo instances\\n  // have been marked as completed\\n  //============================================\\n  public finito$: Observable&lt;boolean&gt;;\\n\\n  constructor() {\\n    //============================================\\n    // Initialize Entity Store Slices\\n    //============================================\\n    this.todoStore.addSlice((todo) =&gt; todo.completed, TodoSliceEnum.COMPLETE);\\n    this.todoStore.addSlice(\\n      (todo) =&gt; !todo.completed,\\n      TodoSliceEnum.INCOMPLETE\\n    );\\n\\n    //============================================\\n    // Observe Entity Store Slices\\n    //============================================\\n    this.completeTodos$ = this.todoStore\\n      .getSlice(TodoSliceEnum.COMPLETE)\\n      .observe();\\n\\n    this.incompleteTodos$ = this.todoStore\\n      .getSlice(TodoSliceEnum.INCOMPLETE)\\n      .observe();\\n\\n    //============================================\\n    // Observe the Selected Todo category\\n    //============================================\\n    this.selectedTodos$ = combineLatest([\\n      this.activeFilter$,\\n      this.completeTodos$,\\n      this.incompleteTodos$,\\n      this.todos$,\\n    ]).pipe(\\n      map((arr) =&gt; {\\n        return this.applyFilter(arr[0], arr[1], arr[2], arr[3]);\\n      })\\n    );\\n\\n    //============================================\\n    // Observe whether all Todo instances\\n    // have been completed\\n    //============================================\\n    this.finito$ = combineLatest([this.completeTodos$, this.todos$]).pipe(\\n      map((arr) =&gt; {\\n        return this.isComplete(arr[0], arr[1]);\\n      })\\n    );\\n  }\\n\\n  public applyFilter(filter, completeTodos, incompleteTodos, todos): Todo[] {\\n    switch (filter) {\\n      case VISIBILITY_FILTER.SHOW_COMPLETED:\\n        return completeTodos;\\n      case VISIBILITY_FILTER.SHOW_ACTIVE:\\n        return incompleteTodos;\\n      default:\\n        return todos;\\n    }\\n  }\\n\\n  isComplete(completeTodos: Todo[], todos: Todo[]): boolean {\\n    if (todos.length &gt; 0) {\\n      return completeTodos.length == todos.length ? true : false;\\n    }\\n    return false;\\n  }\\n\\n  //============================================\\n  // State API Methods\\n  //============================================\\n  complete(todo: Todo) {\\n    this.todoStore.put(todo);\\n  }\\n  add(title: string) {\\n    const todo = new Todo(title, false);\\n    this.todoStore.post(todo);\\n  }\\n  delete(todo: Todo) {\\n    this.todoStore.delete(todo);\\n  }\\n}\\n</code></pre>\\n<h2 id=\'object-store\'>Object Store</h2>\\n<p>The <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store\'>object store</a> is used to model the state of the currently active filter.</p>\\n<p>We initialize the store like this:</p>\\n<pre><code>START: OStoreStart = {\\n  ACTIVE_FILTER_KEY: {\\n    value: VISIBILITY_FILTER.SHOW_ALL,\\n    reset: VISIBILITY_FILTER.SHOW_ALL,\\n  },\\n};\\npublic OS: OStore&lt;ISTART&gt; = new OStore(this.START);\\n//============================================\\n// Observe the Active Filter\\n//============================================\\npublic activeFilter$: Observable&lt;VISIBILITY_FILTER&gt; = this.OS.observe(\\n  this.START.ACTIVE_FILTER_KEY\\n);\\n</code></pre>\\n<p>And we create an <code>Observable</code> of the currently active filter value like this:</p>\\n<pre><code>public activeFilter$: Observable&lt;VISIBILITY_FILTER&gt; = this.OS.observe(\\n  this.START.ACTIVE_FILTER_KEY\\n);\\n</code></pre>\\n<p>For more info on how this works see <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store\'>Introduction to the Firefly Semantics Slice Reactive Object Store</a>.</p>\\n<h2 id=\'entity-store\'>Entity Store</h2>\\n<p>The <code>Todo</code> entity store is initialized like this:</p>\\n<pre><code>public todoStore: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;();\\n</code></pre>\\n<p>And the slices used to observe active and complete Todo entities are initialized like this:</p>\\n<pre><code>this.todoStore.addSlice(\\n    (todo) =&gt; todo.completed, \\n    TodoSliceEnum.COMPLETE);\\nthis.todoStore.addSlice(\\n    (todo) =&gt; !todo.completed,\\n    TodoSliceEnum.INCOMPLETE\\n);\\n</code></pre>\\n<p>For more details on the Entity Store (EStore) API see <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-entity-store\'>Introduction to the Firefly Semantics Slice Reactive Entity Store</a>.</p>\\n<h2 id=\'observable-todo-state\'>Observable Todo State</h2>\\n<p>We create an observable for all the <code>Todo</code> instances in the store like this:</p>\\n<pre><code>public todos$: Observable&lt;Todo[]&gt; = this.todoStore.observe()\\n</code></pre>\\n<p>The completed <code>Todo</code> instance are observed by getting the corresponding slice and observing it like this:</p>\\n<pre><code>this.completeTodos$ = this.todoStore\\n.getSlice(TodoSliceEnum.COMPLETE).observe();\\n</code></pre>\\n<p>The active Todo instance are observed by getting the corresponding slice and observing it like this:</p>\\n<pre><code>this.incompleteTodos$ = this.todoStore      .getSlice(TodoSliceEnum.INCOMPLETE).observe();\\n</code></pre>\\n<p>In order to be able to react to and render the <code>Todo</code> instances based on the filter selection we listen for filter selection events using combineLatest:</p>\\n<pre><code>this.selectedTodos$ = combineLatest([\\n  this.activeFilter$,\\n  this.completeTodos$,\\n  this.incompleteTodos$,\\n  this.todos$,\\n]).pipe(\\n  map((arr) =&gt; {\\n    return this.applyFilter(arr[0], arr[1], arr[2], arr[3]);\\n  })\\n);\\n</code></pre>\\n<p>Finally in order to notify when all Todo instances have been marked as completed we observe the <code>finito$</code> observable:</p>\\n<pre><code>this.finito$ = combineLatest(\\n    [this.completeTodos$, this.todos$]).\\n    pipe(map( (arr) =&gt; {        \\n        return this.isComplete(arr[0], arr[1]);      \\n   })    \\n);\\n</code></pre>\\n<p>The <code>isComplete</code> function checks whether the length of the todo array containing all the Todo instances equals the length of the <code>Todo</code> instances in the slice that contains <code>Todo</code> instances marked as <code>completed</code>.</p>\\n<p>The remaining methods ( <code>add</code> , <code>delete</code>, and <code>complete</code> are used by our components to update application state.</p>\\n<h1 id=\'components\'>Components</h1>\\n<h2 id=\'add-component\'>Add Component</h2>\\n<p>The <code>components/add.component.ts</code> is used to add <code>Todo</code> instances to the entity store:</p>\\n<p>The input control is bound to the <code>keydown.enter</code> event and when the user presses enter <code>addTodo()</code> on the state service is called with the value of the input control.</p>\\n<pre><code>addTodo() {\\n   this.s.add(this.titleControl.value);\\n   this.titleControl.reset();\\n}\\n</code></pre>\\n<h2 id=\'filter-component\'>Filter Component</h2>\\n<p>The filter component <code>components/filter.component.ts</code> is used to select the current <code>Todo</code> filter:</p>\\n<p>The <code>control</code> is initialized by the currently active filter value stored in the state service:</p>\\n<pre><code>this.active = this.s.OS.snapshot(this.s.OS.S.ACTIVE_FILTER_KEY);    \\nthis.control = new FormControl(this.active);\\n</code></pre>\\n<p>The state service is updated with user selected values like this:</p>\\n<pre><code>this.control.valueChanges.pipe(untilDestroyed(this)).subscribe((c) =&gt; {\\n      this.s.OS.put(this.s.OS.S.ACTIVE_FILTER_KEY, c);    \\n});\\n</code></pre>\\n<h2 id=\'todos-component\'>Todos Component</h2>\\n<p>The <code>components/todos.component.ts</code> renders all the <code>Todo</code> instances in the entity store based on the current filter selection:</p>\\n<pre><code>import { ChangeDetectionStrategy, Component } from &#39;@angular/core&#39;;\\nimport { StateService } from &#39;../services/state.service&#39;;\\n\\n@Component({\\n  selector: &#39;app-todos&#39;,\\n  template: `\\n    &lt;div class=&quot;collection with-header&quot;&gt;\\n      &lt;h4 class=&quot;collection-header&quot;&gt;Todos:&lt;/h4&gt;\\n      &lt;app-todo *ngFor=&quot;let todo of s.selectedTodos$ | async;&quot;\\n                class=&quot;collection-item&quot;\\n                [todo]=&quot;todo&quot;&gt;&lt;/app-todo&gt;\\n    &lt;/div&gt;`,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class TodosComponent {\\n  constructor(public s: StateService) {}\\n}\\n</code></pre>\\n<p>The template accesses the selected <code>Todo</code> instances directly from the state service:</p>\\n<pre><code>&lt;app-todo *ngFor=&quot;let todo of s.selectedTodos$ | async;&quot;\\n          class=&quot;collection-item&quot;[todo]=&quot;todo&quot;&gt;\\n&lt;/app-todo&gt;\\n</code></pre>\\n<h2 id=\'todo-component\'>Todo Component</h2>\\n<p>The <code>components/todo.component.ts</code> is used to render each <code>Todo</code> instances contained in the entity store. It also contains a <code>delete</code> button and allows the <code>Todo</code> instance to be marked as <code>completed</code>:</p>\\n<p>The component receives the <code>Todo</code> instance it renders via the <code>todo:Todo</code> input property.</p>\\n<p>The <code>control</code> checkbox is initialized with the <code>completed</code> property of the <code>Todo</code> instance bound to the <code>control</code> via the <code>todo</code> input property.</p>\\n<p>The <code>control</code> checkbox is subscribed to and the value of the <code>completed</code> property of the <code>Todo</code> instance is updated when the user clicks on the control:</p>\\n<pre><code>this.control.valueChanges.pipe(untilDestroyed(this)).subscribe(\\n   (completed: boolean) =&gt; {        \\n       this.todo.completed = completed;\\n       this.complete();      \\n});\\n</code></pre>\\n<h2 id=\'app-component\'>App Component</h2>\\n<p>In <code>app.component.ts</code> we inject the state service in order to be able to detect when all the <code>Todo</code> instances have been marked as completed:</p>\\n<pre><code>export class AppComponent {\\n    constructor(public s: StateService) {}\\n}\\n</code></pre>\\n<p>Finally we put it all together in <code>app.component.html</code>:</p>\\n<pre><code>&lt;div style=&quot;margin: 2rem;&quot;&gt;\\n    &lt;app-add-todo&gt;&lt;/app-add-todo&gt;\\n    &lt;app-todos-filter&gt;&lt;/app-todos-filter&gt;\\n    &lt;app-todos&gt;&lt;/app-todos&gt;\\n    &lt;div *ngIf=&quot;s.finito$ | async&quot;&gt;Finito!&lt;/div&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-ekv3yt\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/7/2022","headerImage":"manta-573739_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/manta-573739_1920.jpg","title":"Creating a Reactive Todo Application With the Firefly Semantics Slice State Manager","readingTime":9,"wordCount":1728},{"category":"Guides","type":"guide","md5":"89e28ccb1fd122d2e168fa2563bb6577","filename":"managing-active-entities-with-firefly-semantics-slice.md","path":"guides/slice/managing-active-entities-with-firefly-semantics-slice.md","id":"guides--slice--managing-active-entities-with-firefly-semantics-slice","markdown":"\\n# Introduction\\n\\nWhen we are managing entity state (`Customer`s, `Friend`s, `Message`s, `User`s, `Task`s, etc.) quite often we wish to mark some of them as `active`.\\n\\nFor example Facebook shows which friends are currently `active`.\\n\\nIn this guide we will review how active `Todo` entities are managed with the [Firefly Semantics Slice](https://www.npmjs.com/package/@fireflysemantics/slice) Active Entity API.\\n\\nWe will be using a pure Typescript Stackblitz playground for the guide examples.\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Firefly Semantics Slice Entity Store Active API\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-slice-active-entity-fs-dt55hs?file=index.ts\\">\\n</fs-link-preview>\\n\\n We recommend opening the Stackblitz in a separate tab and trying out the examples while going through this guide.\\n\\n# Adding Active Entities\\n\\nThe Todo entity model we will be using is as follows.\\n\\n```\\nexport class Todo {\\nconstructor(\\n    public complete: boolean, \\n    public title: string,\\n    public gid?: string\\n) {}\\n}\\n```\\n\\nLet\u2019s add a few `Todo` entity instances to our entity `todoStore`.\\n\\n```\\nconst todoStore: EStore<Todo> = new EStore<Todo>();\\nconst todo1 = new Todo(false, \'Finish it!\');\\nconst todo2 = new Todo(false, \'Just do it!\');\\nconst todos = [todo1, todo2];\\n```\\n\\nAnd also track both entities as being active.\\n\\n```\\ntodoStore.addActive(todo1);\\ntodoStore.addActive(todo2);\\n```\\n\\nWe are now tracking both entities as being `active`.\\n\\nSince the `active` entities are indexed by their global id (`gid`), we can can retrieve an active entity is from our entity store `active:Map` instance like this.\\n\\n```\\nconst active1 = todoStore.active.get(todo1.gid);\\nconsole.log(active1);\\n```\\n\\nWe can also retrieve a snapshot of all active entities like this.\\n\\n```\\nconst activeTodos: Todo[] = todoStore.activeSnapshot();\\nconsole.log(activeTodos);\\n```\\n\\n# Deleting Active Entities\\n\\nWe can remove an active entity like this.\\n\\n```\\ntodoStore.deleteActive(todo1);\\n```\\n\\nNote that even though it has been removed from the `Map` of `active` `Todo` instances, it is still in the `todoStore`. \\n\\nIf we wanted to remove it from the store we would need to call `todoStore.delete(todo1)` and this would also remove it from our `Map` of `active` entities.\\n\\n# Observing Active Entities\\n\\nWe can observe our active entities.\\n\\n```\\nlet active$: Observable<Map<string, Todo>> = todoStore.observeActive();\\nactive$.subscribe((m: Map<string, Todo>) => {\\n    const activeTodos: Todo[] = Array.from(m.values());\\n    //console.log(`OBSERVED ENTITIES`);\\n    //console.log(JSON.stringify(activeTodos));\\n});\\n```\\n\\nAfter adding the above `subscription` the `activeTodos` array will be logged immediately.\\n\\nIf we add another `Todo` instance to the store and also mark it as active the subscription will fire again.\\n\\n```\\ntodoStore.post(todo3);\\ntodoStore.addActive(todo3);\\n```\\n\\nIf we remove an `active` entity the `subscription` will fire with the entity removed.\\n\\n```\\ntodoStore.deleteActive(todo3);\\n```\\n\\nAnd if we remove a `active` `Todo` entity from the store, the subscription will fire letting us know that the entity has been removed from the observed `active` entities as well.\\n\\n```\\ntodoStore.delete(todo1);\\n```","html":"<h1 id=\'introduction\'>Introduction</h1>\\n<p>When we are managing entity state (<code>Customer</code>s, <code>Friend</code>s, <code>Message</code>s, <code>User</code>s, <code>Task</code>s, etc.) quite often we wish to mark some of them as <code>active</code>.</p>\\n<p>For example Facebook shows which friends are currently <code>active</code>.</p>\\n<p>In this guide we will review how active <code>Todo</code> entities are managed with the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice</a> Active Entity API.</p>\\n<p>We will be using a pure Typescript Stackblitz playground for the guide examples.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Firefly Semantics Slice Entity Store Active API\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-slice-active-entity-fs-dt55hs?file=index.ts\'>\\n</fs-link-preview></p>\\n<p> We recommend opening the Stackblitz in a separate tab and trying out the examples while going through this guide.</p>\\n<h1 id=\'adding-active-entities\'>Adding Active Entities</h1>\\n<p>The Todo entity model we will be using is as follows.</p>\\n<pre><code>export class Todo {\\nconstructor(\\n    public complete: boolean, \\n    public title: string,\\n    public gid?: string\\n) {}\\n}\\n</code></pre>\\n<p>Let\u2019s add a few <code>Todo</code> entity instances to our entity <code>todoStore</code>.</p>\\n<pre><code>const todoStore: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;();\\nconst todo1 = new Todo(false, &#39;Finish it!&#39;);\\nconst todo2 = new Todo(false, &#39;Just do it!&#39;);\\nconst todos = [todo1, todo2];\\n</code></pre>\\n<p>And also track both entities as being active.</p>\\n<pre><code>todoStore.addActive(todo1);\\ntodoStore.addActive(todo2);\\n</code></pre>\\n<p>We are now tracking both entities as being <code>active</code>.</p>\\n<p>Since the <code>active</code> entities are indexed by their global id (<code>gid</code>), we can can retrieve an active entity is from our entity store <code>active:Map</code> instance like this.</p>\\n<pre><code>const active1 = todoStore.active.get(todo1.gid);\\nconsole.log(active1);\\n</code></pre>\\n<p>We can also retrieve a snapshot of all active entities like this.</p>\\n<pre><code>const activeTodos: Todo[] = todoStore.activeSnapshot();\\nconsole.log(activeTodos);\\n</code></pre>\\n<h1 id=\'deleting-active-entities\'>Deleting Active Entities</h1>\\n<p>We can remove an active entity like this.</p>\\n<pre><code>todoStore.deleteActive(todo1);\\n</code></pre>\\n<p>Note that even though it has been removed from the <code>Map</code> of <code>active</code> <code>Todo</code> instances, it is still in the <code>todoStore</code>. </p>\\n<p>If we wanted to remove it from the store we would need to call <code>todoStore.delete(todo1)</code> and this would also remove it from our <code>Map</code> of <code>active</code> entities.</p>\\n<h1 id=\'observing-active-entities\'>Observing Active Entities</h1>\\n<p>We can observe our active entities.</p>\\n<pre><code>let active$: Observable&lt;Map&lt;string, Todo&gt;&gt; = todoStore.observeActive();\\nactive$.subscribe((m: Map&lt;string, Todo&gt;) =&gt; {\\n    const activeTodos: Todo[] = Array.from(m.values());\\n    //console.log(`OBSERVED ENTITIES`);\\n    //console.log(JSON.stringify(activeTodos));\\n});\\n</code></pre>\\n<p>After adding the above <code>subscription</code> the <code>activeTodos</code> array will be logged immediately.</p>\\n<p>If we add another <code>Todo</code> instance to the store and also mark it as active the subscription will fire again.</p>\\n<pre><code>todoStore.post(todo3);\\ntodoStore.addActive(todo3);\\n</code></pre>\\n<p>If we remove an <code>active</code> entity the <code>subscription</code> will fire with the entity removed.</p>\\n<pre><code>todoStore.deleteActive(todo3);\\n</code></pre>\\n<p>And if we remove a <code>active</code> <code>Todo</code> entity from the store, the subscription will fire letting us know that the entity has been removed from the observed <code>active</code> entities as well.</p>\\n<pre><code>todoStore.delete(todo1);\\n</code></pre>\\n","summary":"Firefly Semantics Slice Entity Store Active API Guide.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/11/2022","headerImage":"green-lizard-5370821_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/green-lizard-5370821_1920.jpg","title":"Firefly Semantics Slice Entity Store Active API","readingTime":3,"wordCount":478}],"tasks":[{"category":"Tasks","type":"task","md5":"8953892ef54535a378a8d53ab692f1a3","filename":"accessing-the-component-host-element-via-constructor-injection.md","path":"tasks/angular/accessing-the-component-host-element-via-constructor-injection.md","id":"tasks--angular--accessing-the-component-host-element-via-constructor-injection","markdown":"\\nWe wish to know the `height` and `width` of our HelloComponent host element.\\n\\n# Approach\\n\\nGet the host element via constructor injection:\\n\\n```\\n@Component({\\n    selector: \'hello\',\\n...\\nexport class HelloComponent{\\n    constructor(private hostElement: ElementRef) {}\\nngOnInit() {\\n    const styles = getComputedStyle(this.hostElement.nativeElement);\\n    console.log(\\"Height\\", styles.height);\\n    console.log(\\"Width\\", styles.width);\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Accessing the Component Host Element Via Constructor Injection\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We wish to know the <code>height</code> and <code>width</code> of our HelloComponent host element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Get the host element via constructor injection:</p>\\n<pre><code>@Component({\\n    selector: &#39;hello&#39;,\\n...\\nexport class HelloComponent{\\n    constructor(private hostElement: ElementRef) {}\\nngOnInit() {\\n    const styles = getComputedStyle(this.hostElement.nativeElement);\\n    console.log(&quot;Height&quot;, styles.height);\\n    console.log(&quot;Width&quot;, styles.width);\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Accessing the Component Host Element Via Constructor Injection\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Accessing the Component Host Element Via Constructor Injection.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"jellyfish-994487_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-994487_1920.jpg","title":"Accessing the Component Host Element Via Constructor Injection","readingTime":1,"wordCount":95},{"category":"Tasks","type":"task","md5":"2742214b7d02bbf6b5b6b14a3369954f","filename":"adding-aws-cognito-federated-login-with-google-using-aws-amplify.md","path":"tasks/angular/adding-aws-cognito-federated-login-with-google-using-aws-amplify.md","id":"tasks--angular--adding-aws-cognito-federated-login-with-google-using-aws-amplify","markdown":"\\nWe want a Google Social Login button in our Angular app.\\n\\n# Approach\\n\\nFirst [Configure the Amplify CLI](https://developer.fireflysemantics.com/tasks/tasks--aws--configuring-the-aws-amplify-cli).\\n\\n \\n\\n## Generate an Angular Project and Install Dependencies\\n\\nWill also be using Angular Material for our button:\\n\\n```\\nng new amplify-google-login-test\\nng add @angular/material\\nnpm install aws-amplify\\n```\\n\\n## Implement the Auth Service\\n\\n```\\nimport { Injectable } from \'@angular/core\'\\nimport Auth, { CognitoHostedUIIdentityProvider } from \'@aws-amplify/auth\'\\nimport { Hub, ICredentials } from \'@aws-amplify/core\'\\nimport { Subject, Observable } from \'rxjs\'\\nimport { CognitoUser } from \'amazon-cognito-identity-js\'\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AuthService {\\n  \\n  public loggedIn: boolean;\\n\\n  private _authState: Subject<CognitoUser|any> = new Subject<CognitoUser|any>();\\n  authState: Observable<CognitoUser|any> = this._authState.asObservable();\\n\\n  public static SIGN_IN = \'signIn\';\\n  public static SIGN_OUT = \'signOut\'; \\n\\n  constructor() { \\n    Hub.listen(\'auth\',(data) => {\\n      const { channel, payload } = data;\\n      if (channel === \'auth\') {\\n        this._authState.next(payload.event);\\n      }\\n    });\\n  }\\n  \\n  signOut(): Promise<any> {\\n    return Auth.signOut()\\n      .then(() => this.loggedIn = false)\\n  }\\n\\n  googleSocialSignIn():Promise<ICredentials> {\\n    return Auth.federatedSignIn({\\n      \'provider\': CognitoHostedUIIdentityProvider.Google\\n    });\\n  }\\n}\\n\\n```\\n\\nNow when the `AuthService` loads we check whether the user is signed in via `Hub` and if so we emit a `CognitoUser` via `_authState`.\\n\\n## Import the Material Button Module\\n\\nIn `app.module.ts`:\\n\\n```\\nimport { MatButtonModule } from \'@angular/material/button\';\\nimports: [\\n...\\n    MatButtonModule\\n]\\n```\\n\\n## Implement Signin\\n\\nInject the `AuthService` service and implement the `signInWithGoogle` function in `app.component.ts`:\\n\\n```\\nimport { Component } from \'@angular/core\';\\nimport { AuthService } from \'../auth.service\'\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\']\\n})\\nexport class AppComponent {\\n  title = \'amplify-google-login-test\';\\n  constructor(private auth: AuthService) {\\n  }\\n\\n  async signInWithGoogle() {\\n    const socialResult = \\n    await this.auth.googleSocialSignIn();\\n    console.log(\'google Result:\', socialResult);\\n  }\\n}\\n```\\n\\n## Create the Login Button\\n\\nCreate a Login with Google button in `app.component.html`:\\n\\n```\\n<button  mat-flat-button color=\\"accent\\"   \\n         (click)=\\"signInWithGoogle()\\">\\n    Login with Google\\n</button>\\n```\\n\\n## Add Amplify\\n\\n```\\namplify init\\n```\\n\\nHit Enter for all the suggestions.  Then [Complete the Google Social Provider Setup](https://docs.aws.amazon.com/cognito/latest/developerguide/google.html#set-up-google-1.javascript).\\n\\n## Add Auth\\n\\n```\\namplify add auth\\n```\\n\\nSelect `Default configuration with Social Provider (Federation)`.\\n\\nSelect `Email` for `How do you want users to sign in`.\\n\\nSelect `No I\'m done`.\\n\\nHit enter for the question `What domain name prefix you want us to create for you`?\\n\\nFor the redirect signin and signout URI use `http://localhost:4200/`\\n\\nWhen asked to Select the social providers you want to configure for your user pool choose `Google`.\\n\\nEnter the Google `clientid` and `Client Secret` setup in the Google Developer Console.\\n\\nRun `amplify push`.\\n\\nAWS Cognito is now ready. You may want to log into the AWS Developer Console, go to Cognito, select your pool, and perform user attribute mapping in order to capture all Google user attributes of users logging in to your application.\\n\\n[Follow this link](https://developer.fireflysemantics.com/tasks/tasks--angular--getting-angular-ready-for-aws-amplify) for instructions on how to completely the scaffoldling for Angular.\\n\\n## Final Step\\n\\n[Complete the Google Signin Instructions](https://aws-amplify.github.io/docs/js/cognito-hosted-ui-federated-identity#google-sign-in-instructions-1).\\n\\nOnce this step is done go back to the developer console.\\n\\nSelect the client created when obtaining the Google `client id` and `client secret`.\\n\\nOpen `src/aws-exports.js` and look for domain :\\n```\\n\\"oauth\\": {\\n   \\"domain\\": \\"googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com\\"\\n}\\n```\\n\\nPut that in authorized javascript origins . The value should be:\\n```\\nhttps://googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com\\n```\\n\\nFor `authorized redirect URIs` append `/oauth2/idpresponse` to the user pool domain resulting in:\\n```\\nhttps://googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com/oauth2/idpresponse\\n```\\n\\nThe setup is now complete and you should be able to login with the button.","html":"<p>We want a Google Social Login button in our Angular app.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First <a href=\'https://developer.fireflysemantics.com/tasks/tasks--aws--configuring-the-aws-amplify-cli\'>Configure the Amplify CLI</a>.</p>\\n<h2 id=\'generate-an-angular-project-and-install-dependencies\'>Generate an Angular Project and Install Dependencies</h2>\\n<p>Will also be using Angular Material for our button:</p>\\n<pre><code>ng new amplify-google-login-test\\nng add @angular/material\\nnpm install aws-amplify\\n</code></pre>\\n<h2 id=\'implement-the-auth-service\'>Implement the Auth Service</h2>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;\\nimport Auth, { CognitoHostedUIIdentityProvider } from &#39;@aws-amplify/auth&#39;\\nimport { Hub, ICredentials } from &#39;@aws-amplify/core&#39;\\nimport { Subject, Observable } from &#39;rxjs&#39;\\nimport { CognitoUser } from &#39;amazon-cognito-identity-js&#39;\\n\\n@Injectable({\\n  providedIn: &#39;root&#39;\\n})\\nexport class AuthService {\\n  \\n  public loggedIn: boolean;\\n\\n  private _authState: Subject&lt;CognitoUser|any&gt; = new Subject&lt;CognitoUser|any&gt;();\\n  authState: Observable&lt;CognitoUser|any&gt; = this._authState.asObservable();\\n\\n  public static SIGN_IN = &#39;signIn&#39;;\\n  public static SIGN_OUT = &#39;signOut&#39;; \\n\\n  constructor() { \\n    Hub.listen(&#39;auth&#39;,(data) =&gt; {\\n      const { channel, payload } = data;\\n      if (channel === &#39;auth&#39;) {\\n        this._authState.next(payload.event);\\n      }\\n    });\\n  }\\n  \\n  signOut(): Promise&lt;any&gt; {\\n    return Auth.signOut()\\n      .then(() =&gt; this.loggedIn = false)\\n  }\\n\\n  googleSocialSignIn():Promise&lt;ICredentials&gt; {\\n    return Auth.federatedSignIn({\\n      &#39;provider&#39;: CognitoHostedUIIdentityProvider.Google\\n    });\\n  }\\n}\\n</code></pre>\\n<p>Now when the <code>AuthService</code> loads we check whether the user is signed in via <code>Hub</code> and if so we emit a <code>CognitoUser</code> via <code>_authState</code>.</p>\\n<h2 id=\'import-the-material-button-module\'>Import the Material Button Module</h2>\\n<p>In <code>app.module.ts</code>:</p>\\n<pre><code>import { MatButtonModule } from &#39;@angular/material/button&#39;;\\nimports: [\\n...\\n    MatButtonModule\\n]\\n</code></pre>\\n<h2 id=\'implement-signin\'>Implement Signin</h2>\\n<p>Inject the <code>AuthService</code> service and implement the <code>signInWithGoogle</code> function in <code>app.component.ts</code>:</p>\\n<pre><code>import { Component } from &#39;@angular/core&#39;;\\nimport { AuthService } from &#39;../auth.service&#39;\\n\\n@Component({\\n  selector: &#39;app-root&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [&#39;./app.component.scss&#39;]\\n})\\nexport class AppComponent {\\n  title = &#39;amplify-google-login-test&#39;;\\n  constructor(private auth: AuthService) {\\n  }\\n\\n  async signInWithGoogle() {\\n    const socialResult = \\n    await this.auth.googleSocialSignIn();\\n    console.log(&#39;google Result:&#39;, socialResult);\\n  }\\n}\\n</code></pre>\\n<h2 id=\'create-the-login-button\'>Create the Login Button</h2>\\n<p>Create a Login with Google button in <code>app.component.html</code>:</p>\\n<pre><code>&lt;button  mat-flat-button color=&quot;accent&quot;   \\n         (click)=&quot;signInWithGoogle()&quot;&gt;\\n    Login with Google\\n&lt;/button&gt;\\n</code></pre>\\n<h2 id=\'add-amplify\'>Add Amplify</h2>\\n<pre><code>amplify init\\n</code></pre>\\n<p>Hit Enter for all the suggestions.  Then <a href=\'https://docs.aws.amazon.com/cognito/latest/developerguide/google.html#set-up-google-1.javascript\'>Complete the Google Social Provider Setup</a>.</p>\\n<h2 id=\'add-auth\'>Add Auth</h2>\\n<pre><code>amplify add auth\\n</code></pre>\\n<p>Select <code>Default configuration with Social Provider (Federation)</code>.</p>\\n<p>Select <code>Email</code> for <code>How do you want users to sign in</code>.</p>\\n<p>Select <code>No I&#39;m done</code>.</p>\\n<p>Hit enter for the question <code>What domain name prefix you want us to create for you</code>?</p>\\n<p>For the redirect signin and signout URI use <code>http://localhost:4200/</code></p>\\n<p>When asked to Select the social providers you want to configure for your user pool choose <code>Google</code>.</p>\\n<p>Enter the Google <code>clientid</code> and <code>Client Secret</code> setup in the Google Developer Console.</p>\\n<p>Run <code>amplify push</code>.</p>\\n<p>AWS Cognito is now ready. You may want to log into the AWS Developer Console, go to Cognito, select your pool, and perform user attribute mapping in order to capture all Google user attributes of users logging in to your application.</p>\\n<p><a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--getting-angular-ready-for-aws-amplify\'>Follow this link</a> for instructions on how to completely the scaffoldling for Angular.</p>\\n<h2 id=\'final-step\'>Final Step</h2>\\n<p><a href=\'https://aws-amplify.github.io/docs/js/cognito-hosted-ui-federated-identity#google-sign-in-instructions-1\'>Complete the Google Signin Instructions</a>.</p>\\n<p>Once this step is done go back to the developer console.</p>\\n<p>Select the client created when obtaining the Google <code>client id</code> and <code>client secret</code>.</p>\\n<p>Open <code>src/aws-exports.js</code> and look for domain :</p>\\n<pre><code>&quot;oauth&quot;: {\\n   &quot;domain&quot;: &quot;googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com&quot;\\n}\\n</code></pre>\\n<p>Put that in authorized javascript origins . The value should be:</p>\\n<pre><code>https://googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com\\n</code></pre>\\n<p>For <code>authorized redirect URIs</code> append <code>/oauth2/idpresponse</code> to the user pool domain resulting in:</p>\\n<pre><code>https://googlelogin-a1963b82-dev.auth.us-east-1.amazoncognito.com/oauth2/idpresponse\\n</code></pre>\\n<p>The setup is now complete and you should be able to login with the button.</p>\\n","summary":"Adding AWS Cognito Federated Login With Google Using AWS Amplify.","tags":["Angular","JavaScript","Amplify","AWS"],"tagString":"Angular, JavaScript, Amplify, AWS","author":"Ole Ersoy","date":"2/04/2021","headerImage":"fingerprint-328992_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/fingerprint-328992_1920.jpg","title":"Adding AWS Cognito Federated Login With Google Using AWS Amplify","readingTime":4,"wordCount":608},{"category":"Tasks","type":"task","md5":"94bd0656fd1c4cf9eb103154fbc7cde0","filename":"adding-material-icons-our-angular-material-stackblitz-project.md","path":"tasks/angular/adding-material-icons-our-angular-material-stackblitz-project.md","id":"tasks--angular--adding-material-icons-our-angular-material-stackblitz-project","markdown":"\\nWe created a new Angular Stackblitz project and added `@angular/material`, and we want to use the Angular Material Icons in this project.\\n\\n# Approach\\n\\nAdd the Angular Material Icons link to the top of `index.html`.  If you just initialized a new project it should look like this after completion.\\n\\n```\\n<link\\n  href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\"\\n  rel=\\"stylesheet\\"\\n/>\\n\\n<my-app>loading</my-app>\\n```","html":"<p>We created a new Angular Stackblitz project and added <code>@angular/material</code>, and we want to use the Angular Material Icons in this project.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Add the Angular Material Icons link to the top of <code>index.html</code>.  If you just initialized a new project it should look like this after completion.</p>\\n<pre><code>&lt;link\\n  href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;\\n  rel=&quot;stylesheet&quot;\\n/&gt;\\n\\n&lt;my-app&gt;loading&lt;/my-app&gt;\\n</code></pre>\\n","summary":"Adding the Indigo Pink Theme to our Angular Material Project.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/5/2022","headerImage":"animal-1866808_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-1866808_1920.jpg","title":"Adding Material Icons to our Angular Material Stackblitz Project","readingTime":1,"wordCount":67},{"category":"Tasks","type":"task","md5":"7411c85f32d168ce2224b09b92740a7b","filename":"adding-material-icons-via-cdn-to-angular-material-stackblitz-project.md","path":"tasks/angular/adding-material-icons-via-cdn-to-angular-material-stackblitz-project.md","id":"tasks--angular--adding-material-icons-via-cdn-to-angular-material-stackblitz-project","markdown":"\\nWe created a new Angular Stackblitz project and added `@angular/material`, and we wish to use the `MatIconModule` to render the Material Design Icons.\\n\\n# Approach\\n\\nIn `src/index.html` at the top add the CDN link to the Material Design Google Icon Font:\\n```\\n<link\\n  href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\"\\n  rel=\\"stylesheet\\"\\n/>\\n```","html":"<p>We created a new Angular Stackblitz project and added <code>@angular/material</code>, and we wish to use the <code>MatIconModule</code> to render the Material Design Icons.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In <code>src/index.html</code> at the top add the CDN link to the Material Design Google Icon Font:</p>\\n<pre><code>&lt;link\\n  href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;\\n  rel=&quot;stylesheet&quot;\\n/&gt;\\n</code></pre>\\n","summary":"Adding Material Icons Via CDN to our Angular Material Project.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"6/26/2022","headerImage":"coral-314834_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/coral-314834_1280.jpg","title":"Adding Material Icons Via CDN to our Angular Material Project","readingTime":1,"wordCount":55},{"category":"Tasks","type":"task","md5":"2c62d2d499121a5e848ad83d1ef954cc","filename":"adding-the-indigo-pink-theme-to-our-angular-material-stackblitz-project.md","path":"tasks/angular/adding-the-indigo-pink-theme-to-our-angular-material-stackblitz-project.md","id":"tasks--angular--adding-the-indigo-pink-theme-to-our-angular-material-stackblitz-project","markdown":"\\nWe created a new Angular Stackblitz project and added `@angular/material`.\\n\\n# Approach\\n\\nIn `src/styles.css` add:\\n```\\n@import \\"~@angular/material/prebuilt-themes/indigo-pink.css\\";\\n```","html":"<p>We created a new Angular Stackblitz project and added <code>@angular/material</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In <code>src/styles.css</code> add:</p>\\n<pre><code>@import &quot;~@angular/material/prebuilt-themes/indigo-pink.css&quot;;\\n</code></pre>\\n","summary":"Adding the Indigo Pink Theme to our Angular Material Project.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/9/2021","headerImage":"lotus-978659.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lotus-978659.jpg","title":"Adding the Indigo Pink Theme to our Angular Material Project","readingTime":1,"wordCount":25},{"category":"Tasks","type":"task","md5":"892f63eb456bb40c8bc174146b454eae","filename":"angular-cdk-keyboard-list-navigation-and-selection.md","path":"tasks/angular/angular-cdk-keyboard-list-navigation-and-selection.md","id":"tasks--angular--angular-cdk-keyboard-list-navigation-and-selection","markdown":"\\nWe have a `Product` item list and we want users to be able to navigate through it using the keyboard, perform typeahead searches, and select an active item.\\n\\n# Approach\\n\\nCreate a new Angular Stackblitz and add `@angular/cdk` to the dependencies.\\n\\nFor styling we will use `Materialize` and so the CDN link needs to go in `index.html`.\\n\\n```\\n<link\\nrel=\\"stylesheet\\"\\nhref=\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css\\"\\nintegrity=\\"sha512-17AHGe9uFHHt+QaRYieK7bTdMMHBMi8PeWG99Mf/xEcfBLDCn0Gze8Xcx1KoSZxDnv+KnCC+os/vuQ7jrF/nkw==\\"\\ncrossorigin=\\"anonymous\\"\\nreferrerpolicy=\\"no-referrer\\"\\n/>\\n```\\n\\n\\n# Product Component\\n\\nCreate `src/components/product.component.ts`.\\n\\nEach Product component instance will be an option for the `ActiveDescendantKeyManager` and therefore it needs to implement the `ListKeyManagerOption` interface.\\n\\n```\\ninterface ListKeyManagerOption {\\n  disabled?: boolean;\\n  getLabel?(): string;\\n}\\n```\\nSince we are using the `ActiveDescendantKeyManager` it also needs to implement the interface `Highlightable`.\\n\\n```\\ninterface Highlightable extends ListKeyManagerOption {\\n  setActiveStyles(): void;\\n  setInactiveStyles(): void;\\n}\\n```\\n\\nThis is our implementation.\\n\\n```\\nimport { Component, HostBinding, Input } from \'@angular/core\';\\nimport { Highlightable, ListKeyManagerOption } from \'@angular/cdk/a11y\';\\n\\n@Component({\\n  selector: \'app-product\',\\n  templateUrl: \'./product.component.html\',\\n  styleUrls: [\'./product.component.css\'],\\n})\\nexport class ProductComponent implements Highlightable, ListKeyManagerOption {\\n  @Input() product: string;\\n  @Input() disabled: boolean = false;\\n  private _isActive: boolean = false;\\n\\n  @HostBinding(\'class.active\') get isActive() {\\n    return this._isActive;\\n  }\\n\\n  setActiveStyles() {\\n    this._isActive = true;\\n  }\\n\\n  setInactiveStyles() {\\n    this._isActive = false;\\n  }\\n\\n  getLabel() {\\n    return this.product;\\n  }\\n}\\n```\\n\\nThe application component will render our search field and the keyboard navigable list of products.\\n\\nIn order to initialize the `ActiveDescendantKeyManager` instance we need to do three things.\\n\\n- Create a @ViewChildren query for selecting the ProductComponent instances being used as options.\\n- Initialize the ActiveDescendantKeyManager with the options.\\n- Forward keyboard events from the application component to the ActiveDescendantKeyManager.\\n\\nThis is our `app.component.ts` implementation.\\n\\n```\\nimport { ActiveDescendantKeyManager } from \'@angular/cdk/a11y/\';\\nimport { ENTER } from \'@angular/cdk/keycodes\';\\nimport { Component, QueryList, ViewChildren } from \'@angular/core\';\\nimport { ProductComponent } from \'./components/product.component\';\\n\\n@Component({\\n  selector: \'my-app\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.css\'],\\n})\\nexport class AppComponent {\\n  @ViewChildren(ProductComponent)\\n  products: QueryList<ProductComponent>;\\n\\n  productArray = [\'rubicks cube\', \'dino bot\', \'barbie\', \'lego bus\'];\\n\\n  private keyManager: ActiveDescendantKeyManager<ProductComponent>;\\n\\n  selection = \'\';\\n\\n  ngAfterViewInit() {\\n    this.keyManager = new ActiveDescendantKeyManager(this.products)\\n      .withWrap()\\n      .withTypeAhead();\\n  }\\n\\n  onKeyUp(event) {\\n    if (event.keyCode === ENTER) {\\n      this.selection = this.keyManager.activeItem.product;\\n    } else {\\n      this.keyManager.onKeydown(event);\\n    }\\n  }\\n}\\n```\\n\\nWithin `ngAfterViewInit` we initialize the `ActiveDescendantKeyManager` calling `withWrap`, which causes the list to wrap when the keyboard navigation gets tot the end, and `withTypeAhead` which allows us to select specific items in the list via the `search` field.\\n\\nOur application component template binds the `onKeyUp` method which performs navigation by forwarding non `ENTER` events to the `keyManager`.  `ENTER` events cause the selection field to be set with the current selection.\\n\\n```\\n<div class=\\"input-field\\">\\n  <input placeholder=\\"  Search\\" (keyup)=\\"onKeyUp($event)\\" #input />\\n</div>\\n\\n<section style=\\"display:flex; flex-direction:column\\" class=\\"collection\\">\\n  <app-product\\n    class=\\"collection-item\\"\\n    *ngFor=\\"let product of productArray | filter: input.value; index as index\\"\\n    [product]=\\"product\\"\\n  >\\n    {{ product }}\\n  </app-product>\\n</section>\\n\\n<p style=\\"margin-top: 1em\\" *ngIf=\\"selection\\">Selected: {{ selection }}</p>\\n```\\n\\nThe filter pipe implementation is used to narrow the selection when the user types, however it is not necessary to select an item.\\n\\n```\\nimport { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'filter\',\\n})\\nexport class FilterPipe implements PipeTransform {\\n  transform(products: any[], query: string): any[] {\\n    if (!products) return [];\\n    if (!query || query.length == 0) return products;\\n    return products.filter(\\n      (p) => p.toLowerCase().indexOf(query.toLowerCase()) != -1\\n    );\\n  }\\n}\\n```\\n\\n# Demo\\n\\nSelecting the search field and try typing in the name of a product. Navigate using the arrow keys.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Angular CDK Keyboard List Navigation and Selection\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ivy-yc1vyy?file=src%2Fapp%2Fapp.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We have a <code>Product</code> item list and we want users to be able to navigate through it using the keyboard, perform typeahead searches, and select an active item.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create a new Angular Stackblitz and add <code>@angular/cdk</code> to the dependencies.</p>\\n<p>For styling we will use <code>Materialize</code> and so the CDN link needs to go in <code>index.html</code>.</p>\\n<pre><code>&lt;link\\nrel=&quot;stylesheet&quot;\\nhref=&quot;https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.8/css/materialize.min.css&quot;\\nintegrity=&quot;sha512-17AHGe9uFHHt+QaRYieK7bTdMMHBMi8PeWG99Mf/xEcfBLDCn0Gze8Xcx1KoSZxDnv+KnCC+os/vuQ7jrF/nkw==&quot;\\ncrossorigin=&quot;anonymous&quot;\\nreferrerpolicy=&quot;no-referrer&quot;\\n/&gt;\\n</code></pre>\\n<h1 id=\'product-component\'>Product Component</h1>\\n<p>Create <code>src/components/product.component.ts</code>.</p>\\n<p>Each Product component instance will be an option for the <code>ActiveDescendantKeyManager</code> and therefore it needs to implement the <code>ListKeyManagerOption</code> interface.</p>\\n<pre><code>interface ListKeyManagerOption {\\n  disabled?: boolean;\\n  getLabel?(): string;\\n}\\n</code></pre>\\n<p>Since we are using the <code>ActiveDescendantKeyManager</code> it also needs to implement the interface <code>Highlightable</code>.</p>\\n<pre><code>interface Highlightable extends ListKeyManagerOption {\\n  setActiveStyles(): void;\\n  setInactiveStyles(): void;\\n}\\n</code></pre>\\n<p>This is our implementation.</p>\\n<pre><code>import { Component, HostBinding, Input } from &#39;@angular/core&#39;;\\nimport { Highlightable, ListKeyManagerOption } from &#39;@angular/cdk/a11y&#39;;\\n\\n@Component({\\n  selector: &#39;app-product&#39;,\\n  templateUrl: &#39;./product.component.html&#39;,\\n  styleUrls: [&#39;./product.component.css&#39;],\\n})\\nexport class ProductComponent implements Highlightable, ListKeyManagerOption {\\n  @Input() product: string;\\n  @Input() disabled: boolean = false;\\n  private _isActive: boolean = false;\\n\\n  @HostBinding(&#39;class.active&#39;) get isActive() {\\n    return this._isActive;\\n  }\\n\\n  setActiveStyles() {\\n    this._isActive = true;\\n  }\\n\\n  setInactiveStyles() {\\n    this._isActive = false;\\n  }\\n\\n  getLabel() {\\n    return this.product;\\n  }\\n}\\n</code></pre>\\n<p>The application component will render our search field and the keyboard navigable list of products.</p>\\n<p>In order to initialize the <code>ActiveDescendantKeyManager</code> instance we need to do three things.</p>\\n<ul>\\n<li>Create a @ViewChildren query for selecting the ProductComponent instances being used as options.</li>\\n<li>Initialize the ActiveDescendantKeyManager with the options.</li>\\n<li>Forward keyboard events from the application component to the ActiveDescendantKeyManager.</li>\\n</ul>\\n<p>This is our <code>app.component.ts</code> implementation.</p>\\n<pre><code>import { ActiveDescendantKeyManager } from &#39;@angular/cdk/a11y/&#39;;\\nimport { ENTER } from &#39;@angular/cdk/keycodes&#39;;\\nimport { Component, QueryList, ViewChildren } from &#39;@angular/core&#39;;\\nimport { ProductComponent } from &#39;./components/product.component&#39;;\\n\\n@Component({\\n  selector: &#39;my-app&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [&#39;./app.component.css&#39;],\\n})\\nexport class AppComponent {\\n  @ViewChildren(ProductComponent)\\n  products: QueryList&lt;ProductComponent&gt;;\\n\\n  productArray = [&#39;rubicks cube&#39;, &#39;dino bot&#39;, &#39;barbie&#39;, &#39;lego bus&#39;];\\n\\n  private keyManager: ActiveDescendantKeyManager&lt;ProductComponent&gt;;\\n\\n  selection = &#39;&#39;;\\n\\n  ngAfterViewInit() {\\n    this.keyManager = new ActiveDescendantKeyManager(this.products)\\n      .withWrap()\\n      .withTypeAhead();\\n  }\\n\\n  onKeyUp(event) {\\n    if (event.keyCode === ENTER) {\\n      this.selection = this.keyManager.activeItem.product;\\n    } else {\\n      this.keyManager.onKeydown(event);\\n    }\\n  }\\n}\\n</code></pre>\\n<p>Within <code>ngAfterViewInit</code> we initialize the <code>ActiveDescendantKeyManager</code> calling <code>withWrap</code>, which causes the list to wrap when the keyboard navigation gets tot the end, and <code>withTypeAhead</code> which allows us to select specific items in the list via the <code>search</code> field.</p>\\n<p>Our application component template binds the <code>onKeyUp</code> method which performs navigation by forwarding non <code>ENTER</code> events to the <code>keyManager</code>.  <code>ENTER</code> events cause the selection field to be set with the current selection.</p>\\n<pre><code>&lt;div class=&quot;input-field&quot;&gt;\\n  &lt;input placeholder=&quot;  Search&quot; (keyup)=&quot;onKeyUp($event)&quot; #input /&gt;\\n&lt;/div&gt;\\n\\n&lt;section style=&quot;display:flex; flex-direction:column&quot; class=&quot;collection&quot;&gt;\\n  &lt;app-product\\n    class=&quot;collection-item&quot;\\n    *ngFor=&quot;let product of productArray | filter: input.value; index as index&quot;\\n    [product]=&quot;product&quot;\\n  &gt;\\n    {{ product }}\\n  &lt;/app-product&gt;\\n&lt;/section&gt;\\n\\n&lt;p style=&quot;margin-top: 1em&quot; *ngIf=&quot;selection&quot;&gt;Selected: {{ selection }}&lt;/p&gt;\\n</code></pre>\\n<p>The filter pipe implementation is used to narrow the selection when the user types, however it is not necessary to select an item.</p>\\n<pre><code>import { Pipe, PipeTransform } from &#39;@angular/core&#39;;\\n\\n@Pipe({\\n  name: &#39;filter&#39;,\\n})\\nexport class FilterPipe implements PipeTransform {\\n  transform(products: any[], query: string): any[] {\\n    if (!products) return [];\\n    if (!query || query.length == 0) return products;\\n    return products.filter(\\n      (p) =&gt; p.toLowerCase().indexOf(query.toLowerCase()) != -1\\n    );\\n  }\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>Selecting the search field and try typing in the name of a product. Navigate using the arrow keys.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Angular CDK Keyboard List Navigation and Selection\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ivy-yc1vyy?file=src%2Fapp%2Fapp.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Angular CDK Keyboard List Navigation and Selection.","tags":["Angular","Angular Material","JavaScript","TypeScript","CDK"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, CDK","author":"Ole Ersoy","date":"5/24/2022","headerImage":"tarantula-1198225_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/tarantula-1198225_1920.jpg","title":"Angular CDK Keyboard List Navigation and Selection","readingTime":4,"wordCount":609},{"category":"Tasks","type":"task","md5":"0c6c2dcd284f64fed0e73e16b32d16b5","filename":"angular-reactive-boolean-navigation-state.md","path":"tasks/angular/angular-reactive-boolean-navigation-state.md","id":"tasks--angular--angular-reactive-boolean-navigation-state","markdown":"\\nWe want a `Observable<boolean>` that is `true` when the user navigates to `/application`.\\n\\n# Approach\\n\\n```\\nconstructor(private r: Router) {\\n  this.isApplicationShowing$ =\\n    this.r.events.pipe(\\n      filter(event => event instanceof NavigationEnd),\\n      map((event: NavigationEnd) => event.url == this.APPLICATION_ROUTE ))\\n}\\n```","html":"<p>We want a <code>Observable&lt;boolean&gt;</code> that is <code>true</code> when the user navigates to <code>/application</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>constructor(private r: Router) {\\n  this.isApplicationShowing$ =\\n    this.r.events.pipe(\\n      filter(event =&gt; event instanceof NavigationEnd),\\n      map((event: NavigationEnd) =&gt; event.url == this.APPLICATION_ROUTE ))\\n}\\n</code></pre>\\n","summary":"Angular Reactive Boolean Navigation State.","tags":["Angular","JavaScript","TypeScript","RxJs"],"tagString":"Angular, JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"3/22/2021","headerImage":"delia-giandeini-BLd33TJ6bZ4-unsplash.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/delia-giandeini-BLd33TJ6bZ4-unsplash.jpg","title":"Angular Reactive Boolean Navigation State","readingTime":1,"wordCount":37},{"category":"Tasks","type":"task","md5":"0a9c3b9fd64815706cb24827afb29d6c","filename":"angular-reactive-form-control-implicit-type-inference.md","path":"tasks/angular/angular-reactive-form-control-implicit-type-inference.md","id":"tasks--angular--angular-reactive-form-control-implicit-type-inference","markdown":"\\nWe would like IDE error linting in case we try to set an incorrect type value on a form control. This is a feature of the latest version of Angular.\\n\\nWe also want controls to reset to their constructor assigned initialization values.\\n\\n# Approach\\n\\nInitialize the control with a string value.\\n\\n```\\nconst c = new FormControl(\'\');\\n```\\n\\nSet the value of the control to a non string value.\\n\\n```\\nc.setValue(2);\\n```\\n\\nAngular now lints the code with the following error message.\\n\\n```\\nError in src/app/app.component.ts (16:16)\\nArgument of type \'number\' is not assignable to parameter of type \'string\'.\\n```\\n\\nNote that we could have applied the type of the control generically like this.\\n\\n```\\nconst c = new FormControl<string>(\'\');\\n```\\n\\nIf we call reset on `c`.\\n\\n```\\nc.reset();\\n```\\n\\nThe value of `c` is set to `null`. That\u2019s because the type of `c` has been inferred to <string | null>. If we don\u2019t want this we can turn off `nullability`.\\n\\n```\\nconst d = new FormControl(\'start\', { nonNullable: true });\\n```\\n\\nIf we `d.reset()` the value assigned to `d` will be the string start.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Angular Reactive Form Control Implicit Type Inference\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-nyddfb?file=src%2Fapp%2Fapp.component.ts\\">\\n</fs-link-preview>","html":"<p>We would like IDE error linting in case we try to set an incorrect type value on a form control. This is a feature of the latest version of Angular.</p>\\n<p>We also want controls to reset to their constructor assigned initialization values.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Initialize the control with a string value.</p>\\n<pre><code>const c = new FormControl(&#39;&#39;);\\n</code></pre>\\n<p>Set the value of the control to a non string value.</p>\\n<pre><code>c.setValue(2);\\n</code></pre>\\n<p>Angular now lints the code with the following error message.</p>\\n<pre><code>Error in src/app/app.component.ts (16:16)\\nArgument of type &#39;number&#39; is not assignable to parameter of type &#39;string&#39;.\\n</code></pre>\\n<p>Note that we could have applied the type of the control generically like this.</p>\\n<pre><code>const c = new FormControl&lt;string&gt;(&#39;&#39;);\\n</code></pre>\\n<p>If we call reset on <code>c</code>.</p>\\n<pre><code>c.reset();\\n</code></pre>\\n<p>The value of <code>c</code> is set to <code>null</code>. That\u2019s because the type of <code>c</code> has been inferred to &lt;string | null&gt;. If we don\u2019t want this we can turn off <code>nullability</code>.</p>\\n<pre><code>const d = new FormControl(&#39;start&#39;, { nonNullable: true });\\n</code></pre>\\n<p>If we <code>d.reset()</code> the value assigned to <code>d</code> will be the string start.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Angular Reactive Form Control Implicit Type Inference\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-nyddfb?file=src%2Fapp%2Fapp.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Angular Reactive Form Control Implicit Type Inference and Reset Semantics.","tags":["Angular","Angular Material","JavaScript","TypeScript","RxJs"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"6/10/2022","headerImage":"insect-4489864_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/insect-4489864_1920.jpg","title":"Angular Reactive Form Control Implicit Type Inference and Reset Semantics","readingTime":2,"wordCount":223},{"category":"Tasks","type":"task","md5":"7a592e99a9e509e349cbbbdcfcbc8f0a","filename":"angular-template-iteration-over-an-observable-array.md","path":"tasks/angular/angular-template-iteration-over-an-observable-array.md","id":"tasks--angular--angular-template-iteration-over-an-observable-array","markdown":"\\nWe have an `customers$:Observable<string[]>` that we want to iterate over in our Angular template.\\n\\n# Approach\\n```\\n<ul>   \\n    <li *ngFor=\\"let customer of customers$ | async; index as i\\">\\n        {{ customer.name }}   \\n   </li> \\n</ul>\\n```","html":"<p>We have an <code>customers$:Observable&lt;string[]&gt;</code> that we want to iterate over in our Angular template.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>&lt;ul&gt;   \\n    &lt;li *ngFor=&quot;let customer of customers$ | async; index as i&quot;&gt;\\n        {{ customer.name }}   \\n   &lt;/li&gt; \\n&lt;/ul&gt;\\n</code></pre>\\n","summary":"Angular Template Iteration Over an Observable Array.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/24/2021","headerImage":"animal-1867523_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-1867523_1920.jpg","title":"Angular Template Iteration Over an Observable Array","readingTime":1,"wordCount":32},{"category":"Tasks","type":"task","md5":"3011f593255da5c8c334978b2f899034","filename":"assigning-boolean-values-to-angular-input-properties.md","path":"tasks/angular/assigning-boolean-values-to-angular-input-properties.md","id":"tasks--angular--assigning-boolean-values-to-angular-input-properties","markdown":"\\nWe have a `Hola` component that should display `HOLA!` when spanish is true.\\n\\n# Approach\\n\\nUse brackets:\\n```\\n<halo-comp #h [spanish]=\\"true\\" [text]=\\"h.spanish ? hola : hello\\"></halo-comp>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Assigning Boolean Values to Angular Input Properties\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-template-toggle-fs?file=app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We have a <code>Hola</code> component that should display <code>HOLA!</code> when spanish is true.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use brackets:</p>\\n<pre><code>&lt;halo-comp #h [spanish]=&quot;true&quot; [text]=&quot;h.spanish ? hola : hello&quot;&gt;&lt;/halo-comp&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Assigning Boolean Values to Angular Input Properties\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-template-toggle-fs?file=app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Assigning Boolean Values to Angular Input Properties.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"bulb-5665770_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bulb-5665770_1920.jpg","title":"Assigning Boolean Values to Angular Input Properties","readingTime":1,"wordCount":72},{"category":"Tasks","type":"task","md5":"d1a37babcddfd1cf88969345e6477d82","filename":"binding-angular-material-select-to-a-reactive-form-control.md","path":"tasks/angular/binding-angular-material-select-to-a-reactive-form-control.md","id":"tasks--angular--binding-angular-material-select-to-a-reactive-form-control","markdown":"\\nWe have a reactive form control:\\n```\\ncontrol:FormControl = new FormControl(\'steak-0\')\\n```\\n\\nAnd we want to bind it to our `mat-select` element such that we can:\\n\\n- Receive reactive notifications from control.valueChanges\\n- Have the mat-select default value be steak-0\\n\\n# Approach\\n\\nWithin the `app.module.ts` we have imported both `FormsModule` and `ReactiveFormsModule`.\\n\\nIn the below `app.component.ts` component we have created an `control:FormControl` instance and initialized the value to `steak-0`.\\n\\n```\\nimport { Component, VERSION } from \\"@angular/core\\";\\nimport { FormControl } from \\"@angular/forms\\";\\ninterface Food {\\n    value: string;\\n    viewValue: string;\\n}\\n@Component({\\n    selector: \\"my-app\\",\\n    templateUrl: \\"./app.component.html\\",\\n    styleUrls: [\\"./app.component.css\\"]\\n})\\nexport class AppComponent {\\n    control = new FormControl(\\"steak-0\\");\\n    foods: Food[] = [\\n        { value: \\"steak-0\\", viewValue: \\"Steak\\" },\\n        { value: \\"pizza-1\\", viewValue: \\"Pizza\\" },\\n        { value: \\"tacos-2\\", viewValue: \\"Tacos\\" }\\n    ];\\nconstructor() {\\n    this.control.valueChanges.subscribe(s => {\\n        console.log(`The selected value is ${s}`);\\n    });\\n    }\\n}\\n```\\n\\nIn the `app.component.html` we have two declarations of `mat-select`. The first `mat-select` declaration does not bind to `control`. \\n\\nAs can be seen the `mat-select` uses the `<mat-label>Favorite food</mat-label>` as the place holder instruction telling the user to select a food in this case.\\n\\nIn the second case, where we have bound the `mat-select` to the form control like this `<mat-select [formControl]=\\"control\\">`, the `mat-select` value is initialized to `steak-0`.\\n\\nWe `subscribe` to the form control within the `app.component.ts` constructor.\\n```\\nthis.control.valueChanges.subscribe(s => {\\n    console.log(`The selected value is ${s}`);\\n});\\n```\\n\\nWhenever we change the selection, the subscription logs the selected value.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Binding Angular Material Select to a Reactive Form Control\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-select-with-form-control\\">\\n</fs-link-preview>\\n","html":"<p>We have a reactive form control:</p>\\n<pre><code>control:FormControl = new FormControl(&#39;steak-0&#39;)\\n</code></pre>\\n<p>And we want to bind it to our <code>mat-select</code> element such that we can:</p>\\n<ul>\\n<li>Receive reactive notifications from control.valueChanges</li>\\n<li>Have the mat-select default value be steak-0</li>\\n</ul>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within the <code>app.module.ts</code> we have imported both <code>FormsModule</code> and <code>ReactiveFormsModule</code>.</p>\\n<p>In the below <code>app.component.ts</code> component we have created an <code>control:FormControl</code> instance and initialized the value to <code>steak-0</code>.</p>\\n<pre><code>import { Component, VERSION } from &quot;@angular/core&quot;;\\nimport { FormControl } from &quot;@angular/forms&quot;;\\ninterface Food {\\n    value: string;\\n    viewValue: string;\\n}\\n@Component({\\n    selector: &quot;my-app&quot;,\\n    templateUrl: &quot;./app.component.html&quot;,\\n    styleUrls: [&quot;./app.component.css&quot;]\\n})\\nexport class AppComponent {\\n    control = new FormControl(&quot;steak-0&quot;);\\n    foods: Food[] = [\\n        { value: &quot;steak-0&quot;, viewValue: &quot;Steak&quot; },\\n        { value: &quot;pizza-1&quot;, viewValue: &quot;Pizza&quot; },\\n        { value: &quot;tacos-2&quot;, viewValue: &quot;Tacos&quot; }\\n    ];\\nconstructor() {\\n    this.control.valueChanges.subscribe(s =&gt; {\\n        console.log(`The selected value is ${s}`);\\n    });\\n    }\\n}\\n</code></pre>\\n<p>In the <code>app.component.html</code> we have two declarations of <code>mat-select</code>. The first <code>mat-select</code> declaration does not bind to <code>control</code>. </p>\\n<p>As can be seen the <code>mat-select</code> uses the <code>&lt;mat-label&gt;Favorite food&lt;/mat-label&gt;</code> as the place holder instruction telling the user to select a food in this case.</p>\\n<p>In the second case, where we have bound the <code>mat-select</code> to the form control like this <code>&lt;mat-select [formControl]=&quot;control&quot;&gt;</code>, the <code>mat-select</code> value is initialized to <code>steak-0</code>.</p>\\n<p>We <code>subscribe</code> to the form control within the <code>app.component.ts</code> constructor.</p>\\n<pre><code>this.control.valueChanges.subscribe(s =&gt; {\\n    console.log(`The selected value is ${s}`);\\n});\\n</code></pre>\\n<p>Whenever we change the selection, the subscription logs the selected value.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Binding Angular Material Select to a Reactive Form Control\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-select-with-form-control\'>\\n</fs-link-preview></p>\\n","summary":"Binding Angular Material Select to a Reactive Form Control.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"love-1808677_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/love-1808677_1920.jpg","title":"Binding Angular Material Select to a Reactive Form Control","readingTime":2,"wordCount":303},{"category":"Tasks","type":"task","md5":"ecf360c82c6bb9c7a4646b7f1fc2dca0","filename":"centering-angular-material-data-dable-header-and-content-cells.md","path":"tasks/angular/centering-angular-material-data-dable-header-and-content-cells.md","id":"tasks--angular--centering-angular-material-data-dable-header-and-content-cells","markdown":"\\nWe want the words in our `<mat-header-cell>The Header</mat-header-cell>` to be separated in a column and vertically centered.\\n\\nWe also want our `<mat-cell>content</mat-cell>` content to be horizontally centered.\\n\\n\\n# Approach\\n\\nThe elements are already `flex` box containers, so within `styles.css` we just add:\\n\\n\\n```\\n.mat-header-cell {\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.mat-cell {\\n  text-align: center;\\n  justify-content:center;\\n}\\n```\\n\\nIf you add the `mat-sort-header directive` it will add additional CSS classes that will override the above CSS.\\n\\nIn this case wrap the header in its own class like this and put the above CSS in the ColumnHeader class:\\n\\n```\\n<div class=\\"ColumnHeader\\">\\n    <div>Center</div>\\n    <div>This</div>\\n    <div>Header</div>\\n</div>\\n```\\n\\n# Demo\\n\\n<div>\\n    <fs-link-preview \\n      imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n    \\ttitle=\\"Stackblitz Demo\\" \\n      description=\\"Centering Angular Material Data Table Header and Content Cells\\"\\n    \\tdomain=\\"stackblitz.com\\" \\n      url=\\"https://stackblitz.com/edit/angular-minimal-material-table-demo-center-header\\">\\n    </fs-link-preview>\\n</div>\\n","html":"<p>We want the words in our <code>&lt;mat-header-cell&gt;The Header&lt;/mat-header-cell&gt;</code> to be separated in a column and vertically centered.</p>\\n<p>We also want our <code>&lt;mat-cell&gt;content&lt;/mat-cell&gt;</code> content to be horizontally centered.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The elements are already <code>flex</code> box containers, so within <code>styles.css</code> we just add:</p>\\n<pre><code>.mat-header-cell {\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.mat-cell {\\n  text-align: center;\\n  justify-content:center;\\n}\\n</code></pre>\\n<p>If you add the <code>mat-sort-header directive</code> it will add additional CSS classes that will override the above CSS.</p>\\n<p>In this case wrap the header in its own class like this and put the above CSS in the ColumnHeader class:</p>\\n<pre><code>&lt;div class=&quot;ColumnHeader&quot;&gt;\\n    &lt;div&gt;Center&lt;/div&gt;\\n    &lt;div&gt;This&lt;/div&gt;\\n    &lt;div&gt;Header&lt;/div&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<div>\\n    <fs-link-preview \\n      imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n        title=\'Stackblitz Demo\' \\n      description=\'Centering Angular Material Data Table Header and Content Cells\'\\n        domain=\'stackblitz.com\' \\n      url=\'https://stackblitz.com/edit/angular-minimal-material-table-demo-center-header\'>\\n    </fs-link-preview>\\n</div>\\n","summary":"Centering Angular Material Data Table Header and Content Cells.","tags":["Angular","Angular Material","JavaScript","CSS"],"tagString":"Angular, Angular Material, JavaScript, CSS","author":"Ole Ersoy","date":"2/06/2021","headerImage":"arrow-2889040_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/arrow-2889040_1920.jpg","title":"Centering Angular Material Data Table Header and Content Cells","readingTime":1,"wordCount":169},{"category":"Tasks","type":"task","md5":"5ebe0b085a762d3d193c58c48008556a","filename":"changing-the-background-color-of-a-angular-component-host-element.md","path":"tasks/angular/changing-the-background-color-of-a-angular-component-host-element.md","id":"tasks--angular--changing-the-background-color-of-a-angular-component-host-element","markdown":"\\nWe want to apply the color `red` to the background of a `:host` selected element.\\n\\n# Approach\\n\\nSet the `display` property of the `:host` selected `element` to something other than `inline` (The default) setting.\\n\\n```\\n:host {\\n    display:block;\\n    background-color: red;\\n}\\n```\\n\\nThe background color for the `:host` element will now turn `red`.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Changing the Background Color of a Angular Component Host Element\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-mdbamb-9p84h4?file=src%2Fapp%2Fbutton-overview-example.ts\\">\\n</fs-link-preview>\\n","html":"<p>We want to apply the color <code>red</code> to the background of a <code>:host</code> selected element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Set the <code>display</code> property of the <code>:host</code> selected <code>element</code> to something other than <code>inline</code> (The default) setting.</p>\\n<pre><code>:host {\\n    display:block;\\n    background-color: red;\\n}\\n</code></pre>\\n<p>The background color for the <code>:host</code> element will now turn <code>red</code>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Changing the Background Color of a Angular Component Host Element\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-mdbamb-9p84h4?file=src%2Fapp%2Fbutton-overview-example.ts\'>\\n</fs-link-preview></p>\\n","summary":"Changing the Background Color of a Angular Component Host Element.","tags":["Angular","JavaScript","CSS"],"tagString":"Angular, JavaScript, CSS","author":"Ole Ersoy","date":"8/16/2022","headerImage":"hd-wallpaper-1441822_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/hd-wallpaper-1441822_1920.jpg","title":"Changing the Background Color of a Angular Component Host Element","readingTime":1,"wordCount":98},{"category":"Tasks","type":"task","md5":"d43d877c35957038adb63dd8a1e9f505","filename":"create-a-material-login-form.md","path":"tasks/angular/create-a-material-login-form.md","id":"tasks--angular--create-a-material-login-form","markdown":"\\nWe need a material login form, like the one seen below, as a prototyping and learning tool.\\n\\n# Approach\\n\\n## Step 1\\n\\nInitialize the material module with the needed components:\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport {\\nMatCardModule,\\nMatInputModule,\\nMatButtonModule\\n} from \'@angular/material\';\\nconst modules = [\\nMatCardModule,\\nMatInputModule,\\nMatButtonModule\\n];\\n@NgModule({\\nimports: modules,\\nexports: modules,\\n})\\nexport class MaterialModule {}\\n```\\n\\n## Step 2\\n\\nCreate the login form component:\\n\\n```\\nimport { Component, Output, EventEmitter } from \'@angular/core\';\\nimport { FormGroup, FormControl } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'my-login-form\',\\n  template: `\\n      <mat-card>\\n            <mat-card-title>Login</mat-card-title>\\n      <mat-card-content>\\n        <form [formGroup]=\\"form\\" (ngSubmit)=\\"submit()\\">\\n          <p>\\n            <mat-form-field>\\n              <input type=\\"text\\" matInput placeholder=\\"Username\\" formControlName=\\"username\\">\\n            </mat-form-field>\\n          </p>\\n\\n          <p>\\n            <mat-form-field>\\n              <input type=\\"password\\" matInput placeholder=\\"Password\\" formControlName=\\"password\\">\\n            </mat-form-field>\\n          </p>\\n\\n          <p *ngIf=\\"error\\" class=\\"loginError\\">\\n            {{ errorMessage }}\\n          </p>\\n\\n          <p class=\\"button\\">\\n            <button type=\\"submit\\" mat-button>Login</button>\\n          </p>\\n\\n        </form>\\n      </mat-card-content>\\n    </mat-card>\\n  `,\\n  styles: [\\n    `\\n      :host {\\n        display: flex;\\n        justify-content: center;\\n        margin: 100px 0px;\\n      }\\n\\n      .mat-form-field {\\n        width: 100%;\\n        min-width: 300px;\\n      }\\n\\n      mat-card-title,\\n      mat-card-content {\\n        display: flex;\\n        justify-content: center;\\n      }\\n\\n      .error {\\n        padding: 16px;\\n        width: 300px;\\n        color: white;\\n        background-color: red;\\n      }\\n\\n      .button {\\n        display: flex;\\n        justify-content: flex-end;\\n      }\\n    `,\\n  ],\\n\\n})\\nexport class LoginFormComponent {\\n  form: FormGroup = new FormGroup({\\n    username: new FormControl(\'\'),\\n    password: new FormControl(\'\'),\\n  });\\n\\n  submit() {\\n    if (this.form.valid) {\\n      this.submitEM.emit(this.form.value);\\n    }\\n  }\\n\\n  @Output() submitEM = new EventEmitter();\\n}\\n\\n```\\n\\n## Step 3\\nImport the material module, and the login form component, into the app module:\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { ReactiveFormsModule } from \'@angular/forms\';\\nimport { AppComponent } from \'./app.component\';\\nimport { LoginFormComponent } from \'./login-form.component\';\\nimport { MaterialModule } from \'./material.module\';\\n@NgModule({\\nimports:[ BrowserModule, ReactiveFormsModule, MaterialModule, BrowserAnimationsModule],\\ndeclarations: [ AppComponent, LoginFormComponent ],\\nbootstrap:    [ AppComponent ]})\\nexport class AppModule {}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Material Login Form\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We need a material login form, like the one seen below, as a prototyping and learning tool.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'step-1\'>Step 1</h2>\\n<p>Initialize the material module with the needed components:</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport {\\nMatCardModule,\\nMatInputModule,\\nMatButtonModule\\n} from &#39;@angular/material&#39;;\\nconst modules = [\\nMatCardModule,\\nMatInputModule,\\nMatButtonModule\\n];\\n@NgModule({\\nimports: modules,\\nexports: modules,\\n})\\nexport class MaterialModule {}\\n</code></pre>\\n<h2 id=\'step-2\'>Step 2</h2>\\n<p>Create the login form component:</p>\\n<pre><code>import { Component, Output, EventEmitter } from &#39;@angular/core&#39;;\\nimport { FormGroup, FormControl } from &#39;@angular/forms&#39;;\\n\\n@Component({\\n  selector: &#39;my-login-form&#39;,\\n  template: `\\n      &lt;mat-card&gt;\\n            &lt;mat-card-title&gt;Login&lt;/mat-card-title&gt;\\n      &lt;mat-card-content&gt;\\n        &lt;form [formGroup]=&quot;form&quot; (ngSubmit)=&quot;submit()&quot;&gt;\\n          &lt;p&gt;\\n            &lt;mat-form-field&gt;\\n              &lt;input type=&quot;text&quot; matInput placeholder=&quot;Username&quot; formControlName=&quot;username&quot;&gt;\\n            &lt;/mat-form-field&gt;\\n          &lt;/p&gt;\\n\\n          &lt;p&gt;\\n            &lt;mat-form-field&gt;\\n              &lt;input type=&quot;password&quot; matInput placeholder=&quot;Password&quot; formControlName=&quot;password&quot;&gt;\\n            &lt;/mat-form-field&gt;\\n          &lt;/p&gt;\\n\\n          &lt;p *ngIf=&quot;error&quot; class=&quot;loginError&quot;&gt;\\n            {{ errorMessage }}\\n          &lt;/p&gt;\\n\\n          &lt;p class=&quot;button&quot;&gt;\\n            &lt;button type=&quot;submit&quot; mat-button&gt;Login&lt;/button&gt;\\n          &lt;/p&gt;\\n\\n        &lt;/form&gt;\\n      &lt;/mat-card-content&gt;\\n    &lt;/mat-card&gt;\\n  `,\\n  styles: [\\n    `\\n      :host {\\n        display: flex;\\n        justify-content: center;\\n        margin: 100px 0px;\\n      }\\n\\n      .mat-form-field {\\n        width: 100%;\\n        min-width: 300px;\\n      }\\n\\n      mat-card-title,\\n      mat-card-content {\\n        display: flex;\\n        justify-content: center;\\n      }\\n\\n      .error {\\n        padding: 16px;\\n        width: 300px;\\n        color: white;\\n        background-color: red;\\n      }\\n\\n      .button {\\n        display: flex;\\n        justify-content: flex-end;\\n      }\\n    `,\\n  ],\\n\\n})\\nexport class LoginFormComponent {\\n  form: FormGroup = new FormGroup({\\n    username: new FormControl(&#39;&#39;),\\n    password: new FormControl(&#39;&#39;),\\n  });\\n\\n  submit() {\\n    if (this.form.valid) {\\n      this.submitEM.emit(this.form.value);\\n    }\\n  }\\n\\n  @Output() submitEM = new EventEmitter();\\n}\\n</code></pre>\\n<h2 id=\'step-3\'>Step 3</h2>\\n<p>Import the material module, and the login form component, into the app module:</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { BrowserModule } from &#39;@angular/platform-browser&#39;;\\nimport { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;;\\nimport { ReactiveFormsModule } from &#39;@angular/forms&#39;;\\nimport { AppComponent } from &#39;./app.component&#39;;\\nimport { LoginFormComponent } from &#39;./login-form.component&#39;;\\nimport { MaterialModule } from &#39;./material.module&#39;;\\n@NgModule({\\nimports:[ BrowserModule, ReactiveFormsModule, MaterialModule, BrowserAnimationsModule],\\ndeclarations: [ AppComponent, LoginFormComponent ],\\nbootstrap:    [ AppComponent ]})\\nexport class AppModule {}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Material Login Form\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Material Login Form.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"ladybug-1271960_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ladybug-1271960_1920.jpg","title":"Creating a Material Login Form","readingTime":2,"wordCount":338},{"category":"Tasks","type":"task","md5":"3d49f5ad35bcdd7c116a3961b8389bae","filename":"creating-a-conditional-clear-button-on-our-angular-material-search-field.md","path":"tasks/angular/creating-a-conditional-clear-button-on-our-angular-material-search-field.md","id":"tasks--angular--creating-a-conditional-clear-button-on-our-angular-material-search-field","markdown":"\\nWe have a material search field and we want to add a clear button to render on the condition that the search field is populated.\\n\\n```\\n<mat-form-field>\\n    <input [(ngModel)]=\\"searchField\\" matInput placeholder=\\"Search\\" autocomplete=\\"off\\">\\n</mat-form-field>\\n```\\n\\n# Approach\\n\\nJust add `*ngIf=\\"searchField\\"` to the `mat icon` button:\\n```\\n<mat-form-field>\\n    <input [(ngModel)]=\\"searchField\\" matInput placeholder=\\"Search\\" autocomplete=\\"off\\">\\n        <button mat-button mat-icon-button matSuffix (click)=\\"clearSearchField()\\" *ngIf=\\"searchField\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</mat-form-field>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Angular Enum Template Demo\\" \\n    description=\\"Creating a Conditional Clear Button on Our Angular Material Search Field\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-conditional-clear-button\\">\\n</fs-link-preview>\\n","html":"<p>We have a material search field and we want to add a clear button to render on the condition that the search field is populated.</p>\\n<pre><code>&lt;mat-form-field&gt;\\n    &lt;input [(ngModel)]=&quot;searchField&quot; matInput placeholder=&quot;Search&quot; autocomplete=&quot;off&quot;&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Just add <code>*ngIf=&quot;searchField&quot;</code> to the <code>mat icon</code> button:</p>\\n<pre><code>&lt;mat-form-field&gt;\\n    &lt;input [(ngModel)]=&quot;searchField&quot; matInput placeholder=&quot;Search&quot; autocomplete=&quot;off&quot;&gt;\\n        &lt;button mat-button mat-icon-button matSuffix (click)=&quot;clearSearchField()&quot; *ngIf=&quot;searchField&quot;&gt;\\n        &lt;mat-icon&gt;close&lt;/mat-icon&gt;\\n    &lt;/button&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Angular Enum Template Demo\' \\n    description=\'Creating a Conditional Clear Button on Our Angular Material Search Field\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-conditional-clear-button\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Conditional Clear Button on Our Angular Material Search Field.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/16/2021","headerImage":"water-2943518_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-2943518_1920.jpg","title":"Creating a Conditional Clear Button on Our Angular Material Search Field","readingTime":1,"wordCount":127},{"category":"Tasks","type":"task","md5":"98c4d095d2d425366f1a891ff89aea26","filename":"creating-a-dynamic-component-with-a-custom-injector.md","path":"tasks/angular/creating-a-dynamic-component-with-a-custom-injector.md","id":"tasks--angular--creating-a-dynamic-component-with-a-custom-injector","markdown":"\\nOur `HelloComponent` takes a configuration constructor injected object. \\n\\nWhen creating this component dynamically we wish to inject that component with the configuration value using Angular Dependency Injection, but without configuring the `@ngModule.providers` providers array or using `providedIn:root`.\\n\\n# Approach\\n\\nUse the the imperative / programmatic way of performing constructor injection `ReflectiveInjector` to resolve and create the configuration for the component.\\n\\nThis is achieves the same end result as declaring the dependency in `@ngModule.providers`.\\n\\nThe reason we to do this to keep Angular from yelling at us about the object not being constructed properly, even if if the property is initialized post construction (   this.componentRef.instance.config = value;` ) \u2014 Yes Angular is also your mom:\\n```\\nconst injector: Injector = ReflectiveInjector.resolveAndCreate(\\n[{\\n     provide: \'config\', useValue: { \\n     value: \'Any value or object here\'}\\n}]);\\nconst factory = cfr.resolveComponentFactory(HelloComponent);\\nconst cr: ComponentRef<HelloComponent> = vc.createComponent(factory, 0, injector);\\nconsole.log(cr.instance.config);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Creating a Dynamic Component With a Custom Injector\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-custom-injector\\">\\n</fs-link-preview>","html":"<p>Our <code>HelloComponent</code> takes a configuration constructor injected object. </p>\\n<p>When creating this component dynamically we wish to inject that component with the configuration value using Angular Dependency Injection, but without configuring the <code>@ngModule.providers</code> providers array or using <code>providedIn:root</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use the the imperative / programmatic way of performing constructor injection <code>ReflectiveInjector</code> to resolve and create the configuration for the component.</p>\\n<p>This is achieves the same end result as declaring the dependency in <code>@ngModule.providers</code>.</p>\\n<p>The reason we to do this to keep Angular from yelling at us about the object not being constructed properly, even if if the property is initialized post construction (   this.componentRef.instance.config = value;` ) \u2014 Yes Angular is also your mom:</p>\\n<pre><code>const injector: Injector = ReflectiveInjector.resolveAndCreate(\\n[{\\n     provide: &#39;config&#39;, useValue: { \\n     value: &#39;Any value or object here&#39;}\\n}]);\\nconst factory = cfr.resolveComponentFactory(HelloComponent);\\nconst cr: ComponentRef&lt;HelloComponent&gt; = vc.createComponent(factory, 0, injector);\\nconsole.log(cr.instance.config);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Creating a Dynamic Component With a Custom Injector\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-custom-injector\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Dynamic Component With a Custom Injector.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"car-engine-1738309_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/car-engine-1738309_1920.jpg","title":"Creating a Dynamic Component With a Custom Injector","readingTime":1,"wordCount":186},{"category":"Tasks","type":"task","md5":"2a281f481985efb5b31cfce32a4d11fe","filename":"creating-a-dynamic-reactive-angular-error-display-component.md","path":"tasks/angular/creating-a-dynamic-reactive-angular-error-display-component.md","id":"tasks--angular--creating-a-dynamic-reactive-angular-error-display-component","markdown":"\\nWe have defined an interface for error types:\\n\\n```\\nexport interface ErrorTypes {\\n   [key: string]: string;\\n}\\n```\\n\\nWe want an Angular Component that can display an enumeration of error types defined by the `ErrorTypes` interface when the components `error$:Observable<string>` emits an error key.\\n\\nFor example we may implement the interface like this:\\n\\n```\\nerrorTypes: ErrorTypes = {\\n    NETWORK_ERROR: \\"Network Error\\",\\n    DATA_ERROR: \\"Data Error\\"\\n};\\n```\\n\\nNote that the `ErrorTypes` instance values will be used to display the type of error that occurred in the components template.\\n\\nCreate the `dataError$:Observable<string> = of(\'DATA_ERROR\')`.\\n\\nAnd trigger data error display like this:\\n```\\n<fs-error [error$]=\\"dataError$\\" [errorTypes]=\\"errorTypes\\"></fs-error>\\n```\\n\\n# Approach\\n\\nThis is the complete implementation of our component:\\n```\\nimport { Component, Input, OnInit } from \\"@angular/core\\";\\nimport { Observable } from \\"rxjs\\";\\nimport { ErrorTypes } from \\"./error.model\\";\\n@Component({\\nselector: \\"fs-error\\",\\ntemplate: `\\n<ng-container *ngIf=\\"(error$ | async)\\">\\n<div [ngSwitch]=\\"error$ | async\\">\\n<ng-container *ngFor=\\"let key of errorTypeKeys\\">\\n<div *ngSwitchCase=\\"key\\">\\n<h3>{{ errorTypes[key] }}</h3>\\n</div>\\n</ng-container>\\n<div *ngSwitchDefault>The error key had no matches</div>\\n</div>\\n</ng-container>\\n`,\\nstyles: [] \\n})\\nexport class ErrorComponent implements OnInit {\\n    \\n    @Input()\\n    error$: Observable<string>;\\n    @Input()\\n    errorTypes: ErrorTypes;\\n    errorTypeKeys: string[];\\n    ngOnInit() {\\n        this.errorTypeKeys = Object.keys(this.errorTypes);\\n    }\\n}\\n```\\n\\n\\nWe render the error template if an error occurs:\\n```\\n<ng-container *ngIf=\\"(error$ | async)\\">\\n...\\n</ng-container>\\n```\\n\\nWe generate the dynamic switch conditions like this:\\n```\\n<ng-container *ngFor=\\"let key of errorTypeKeys\\">\\n<div *ngSwitchCase=\\"key\\">\\n<h3>{{ errorTypes[key] }}</h3>\\n</div>\\n```\\n\\nThe error that occurred is displayed via this part of the template:\\n```\\n<h3>{{ errorTypes[key] }}</h3>\\n```\\nDynamic generation of the `string[]` array of possible error conditions ( `this.errorTypeKeys` ) is done by the `ErrorComponent` inside the `ngOnInit()` life cycle method:\\n\\n```\\nthis.errorTypeKeys = Object.keys(this.errorTypes);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Dynamic Reactive Angular Error Display Component\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-generic-error-handling-switch-component\\">\\n</fs-link-preview>\\n","html":"<p>We have defined an interface for error types:</p>\\n<pre><code>export interface ErrorTypes {\\n   [key: string]: string;\\n}\\n</code></pre>\\n<p>We want an Angular Component that can display an enumeration of error types defined by the <code>ErrorTypes</code> interface when the components <code>error$:Observable&lt;string&gt;</code> emits an error key.</p>\\n<p>For example we may implement the interface like this:</p>\\n<pre><code>errorTypes: ErrorTypes = {\\n    NETWORK_ERROR: &quot;Network Error&quot;,\\n    DATA_ERROR: &quot;Data Error&quot;\\n};\\n</code></pre>\\n<p>Note that the <code>ErrorTypes</code> instance values will be used to display the type of error that occurred in the components template.</p>\\n<p>Create the <code>dataError$:Observable&lt;string&gt; = of(&#39;DATA_ERROR&#39;)</code>.</p>\\n<p>And trigger data error display like this:</p>\\n<pre><code>&lt;fs-error [error$]=&quot;dataError$&quot; [errorTypes]=&quot;errorTypes&quot;&gt;&lt;/fs-error&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>This is the complete implementation of our component:</p>\\n<pre><code>import { Component, Input, OnInit } from &quot;@angular/core&quot;;\\nimport { Observable } from &quot;rxjs&quot;;\\nimport { ErrorTypes } from &quot;./error.model&quot;;\\n@Component({\\nselector: &quot;fs-error&quot;,\\ntemplate: `\\n&lt;ng-container *ngIf=&quot;(error$ | async)&quot;&gt;\\n&lt;div [ngSwitch]=&quot;error$ | async&quot;&gt;\\n&lt;ng-container *ngFor=&quot;let key of errorTypeKeys&quot;&gt;\\n&lt;div *ngSwitchCase=&quot;key&quot;&gt;\\n&lt;h3&gt;{{ errorTypes[key] }}&lt;/h3&gt;\\n&lt;/div&gt;\\n&lt;/ng-container&gt;\\n&lt;div *ngSwitchDefault&gt;The error key had no matches&lt;/div&gt;\\n&lt;/div&gt;\\n&lt;/ng-container&gt;\\n`,\\nstyles: [] \\n})\\nexport class ErrorComponent implements OnInit {\\n    \\n    @Input()\\n    error$: Observable&lt;string&gt;;\\n    @Input()\\n    errorTypes: ErrorTypes;\\n    errorTypeKeys: string[];\\n    ngOnInit() {\\n        this.errorTypeKeys = Object.keys(this.errorTypes);\\n    }\\n}\\n</code></pre>\\n<p>We render the error template if an error occurs:</p>\\n<pre><code>&lt;ng-container *ngIf=&quot;(error$ | async)&quot;&gt;\\n...\\n&lt;/ng-container&gt;\\n</code></pre>\\n<p>We generate the dynamic switch conditions like this:</p>\\n<pre><code>&lt;ng-container *ngFor=&quot;let key of errorTypeKeys&quot;&gt;\\n&lt;div *ngSwitchCase=&quot;key&quot;&gt;\\n&lt;h3&gt;{{ errorTypes[key] }}&lt;/h3&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<p>The error that occurred is displayed via this part of the template:</p>\\n<pre><code>&lt;h3&gt;{{ errorTypes[key] }}&lt;/h3&gt;\\n</code></pre>\\n<p>Dynamic generation of the <code>string[]</code> array of possible error conditions ( <code>this.errorTypeKeys</code> ) is done by the <code>ErrorComponent</code> inside the <code>ngOnInit()</code> life cycle method:</p>\\n<pre><code>this.errorTypeKeys = Object.keys(this.errorTypes);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Dynamic Reactive Angular Error Display Component\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-generic-error-handling-switch-component\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Dynamic Reactive Angular Error Display Component.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"load-cell-2652888_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/load-cell-2652888_1920.jpg","title":"Creating a Dynamic Reactive Angular Error Display Component","readingTime":2,"wordCount":318},{"category":"Tasks","type":"task","md5":"a6d8ba4fd2de69999ad60b25f8442955","filename":"creating-a-minimal-web-worker-with-angular.md","path":"tasks/angular/creating-a-minimal-web-worker-with-angular.md","id":"tasks--angular--creating-a-minimal-web-worker-with-angular","markdown":"\\nWe want to get started with Web Workers in Angular\\n\\n# Approach\\n\\n## New Project\\n```\\nng new WW --routing --style=scss --defaults --skipTests=true\\ncd WW\\n```\\n\\n## New Worker\\n\\nGenerate `app.worker.ts` in the `app` folder:\\n\\n```\\nng generate web-worker app\\n```\\n\\nThe Angular CLI logs the following:\\n\\n```\\nCREATE tsconfig.worker.json (289 bytes)\\nCREATE src/app/app.worker.ts (157 bytes)\\nUPDATE angular.json (4273 bytes)\\nUPDATE src/app/app.component.ts (591 bytes)\\n```\\n\\nIf we look in `app.components.ts` we see the following web worker scaffolding added.  \\n\\nWe will move this to `src/app/services/worker.service.ts` to show that this scaffolding can be run from any service.\\n\\n## Web Worker Service\\n\\nGenerate `src/app/services/worker.service.ts`:\\n\\n```\\nng g service services/worker\\n```\\n\\nMove the scaffolding to the service constructor:\\n\\n```\\n  constructor() {\\n    if (typeof Worker !== \'undefined\') {\\n      // Create a new\\n      const worker = new Worker(\'../app.worker\', { type: \'module\' });\\n      worker.onmessage = ({ data }) => {\\n        console.log(`page got message: ${data}`);\\n      };\\n      worker.postMessage(\'hello\');\\n    } else {\\n      // Web Workers are not supported in this environment.\\n      // You should add a fallback so that your program still executes correctly.\\n    }\\n  }\\n```\\n\\nNote that we changed the instantion of the worker from:\\n```\\nconst worker = new Worker(\'./app.worker\', { type: \'module\' })\\n```\\n\\nTo:\\n```\\nconst worker = new Worker(\'../app.worker\', { type: \'module\' })\\n```\\n\\nAlso **NOTE THAT IN ANGUALR 12** the worker `constructor` has changed to:\\n\\n```\\nconst worker = new Worker(new URL(\'../app.worker\', import.meta.url))\\n```\\n\\n\\nAnd inject the service in `app.component.ts.`:\\n\\n```\\nconstructor(private ws: WorkerService) {  }\\n```\\n\\nStart the app:\\n\\n```\\nng serve -o\\n```\\n\\nWe should see that it logs `page got message hello` in the web developer console.","html":"<p>We want to get started with Web Workers in Angular</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'new-project\'>New Project</h2>\\n<pre><code>ng new WW --routing --style=scss --defaults --skipTests=true\\ncd WW\\n</code></pre>\\n<h2 id=\'new-worker\'>New Worker</h2>\\n<p>Generate <code>app.worker.ts</code> in the <code>app</code> folder:</p>\\n<pre><code>ng generate web-worker app\\n</code></pre>\\n<p>The Angular CLI logs the following:</p>\\n<pre><code>CREATE tsconfig.worker.json (289 bytes)\\nCREATE src/app/app.worker.ts (157 bytes)\\nUPDATE angular.json (4273 bytes)\\nUPDATE src/app/app.component.ts (591 bytes)\\n</code></pre>\\n<p>If we look in <code>app.components.ts</code> we see the following web worker scaffolding added.  </p>\\n<p>We will move this to <code>src/app/services/worker.service.ts</code> to show that this scaffolding can be run from any service.</p>\\n<h2 id=\'web-worker-service\'>Web Worker Service</h2>\\n<p>Generate <code>src/app/services/worker.service.ts</code>:</p>\\n<pre><code>ng g service services/worker\\n</code></pre>\\n<p>Move the scaffolding to the service constructor:</p>\\n<pre><code>  constructor() {\\n    if (typeof Worker !== &#39;undefined&#39;) {\\n      // Create a new\\n      const worker = new Worker(&#39;../app.worker&#39;, { type: &#39;module&#39; });\\n      worker.onmessage = ({ data }) =&gt; {\\n        console.log(`page got message: ${data}`);\\n      };\\n      worker.postMessage(&#39;hello&#39;);\\n    } else {\\n      // Web Workers are not supported in this environment.\\n      // You should add a fallback so that your program still executes correctly.\\n    }\\n  }\\n</code></pre>\\n<p>Note that we changed the instantion of the worker from:</p>\\n<pre><code>const worker = new Worker(&#39;./app.worker&#39;, { type: &#39;module&#39; })\\n</code></pre>\\n<p>To:</p>\\n<pre><code>const worker = new Worker(&#39;../app.worker&#39;, { type: &#39;module&#39; })\\n</code></pre>\\n<p>Also <strong>NOTE THAT IN ANGUALR 12</strong> the worker <code>constructor</code> has changed to:</p>\\n<pre><code>const worker = new Worker(new URL(&#39;../app.worker&#39;, import.meta.url))\\n</code></pre>\\n<p>And inject the service in <code>app.component.ts.</code>:</p>\\n<pre><code>constructor(private ws: WorkerService) {  }\\n</code></pre>\\n<p>Start the app:</p>\\n<pre><code>ng serve -o\\n</code></pre>\\n<p>We should see that it logs <code>page got message hello</code> in the web developer console.</p>\\n","summary":"Creating a Minimal Web Worker with Angular.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/26/2021","headerImage":"tarantula-1198225_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/tarantula-1198225_1920.jpg","title":"Creating a Minimal Web Worker with Angular","readingTime":2,"wordCount":263},{"category":"Tasks","type":"task","md5":"54a5dbefb1e7e1e5ac923668ca613316","filename":"creating-a-new-angular-project-with-sass-and-routing.md","path":"tasks/angular/creating-a-new-angular-project-with-sass-and-routing.md","id":"tasks--angular--creating-a-new-angular-project-with-sass-and-routing","markdown":"\\nWe want to create an Angular project `p` using the CLI without test generation and with SASS and Routing and we want to skip the command line prompts by using flags for the options.\\n\\n# Approach\\n\\n```\\nng new p --routing --style=scss --defaults --skipTests=true\\n```\\n\\n# Bonus\\n\\nAdd Angular Material with defaults, the Firefly Semantics material base module, and `aws-amplify` as well:\\n\\n```\\nng new p --defaults --style=scss --routing  --skipTests=true && cd p && ng add @angular/material --defaults && npm i @fireflysemantics/material-base-module aws-amplify\\n```","html":"<p>We want to create an Angular project <code>p</code> using the CLI without test generation and with SASS and Routing and we want to skip the command line prompts by using flags for the options.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>ng new p --routing --style=scss --defaults --skipTests=true\\n</code></pre>\\n<h1 id=\'bonus\'>Bonus</h1>\\n<p>Add Angular Material with defaults, the Firefly Semantics material base module, and <code>aws-amplify</code> as well:</p>\\n<pre><code>ng new p --defaults --style=scss --routing  --skipTests=true &amp;&amp; cd p &amp;&amp; ng add @angular/material --defaults &amp;&amp; npm i @fireflysemantics/material-base-module aws-amplify\\n</code></pre>\\n","summary":"Creating a New Angular Project with SASS and Routing.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/16/2021","headerImage":"ladybugs-1593406_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ladybugs-1593406_1920.jpg","title":"Creating a New Angular Project with SASS and Routing","readingTime":1,"wordCount":85},{"category":"Tasks","type":"task","md5":"67304883a42b04235cdc3612c36793e3","filename":"creating-a-packaged-and-themeable-angular-material-component.md","path":"tasks/angular/creating-a-packaged-and-themeable-angular-material-component.md","id":"tasks--angular--creating-a-packaged-and-themeable-angular-material-component","markdown":"\\nWe need to create an Angular component, `big.component.ts`, that is NPM installable and also themeable.\\n\\nThe component makes `text` contained by its inner `html` bigger and uses the `accent` theme color for the text.\\n\\n# Approach\\n\\n## Workspace\\n\\nWe will be using the [Angular Package Format](https://angular.io/guide/angular-package-format) for the component and module library, so first create a workspace for the library.\\n```\\nng new big-workspace --create-application=false\\ncd big-workspace\\n```\\n\\n## Library\\n\\nThen create the big component library.\\n\\n```\\nng g library big\\n```\\n\\nAnd open the project in VSCode.\\n```\\ncode .\\n```\\n\\nDelete `big.component.spec.ts`, `big.service.ts`, and `big.service.spec.ts`.\\n```\\nrm projects/big/src/lib/big.component.spec.ts\\nrm projects/big/src/lib/big.service.ts\\nrm projects/big/src/lib/big.service.spec.ts\\n```\\nAnd update `public-api.ts`.\\n\\n```\\nexport * from \'./lib/big.component\';\\nexport * from \'./lib/big.module\';\\n```\\n\\n## Styling\\n\\nAdd `big.component.scss`.\\n```\\ntouch projects/big/src/lib/big.component.scss\\n```\\n\\nDeclare the non theme dependent CSS.\\n```\\n:host {\\n    letter-spacing: 0.05em;\\n    text-transform: uppercase;\\n    font-size: 4rem;\\n    font-family: monospace;\\n}\\n```\\n\\nAdd `theming/index.scss`.\\n\\n```\\nmkdir projects/big/src/lib/theming\\ntouch projects/big/src/lib/theming/index.scss\\n```\\n\\nDeclare the theme dependent `CSS`.\\n```\\n@use \'@angular/material\' as mat;\\n\\n@mixin big-component-theme($theme) {\\n$accent: map-get($theme, accent);\\nfs-big {\\n    color: mat.get-color-from-palette($accent);\\n    }\\n}\\n```\\n\\nNote that we are naming the theme file for the component `index.scss` such that we can import it like this (Which is symmetric with how Angular Material does it in general).\\n\\n```\\n@use \\"@fireflysemantics/big-component-example/theming\\" as theme;\\n```\\n\\nCreate a `big.component.html`.\\n\\n```\\ntouch projects/big/src/lib/big.component.html\\n```\\n\\nPut the template in that.\\n```\\n<p>big works!</p>\\n```\\nChange the implementation of `big.component.ts`.\\n```\\nimport { Component, OnInit } from \'@angular/core\';\\n@Component({\\n    selector: \'fs-big\',\\n    templateUrl: \'./big.component.html\',\\n    styleUrls: [\'./big.component.scss\']\\n})\\nexport class BigComponent implements OnInit {\\nconstructor() { }\\nngOnInit(): void {\\n    }\\n}\\n```\\n\\n## Library Test Build\\n\\nBuild the library project.\\n```\\nng build big\\n```\\n\\n## Library Assets Packaging\\n\\nCreate a `src/CHANGELOG.md` for our change log notes.\\n\\n```\\ntouch projects/big/src/CHANGELOG.md\\n```\\n\\nIn order for `ng-packagr` to copy our assets into the distribution when building we need to update the assets section of `ng-package.json`.\\n\\n\\n```\\n{\\n  \\"$schema\\": \\"../../node_modules/ng-packagr/ng-package.schema.json\\",\\n  \\"dest\\": \\"../../dist/big\\",\\n  \\"assets\\": [\\n    \\"./src/CHANGELOG.md\\",\\n    \\"./src/lib/theming/index.scss\\"\\n  ],\\n  \\"lib\\": {\\n    \\"entryFile\\": \\"src/public-api.ts\\"\\n  }\\n}\\n```\\n\\nAfter the update run the build command `ng build big` again.\\n\\nCheck the `dist` folder. It now contains a `src` folder with our assets.\\n\\n```\\nsandbox/big-workspace $ tree dist/big/src/\\ndist/big/src/\\n\u251c\u2500\u2500 CHANGELOG.md\\n\u2514\u2500\u2500 lib\\n    \u2514\u2500\u2500 theming\\n        \u2514\u2500\u2500 index.scss\\n2 directories, 2 files\\n```\\n\\nWe also need to create an `exports` block for `index.scss` in the libraries `package.json` file.\\n\\n```\\n{\\n  \\"name\\": \\"@fireflysemantics/big-component-example\\",\\n  \\"version\\": \\"0.0.1\\",\\n  \\"exports\\": {\\n    \\".\\": {\\n      \\"sass\\": \\"./src/lib/theming/index.scss\\"\\n    }\\n  },\\n  \\"peerDependencies\\": {\\n    \\"@angular/common\\": \\"^13.3.0\\",\\n    \\"@angular/core\\": \\"^13.3.0\\"\\n  },\\n  \\"dependencies\\": {\\n    \\"tslib\\": \\"^2.3.0\\"\\n  }\\n}\\n```\\n\\nThis enables clients of our component to import the theme like this:\\n\\n```\\n@use \\"@fireflysemantics/big-component-example/theming\\" as theme;\\n```\\n\\nNote that we also changed the package name.\\n```\\n\\"name\\": \\"@fireflysemantics/big-component-example\\",\\n```\\n\\n## Local Testing\\n\\nTest the component. To do this we will generate a test application.\\n\\n```\\nng generate application test --style=scss --routing \\n```\\n\\nAnd add Angular Material.\\n```\\nng add @angular/material\\n```\\n\\nAdd the `big.module.ts` `BigModule` to the test application `app.module.ts`.\\n```\\nimport { BigModule} from \'big\'\\n@NgModule({\\ndeclarations: [\\n    AppComponent\\n],\\nimports: [\\n    BrowserModule,\\n    AppRoutingModule,\\n    BigModule],\\n   providers: [],\\n   bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n```\\n\\nDeclare the `fs-big` component inside `app.component.html`.\\n\\n```\\n<div>\\n   <fs-big></fs-big>\\n</div>\\n```\\n\\nDeclare the CSS for the test rendering within `app.component.scss`.\\n\\n```\\ndiv {\\n    margin-top: 10rem;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    font-weight: bolder;\\n}\\n```\\n\\nWithin the test project create a `themes.scss` file.\\n\\n```\\n@use \'@angular/material\' as mat;\\n$my-theme-primary: mat.define-palette(mat.$indigo-palette, 500, 200, 800);\\n$my-theme-accent: mat.define-palette(mat.$cyan-palette);\\n$my-theme-warn: mat.define-palette(mat.$deep-orange-palette, A200);\\n$light-theme: mat.define-light-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n```\\n\\nAnd add the themes to `styles.scss`.\\n\\n```\\n\\n/* You can add global styles to this file, and also import other style files */\\n\\n@use \'@angular/material\' as mat;\\n@use \'../../big/src/lib/theming\' as theme;\\n\\n// =====================================\\n// always include only once per project\\n// =====================================\\n@include mat.core();\\n// =====================================\\n// import our custom themes\\n// =====================================\\n@import \'themes\';\\n// =====================================\\n// Import the big component theme\\n// =====================================\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n// ====================================\\n// If we had more component themes\\n// we could include them here as well.\\n// ====================================\\n}\\n@include mat.core-theme($light-theme);\\n@include custom-components-theme($light-theme);\\n```\\n\\nWe can now run `ng serve -o` and we can see that our custom component is rendered with the `accent` color applied.\\n\\n# Packaging\\n\\nOpen `package.json` for the library and change the name.\\n\\n```\\n\\"name\\": \\"@fireflysemantics/big-component-example\\",\\n```\\n\\n# Workspace Package Scripts\\n\\nIn order to build and publish the project add the following package.json scripts.\\n\\n## Install Global\\n\\nThis will install `@jsdevtools/version-bump-prompt` for semantic versioning.\\n```\\n\\"ig\\": \\"npm install -g @jsdevtools/version-bump-prompt\\",    \\n```\\n\\n## Build\\n```\\n\\"b\\": \\"ng build big\\",    \\n```\\n\\n## Bump Patch\\n\\nBump the package patch version.\\n```\\n\\"bp\\": \\"cd projects/big && bump patch\\",    \\n```\\n\\n## Publish\\n\\nWe copy over `README.md` over the library `README.md` that way we only maintain the `big-workspace/README.md` file.\\n```\\n\\"p\\": \\"cp README.md ./projects/big/ && npm run bp && npm run b && cd dist/big/ && npm publish\\"\\n```\\n\\n## Publish to NPM\\n\\nThe first time we publish we need to add `--access public` so we will run the p script manually the first time.\\n\\n```\\ncp README.md ./projects/big && npm run b && cd dist/big/ && npm publish --access public\\n```\\n\\nNow we can find `@fireflysemantics/big-component-example` on NPM.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Packaged and Themeable Angular Material Component\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk\\">\\n</fs-link-preview>\\n","html":"<p>We need to create an Angular component, <code>big.component.ts</code>, that is NPM installable and also themeable.</p>\\n<p>The component makes <code>text</code> contained by its inner <code>html</code> bigger and uses the <code>accent</code> theme color for the text.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'workspace\'>Workspace</h2>\\n<p>We will be using the <a href=\'https://angular.io/guide/angular-package-format\'>Angular Package Format</a> for the component and module library, so first create a workspace for the library.</p>\\n<pre><code>ng new big-workspace --create-application=false\\ncd big-workspace\\n</code></pre>\\n<h2 id=\'library\'>Library</h2>\\n<p>Then create the big component library.</p>\\n<pre><code>ng g library big\\n</code></pre>\\n<p>And open the project in VSCode.</p>\\n<pre><code>code .\\n</code></pre>\\n<p>Delete <code>big.component.spec.ts</code>, <code>big.service.ts</code>, and <code>big.service.spec.ts</code>.</p>\\n<pre><code>rm projects/big/src/lib/big.component.spec.ts\\nrm projects/big/src/lib/big.service.ts\\nrm projects/big/src/lib/big.service.spec.ts\\n</code></pre>\\n<p>And update <code>public-api.ts</code>.</p>\\n<pre><code>export * from &#39;./lib/big.component&#39;;\\nexport * from &#39;./lib/big.module&#39;;\\n</code></pre>\\n<h2 id=\'styling\'>Styling</h2>\\n<p>Add <code>big.component.scss</code>.</p>\\n<pre><code>touch projects/big/src/lib/big.component.scss\\n</code></pre>\\n<p>Declare the non theme dependent CSS.</p>\\n<pre><code>:host {\\n    letter-spacing: 0.05em;\\n    text-transform: uppercase;\\n    font-size: 4rem;\\n    font-family: monospace;\\n}\\n</code></pre>\\n<p>Add <code>theming/index.scss</code>.</p>\\n<pre><code>mkdir projects/big/src/lib/theming\\ntouch projects/big/src/lib/theming/index.scss\\n</code></pre>\\n<p>Declare the theme dependent <code>CSS</code>.</p>\\n<pre><code>@use &#39;@angular/material&#39; as mat;\\n\\n@mixin big-component-theme($theme) {\\n$accent: map-get($theme, accent);\\nfs-big {\\n    color: mat.get-color-from-palette($accent);\\n    }\\n}\\n</code></pre>\\n<p>Note that we are naming the theme file for the component <code>index.scss</code> such that we can import it like this (Which is symmetric with how Angular Material does it in general).</p>\\n<pre><code>@use &quot;@fireflysemantics/big-component-example/theming&quot; as theme;\\n</code></pre>\\n<p>Create a <code>big.component.html</code>.</p>\\n<pre><code>touch projects/big/src/lib/big.component.html\\n</code></pre>\\n<p>Put the template in that.</p>\\n<pre><code>&lt;p&gt;big works!&lt;/p&gt;\\n</code></pre>\\n<p>Change the implementation of <code>big.component.ts</code>.</p>\\n<pre><code>import { Component, OnInit } from &#39;@angular/core&#39;;\\n@Component({\\n    selector: &#39;fs-big&#39;,\\n    templateUrl: &#39;./big.component.html&#39;,\\n    styleUrls: [&#39;./big.component.scss&#39;]\\n})\\nexport class BigComponent implements OnInit {\\nconstructor() { }\\nngOnInit(): void {\\n    }\\n}\\n</code></pre>\\n<h2 id=\'library-test-build\'>Library Test Build</h2>\\n<p>Build the library project.</p>\\n<pre><code>ng build big\\n</code></pre>\\n<h2 id=\'library-assets-packaging\'>Library Assets Packaging</h2>\\n<p>Create a <code>src/CHANGELOG.md</code> for our change log notes.</p>\\n<pre><code>touch projects/big/src/CHANGELOG.md\\n</code></pre>\\n<p>In order for <code>ng-packagr</code> to copy our assets into the distribution when building we need to update the assets section of <code>ng-package.json</code>.</p>\\n<pre><code>{\\n  &quot;$schema&quot;: &quot;../../node_modules/ng-packagr/ng-package.schema.json&quot;,\\n  &quot;dest&quot;: &quot;../../dist/big&quot;,\\n  &quot;assets&quot;: [\\n    &quot;./src/CHANGELOG.md&quot;,\\n    &quot;./src/lib/theming/index.scss&quot;\\n  ],\\n  &quot;lib&quot;: {\\n    &quot;entryFile&quot;: &quot;src/public-api.ts&quot;\\n  }\\n}\\n</code></pre>\\n<p>After the update run the build command <code>ng build big</code> again.</p>\\n<p>Check the <code>dist</code> folder. It now contains a <code>src</code> folder with our assets.</p>\\n<pre><code>sandbox/big-workspace $ tree dist/big/src/\\ndist/big/src/\\n\u251c\u2500\u2500 CHANGELOG.md\\n\u2514\u2500\u2500 lib\\n    \u2514\u2500\u2500 theming\\n        \u2514\u2500\u2500 index.scss\\n2 directories, 2 files\\n</code></pre>\\n<p>We also need to create an <code>exports</code> block for <code>index.scss</code> in the libraries <code>package.json</code> file.</p>\\n<pre><code>{\\n  &quot;name&quot;: &quot;@fireflysemantics/big-component-example&quot;,\\n  &quot;version&quot;: &quot;0.0.1&quot;,\\n  &quot;exports&quot;: {\\n    &quot;.&quot;: {\\n      &quot;sass&quot;: &quot;./src/lib/theming/index.scss&quot;\\n    }\\n  },\\n  &quot;peerDependencies&quot;: {\\n    &quot;@angular/common&quot;: &quot;^13.3.0&quot;,\\n    &quot;@angular/core&quot;: &quot;^13.3.0&quot;\\n  },\\n  &quot;dependencies&quot;: {\\n    &quot;tslib&quot;: &quot;^2.3.0&quot;\\n  }\\n}\\n</code></pre>\\n<p>This enables clients of our component to import the theme like this:</p>\\n<pre><code>@use &quot;@fireflysemantics/big-component-example/theming&quot; as theme;\\n</code></pre>\\n<p>Note that we also changed the package name.</p>\\n<pre><code>&quot;name&quot;: &quot;@fireflysemantics/big-component-example&quot;,\\n</code></pre>\\n<h2 id=\'local-testing\'>Local Testing</h2>\\n<p>Test the component. To do this we will generate a test application.</p>\\n<pre><code>ng generate application test --style=scss --routing \\n</code></pre>\\n<p>And add Angular Material.</p>\\n<pre><code>ng add @angular/material\\n</code></pre>\\n<p>Add the <code>big.module.ts</code> <code>BigModule</code> to the test application <code>app.module.ts</code>.</p>\\n<pre><code>import { BigModule} from &#39;big&#39;\\n@NgModule({\\ndeclarations: [\\n    AppComponent\\n],\\nimports: [\\n    BrowserModule,\\n    AppRoutingModule,\\n    BigModule],\\n   providers: [],\\n   bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n</code></pre>\\n<p>Declare the <code>fs-big</code> component inside <code>app.component.html</code>.</p>\\n<pre><code>&lt;div&gt;\\n   &lt;fs-big&gt;&lt;/fs-big&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<p>Declare the CSS for the test rendering within <code>app.component.scss</code>.</p>\\n<pre><code>div {\\n    margin-top: 10rem;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    font-weight: bolder;\\n}\\n</code></pre>\\n<p>Within the test project create a <code>themes.scss</code> file.</p>\\n<pre><code>@use &#39;@angular/material&#39; as mat;\\n$my-theme-primary: mat.define-palette(mat.$indigo-palette, 500, 200, 800);\\n$my-theme-accent: mat.define-palette(mat.$cyan-palette);\\n$my-theme-warn: mat.define-palette(mat.$deep-orange-palette, A200);\\n$light-theme: mat.define-light-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n</code></pre>\\n<p>And add the themes to <code>styles.scss</code>.</p>\\n<pre><code>\\n/* You can add global styles to this file, and also import other style files */\\n\\n@use &#39;@angular/material&#39; as mat;\\n@use &#39;../../big/src/lib/theming&#39; as theme;\\n\\n// =====================================\\n// always include only once per project\\n// =====================================\\n@include mat.core();\\n// =====================================\\n// import our custom themes\\n// =====================================\\n@import &#39;themes&#39;;\\n// =====================================\\n// Import the big component theme\\n// =====================================\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n// ====================================\\n// If we had more component themes\\n// we could include them here as well.\\n// ====================================\\n}\\n@include mat.core-theme($light-theme);\\n@include custom-components-theme($light-theme);\\n</code></pre>\\n<p>We can now run <code>ng serve -o</code> and we can see that our custom component is rendered with the <code>accent</code> color applied.</p>\\n<h1 id=\'packaging\'>Packaging</h1>\\n<p>Open <code>package.json</code> for the library and change the name.</p>\\n<pre><code>&quot;name&quot;: &quot;@fireflysemantics/big-component-example&quot;,\\n</code></pre>\\n<h1 id=\'workspace-package-scripts\'>Workspace Package Scripts</h1>\\n<p>In order to build and publish the project add the following package.json scripts.</p>\\n<h2 id=\'install-global\'>Install Global</h2>\\n<p>This will install <code>@jsdevtools/version-bump-prompt</code> for semantic versioning.</p>\\n<pre><code>&quot;ig&quot;: &quot;npm install -g @jsdevtools/version-bump-prompt&quot;,    \\n</code></pre>\\n<h2 id=\'build\'>Build</h2>\\n<pre><code>&quot;b&quot;: &quot;ng build big&quot;,    \\n</code></pre>\\n<h2 id=\'bump-patch\'>Bump Patch</h2>\\n<p>Bump the package patch version.</p>\\n<pre><code>&quot;bp&quot;: &quot;cd projects/big &amp;&amp; bump patch&quot;,    \\n</code></pre>\\n<h2 id=\'publish\'>Publish</h2>\\n<p>We copy over <code>README.md</code> over the library <code>README.md</code> that way we only maintain the <code>big-workspace/README.md</code> file.</p>\\n<pre><code>&quot;p&quot;: &quot;cp README.md ./projects/big/ &amp;&amp; npm run bp &amp;&amp; npm run b &amp;&amp; cd dist/big/ &amp;&amp; npm publish&quot;\\n</code></pre>\\n<h2 id=\'publish-to-npm\'>Publish to NPM</h2>\\n<p>The first time we publish we need to add <code>--access public</code> so we will run the p script manually the first time.</p>\\n<pre><code>cp README.md ./projects/big &amp;&amp; npm run b &amp;&amp; cd dist/big/ &amp;&amp; npm publish --access public\\n</code></pre>\\n<p>Now we can find <code>@fireflysemantics/big-component-example</code> on NPM.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Packaged and Themeable Angular Material Component\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Packaged and Themeable Angular Material Component.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/24/2022","headerImage":"bee-7081014_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bee-7081014_1920.jpg","title":"Creating a Packaged and Themeable Angular Material Component","readingTime":6,"wordCount":1004},{"category":"Tasks","type":"task","md5":"a62cc475ffd35386ff3c8c2c87272038","filename":"creating-a-self-initializing-material-icons-svg-assets-service.md","path":"tasks/angular/creating-a-self-initializing-material-icons-svg-assets-service.md","id":"tasks--angular--creating-a-self-initializing-material-icons-svg-assets-service","markdown":"\\nWe have created a service that adds our SVG files to the Angular Material Icon registry.\\n\\nIn this minimal version we have a single `Asset` object keyed on an `SVG` object container.\\n\\n```\\nexport const SVG:KeyAsset = {\\n  FS_LOGO: {\\n      name: \'fs_logo\',\\n      url: \'https://raw.githubusercontent.com/fireflysemantics/logo/master/l1.svg\'\\n  }\\n}\\n```\\n\\nWe register this asset in the `MatIconRegistry` using the `name` and `url` properties.\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { DomSanitizer } from \\"@angular/platform-browser\\";\\nimport { MatIconRegistry } from \'@angular/material/icon\';\\n\\nexport interface Asset {\\n  name: string;\\n  url: string;\\n}\\n\\nexport interface KeyAsset {\\n  [key: string]: Asset;\\n}\\n\\nexport const SVG:KeyAsset = {\\n  FS_LOGO: {\\n      name: \'fs_logo\',\\n      url: \'https://raw.githubusercontent.com/fireflysemantics/logo/master/l1.svg\'\\n  }\\n}\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AssetService {\\n\\n  constructor(\\n    private matIconRegistry: MatIconRegistry,\\n    private domSanitizer: DomSanitizer) {\\n    {\\n      Object.keys(SVG).forEach(k=>{\\n        this.matIconRegistry.addSvgIcon(\\n          SVG[k].name,\\n          this.domSanitizer.bypassSecurityTrustResourceUrl(SVG[k].url));  \\n      })\\n    }\\n  }\\n}\\n\\n```\\n\\nIf we package this service in a library as is, it will not work.  \\n\\nThe reason is we also have to rememember to add the `HttpClientModule` as the `MaterialIconRegistry` as the service depends on these modules to load and register the SVG files.\\n\\nTherefore we want to create and package both the service and the module that will be imported in order to access the service.\\n\\nWe also want the service to be self initializing.  We should only have to import and register the `module` in  order for the service to dynamically load the `SVG` assets and make them ready for use by a `MatIcon` element.\\n\\n# Approach\\n\\nWe will be producing this [NPM package](https://www.npmjs.com/package/@fireflysemantics/svg-assets-example).\\n\\nWe can add this to an Angular project using the `CLI` or Stackblitz and after registering the `AssetsModule`.\\n\\nThis is the [github repository](https://github.com/fireflysemantics/svg-asset-example) containing the source code.\\n\\nThis is a [youtube](https://youtu.be/x8DxT3spNsc) that outlines all the steps in creating the project and publishing it.\\n\\nThis is the module that will be packaged along with the `AssetService`.\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { HttpClientModule } from \'@angular/common/http\';\\nimport { AssetService } from \'./assets.service\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\n\\n@NgModule({\\n  declarations: [],\\n  providers: [AssetService],\\n  imports: [\\n    CommonModule,\\n    HttpClientModule,\\n    MatIconModule\\n  ],\\n  exports: []\\n})\\nexport class AssetsModule { \\n  constructor(private a:AssetService) {}\\n}\\n```\\n\\nWe\'ve placed it along side the `asset.service.ts` service in our Angular library. The module is exported by `public-api.ts` in the Angular Package Format library.  The module constructor injects the asset service, and this initializes the icon registry.\\n\\nAfter the module is imported in our projects the `mat-icon` containing the `FS_LOGO` can be rendered like this:\\n\\n```\\n<mat-icon [svgIcon]=\\"SVG.FS_1_LOGO.name\\" style=\\"width: 42px; height:42px; font-size: 42px\\"></mat-icon>\\n```\\n\\n# Demo\\n\\n##  NPM Imported Module\\n\\nThis stackblitz depends on and imports the [AssetsModule](https://www.npmjs.com/package/@fireflysemantics/svg-assets-example), thus demonstrating using the NPM Package:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\" Creating a Packaged Self Initializing Angular Material Icons Assets Service\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-pajvyc\\">\\n</fs-link-preview>\\n\\n##  Unpackaged Stackblitz Demo\\n\\nThis has the module and service locally within the Stackblitz:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\" Creating a Packaged Self Initializing Angular Material Icons Assets Service\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-lzxage\\">\\n</fs-link-preview>\\n","html":"<p>We have created a service that adds our SVG files to the Angular Material Icon registry.</p>\\n<p>In this minimal version we have a single <code>Asset</code> object keyed on an <code>SVG</code> object container.</p>\\n<pre><code>export const SVG:KeyAsset = {\\n  FS_LOGO: {\\n      name: &#39;fs_logo&#39;,\\n      url: &#39;https://raw.githubusercontent.com/fireflysemantics/logo/master/l1.svg&#39;\\n  }\\n}\\n</code></pre>\\n<p>We register this asset in the <code>MatIconRegistry</code> using the <code>name</code> and <code>url</code> properties.</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { DomSanitizer } from &quot;@angular/platform-browser&quot;;\\nimport { MatIconRegistry } from &#39;@angular/material/icon&#39;;\\n\\nexport interface Asset {\\n  name: string;\\n  url: string;\\n}\\n\\nexport interface KeyAsset {\\n  [key: string]: Asset;\\n}\\n\\nexport const SVG:KeyAsset = {\\n  FS_LOGO: {\\n      name: &#39;fs_logo&#39;,\\n      url: &#39;https://raw.githubusercontent.com/fireflysemantics/logo/master/l1.svg&#39;\\n  }\\n}\\n\\n@Injectable({\\n  providedIn: &#39;root&#39;\\n})\\nexport class AssetService {\\n\\n  constructor(\\n    private matIconRegistry: MatIconRegistry,\\n    private domSanitizer: DomSanitizer) {\\n    {\\n      Object.keys(SVG).forEach(k=&gt;{\\n        this.matIconRegistry.addSvgIcon(\\n          SVG[k].name,\\n          this.domSanitizer.bypassSecurityTrustResourceUrl(SVG[k].url));  \\n      })\\n    }\\n  }\\n}\\n</code></pre>\\n<p>If we package this service in a library as is, it will not work.  </p>\\n<p>The reason is we also have to rememember to add the <code>HttpClientModule</code> as the <code>MaterialIconRegistry</code> as the service depends on these modules to load and register the SVG files.</p>\\n<p>Therefore we want to create and package both the service and the module that will be imported in order to access the service.</p>\\n<p>We also want the service to be self initializing.  We should only have to import and register the <code>module</code> in  order for the service to dynamically load the <code>SVG</code> assets and make them ready for use by a <code>MatIcon</code> element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will be producing this <a href=\'https://www.npmjs.com/package/@fireflysemantics/svg-assets-example\'>NPM package</a>.</p>\\n<p>We can add this to an Angular project using the <code>CLI</code> or Stackblitz and after registering the <code>AssetsModule</code>.</p>\\n<p>This is the <a href=\'https://github.com/fireflysemantics/svg-asset-example\'>github repository</a> containing the source code.</p>\\n<p>This is a <a href=\'https://youtu.be/x8DxT3spNsc\'>youtube</a> that outlines all the steps in creating the project and publishing it.</p>\\n<p>This is the module that will be packaged along with the <code>AssetService</code>.</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { CommonModule } from &#39;@angular/common&#39;;\\nimport { HttpClientModule } from &#39;@angular/common/http&#39;;\\nimport { AssetService } from &#39;./assets.service&#39;;\\nimport { MatIconModule } from &#39;@angular/material/icon&#39;;\\n\\n@NgModule({\\n  declarations: [],\\n  providers: [AssetService],\\n  imports: [\\n    CommonModule,\\n    HttpClientModule,\\n    MatIconModule\\n  ],\\n  exports: []\\n})\\nexport class AssetsModule { \\n  constructor(private a:AssetService) {}\\n}\\n</code></pre>\\n<p>We&#39;ve placed it along side the <code>asset.service.ts</code> service in our Angular library. The module is exported by <code>public-api.ts</code> in the Angular Package Format library.  The module constructor injects the asset service, and this initializes the icon registry.</p>\\n<p>After the module is imported in our projects the <code>mat-icon</code> containing the <code>FS_LOGO</code> can be rendered like this:</p>\\n<pre><code>&lt;mat-icon [svgIcon]=&quot;SVG.FS_1_LOGO.name&quot; style=&quot;width: 42px; height:42px; font-size: 42px&quot;&gt;&lt;/mat-icon&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<h2 id=\'npm-imported-module\'>NPM Imported Module</h2>\\n<p>This stackblitz depends on and imports the <a href=\'https://www.npmjs.com/package/@fireflysemantics/svg-assets-example\'>AssetsModule</a>, thus demonstrating using the NPM Package:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\' Creating a Packaged Self Initializing Angular Material Icons Assets Service\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-pajvyc\'>\\n</fs-link-preview></p>\\n<h2 id=\'unpackaged-stackblitz-demo\'>Unpackaged Stackblitz Demo</h2>\\n<p>This has the module and service locally within the Stackblitz:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\' Creating a Packaged Self Initializing Angular Material Icons Assets Service\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-lzxage\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Packaged Self Initializing Angular Material Icons Assets Service.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/14/2021","headerImage":"turtle-4032570_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/turtle-4032570_1920.jpg","title":"Creating a Packaged Self Initializing Angular Material Icons Assets Service","readingTime":3,"wordCount":568},{"category":"Tasks","type":"task","md5":"cde867c5c30d384fd5a66c7ae3a37a56","filename":"creating-a-styled-angular-material-snackbar-background.md","path":"tasks/angular/creating-a-styled-angular-material-snackbar-background.md","id":"tasks--angular--creating-a-styled-angular-material-snackbar-background","markdown":"\\nFor `success` snackbar messages the background should be `green`, and for error message the background should be `red`.\\n\\nAlso, when using the `action` to dismiss the Snackbar, the color it the button text should be white.\\n\\n# Approach\\n\\nCreate the service like this with the `error` and `success` notification methods:\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { MatSnackBar, MatSnackBarConfig } from \'@angular/material/snack-bar\';\\n@Injectable({ providedIn: \'root\' })\\nexport class NotificationService {\\n  config: MatSnackBarConfig = {\\n    duration: 3000,\\n    horizontalPosition: \'center\',\\n    verticalPosition: \'bottom\'\\n  };\\n\\n  constructor(public snackBar: MatSnackBar) {}\\n  success(message) {\\n    this.config.panelClass = [\'notification\', \'success\'];\\n    this.snackBar.open(message, \'\', this.config);\\n  }\\n\\n  error(message) {\\n    this.config.panelClass = [\'notification\', \'error\'];\\n    this.snackBar.open(message, \'\', this.config);\\n  }\\n}\\n```\\n\\nNot that in each method method we have configured the `config.panelClass` property with the with the classes needed to style the snackbar.\\n\\nAdd the following to `styles.scss`:\\n\\n```\\nsnack-bar-container.success {\\n  background-color: green;\\n  color: white;\\n}\\n\\nsnack-bar-container.error {\\n  background-color: red;\\n  color: white;\\n}\\n\\n.mat-simple-snackbar-action {\\n    color: white !important;\\n}\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Styled Angular Material Snackbar Background\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-12-snackbar-demo?file=src%2Fapp%2Fapp.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>For <code>success</code> snackbar messages the background should be <code>green</code>, and for error message the background should be <code>red</code>.</p>\\n<p>Also, when using the <code>action</code> to dismiss the Snackbar, the color it the button text should be white.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create the service like this with the <code>error</code> and <code>success</code> notification methods:</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { MatSnackBar, MatSnackBarConfig } from &#39;@angular/material/snack-bar&#39;;\\n@Injectable({ providedIn: &#39;root&#39; })\\nexport class NotificationService {\\n  config: MatSnackBarConfig = {\\n    duration: 3000,\\n    horizontalPosition: &#39;center&#39;,\\n    verticalPosition: &#39;bottom&#39;\\n  };\\n\\n  constructor(public snackBar: MatSnackBar) {}\\n  success(message) {\\n    this.config.panelClass = [&#39;notification&#39;, &#39;success&#39;];\\n    this.snackBar.open(message, &#39;&#39;, this.config);\\n  }\\n\\n  error(message) {\\n    this.config.panelClass = [&#39;notification&#39;, &#39;error&#39;];\\n    this.snackBar.open(message, &#39;&#39;, this.config);\\n  }\\n}\\n</code></pre>\\n<p>Not that in each method method we have configured the <code>config.panelClass</code> property with the with the classes needed to style the snackbar.</p>\\n<p>Add the following to <code>styles.scss</code>:</p>\\n<pre><code>snack-bar-container.success {\\n  background-color: green;\\n  color: white;\\n}\\n\\nsnack-bar-container.error {\\n  background-color: red;\\n  color: white;\\n}\\n\\n.mat-simple-snackbar-action {\\n    color: white !important;\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Styled Angular Material Snackbar Background\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-12-snackbar-demo?file=src%2Fapp%2Fapp.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Styled Angular Material Snackbar Background.","tags":["Angular","JavaScript","TypeScript","Angular Material"],"tagString":"Angular, JavaScript, TypeScript, Angular Material","author":"Ole Ersoy","date":"5/04/2021","headerImage":"hir-4098439_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/hir-4098439_1920.jpg","title":"Creating a Styled Angular Material Snackbar Background","readingTime":2,"wordCount":205},{"category":"Tasks","type":"task","md5":"5d0d15664750bc8f2cf957e5e375f71f","filename":"creating-a-typed-reactive-angular-contact-form.md","path":"tasks/angular/creating-a-typed-reactive-angular-contact-form.md","id":"tasks--angular--creating-a-typed-reactive-angular-contact-form","markdown":"\\nWe need a typed and reactive `Contact` form that gives us autocompletion for the form fields in our IDE and also provides error linting if we try to access fields that are not in the form.\\n\\n# Approach\\n\\n## Project Setup\\n\\nWe will create a Stackblitz and add `@angular/material` to the dependencies for the form UX.\\n\\nAlso to `index.html` add the link for Material Icons.\\n```\\n<link\\nhref=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\"\\nrel=\\"stylesheet\\"\\n/>\\n```\\n\\nTo `styles.scss` add the indigo pink theme.\\n```\\n@import \'~@angular/material/prebuilt-themes/indigo-pink.css\';\\nInitialize app.module.ts .\\n```\\n\\nInitialize `app.module.ts`.\\n\\n```\\nimport { NgModule } from \'@angular/core\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { MatInputModule } from \'@angular/material/input\';\\nimport { MatFormFieldModule } from \'@angular/material/form-field\';\\nimport { MatIconModule } from \'@angular/material/icon\';\\nimport { MatButtonModule } from \'@angular/material/button\';\\n\\nimport { AppComponent } from \'./app.component\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\n\\n@NgModule({\\n  imports: [\\n    BrowserModule,\\n    BrowserAnimationsModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    MatInputModule,\\n    MatFormFieldModule,\\n    MatIconModule,\\n    MatButtonModule,\\n  ],\\n  declarations: [AppComponent],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n```\\n\\n\\n\\n## Form Interface\\n\\nFirst in `app.component.ts` define the `interface` for the form controls.\\n```\\n//===========================================\\n// Contact Form Interface\\n//===========================================\\nexport interface IContactForm {\\n   name: FormControl<string>;\\n   email: FormControl<string>;\\n   phone?: FormControl<string | null>;\\n}\\n```\\n\\nIn the youtube that goes along with this article we point out the additional benefits of this `interface`.\\n\\n\\nNext define the form itself.\\n\\n```\\npublic form = new FormGroup<IContactForm>({\\n    name: new FormControl<string>(\'\', { nonNullable: true }),\\n    email: new FormControl<string>(\'\', { nonNullable: true }),\\n    phone: new FormControl<string | null>(`111-111-1111`, {\\n      nonNullable: false,\\n    }),\\n});\\n```\\n\\nNote that we are passing in the Type of the form in the form constructor `IContactForm`.\\n\\nThen bind the form controls to the template.\\n\\n```\\n<form (ngSubmit)=\\"onSubmit()\\" [formGroup]=\\"form\\">\\n  <mat-form-field class=\\"example-form-field\\" appearance=\\"fill\\">\\n    <mat-label>Name</mat-label>\\n    <input matInput type=\\"text\\" formControlName=\\"name\\" />\\n    <button\\n      *ngIf=\\"form.value.name\\"\\n      matSuffix\\n      mat-icon-button\\n      aria-label=\\"Clear\\"\\n      (click)=\\"form.controls.name.setValue(\'\')\\"\\n    >\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\"example-form-field\\" appearance=\\"fill\\">\\n    <mat-label>Email</mat-label>\\n    <input matInput type=\\"text\\" formControlName=\\"email\\" />\\n    <button\\n      *ngIf=\\"form.value.email\\"\\n      matSuffix\\n      mat-icon-button\\n      aria-label=\\"Clear\\"\\n      (click)=\\"form.controls.email.setValue(\'\')\\"\\n    >\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\"example-form-field\\" appearance=\\"fill\\">\\n    <mat-label>Phone</mat-label>\\n    <input matInput type=\\"tel\\" formControlName=\\"phone\\" />\\n    <button\\n      *ngIf=\\"form.value.phone\\"\\n      matSuffix\\n      mat-icon-button\\n      aria-label=\\"Clear\\"\\n      (click)=\\"form.controls.phone.setValue(\'\')\\"\\n    >\\n      <mat-icon>close</mat-icon>\\n    </button>\\n  </mat-form-field>\\n  <br />\\n  <button mat-button type=\\"submit\\">Submit</button>\\n  <br />\\n  <button mat-button (click)=\\"reset()\\" type=\\"reset\\">Reset</button>\\n</form>\\n\\n<button mat-button (click)=\\"removePhone()\\">Remove Phone Field</button>\\n\\n<p [innerHTML]=\\"data\\"></p>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Typed Reactive Angular Contact Form\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ivy-abu8nz?file=src%2Fapp%2Fapp.component.ts\\">\\n</fs-link-preview>","html":"<p>We need a typed and reactive <code>Contact</code> form that gives us autocompletion for the form fields in our IDE and also provides error linting if we try to access fields that are not in the form.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'project-setup\'>Project Setup</h2>\\n<p>We will create a Stackblitz and add <code>@angular/material</code> to the dependencies for the form UX.</p>\\n<p>Also to <code>index.html</code> add the link for Material Icons.</p>\\n<pre><code>&lt;link\\nhref=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot;\\nrel=&quot;stylesheet&quot;\\n/&gt;\\n</code></pre>\\n<p>To <code>styles.scss</code> add the indigo pink theme.</p>\\n<pre><code>@import &#39;~@angular/material/prebuilt-themes/indigo-pink.css&#39;;\\nInitialize app.module.ts .\\n</code></pre>\\n<p>Initialize <code>app.module.ts</code>.</p>\\n<pre><code>import { NgModule } from &#39;@angular/core&#39;;\\nimport { BrowserModule } from &#39;@angular/platform-browser&#39;;\\nimport { FormsModule, ReactiveFormsModule } from &#39;@angular/forms&#39;;\\nimport { MatInputModule } from &#39;@angular/material/input&#39;;\\nimport { MatFormFieldModule } from &#39;@angular/material/form-field&#39;;\\nimport { MatIconModule } from &#39;@angular/material/icon&#39;;\\nimport { MatButtonModule } from &#39;@angular/material/button&#39;;\\n\\nimport { AppComponent } from &#39;./app.component&#39;;\\nimport { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;;\\n\\n@NgModule({\\n  imports: [\\n    BrowserModule,\\n    BrowserAnimationsModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    MatInputModule,\\n    MatFormFieldModule,\\n    MatIconModule,\\n    MatButtonModule,\\n  ],\\n  declarations: [AppComponent],\\n  bootstrap: [AppComponent],\\n})\\nexport class AppModule {}\\n</code></pre>\\n<h2 id=\'form-interface\'>Form Interface</h2>\\n<p>First in <code>app.component.ts</code> define the <code>interface</code> for the form controls.</p>\\n<pre><code>//===========================================\\n// Contact Form Interface\\n//===========================================\\nexport interface IContactForm {\\n   name: FormControl&lt;string&gt;;\\n   email: FormControl&lt;string&gt;;\\n   phone?: FormControl&lt;string | null&gt;;\\n}\\n</code></pre>\\n<p>In the youtube that goes along with this article we point out the additional benefits of this <code>interface</code>.</p>\\n<p>Next define the form itself.</p>\\n<pre><code>public form = new FormGroup&lt;IContactForm&gt;({\\n    name: new FormControl&lt;string&gt;(&#39;&#39;, { nonNullable: true }),\\n    email: new FormControl&lt;string&gt;(&#39;&#39;, { nonNullable: true }),\\n    phone: new FormControl&lt;string | null&gt;(`111-111-1111`, {\\n      nonNullable: false,\\n    }),\\n});\\n</code></pre>\\n<p>Note that we are passing in the Type of the form in the form constructor <code>IContactForm</code>.</p>\\n<p>Then bind the form controls to the template.</p>\\n<pre><code>&lt;form (ngSubmit)=&quot;onSubmit()&quot; [formGroup]=&quot;form&quot;&gt;\\n  &lt;mat-form-field class=&quot;example-form-field&quot; appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Name&lt;/mat-label&gt;\\n    &lt;input matInput type=&quot;text&quot; formControlName=&quot;name&quot; /&gt;\\n    &lt;button\\n      *ngIf=&quot;form.value.name&quot;\\n      matSuffix\\n      mat-icon-button\\n      aria-label=&quot;Clear&quot;\\n      (click)=&quot;form.controls.name.setValue(&#39;&#39;)&quot;\\n    &gt;\\n      &lt;mat-icon&gt;close&lt;/mat-icon&gt;\\n    &lt;/button&gt;\\n  &lt;/mat-form-field&gt;\\n\\n  &lt;mat-form-field class=&quot;example-form-field&quot; appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Email&lt;/mat-label&gt;\\n    &lt;input matInput type=&quot;text&quot; formControlName=&quot;email&quot; /&gt;\\n    &lt;button\\n      *ngIf=&quot;form.value.email&quot;\\n      matSuffix\\n      mat-icon-button\\n      aria-label=&quot;Clear&quot;\\n      (click)=&quot;form.controls.email.setValue(&#39;&#39;)&quot;\\n    &gt;\\n      &lt;mat-icon&gt;close&lt;/mat-icon&gt;\\n    &lt;/button&gt;\\n  &lt;/mat-form-field&gt;\\n\\n  &lt;mat-form-field class=&quot;example-form-field&quot; appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Phone&lt;/mat-label&gt;\\n    &lt;input matInput type=&quot;tel&quot; formControlName=&quot;phone&quot; /&gt;\\n    &lt;button\\n      *ngIf=&quot;form.value.phone&quot;\\n      matSuffix\\n      mat-icon-button\\n      aria-label=&quot;Clear&quot;\\n      (click)=&quot;form.controls.phone.setValue(&#39;&#39;)&quot;\\n    &gt;\\n      &lt;mat-icon&gt;close&lt;/mat-icon&gt;\\n    &lt;/button&gt;\\n  &lt;/mat-form-field&gt;\\n  &lt;br /&gt;\\n  &lt;button mat-button type=&quot;submit&quot;&gt;Submit&lt;/button&gt;\\n  &lt;br /&gt;\\n  &lt;button mat-button (click)=&quot;reset()&quot; type=&quot;reset&quot;&gt;Reset&lt;/button&gt;\\n&lt;/form&gt;\\n\\n&lt;button mat-button (click)=&quot;removePhone()&quot;&gt;Remove Phone Field&lt;/button&gt;\\n\\n&lt;p [innerHTML]=&quot;data&quot;&gt;&lt;/p&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Typed Reactive Angular Contact Form\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ivy-abu8nz?file=src%2Fapp%2Fapp.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Typed Reactive Angular Contact Form.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"6/10/2022","headerImage":"animal-2721_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-2721_1920.jpg","title":"Creating a Typed Reactive Angular Contact Form","readingTime":3,"wordCount":495},{"category":"Tasks","type":"task","md5":"59571342269a0ef5484305e64a64974f","filename":"creating-an-angular-material-expansion-indicator-animation.md","path":"tasks/angular/creating-an-angular-material-expansion-indicator-animation.md","id":"tasks--angular--creating-an-angular-material-expansion-indicator-animation","markdown":"\\nWe are creating a custom expansion panel and we want to animate a `expand_circle_down` material icon such that it rotates `180` degrees over `300` milliseconds when the panel is `expanded` or `collapsed`.\\n\\n# Approach\\n\\nCreate a new Stackblitz and add `@angular/material` as a dependency.\\n\\nAlso within `index.html `add the material icons CDN link.\\n\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\"/>\\n```\\n\\nNext replace the `app.component.ts` implementation with this.\\n\\n```\\nimport {\\n  Component,\\n  ChangeDetectionStrategy,\\n  HostListener,\\n} from \'@angular/core\';\\nimport {\\n  trigger,\\n  state,\\n  style,\\n  animate,\\n  transition,\\n} from \'@angular/animations\';\\n\\n@Component({\\n  selector: \'my-app\',\\n  template: `<mat-icon\\n  [@animationTrigger]=\\"state\\"\\n  aria-hidden=\\"false\\"\\n  aria-label=\\"Chevron Animation\\"\\n  >expand_circle_down</mat-icon>\\n`,\\n  styleUrls: [\'./app.component.css\'],\\n  animations: [\\n    trigger(\'animationTrigger\', [\\n      state(\\n        \'expanded\',\\n        style({\\n          transform: \'rotate(180deg)\',\\n        })\\n      ),\\n      transition(\'collapsed => expanded\', animate(\'300ms ease-in\')),\\n      transition(\'expanded => collapsed\', animate(\'300ms ease-out\')),\\n    ]),\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class AppComponent {\\n  public isExpanded = false;\\n  @HostListener(\'click\')\\n  @HostListener(\'keydown.enter\')\\n  @HostListener(\'keydown.space\')\\n  public toggle() {\\n    this.isExpanded = !this.isExpanded;\\n  }\\n\\n  get state(): string {\\n    return this.isExpanded ? \'expanded\' : \'collapsed\';\\n  }\\n}\\n```\\n\\nWithin the template we have added the icon we wish to animate.\\n\\nThe `@animationTrigger` `mat-icon` property assignment points to our animation state.\\n\\n```\\n<mat-icon  [@animationTrigger]=\\"state\\"  aria-hidden=\\"false\\"  aria-label=\\"Chevron Animation\\"  >expand_circle_down</mat-icon>\\n```\\n\\nThe animation `state` `getter` returns `expanded` or `collapsed` depending on the value of the isExpanded property.\\n\\n```\\nget state(): string {\\n  return this.isExpanded ? \'expanded\' : \'collapsed\';\\n}\\n```\\n\\nThe Angular Animation API is used to setup the animations definition within the `@Component` declaration.\\n\\n```\\nanimations: [\\n   trigger(\'animationTrigger\', \\n   [state(\'expanded\',\\n             style({\\n            transform: \'rotate(180deg)\',\\n        })),       \\n   transition(\'collapsed => expanded\', \\n               animate(\'300ms ease-in\')),      \\n   transition(\'expanded => collapsed\', \\n   animate(\'300ms ease-out\')),    ]),\\n```\\n\\nNote that the `animation` trigger is what we added to the `mat-icon` `@animation` property in order to trigger the animation.\\n\\n```\\n[@animationTrigger]=\\"state\\"\\n```\\n\\nThe `@HostListener(\'click\')` decoration on the `toggle()` method causes the `toggle()` to fire whenever the user clicks on the icon, and this updates the state triggering the animation.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating an Angular Material Expansion Indicator Animation\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/angular-ivy-qny2gh?file=src%2Fapp%2Fapp.component.css,src%2Fapp%2Fapp.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We are creating a custom expansion panel and we want to animate a <code>expand_circle_down</code> material icon such that it rotates <code>180</code> degrees over <code>300</code> milliseconds when the panel is <code>expanded</code> or <code>collapsed</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create a new Stackblitz and add <code>@angular/material</code> as a dependency.</p>\\n<p>Also within <code>index.html </code>add the material icons CDN link.</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;/&gt;\\n</code></pre>\\n<p>Next replace the <code>app.component.ts</code> implementation with this.</p>\\n<pre><code>import {\\n  Component,\\n  ChangeDetectionStrategy,\\n  HostListener,\\n} from &#39;@angular/core&#39;;\\nimport {\\n  trigger,\\n  state,\\n  style,\\n  animate,\\n  transition,\\n} from &#39;@angular/animations&#39;;\\n\\n@Component({\\n  selector: &#39;my-app&#39;,\\n  template: `&lt;mat-icon\\n  [@animationTrigger]=&quot;state&quot;\\n  aria-hidden=&quot;false&quot;\\n  aria-label=&quot;Chevron Animation&quot;\\n  &gt;expand_circle_down&lt;/mat-icon&gt;\\n`,\\n  styleUrls: [&#39;./app.component.css&#39;],\\n  animations: [\\n    trigger(&#39;animationTrigger&#39;, [\\n      state(\\n        &#39;expanded&#39;,\\n        style({\\n          transform: &#39;rotate(180deg)&#39;,\\n        })\\n      ),\\n      transition(&#39;collapsed =&gt; expanded&#39;, animate(&#39;300ms ease-in&#39;)),\\n      transition(&#39;expanded =&gt; collapsed&#39;, animate(&#39;300ms ease-out&#39;)),\\n    ]),\\n  ],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class AppComponent {\\n  public isExpanded = false;\\n  @HostListener(&#39;click&#39;)\\n  @HostListener(&#39;keydown.enter&#39;)\\n  @HostListener(&#39;keydown.space&#39;)\\n  public toggle() {\\n    this.isExpanded = !this.isExpanded;\\n  }\\n\\n  get state(): string {\\n    return this.isExpanded ? &#39;expanded&#39; : &#39;collapsed&#39;;\\n  }\\n}\\n</code></pre>\\n<p>Within the template we have added the icon we wish to animate.</p>\\n<p>The <code>@animationTrigger</code> <code>mat-icon</code> property assignment points to our animation state.</p>\\n<pre><code>&lt;mat-icon  [@animationTrigger]=&quot;state&quot;  aria-hidden=&quot;false&quot;  aria-label=&quot;Chevron Animation&quot;  &gt;expand_circle_down&lt;/mat-icon&gt;\\n</code></pre>\\n<p>The animation <code>state</code> <code>getter</code> returns <code>expanded</code> or <code>collapsed</code> depending on the value of the isExpanded property.</p>\\n<pre><code>get state(): string {\\n  return this.isExpanded ? &#39;expanded&#39; : &#39;collapsed&#39;;\\n}\\n</code></pre>\\n<p>The Angular Animation API is used to setup the animations definition within the <code>@Component</code> declaration.</p>\\n<pre><code>animations: [\\n   trigger(&#39;animationTrigger&#39;, \\n   [state(&#39;expanded&#39;,\\n             style({\\n            transform: &#39;rotate(180deg)&#39;,\\n        })),       \\n   transition(&#39;collapsed =&gt; expanded&#39;, \\n               animate(&#39;300ms ease-in&#39;)),      \\n   transition(&#39;expanded =&gt; collapsed&#39;, \\n   animate(&#39;300ms ease-out&#39;)),    ]),\\n</code></pre>\\n<p>Note that the <code>animation</code> trigger is what we added to the <code>mat-icon</code> <code>@animation</code> property in order to trigger the animation.</p>\\n<pre><code>[@animationTrigger]=&quot;state&quot;\\n</code></pre>\\n<p>The <code>@HostListener(&#39;click&#39;)</code> decoration on the <code>toggle()</code> method causes the <code>toggle()</code> to fire whenever the user clicks on the icon, and this updates the state triggering the animation.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating an Angular Material Expansion Indicator Animation\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/angular-ivy-qny2gh?file=src%2Fapp%2Fapp.component.css,src%2Fapp%2Fapp.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating an Angular Material Expansion Indicator Animation.","tags":["Angular","Angular Material","JavaScript","TypeScript","CDK"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, CDK","author":"Ole Ersoy","date":"6/24/2022","headerImage":"dragonfly-7257149_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dragonfly-7257149_1920.jpg","title":"Creating an Angular Material Expansion Indicator Animation","readingTime":2,"wordCount":367},{"category":"Tasks","type":"task","md5":"ec5db959a5e22a2c85a3910674610694","filename":"creating-an-angular-npm-installable-service-library.md","path":"tasks/angular/creating-an-angular-npm-installable-service-library.md","id":"tasks--angular--creating-an-angular-npm-installable-service-library","markdown":"\\nWe need to publish a library to NPM for our peers.\\n\\n# Approach\\n\\nWe will be using the [Angular Package Format](https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs/mobilebasic), which should be a good way to package any NPM library as Angular supports all the popular package formats like `FESM`, `UMD`, etc. and does a good job of laying out your public API.\\n\\n\\n## Angular CLI\\n\\n```\\nnpm install -g @angular/cli\\n```\\n\\n## New Workspace\\n\\n```\\nng new my-workspace --create-application=false\\ncd my-workspace\\n```\\n\\n## New Library\\n```\\nng generate library my-lib\\n```\\n\\n## Cleanup\\n\\nWithin `my-lib/src/lib` remove everything except for:\\n`my-lib.service.ts`.  This is the only file that should be in `public-api.ts`:\\n\\n```\\n/*\\n * Public API Surface of my-lib\\n */\\nexport * from \'./lib/my-lib.service\';\\n```\\n\\n## Build\\n\\nBuild the library like this:\\n```\\nng build --prod my-lib\\n```\\n\\n## Test Application\\n\\n```\\nng generate application libtest \\ncd projects/libtest\\n```\\n\\n## Add the Library Service to Test Application\\n\\nThis is already done because of the workspace `tsconfig.json` configuration:\\n```\\n\\"paths\\": {\\n    \\"my-lib\\": [ \\"dist/my-lib\\"\\n]}\\n```\\n\\nWhen we built the library the build was placed in `dist/my-lib`, thus our test application can just import the service into `app.component.ts` like this:\\n\\n```\\nimport { MyLibService } from \'my-lib\';\\n```\\n\\nNote though that if using VSCode then open up the **entire workspace** (The root workspace folder). \\n\\nThis is such that the Tooling can see the `tsconfig.json` file and thus the path to the library.\\n\\nTo test that our application starts, from the root workspace run:\\n```\\nng serve -o\\n```\\n\\n# Build the Library\\n\\nFirst switch off Ivy in `tsconfig.lib.json` otherwise Angular will complain when attempting to publish to NPM:\\n```\\n\\"angularCompilerOptions\\": {    ...\\n    \\"enableIvy\\": false\\n}\\n```\\n\\nThen build the library:\\n\\n```\\nng build --prod my-lib\\n```\\n\\n# Test NPM Publishing\\n\\nSince this is just a test project we want to see what NPM would package for publishing, instead of actually publishing.\\n\\nWe can do a dry run like this:\\n```\\ncd dist/my-lib\\nnpm pack\\n```\\n\\nIt will display what files are going to be uploaded and create a tar ball in the current directory.\\n\\nWe can also install this tarball into our test app like this (First we need to be in the workspace directory):\\n\\n```\\ncd ../.. \\nnpm install my-lib\\n```\\n\\nLook at the `package.json` file and notice that the `my-lib` library is now included via a file URL pointing at the tar ball:\\n```\\n\\"my-lib\\": \\"file:dist/my-lib/my-lib-0.0.1.tgz\\"\\n```\\n\\nWe can now develop our service further and when it\u2019s ready to our first publish:\\n```\\nnpm publish --access public\\n```","html":"<p>We need to publish a library to NPM for our peers.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will be using the <a href=\'https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs/mobilebasic\'>Angular Package Format</a>, which should be a good way to package any NPM library as Angular supports all the popular package formats like <code>FESM</code>, <code>UMD</code>, etc. and does a good job of laying out your public API.</p>\\n<h2 id=\'angular-cli\'>Angular CLI</h2>\\n<pre><code>npm install -g @angular/cli\\n</code></pre>\\n<h2 id=\'new-workspace\'>New Workspace</h2>\\n<pre><code>ng new my-workspace --create-application=false\\ncd my-workspace\\n</code></pre>\\n<h2 id=\'new-library\'>New Library</h2>\\n<pre><code>ng generate library my-lib\\n</code></pre>\\n<h2 id=\'cleanup\'>Cleanup</h2>\\n<p>Within <code>my-lib/src/lib</code> remove everything except for:\\n<code>my-lib.service.ts</code>.  This is the only file that should be in <code>public-api.ts</code>:</p>\\n<pre><code>/*\\n * Public API Surface of my-lib\\n */\\nexport * from &#39;./lib/my-lib.service&#39;;\\n</code></pre>\\n<h2 id=\'build\'>Build</h2>\\n<p>Build the library like this:</p>\\n<pre><code>ng build --prod my-lib\\n</code></pre>\\n<h2 id=\'test-application\'>Test Application</h2>\\n<pre><code>ng generate application libtest \\ncd projects/libtest\\n</code></pre>\\n<h2 id=\'add-the-library-service-to-test-application\'>Add the Library Service to Test Application</h2>\\n<p>This is already done because of the workspace <code>tsconfig.json</code> configuration:</p>\\n<pre><code>&quot;paths&quot;: {\\n    &quot;my-lib&quot;: [ &quot;dist/my-lib&quot;\\n]}\\n</code></pre>\\n<p>When we built the library the build was placed in <code>dist/my-lib</code>, thus our test application can just import the service into <code>app.component.ts</code> like this:</p>\\n<pre><code>import { MyLibService } from &#39;my-lib&#39;;\\n</code></pre>\\n<p>Note though that if using VSCode then open up the <strong>entire workspace</strong> (The root workspace folder). </p>\\n<p>This is such that the Tooling can see the <code>tsconfig.json</code> file and thus the path to the library.</p>\\n<p>To test that our application starts, from the root workspace run:</p>\\n<pre><code>ng serve -o\\n</code></pre>\\n<h1 id=\'build-the-library\'>Build the Library</h1>\\n<p>First switch off Ivy in <code>tsconfig.lib.json</code> otherwise Angular will complain when attempting to publish to NPM:</p>\\n<pre><code>&quot;angularCompilerOptions&quot;: {    ...\\n    &quot;enableIvy&quot;: false\\n}\\n</code></pre>\\n<p>Then build the library:</p>\\n<pre><code>ng build --prod my-lib\\n</code></pre>\\n<h1 id=\'test-npm-publishing\'>Test NPM Publishing</h1>\\n<p>Since this is just a test project we want to see what NPM would package for publishing, instead of actually publishing.</p>\\n<p>We can do a dry run like this:</p>\\n<pre><code>cd dist/my-lib\\nnpm pack\\n</code></pre>\\n<p>It will display what files are going to be uploaded and create a tar ball in the current directory.</p>\\n<p>We can also install this tarball into our test app like this (First we need to be in the workspace directory):</p>\\n<pre><code>cd ../.. \\nnpm install my-lib\\n</code></pre>\\n<p>Look at the <code>package.json</code> file and notice that the <code>my-lib</code> library is now included via a file URL pointing at the tar ball:</p>\\n<pre><code>&quot;my-lib&quot;: &quot;file:dist/my-lib/my-lib-0.0.1.tgz&quot;\\n</code></pre>\\n<p>We can now develop our service further and when it\u2019s ready to our first publish:</p>\\n<pre><code>npm publish --access public\\n</code></pre>\\n","summary":"Creating an Angular NPM Installable Service Library.","tags":["Angular","JavaScript","TypeScript","NPM"],"tagString":"Angular, JavaScript, TypeScript, NPM","author":"Ole Ersoy","date":"2/04/2021","headerImage":"balloon-2331488_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/balloon-2331488_1920.jpg","title":"Creating an Angular NPM Installable Service Library","readingTime":3,"wordCount":426},{"category":"Tasks","type":"task","md5":"5279ff863f2d0cf15ebfe9f8fb73c5e0","filename":"custom-google-analytics-events-with-angular.md","path":"tasks/angular/custom-google-analytics-events-with-angular.md","id":"tasks--angular--custom-google-analytics-events-with-angular","markdown":"\\nWe have a button that when clicked should trigger a custom Google Analytics Tag Manager event.\\n\\n\\n```\\n<button (click)=\\"trackMe()\\">Track this Click</button>\\n```\\n# Approach\\n\\nFirst setup a property in Google Analytics and obtain the tracking code for it. \\n\\nIt will give you something like this when clicking on Tracking Info > Tracking Code in the admin area of Google Analytics. It should look like this:\\n\\n```\\n\x3c!-- Global site tag (gtag.js) - Google Analytics --\x3e\\n<script async src=\\"https://www.googletagmanager.com/gtag/js?id=UA-140430388-3\\"><\/script>\\n<script>\\n  window.dataLayer = window.dataLayer || [];\\n  function gtag(){dataLayer.push(arguments);}\\n  gtag(\'js\', new Date());\\ngtag(\'config\', \'UA-140430388-3\');\\n<\/script>\\n```\\n\\nAdd the script to the `head` tag in `index.html` of your Angular project.\\n\\n## Track Click Events\\n\\nFirst declare `gtag` in `app.component.ts`. This lets Typescript know that the gtag function has been defined elsewhere:\\n```\\ndeclare var gtag\\n```\\nPlace the following method in `app.component.ts`\\n\\n\\n```\\ntrackMe() {\\ngtag(\'event\', \'TRACK_ME_BUTTON_CLICKED\', {\\n\'event_category\': \'BUTTON_CLICK\',\\n\'event_label\': \'Track Me Click\',\\n\'value\': \'Put a value here that is meaningful with respect to the click event\'   })\\n}\\n```\\n\\nAnd bind it to the button in `app.component.html`:\\n```\\n<h1>Google Analytics Demo</h1>\\n<button (click)=\\"trackMe()\\">Track Click</button>\\n```\\n\\nTo see the click events look at the Events tab of the Realtime Google Analytics panel.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Custom Google Analytics Events with Angular\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ga-test-medium-fs\\">\\n</fs-link-preview>\\n","html":"<p>We have a button that when clicked should trigger a custom Google Analytics Tag Manager event.</p>\\n<pre><code>&lt;button (click)=&quot;trackMe()&quot;&gt;Track this Click&lt;/button&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First setup a property in Google Analytics and obtain the tracking code for it. </p>\\n<p>It will give you something like this when clicking on Tracking Info &gt; Tracking Code in the admin area of Google Analytics. It should look like this:</p>\\n<pre><code>&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;\\n&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UA-140430388-3&quot;&gt;&lt;/script&gt;\\n&lt;script&gt;\\n  window.dataLayer = window.dataLayer || [];\\n  function gtag(){dataLayer.push(arguments);}\\n  gtag(&#39;js&#39;, new Date());\\ngtag(&#39;config&#39;, &#39;UA-140430388-3&#39;);\\n&lt;/script&gt;\\n</code></pre>\\n<p>Add the script to the <code>head</code> tag in <code>index.html</code> of your Angular project.</p>\\n<h2 id=\'track-click-events\'>Track Click Events</h2>\\n<p>First declare <code>gtag</code> in <code>app.component.ts</code>. This lets Typescript know that the gtag function has been defined elsewhere:</p>\\n<pre><code>declare var gtag\\n</code></pre>\\n<p>Place the following method in <code>app.component.ts</code></p>\\n<pre><code>trackMe() {\\ngtag(&#39;event&#39;, &#39;TRACK_ME_BUTTON_CLICKED&#39;, {\\n&#39;event_category&#39;: &#39;BUTTON_CLICK&#39;,\\n&#39;event_label&#39;: &#39;Track Me Click&#39;,\\n&#39;value&#39;: &#39;Put a value here that is meaningful with respect to the click event&#39;   })\\n}\\n</code></pre>\\n<p>And bind it to the button in <code>app.component.html</code>:</p>\\n<pre><code>&lt;h1&gt;Google Analytics Demo&lt;/h1&gt;\\n&lt;button (click)=&quot;trackMe()&quot;&gt;Track Click&lt;/button&gt;\\n</code></pre>\\n<p>To see the click events look at the Events tab of the Realtime Google Analytics panel.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Custom Google Analytics Events with Angular\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ga-test-medium-fs\'>\\n</fs-link-preview></p>\\n","summary":"Custom Google Analytics Events with Angular.","tags":["Google Analytics","Angular","JavaScript","TypeScript"],"tagString":"Google Analytics, Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/14/2021","headerImage":"monochrome-3199102_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/monochrome-3199102_1920.jpg","title":"Custom Google Analytics Events with Angular","readingTime":2,"wordCount":252},{"category":"Tasks","type":"task","md5":"337d056c279d1db998bcdc7618adc0ce","filename":"customizing-the-typography-theme-for-a-packaged-angular-component.md","path":"tasks/angular/customizing-the-typography-theme-for-a-packaged-angular-component.md","id":"tasks--angular--customizing-the-typography-theme-for-a-packaged-angular-component","markdown":"\\nIn [Creating a Packaged and Themeable Angular Material Component](https://developer.fireflysemantics.com/tasks/tasks--angular--creating-a-packaged-and-themeable-angular-material-component) we created a self contained installable Angular component that was also themeable.\\n\\nHowever only the color theme customization was implemented. Now we wish to add Typography theme customization as well.\\n\\nSpecifically we want to customize:\\n\\n- `font-size`\\n- `font-weight`\\n- `font-family`\\n- `line-height`\\n- `letter-spacing`\\n\\n# Approach\\n\\n## Project\\n\\nSince we are adding custom typography to our previously packaged component we will use that project as a starting point.\\n\\n```\\nmkdir ~/Temp/clone\\ncd ~/Temp/clone\\ngit clone git@github.com:fireflysemantics/big-workspace.git\\ncd big-workspace\\nnpm i\\n```\\n\\nWe will also create a new branch to keep the modification separate from the previous creation.\\n\\n```\\ngit checkout -b typography\\n```\\n\\nSince we will be publishing this modification to NPM lets rename the project in `projects/big/package.json` to `@fireflysemantics/big-component-typography-example` and change the version to `0.0.0`.\\n\\nThis is a link to the [Github Branch](https://github.com/fireflysemantics/big-workspace/tree/typography) in case you wish to view the file contents.\\n\\n## Implementation\\n\\nWithin the `index.scss` file that contains the color theme mixin for the `fs-big` component we create a `big-component-typography` mixin as well.\\n\\n```\\n@use \\"sass:map\\";\\n@use \\"@angular/material\\" as mat;\\n\\n@mixin big-component-theme($theme) {\\n    $accent: map-get($theme, accent);\\n    fs-big {\\n        color: mat.get-color-from-palette($accent);\\n    }\\n}\\n\\n@mixin big-component-typography($theme) {\\n    //Get the typography from the theme\\n    $config: map.get($theme, typography);\\n    @if ($config) {\\n        fs-big {\\n            font-size: mat.font-size($config, \\"fs-big-typography\\") !important;\\n            font-weight: mat.font-weight($config, \\"fs-big-typography\\") !important;\\n            font-family: mat.font-family($config, \\"fs-big-typography\\") !important;\\n            line-height: mat.line-height($config, \\"fs-big-typography\\") !important;\\n            letter-spacing: mat.letter-spacing($config, \\"fs-big-typography\\") !important;\\n        }\\n    }\\n}\\n```\\n\\nIn this step we also added a `@use \u2018sass:map\'` declaration.  Also we are using `!important` to override the typography that we declared in the `big-component` local CSS file.\\n\\nThe typography config is retrieved via the line:\\n\\n```\\n$config: map.get($theme, typography);\\n```\\n\\nWe then retrieve the values using Angular Typography helpers declared on `mat`.\\n\\n```\\n@if ($config) {        \\n    fs-big {            \\n        font-size: mat.font-size($config, \\"fs-big-typography\\") !important;\\n        font-weight: mat.font-weight($config, \\"fs-big-typography\\") !important;            \\n        font-family: mat.font-family($config, \\"fs-big-typography\\") !important;            \\n        line-height: mat.line-height($config, \\"fs-big-typography\\") !important;            \\n        letter-spacing: mat.letter-spacing($config, \\"fs-big-typography\\") !important;        \\n     }    \\n}\\n```\\n\\nIn this step we also added a `@use \u2018sass:map\'` declaration. Also we are using `!important` to override the typography that we declared in the `big-component` local CSS file.\\n\\nNote that we are applying the typography directly to our component host element with the **`fs-big`** selector.\\n\\n## Local Testing\\n\\nNow that we\u2019ve added the custom typography class we can test it locally.\\n\\nWe will move all the theme related functionality from `styles.scss` to `themes.scss`.\\n\\nIn `projects/test/src/themes.scss` first add a `@use \'sass:map\'` since we will be using `map.merge`.\\n\\nAlso import the component theme `index.scss`.\\n\\n```\\n@use \'../../big/src/lib/theming\' as theme;\\n```\\n\\nDefine the `$big-typography-level`.\\n\\n```\\n$big-typography-level: mat.define-typography-level(\\n   $font-family: \'Open Sans\',\\n   $font-weight: 800,\\n   $font-size: 3rem,\\n   $line-height: 1,\\n   $letter-spacing: 0.2em);\\n```\\n\\nThen define the default `typography` config.\\n```\\n$config: mat.define-typography-config();\\n```\\n\\nAnd merge in the custom typography level for our component.\\n\\n```\\n$config: map.merge(\\n    $config,\\n    ( fs-big-typography: $big-typography-level)\\n);\\n```\\n\\nThen update the theme definition so that it contains both the typography and color configuration.\\n\\n```\\n$light-theme: mat.define-light-theme((\\n    color: (\\n        primary: $my-theme-primary,\\n        accent: $my-theme-accent,\\n        warn: $my-theme-warn\\n),\\n    typography: $config,\\n));\\n```\\n\\nAlso call the theme Mixins from the `big` component.\\n\\n```\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n    @include theme.big-component-typography($theme);\\n    // ====================================\\n    // If we had more component themes\\n    // we could include them here as well.\\n    // ====================================\\n}\\n@include mat.core-theme($theme);\\n@include custom-components-theme($theme);\\n```\\n\\nThis is the updated `themes.scss` file.\\n\\n```\\n@use \'sass:map\';\\n@use \'@angular/material\' as mat;\\n@use \'../../big/src/lib/theming\' as theme;\\n\\n\\n$my-theme-primary: mat.define-palette(mat.$indigo-palette, 500, 200, 800);\\n$my-theme-accent: mat.define-palette(mat.$cyan-palette);\\n$my-theme-warn: mat.define-palette(mat.$deep-orange-palette, A200);\\n\\n$big-typography-level: mat.define-typography-level(\\n   $font-family: \'Open Sans\',\\n   $font-weight: 800,\\n   $font-size: 3rem,\\n   $line-height: 1,\\n   $letter-spacing: 0.2em);\\n\\n$config: mat.define-typography-config();\\n\\n$config: map.merge(\\n    $config,\\n    ( fs-big-typography: $big-typography-level)\\n);\\n\\n$theme: mat.define-light-theme((\\n    color: (\\n        primary: $my-theme-primary,\\n        accent: $my-theme-accent,\\n        warn: $my-theme-warn\\n    ),\\n    typography: $config,\\n));\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n    @include theme.big-component-typography($theme);\\n// ====================================\\n// If we had more component themes\\n// we could include them here as well.\\n// ====================================\\n}\\n@include mat.core-theme($theme);\\n@include custom-components-theme($theme);\\n```\\n\\n## NPM Publish\\n\\nWe have changed the name of the component already so to publish it to NPM all we need to do is run this command.\\n\\n```\\ncp README.md ./projects/big && npm run b && cd dist/big/ && npm publish --access public\\n```\\n\\nIt is now published to NPM.\\n\\n```\\n@fireflysemantics/big-component-typography-example@0.0.0\\n```\\n\\n## Live Test\\n\\nFor the live test we will fork the Stackblitz from the previous article.\\n\\nOpen `package.json` and replace the dependency `@fireflysemantics/big-component-example` with `@fireflysemantics/big-component-typography-example` and set the version to * as that will give us the latest version.\\n\\nUpdate the `app.module.ts` with the new namespace for the module.\\n\\n```\\nimport { BigModule } from \'@fireflysemantics/big-component-typography-example\';\\n```\\n\\nUpdate the theme import within `styles.scss` using the new namespace.\\n\\n```\\n@use \'@fireflysemantics/big-component-typography-example/theming\' as theme;\\n```\\n\\nThen add the typography configuration to `theme.scss`. It should look like this.\\n\\n```\\n\\n@use \'sass:map\';\\n@use \'@angular/material\' as mat;\\n@use \'@fireflysemantics/big-component-typography-example/theming\' as theme;\\n\\n// ============================================\\n// Only include core on time\\n// ============================================\\n@include mat.core();\\n\\n// ============================================\\n// Palettes: https://material.io/design/color/\\n// ============================================\\n$theme-primary: mat.define-palette(mat.$indigo-palette);\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n\\n$big-typography-level: mat.define-typography-level(\\n  $font-family: \'Open Sans\',\\n  $font-weight: 800,\\n  $font-size: 3rem,\\n  $line-height: 1,\\n  $letter-spacing: 0.2em,\\n);\\n\\n$config: mat.define-typography-config();\\n\\n$config: map.merge(\\n  $config,\\n  (\\n    fs-big-typography: $big-typography-level,\\n  )\\n);\\n$theme: mat.define-light-theme(\\n  (\\n    color: (\\n      primary: $theme-primary,\\n      accent: $theme-accent,\\n      warn: $theme-warn,\\n    ),\\n    typography: $config,\\n  )\\n);\\n\\n@include mat.all-component-themes($theme);\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n  @include theme.big-component-theme($theme);\\n  @include theme.big-component-typography($theme);\\n\\n  // ====================================\\n  // If we had more component themes\\n  // we could include them here as well.\\n  // ====================================\\n}\\n@include custom-components-theme($theme);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Customizing the Typography Theme for a Packaged Angular Component\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk-sumran\\">\\n</fs-link-preview>\\n","html":"<p>In <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--creating-a-packaged-and-themeable-angular-material-component\'>Creating a Packaged and Themeable Angular Material Component</a> we created a self contained installable Angular component that was also themeable.</p>\\n<p>However only the color theme customization was implemented. Now we wish to add Typography theme customization as well.</p>\\n<p>Specifically we want to customize:</p>\\n<ul>\\n<li><code>font-size</code></li>\\n<li><code>font-weight</code></li>\\n<li><code>font-family</code></li>\\n<li><code>line-height</code></li>\\n<li><code>letter-spacing</code></li>\\n</ul>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'project\'>Project</h2>\\n<p>Since we are adding custom typography to our previously packaged component we will use that project as a starting point.</p>\\n<pre><code>mkdir ~/Temp/clone\\ncd ~/Temp/clone\\ngit clone git@github.com:fireflysemantics/big-workspace.git\\ncd big-workspace\\nnpm i\\n</code></pre>\\n<p>We will also create a new branch to keep the modification separate from the previous creation.</p>\\n<pre><code>git checkout -b typography\\n</code></pre>\\n<p>Since we will be publishing this modification to NPM lets rename the project in <code>projects/big/package.json</code> to <code>@fireflysemantics/big-component-typography-example</code> and change the version to <code>0.0.0</code>.</p>\\n<p>This is a link to the <a href=\'https://github.com/fireflysemantics/big-workspace/tree/typography\'>Github Branch</a> in case you wish to view the file contents.</p>\\n<h2 id=\'implementation\'>Implementation</h2>\\n<p>Within the <code>index.scss</code> file that contains the color theme mixin for the <code>fs-big</code> component we create a <code>big-component-typography</code> mixin as well.</p>\\n<pre><code>@use &quot;sass:map&quot;;\\n@use &quot;@angular/material&quot; as mat;\\n\\n@mixin big-component-theme($theme) {\\n    $accent: map-get($theme, accent);\\n    fs-big {\\n        color: mat.get-color-from-palette($accent);\\n    }\\n}\\n\\n@mixin big-component-typography($theme) {\\n    //Get the typography from the theme\\n    $config: map.get($theme, typography);\\n    @if ($config) {\\n        fs-big {\\n            font-size: mat.font-size($config, &quot;fs-big-typography&quot;) !important;\\n            font-weight: mat.font-weight($config, &quot;fs-big-typography&quot;) !important;\\n            font-family: mat.font-family($config, &quot;fs-big-typography&quot;) !important;\\n            line-height: mat.line-height($config, &quot;fs-big-typography&quot;) !important;\\n            letter-spacing: mat.letter-spacing($config, &quot;fs-big-typography&quot;) !important;\\n        }\\n    }\\n}\\n</code></pre>\\n<p>In this step we also added a <code>@use \u2018sass:map&#39;</code> declaration.  Also we are using <code>!important</code> to override the typography that we declared in the <code>big-component</code> local CSS file.</p>\\n<p>The typography config is retrieved via the line:</p>\\n<pre><code>$config: map.get($theme, typography);\\n</code></pre>\\n<p>We then retrieve the values using Angular Typography helpers declared on <code>mat</code>.</p>\\n<pre><code>@if ($config) {        \\n    fs-big {            \\n        font-size: mat.font-size($config, &quot;fs-big-typography&quot;) !important;\\n        font-weight: mat.font-weight($config, &quot;fs-big-typography&quot;) !important;            \\n        font-family: mat.font-family($config, &quot;fs-big-typography&quot;) !important;            \\n        line-height: mat.line-height($config, &quot;fs-big-typography&quot;) !important;            \\n        letter-spacing: mat.letter-spacing($config, &quot;fs-big-typography&quot;) !important;        \\n     }    \\n}\\n</code></pre>\\n<p>In this step we also added a <code>@use \u2018sass:map&#39;</code> declaration. Also we are using <code>!important</code> to override the typography that we declared in the <code>big-component</code> local CSS file.</p>\\n<p>Note that we are applying the typography directly to our component host element with the <strong><code>fs-big</code></strong> selector.</p>\\n<h2 id=\'local-testing\'>Local Testing</h2>\\n<p>Now that we\u2019ve added the custom typography class we can test it locally.</p>\\n<p>We will move all the theme related functionality from <code>styles.scss</code> to <code>themes.scss</code>.</p>\\n<p>In <code>projects/test/src/themes.scss</code> first add a <code>@use &#39;sass:map&#39;</code> since we will be using <code>map.merge</code>.</p>\\n<p>Also import the component theme <code>index.scss</code>.</p>\\n<pre><code>@use &#39;../../big/src/lib/theming&#39; as theme;\\n</code></pre>\\n<p>Define the <code>$big-typography-level</code>.</p>\\n<pre><code>$big-typography-level: mat.define-typography-level(\\n   $font-family: &#39;Open Sans&#39;,\\n   $font-weight: 800,\\n   $font-size: 3rem,\\n   $line-height: 1,\\n   $letter-spacing: 0.2em);\\n</code></pre>\\n<p>Then define the default <code>typography</code> config.</p>\\n<pre><code>$config: mat.define-typography-config();\\n</code></pre>\\n<p>And merge in the custom typography level for our component.</p>\\n<pre><code>$config: map.merge(\\n    $config,\\n    ( fs-big-typography: $big-typography-level)\\n);\\n</code></pre>\\n<p>Then update the theme definition so that it contains both the typography and color configuration.</p>\\n<pre><code>$light-theme: mat.define-light-theme((\\n    color: (\\n        primary: $my-theme-primary,\\n        accent: $my-theme-accent,\\n        warn: $my-theme-warn\\n),\\n    typography: $config,\\n));\\n</code></pre>\\n<p>Also call the theme Mixins from the <code>big</code> component.</p>\\n<pre><code>// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n    @include theme.big-component-typography($theme);\\n    // ====================================\\n    // If we had more component themes\\n    // we could include them here as well.\\n    // ====================================\\n}\\n@include mat.core-theme($theme);\\n@include custom-components-theme($theme);\\n</code></pre>\\n<p>This is the updated <code>themes.scss</code> file.</p>\\n<pre><code>@use &#39;sass:map&#39;;\\n@use &#39;@angular/material&#39; as mat;\\n@use &#39;../../big/src/lib/theming&#39; as theme;\\n\\n\\n$my-theme-primary: mat.define-palette(mat.$indigo-palette, 500, 200, 800);\\n$my-theme-accent: mat.define-palette(mat.$cyan-palette);\\n$my-theme-warn: mat.define-palette(mat.$deep-orange-palette, A200);\\n\\n$big-typography-level: mat.define-typography-level(\\n   $font-family: &#39;Open Sans&#39;,\\n   $font-weight: 800,\\n   $font-size: 3rem,\\n   $line-height: 1,\\n   $letter-spacing: 0.2em);\\n\\n$config: mat.define-typography-config();\\n\\n$config: map.merge(\\n    $config,\\n    ( fs-big-typography: $big-typography-level)\\n);\\n\\n$theme: mat.define-light-theme((\\n    color: (\\n        primary: $my-theme-primary,\\n        accent: $my-theme-accent,\\n        warn: $my-theme-warn\\n    ),\\n    typography: $config,\\n));\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n    @include theme.big-component-theme($theme);\\n    @include theme.big-component-typography($theme);\\n// ====================================\\n// If we had more component themes\\n// we could include them here as well.\\n// ====================================\\n}\\n@include mat.core-theme($theme);\\n@include custom-components-theme($theme);\\n</code></pre>\\n<h2 id=\'npm-publish\'>NPM Publish</h2>\\n<p>We have changed the name of the component already so to publish it to NPM all we need to do is run this command.</p>\\n<pre><code>cp README.md ./projects/big &amp;&amp; npm run b &amp;&amp; cd dist/big/ &amp;&amp; npm publish --access public\\n</code></pre>\\n<p>It is now published to NPM.</p>\\n<pre><code>@fireflysemantics/big-component-typography-example@0.0.0\\n</code></pre>\\n<h2 id=\'live-test\'>Live Test</h2>\\n<p>For the live test we will fork the Stackblitz from the previous article.</p>\\n<p>Open <code>package.json</code> and replace the dependency <code>@fireflysemantics/big-component-example</code> with <code>@fireflysemantics/big-component-typography-example</code> and set the version to * as that will give us the latest version.</p>\\n<p>Update the <code>app.module.ts</code> with the new namespace for the module.</p>\\n<pre><code>import { BigModule } from &#39;@fireflysemantics/big-component-typography-example&#39;;\\n</code></pre>\\n<p>Update the theme import within <code>styles.scss</code> using the new namespace.</p>\\n<pre><code>@use &#39;@fireflysemantics/big-component-typography-example/theming&#39; as theme;\\n</code></pre>\\n<p>Then add the typography configuration to <code>theme.scss</code>. It should look like this.</p>\\n<pre><code>\\n@use &#39;sass:map&#39;;\\n@use &#39;@angular/material&#39; as mat;\\n@use &#39;@fireflysemantics/big-component-typography-example/theming&#39; as theme;\\n\\n// ============================================\\n// Only include core on time\\n// ============================================\\n@include mat.core();\\n\\n// ============================================\\n// Palettes: https://material.io/design/color/\\n// ============================================\\n$theme-primary: mat.define-palette(mat.$indigo-palette);\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n\\n$big-typography-level: mat.define-typography-level(\\n  $font-family: &#39;Open Sans&#39;,\\n  $font-weight: 800,\\n  $font-size: 3rem,\\n  $line-height: 1,\\n  $letter-spacing: 0.2em,\\n);\\n\\n$config: mat.define-typography-config();\\n\\n$config: map.merge(\\n  $config,\\n  (\\n    fs-big-typography: $big-typography-level,\\n  )\\n);\\n$theme: mat.define-light-theme(\\n  (\\n    color: (\\n      primary: $theme-primary,\\n      accent: $theme-accent,\\n      warn: $theme-warn,\\n    ),\\n    typography: $config,\\n  )\\n);\\n\\n@include mat.all-component-themes($theme);\\n\\n// =====================================\\n// Initialize custom component themes\\n// =====================================\\n@mixin custom-components-theme($theme) {\\n  @include theme.big-component-theme($theme);\\n  @include theme.big-component-typography($theme);\\n\\n  // ====================================\\n  // If we had more component themes\\n  // we could include them here as well.\\n  // ====================================\\n}\\n@include custom-components-theme($theme);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Customizing the Typography Theme for a Packaged Angular Component\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk-sumran\'>\\n</fs-link-preview></p>\\n","summary":"Customizing the Typography Theme for a Packaged Angular Component.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"6/08/2022","headerImage":"jellyfish-1839389_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1839389_1920.jpg","title":"Customizing the Typography Theme for a Packaged Angular Component","readingTime":6,"wordCount":1186},{"category":"Tasks","type":"task","md5":"05982d60bd7f262be33572c617fd44a0","filename":"debouncing-your-angular-search-field.md","path":"tasks/angular/debouncing-your-angular-search-field.md","id":"tasks--angular--debouncing-your-angular-search-field","markdown":"\\nWe want to limit event notifications from our search field to a minimum of one event every `150` milliseconds.\\n\\n# Approach\\n\\n## imports\\n\\n```\\nimport { Component, ElementRef, AfterViewInit, ViewChild } from \'@angular/core\';\\nimport {fromEvent } from \'rxjs\';\\nimport { debounceTime, distinctUntilChanged, tap } from \'rxjs/operators\';\\n```\\n\\n## Declarations\\n\\nDeclare the input field:\\n```\\n@ViewChild(\'input\') input: ElementRef;\\n```\\n\\n## Markup\\n```\\n<input placeholder=\\"Search\\" #input>\\n```\\n\\n## Implementation\\n\\nNote that we are using `filter(Boolean)` to make sure that we don\u2019t pass `undefined` values:\\n\\n```\\nngAfterViewInit() {\\n    // server-side search\\n    fromEvent(this.input.nativeElement,\'keyup\')\\n          .pipe(\\n              filter(Boolean),\\n              debounceTime(150),\\n              distinctUntilChanged(),\\n              tap((text) => {\\n                console.log(this.input.nativeElement.value)\\n              })\\n          )\\n          .subscribe();\\n}\\n\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Debouncing Your Angular Search Field Demo\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-debounce-search-field\\">\\n</fs-link-preview>","html":"<p>We want to limit event notifications from our search field to a minimum of one event every <code>150</code> milliseconds.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'imports\'>imports</h2>\\n<pre><code>import { Component, ElementRef, AfterViewInit, ViewChild } from &#39;@angular/core&#39;;\\nimport {fromEvent } from &#39;rxjs&#39;;\\nimport { debounceTime, distinctUntilChanged, tap } from &#39;rxjs/operators&#39;;\\n</code></pre>\\n<h2 id=\'declarations\'>Declarations</h2>\\n<p>Declare the input field:</p>\\n<pre><code>@ViewChild(&#39;input&#39;) input: ElementRef;\\n</code></pre>\\n<h2 id=\'markup\'>Markup</h2>\\n<pre><code>&lt;input placeholder=&quot;Search&quot; #input&gt;\\n</code></pre>\\n<h2 id=\'implementation\'>Implementation</h2>\\n<p>Note that we are using <code>filter(Boolean)</code> to make sure that we don\u2019t pass <code>undefined</code> values:</p>\\n<pre><code>ngAfterViewInit() {\\n    // server-side search\\n    fromEvent(this.input.nativeElement,&#39;keyup&#39;)\\n          .pipe(\\n              filter(Boolean),\\n              debounceTime(150),\\n              distinctUntilChanged(),\\n              tap((text) =&gt; {\\n                console.log(this.input.nativeElement.value)\\n              })\\n          )\\n          .subscribe();\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Debouncing Your Angular Search Field Demo\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-debounce-search-field\'>\\n</fs-link-preview></p>\\n","summary":"Debouncing Your Angular Search Field.","tags":["Angular","Angular Material","JavaScript","TypeScript","RxJs"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"2/14/2021","headerImage":"drop-of-water-351778_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/drop-of-water-351778_1920.jpg","title":"Debouncing Your Angular Search Field","readingTime":1,"wordCount":134},{"category":"Tasks","type":"task","md5":"08bd7ba76a409064aa4bbf282bf99462","filename":"declaring-typed-function-input-properties-on-our-angular-component.md","path":"tasks/angular/declaring-typed-function-input-properties-on-our-angular-component.md","id":"tasks--angular--declaring-typed-function-input-properties-on-our-angular-component","markdown":"\\nWe have a `fs-toolbar-menu` component that has a `logout` menu item.  When the user clicks the `logout` we want to call a function that is provied via the components `AuthService` constructor injected service.\\n\\n```\\n<fs-toolbar-menu [logout]=\\"this.a.logout\\"></fs-toolbar-menu>\\n```\\n\\n# Approach\\n\\nDeclared the property like this:\\n\\n```\\n@Input()\\nlogout: () => void\\n```\\n\\nConstructor inject the `AuthService` like this (This is done in the component that uses the `fs-toolbar-menu` it its view - for example this could be `app.component.ts`):\\n\\n```\\nconstructor( public a: AuthService ) { }\\n```\\n\\nBind the `logout` property to the `AuthService.logout` function.\\n\\n```\\n[logout]=\\"this.a.logout\\"></fs-toolbar-menu>\\n```","html":"<p>We have a <code>fs-toolbar-menu</code> component that has a <code>logout</code> menu item.  When the user clicks the <code>logout</code> we want to call a function that is provied via the components <code>AuthService</code> constructor injected service.</p>\\n<pre><code>&lt;fs-toolbar-menu [logout]=&quot;this.a.logout&quot;&gt;&lt;/fs-toolbar-menu&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Declared the property like this:</p>\\n<pre><code>@Input()\\nlogout: () =&gt; void\\n</code></pre>\\n<p>Constructor inject the <code>AuthService</code> like this (This is done in the component that uses the <code>fs-toolbar-menu</code> it its view - for example this could be <code>app.component.ts</code>):</p>\\n<pre><code>constructor( public a: AuthService ) { }\\n</code></pre>\\n<p>Bind the <code>logout</code> property to the <code>AuthService.logout</code> function.</p>\\n<pre><code>[logout]=&quot;this.a.logout&quot;&gt;&lt;/fs-toolbar-menu&gt;\\n</code></pre>\\n","summary":"Declaring Typed Function Input Properties on Our Angular Component.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/29/2021","headerImage":"energy-4828337_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/energy-4828337_1920.jpg","title":"Declaring Typed Function Input Properties on Our Angular Component","readingTime":1,"wordCount":103},{"category":"Tasks","type":"task","md5":"c49635098f8264fadf02d062bd6d79c5","filename":"desigin-an-angular-social-login-button-presentation-component.md","path":"tasks/angular/desigin-an-angular-social-login-button-presentation-component.md","id":"tasks--angular--desigin-an-angular-social-login-button-presentation-component","markdown":"\\nWe want to create a Angular Material Google Social Login Button in a shared library that has a `signIn` event that we can listen to in order to trigger social authentication and we also want to reactively disable the button until terms of service have been accepted.\\n\\n# Approach\\n\\nThe button design looks like this. It is disabled by default, and can be enabled by assign an `Observable<boolean>` to the property `isTOSAccepted$` that emits `true` when the button should be enabled.\\n\\n```\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { SVG } from \'@fireflysemantics/assets\'\\nimport { Input } from \'@angular/core\';\\nimport { Observable, of } from \'rxjs\';\\nimport { Output } from \'@angular/core\';\\nimport { EventEmitter } from \'@angular/core\';\\n@Component({\\n    selector: \'fs-login-button\',\\n    templateUrl: \'./login-button.component.html\',\\n    styleUrls: [\'./login-button.component.scss\']\\n})\\nexport class LoginButtonComponent implements OnInit {\\n    SVG_CONSTANTS = SVG\\n    constructor() { }\\n    @Output()\\n    signInEvent = new EventEmitter();\\n    click() { \\n        this.signInEvent.emit()\\n    }\\n    @Input()\\n    public isTOSAccepted$: Observable<boolean> = of(false)\\n    ngOnInit(): void { }\\n}\\n```\\n\\nThe template:\\n```\\n<button [disabled]=\\"!(isTOSAccepted$ | async)\\"\\n(click)=\\"click()\\"\\nmat-button\\nstyle=\\"padding: 1rem;\\">\\n<mat-icon\\n[svgIcon]=\\"SVG_CONSTANTS.GOOGLE_LOGO.name\\"></mat-icon> &nbsp; &nbsp; Login With Google\\n</button>\\n```\\n\\n# Test\\n\\nWithin app.component.ts declare the following method:\\n```\\nsignIn() {\\n    console.log(\\"Sign In Clicked\\")\\n}\\n```\\n\\nOn `app.component.ts` we will create an `Observable<boolean>` instance that emits `true` as well:\\n```\\nisTOCAccepted$: Observable<boolean> = of(true)\\n```\\n\\nWithin the `app.component.html` template declare the button:\\n\\n```\\n<fs-login-button \\n    (signInEvent)=\\"signIn()\\"\\n    [isTOSAccepted$]=\\"isTOCAccepted$\\"></fs-login-button>\\n```\\n\\nWhen the button is clicked it will log `Signin Clicked`.","html":"<p>We want to create a Angular Material Google Social Login Button in a shared library that has a <code>signIn</code> event that we can listen to in order to trigger social authentication and we also want to reactively disable the button until terms of service have been accepted.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The button design looks like this. It is disabled by default, and can be enabled by assign an <code>Observable&lt;boolean&gt;</code> to the property <code>isTOSAccepted$</code> that emits <code>true</code> when the button should be enabled.</p>\\n<pre><code>import { Component, OnInit } from &#39;@angular/core&#39;;\\nimport { SVG } from &#39;@fireflysemantics/assets&#39;\\nimport { Input } from &#39;@angular/core&#39;;\\nimport { Observable, of } from &#39;rxjs&#39;;\\nimport { Output } from &#39;@angular/core&#39;;\\nimport { EventEmitter } from &#39;@angular/core&#39;;\\n@Component({\\n    selector: &#39;fs-login-button&#39;,\\n    templateUrl: &#39;./login-button.component.html&#39;,\\n    styleUrls: [&#39;./login-button.component.scss&#39;]\\n})\\nexport class LoginButtonComponent implements OnInit {\\n    SVG_CONSTANTS = SVG\\n    constructor() { }\\n    @Output()\\n    signInEvent = new EventEmitter();\\n    click() { \\n        this.signInEvent.emit()\\n    }\\n    @Input()\\n    public isTOSAccepted$: Observable&lt;boolean&gt; = of(false)\\n    ngOnInit(): void { }\\n}\\n</code></pre>\\n<p>The template:</p>\\n<pre><code>&lt;button [disabled]=&quot;!(isTOSAccepted$ | async)&quot;\\n(click)=&quot;click()&quot;\\nmat-button\\nstyle=&quot;padding: 1rem;&quot;&gt;\\n&lt;mat-icon\\n[svgIcon]=&quot;SVG_CONSTANTS.GOOGLE_LOGO.name&quot;&gt;&lt;/mat-icon&gt; &amp;nbsp; &amp;nbsp; Login With Google\\n&lt;/button&gt;\\n</code></pre>\\n<h1 id=\'test\'>Test</h1>\\n<p>Within app.component.ts declare the following method:</p>\\n<pre><code>signIn() {\\n    console.log(&quot;Sign In Clicked&quot;)\\n}\\n</code></pre>\\n<p>On <code>app.component.ts</code> we will create an <code>Observable&lt;boolean&gt;</code> instance that emits <code>true</code> as well:</p>\\n<pre><code>isTOCAccepted$: Observable&lt;boolean&gt; = of(true)\\n</code></pre>\\n<p>Within the <code>app.component.html</code> template declare the button:</p>\\n<pre><code>&lt;fs-login-button \\n    (signInEvent)=&quot;signIn()&quot;\\n    [isTOSAccepted$]=&quot;isTOCAccepted$&quot;&gt;&lt;/fs-login-button&gt;\\n</code></pre>\\n<p>When the button is clicked it will log <code>Signin Clicked</code>.</p>\\n","summary":"Designing an Angular Social Login Button Presentation Component.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/08/2021","headerImage":"zitronenfalter-fish-380037_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/zitronenfalter-fish-380037_1920.jpg","title":"Designing an Angular Social Login Button Presentation Component","readingTime":2,"wordCount":244},{"category":"Tasks","type":"task","md5":"3d0fe6f067bfe8e70369cf1b338bdf9c","filename":"designing-angular-presentation-components-with-loosely-coupled-services.md","path":"tasks/angular/designing-angular-presentation-components-with-loosely-coupled-services.md","id":"tasks--angular--designing-angular-presentation-components-with-loosely-coupled-services","markdown":"\\nWe want to create a Angular Material social login button in a shared library that when clicked will call the method `signInWithGoogle()` on a service that that has been assigned to the `auth` property of the button. The service should implement this interface:\\n\\n```\\nexport interface IGoogleSocialAuth {\\n   signOut()\\n   signInWithGoogle()\\n}\\n```\\n\\n# Analysis\\n\\nWe are illustrating that it is possible to do this, but it should probably be considered an anti pattern.\\n\\nThe reason is that it couples the `IGoogleSocialAuth` interface to the component.\\n\\nUsing an `EventEmitter` to signal that the button is clicked, as done in [Designing an Angular Social Login Button Presentation Component](https://developer.fireflysemantics.com/tasks/tasks--angular--desigin-an-angular-social-login-button-presentation-component) is usually a better approach.\\n\\n\\n# Approach\\n\\nThe button design looks like this. It is disabled by default, and can be enabled by assign an `Observable<boolean>` to the property `isTOSAccepted$` that emits `true` when the button should be enabled.\\n```\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Input } from \'@angular/core\';\\nimport { Observable, of } from \'rxjs\';\\nexport interface IGoogleSocialAuth {\\n    signOut()\\n    signInWithGoogle()\\n}\\n@Component({\\n    selector: \'fs-login-button\',\\n    templateUrl: \'./login-button.component.html\',\\n    styleUrls: [\'./login-button.component.scss\']\\n})\\nexport class LoginButtonComponent implements OnInit {\\n    @Input()\\n    public auth: IGoogleSocialAuth\\n    @Input()\\n    public isTOSAccepted$: Observable<boolean> = of(false)\\n    ngOnInit(): void { }\\n}\\n```\\n\\nThe template:\\n```\\n<button [disabled]=\\"!(isTOSAccepted$ | async)\\"\\n(click)=\\"auth.signInWithGoogle()\\"\\nmat-button\\nstyle=\\"padding: 1rem;\\">\\n<mat-icon\\n[svgIcon]=\\"SVG_CONSTANTS.GOOGLE_LOGO.name\\"></mat-icon> &nbsp; &nbsp; Login With Google\\n</button>\\n```\\n\\n# Test\\n\\nWithin `app.component.ts` declare the following class:\\n```\\nclass Auth {\\n   signOut() {\\n       console.log(\\"Signing Out\\")\\n    }\\n    signInWithGoogle() {\\n        console.log(\\"Signing in with Google\\")\\n   }\\n}\\n```\\n\\nCreate an instance of it and assign it to the `auth` property on `app.component.ts`. \\n\\nWe will create an `Observable<boolean>` instance that emits `true` as well:\\n```\\nauth = new Auth()\\nisTOCAccepted$: Observable<boolean> = of(true)\\n```\\n\\nWithin the `app.component.html` template declare the button:\\n```\\n<fs-login-button [auth]=\\"auth\\" [isTOSAccepted$]=\\"isTOCAccepted$\\"></fs-login-button>\\n```\\n\\nWhen the button is clicked it will log `Signing in with Google`.","html":"<p>We want to create a Angular Material social login button in a shared library that when clicked will call the method <code>signInWithGoogle()</code> on a service that that has been assigned to the <code>auth</code> property of the button. The service should implement this interface:</p>\\n<pre><code>export interface IGoogleSocialAuth {\\n   signOut()\\n   signInWithGoogle()\\n}\\n</code></pre>\\n<h1 id=\'analysis\'>Analysis</h1>\\n<p>We are illustrating that it is possible to do this, but it should probably be considered an anti pattern.</p>\\n<p>The reason is that it couples the <code>IGoogleSocialAuth</code> interface to the component.</p>\\n<p>Using an <code>EventEmitter</code> to signal that the button is clicked, as done in <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--desigin-an-angular-social-login-button-presentation-component\'>Designing an Angular Social Login Button Presentation Component</a> is usually a better approach.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The button design looks like this. It is disabled by default, and can be enabled by assign an <code>Observable&lt;boolean&gt;</code> to the property <code>isTOSAccepted$</code> that emits <code>true</code> when the button should be enabled.</p>\\n<pre><code>import { Component, OnInit } from &#39;@angular/core&#39;;\\nimport { Input } from &#39;@angular/core&#39;;\\nimport { Observable, of } from &#39;rxjs&#39;;\\nexport interface IGoogleSocialAuth {\\n    signOut()\\n    signInWithGoogle()\\n}\\n@Component({\\n    selector: &#39;fs-login-button&#39;,\\n    templateUrl: &#39;./login-button.component.html&#39;,\\n    styleUrls: [&#39;./login-button.component.scss&#39;]\\n})\\nexport class LoginButtonComponent implements OnInit {\\n    @Input()\\n    public auth: IGoogleSocialAuth\\n    @Input()\\n    public isTOSAccepted$: Observable&lt;boolean&gt; = of(false)\\n    ngOnInit(): void { }\\n}\\n</code></pre>\\n<p>The template:</p>\\n<pre><code>&lt;button [disabled]=&quot;!(isTOSAccepted$ | async)&quot;\\n(click)=&quot;auth.signInWithGoogle()&quot;\\nmat-button\\nstyle=&quot;padding: 1rem;&quot;&gt;\\n&lt;mat-icon\\n[svgIcon]=&quot;SVG_CONSTANTS.GOOGLE_LOGO.name&quot;&gt;&lt;/mat-icon&gt; &amp;nbsp; &amp;nbsp; Login With Google\\n&lt;/button&gt;\\n</code></pre>\\n<h1 id=\'test\'>Test</h1>\\n<p>Within <code>app.component.ts</code> declare the following class:</p>\\n<pre><code>class Auth {\\n   signOut() {\\n       console.log(&quot;Signing Out&quot;)\\n    }\\n    signInWithGoogle() {\\n        console.log(&quot;Signing in with Google&quot;)\\n   }\\n}\\n</code></pre>\\n<p>Create an instance of it and assign it to the <code>auth</code> property on <code>app.component.ts</code>. </p>\\n<p>We will create an <code>Observable&lt;boolean&gt;</code> instance that emits <code>true</code> as well:</p>\\n<pre><code>auth = new Auth()\\nisTOCAccepted$: Observable&lt;boolean&gt; = of(true)\\n</code></pre>\\n<p>Within the <code>app.component.html</code> template declare the button:</p>\\n<pre><code>&lt;fs-login-button [auth]=&quot;auth&quot; [isTOSAccepted$]=&quot;isTOCAccepted$&quot;&gt;&lt;/fs-login-button&gt;\\n</code></pre>\\n<p>When the button is clicked it will log <code>Signing in with Google</code>.</p>\\n","summary":"Designing Angular Presentation Components with Loosely Coupled Services.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/08/2021","headerImage":"jellyfish-2180364_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-2180364_1920.jpg","title":"Designing Angular Presentation Components with Loosely Coupled Services","readingTime":2,"wordCount":327},{"category":"Tasks","type":"task","md5":"9c370d1b8e9fac04e9a2851870daa764","filename":"designing-components-that-include-angular-material-icons.md","path":"tasks/angular/designing-components-that-include-angular-material-icons.md","id":"tasks--angular--designing-components-that-include-angular-material-icons","markdown":"\\nWe have included `MatIconModule` in our component library, however the icons used by our component are not rendering.\\n\\n# Approach\\n\\nSince the `MatIconModule` uses the `HttpClientModule`, it must also be included in order for the `MatIconModule` to load the icons.  \\n\\nInclude it in the module imports array like this:\\n\\n```\\n  imports: [\\n    MatIconModule,\\n    HttpClientModule\\n  ]\\n```","html":"<p>We have included <code>MatIconModule</code> in our component library, however the icons used by our component are not rendering.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Since the <code>MatIconModule</code> uses the <code>HttpClientModule</code>, it must also be included in order for the <code>MatIconModule</code> to load the icons.  </p>\\n<p>Include it in the module imports array like this:</p>\\n<pre><code>  imports: [\\n    MatIconModule,\\n    HttpClientModule\\n  ]\\n</code></pre>\\n","summary":"Designing Components That Include Angular Material Icons.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"6/04/2021","headerImage":"ladybug-50478_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ladybug-50478_1920.jpg","title":"Designing Components That Include Angular Material Icons","readingTime":1,"wordCount":51},{"category":"Tasks","type":"task","md5":"970aac87c8f2b3d4aa15bdf43c853a47","filename":"extending-angular-material-themes-with-success-and-danger-colors.md","path":"tasks/angular/extending-angular-material-themes-with-success-and-danger-colors.md","id":"tasks--angular--extending-angular-material-themes-with-success-and-danger-colors","markdown":"\\nWe wish to include `success` and `danger` color palettes in the theming of our Angular Material themes.\\n\\n# Approach\\n\\nWrap the Angular Material Light and Dark theming function merging in the additional color values.\\n\\n\\n```\\n@use \'@angular/material\' as mat;\\n\\n/// Defines a dark color theme with success and danger colors.\\n/// @param {Map} $primary The primary color map.\\n/// @param {Map} $accent The accent color map.\\n/// @param {Map} $warn The warn color map.\\n/// @param {Map} $success The success color map.\\n/// @param {Map} $danger The danger color map.\\n\\n@function fs-dark-theme(\\n  $primary,\\n  $accent,\\n  $warn: mat.define-palette($mat-orange),\\n  $success: mat.define-palette(mat.$mat-green),\\n  $danger: mat.define-palette(mat.$mat-red)\\n) {\\n  $dark-theme: mat.define-dark-theme(\\n    (\\n      color: (\\n        primary: $primary,\\n        accent: $accent,\\n        warn: $warn,\\n      ),\\n    )\\n  );\\n\\n  $danger-success: (\\n    success: $success,\\n    danger: $danger,\\n  );\\n  @return map-merge($dark-theme, $danger-success);\\n}\\n\\n/// Defines a light color theme with success and danger colors.\\n/// @param {Map} $primary The primary color map.\\n/// @param {Map} $accent The accent color map.\\n/// @param {Map} $warn The warn color map.\\n/// @param {Map} $success The success color map.\\n/// @param {Map} $danger The danger color map.\\n@function fs-light-theme(\\n  $primary,\\n  $accent,\\n  $warn: mat.define-palette($mat-orange),\\n  $success: mat.define-palette(mat.$mat-green),\\n  $danger: mat.define-palette(mat.$mat-red)\\n) {\\n  $light-theme: mat.define-light-theme(\\n    (\\n      color: (\\n        primary: $primary,\\n        accent: $accent,\\n        warn: $warn,\\n      ),\\n    )\\n  );\\n  $danger-success: (\\n    success: $success,\\n    danger: $danger,\\n  );\\n  @return map-merge($light-theme, $danger-success);\\n```\\n\\nWe create the theme and the `$danger-success` map and merge the two.\\n\\n```\\n@return map-merge($light-theme, $danger-success);\\n```\\n\\nWe can now create the dark theme with the merged values like this:\\n\\n```\\n// ============================================\\n// Palettes: https://material.io/design/color/\\n// ============================================\\n$theme-primary: mat.define-palette(mat.$indigo-palette);\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n$theme-success: mat.define-palette(mat.$green-palette);\\n$theme-danger: mat.define-palette(mat.$red-palette);\\n$dark-theme: theme.fs-dark-theme(\\n   $theme-primary,\\n   $theme-accent,\\n   $theme-warn,\\n   $theme-success,\\n   $theme-danger\\n);\\n```\\n\\nRetrieve `success` and `danger` colors as follows.\\n\\n```\\n$dangerpalette: map.get($dark-theme, danger);\\n$successpalette: map.get($dark-theme, success);\\n$dangerdefault: mat.get-color-from-palette($dangerpalette, default);\\n$successdefault: mat.get-color-from-palette($successpalette, default);\\n@debug $dangerdefault;\\n@debug $successdefault;\\n```\\n\\n\\nTo see the entire theme log the trace like this.\\n\\n```\\n$tracetheme: logger.pretty-map($dark-theme);\\n@debug $tracetheme;\\n```\\n\\nThe logger comes from the package [@fireflysemantics/sass-logger](https://www.npmjs.com/package/@fireflysemantics/sass-logger).\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Extending Angular Material Themes with Success and Danger Colors\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk-phwfu3\\">\\n</fs-link-preview>","html":"<p>We wish to include <code>success</code> and <code>danger</code> color palettes in the theming of our Angular Material themes.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Wrap the Angular Material Light and Dark theming function merging in the additional color values.</p>\\n<pre><code>@use &#39;@angular/material&#39; as mat;\\n\\n/// Defines a dark color theme with success and danger colors.\\n/// @param {Map} $primary The primary color map.\\n/// @param {Map} $accent The accent color map.\\n/// @param {Map} $warn The warn color map.\\n/// @param {Map} $success The success color map.\\n/// @param {Map} $danger The danger color map.\\n\\n@function fs-dark-theme(\\n  $primary,\\n  $accent,\\n  $warn: mat.define-palette($mat-orange),\\n  $success: mat.define-palette(mat.$mat-green),\\n  $danger: mat.define-palette(mat.$mat-red)\\n) {\\n  $dark-theme: mat.define-dark-theme(\\n    (\\n      color: (\\n        primary: $primary,\\n        accent: $accent,\\n        warn: $warn,\\n      ),\\n    )\\n  );\\n\\n  $danger-success: (\\n    success: $success,\\n    danger: $danger,\\n  );\\n  @return map-merge($dark-theme, $danger-success);\\n}\\n\\n/// Defines a light color theme with success and danger colors.\\n/// @param {Map} $primary The primary color map.\\n/// @param {Map} $accent The accent color map.\\n/// @param {Map} $warn The warn color map.\\n/// @param {Map} $success The success color map.\\n/// @param {Map} $danger The danger color map.\\n@function fs-light-theme(\\n  $primary,\\n  $accent,\\n  $warn: mat.define-palette($mat-orange),\\n  $success: mat.define-palette(mat.$mat-green),\\n  $danger: mat.define-palette(mat.$mat-red)\\n) {\\n  $light-theme: mat.define-light-theme(\\n    (\\n      color: (\\n        primary: $primary,\\n        accent: $accent,\\n        warn: $warn,\\n      ),\\n    )\\n  );\\n  $danger-success: (\\n    success: $success,\\n    danger: $danger,\\n  );\\n  @return map-merge($light-theme, $danger-success);\\n</code></pre>\\n<p>We create the theme and the <code>$danger-success</code> map and merge the two.</p>\\n<pre><code>@return map-merge($light-theme, $danger-success);\\n</code></pre>\\n<p>We can now create the dark theme with the merged values like this:</p>\\n<pre><code>// ============================================\\n// Palettes: https://material.io/design/color/\\n// ============================================\\n$theme-primary: mat.define-palette(mat.$indigo-palette);\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n$theme-success: mat.define-palette(mat.$green-palette);\\n$theme-danger: mat.define-palette(mat.$red-palette);\\n$dark-theme: theme.fs-dark-theme(\\n   $theme-primary,\\n   $theme-accent,\\n   $theme-warn,\\n   $theme-success,\\n   $theme-danger\\n);\\n</code></pre>\\n<p>Retrieve <code>success</code> and <code>danger</code> colors as follows.</p>\\n<pre><code>$dangerpalette: map.get($dark-theme, danger);\\n$successpalette: map.get($dark-theme, success);\\n$dangerdefault: mat.get-color-from-palette($dangerpalette, default);\\n$successdefault: mat.get-color-from-palette($successpalette, default);\\n@debug $dangerdefault;\\n@debug $successdefault;\\n</code></pre>\\n<p>To see the entire theme log the trace like this.</p>\\n<pre><code>$tracetheme: logger.pretty-map($dark-theme);\\n@debug $tracetheme;\\n</code></pre>\\n<p>The logger comes from the package <a href=\'https://www.npmjs.com/package/@fireflysemantics/sass-logger\'>@fireflysemantics/sass-logger</a>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Extending Angular Material Themes with Success and Danger Colors\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk-phwfu3\'>\\n</fs-link-preview></p>\\n","summary":"Extending Angular Material Themes with Success and Danger Colors.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/29/2022","headerImage":"reptile-4098439_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/reptile-4098439_1920.jpg","title":"Extending Angular Material Themes with Success and Danger Colors","readingTime":3,"wordCount":441},{"category":"Tasks","type":"task","md5":"c5abcbf4db0be1218f2e2022fdf7ab3e","filename":"finding-the-angular-material-color-palette-in-node-modules.md","path":"tasks/angular/finding-the-angular-material-color-palette-in-node-modules.md","id":"tasks--angular--finding-the-angular-material-color-palette-in-node-modules","markdown":"\\nWe want to have a look at the source code for the Angular Material Color Palettes.\\n\\n# Approach\\n\\n```\\nnode_modules@angular\\\\material\\\\core\\\\_palette.scss\\n```","html":"<p>We want to have a look at the source code for the Angular Material Color Palettes.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>node_modules@angular\\\\material\\\\core\\\\_palette.scss\\n</code></pre>\\n","summary":"Finding the Angular Material Color Palette in Node Modules.","tags":["Angular","JavaScript","Angular Material","SASS"],"tagString":"Angular, JavaScript, Angular Material, SASS","author":"Ole Ersoy","date":"5/04/2022","headerImage":"lotus-6527384_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lotus-6527384_1920.jpg","title":"Finding the Angular Material Color Palette in Node Modules","readingTime":1,"wordCount":23},{"category":"Tasks","type":"task","md5":"a6dcb9cc992fa14841338d6f8112d1ab","filename":"formatting-your-angular-number-to-2-decimal-places.md","path":"tasks/angular/formatting-your-angular-number-to-2-decimal-places.md","id":"tasks--angular--formatting-your-angular-number-to-2-decimal-places","markdown":"\\nWe have a number `12.45343532`. \\n\\nWe want it to look like this:\\n`12.45`.\\n\\n# Approach\\n\\nWithin the component template pipe the value through the number pipe like this:\\n```\\n<div>{{ value | number:\'1.2-2\' }}</div>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n   imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n \\ttitle=\\"Stackblitz Demo\\" \\n   description=\\"Formatting Your Angular Number to 2 Decimal Places\\"\\n \\tdomain=\\"stackblitz.com\\" \\n   url=\\"https://stackblitz.com/edit/angular-ivy-sc3uky?file=src%2Fapp%2Fapp.component.html\\">\\n</fs-link-preview>\\n","html":"<p>We have a number <code>12.45343532</code>. </p>\\n<p>We want it to look like this:\\n<code>12.45</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within the component template pipe the value through the number pipe like this:</p>\\n<pre><code>&lt;div&gt;{{ value | number:&#39;1.2-2&#39; }}&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n   imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n     title=\'Stackblitz Demo\' \\n   description=\'Formatting Your Angular Number to 2 Decimal Places\'\\n     domain=\'stackblitz.com\' \\n   url=\'https://stackblitz.com/edit/angular-ivy-sc3uky?file=src%2Fapp%2Fapp.component.html\'>\\n</fs-link-preview></p>\\n","summary":"Formatting Your Angular Number to 2 Decimal Places.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"hard-disk-5793074_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/hard-disk-5793074_1920.jpg","title":"Formatting Your Angular Number to 2 Decimal Places","readingTime":1,"wordCount":81},{"category":"Tasks","type":"task","md5":"5fa8825856ff36b7e1b57b5ef94b98dd","filename":"generating-compodoc-for-the-firefly-semantics-slice-angular-todo-application.md","path":"tasks/angular/generating-compodoc-for-the-firefly-semantics-slice-angular-todo-application.md","id":"tasks--angular--generating-compodoc-for-the-firefly-semantics-slice-angular-todo-application","markdown":"\\nWe have created the Angular Todo application using the Firefly Semantics Reactive State Manager and now we wish to document it using [CompoDoc](https://compodoc.app/).\\n\\n# Approach\\n\\n## Install\\n\\n```\\nnpm install -g @compodoc/compodoc\\n```\\n\\n## Clone Application\\n\\nClone the Todo application and initialize the dependencies.\\n\\n```\\ngit clone git@github.com:fireflysemantics/angulr-material-todo-application.git\\ncd angulr-material-todo-application\\nnpm i \\n```\\n\\nCreate the file `tsconfig.doc.json` with these contents.\\n\\n```\\n{\\n  \\"include\\": [\\"src/**/*.ts\\"],\\n  \\"exclude\\": [\\"src/test.ts\\", \\"src/**/*.spec.ts\\", \\"src/app/file-to-exclude.ts\\"]\\n}\\n```\\n\\nCreate a `package.json` `script` that runs the documentation:\\n\\n```\\n\\"scripts\\": {\\n  \\"compodoc\\": \\"npx compodoc -p tsconfig.doc.json\\"\\n}\\n```\\n\\nRun the compodoc generation on the application.\\n\\n```\\nnpm run compodoc\\n```\\n\\nServe the documentation with the command:\\n```\\ncompodoc -so\\n```\\n\\nAnd have a look around.","html":"<p>We have created the Angular Todo application using the Firefly Semantics Reactive State Manager and now we wish to document it using <a href=\'https://compodoc.app/\'>CompoDoc</a>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'install\'>Install</h2>\\n<pre><code>npm install -g @compodoc/compodoc\\n</code></pre>\\n<h2 id=\'clone-application\'>Clone Application</h2>\\n<p>Clone the Todo application and initialize the dependencies.</p>\\n<pre><code>git clone git@github.com:fireflysemantics/angulr-material-todo-application.git\\ncd angulr-material-todo-application\\nnpm i \\n</code></pre>\\n<p>Create the file <code>tsconfig.doc.json</code> with these contents.</p>\\n<pre><code>{\\n  &quot;include&quot;: [&quot;src/**/*.ts&quot;],\\n  &quot;exclude&quot;: [&quot;src/test.ts&quot;, &quot;src/**/*.spec.ts&quot;, &quot;src/app/file-to-exclude.ts&quot;]\\n}\\n</code></pre>\\n<p>Create a <code>package.json</code> <code>script</code> that runs the documentation:</p>\\n<pre><code>&quot;scripts&quot;: {\\n  &quot;compodoc&quot;: &quot;npx compodoc -p tsconfig.doc.json&quot;\\n}\\n</code></pre>\\n<p>Run the compodoc generation on the application.</p>\\n<pre><code>npm run compodoc\\n</code></pre>\\n<p>Serve the documentation with the command:</p>\\n<pre><code>compodoc -so\\n</code></pre>\\n<p>And have a look around.</p>\\n","summary":"Generating CompoDoc for the Firefly Semantics Slice Angular Todo Application.","tags":["Angular","Angular Material","JavaScript","TypeScript","Compodoc"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, Compodoc","author":"Ole Ersoy","date":"5/5/2021","headerImage":"flower-5123954_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-5123954_1920.jpg","title":"Generating CompoDoc for the Firefly Semantics Slice Angular Todo Application","readingTime":1,"wordCount":126},{"category":"Tasks","type":"task","md5":"7af4aa47a19733d435e9540824627610","filename":"getting-angular-ready-for-aws-amplify.md","path":"tasks/angular/getting-angular-ready-for-aws-amplify.md","id":"tasks--angular--getting-angular-ready-for-aws-amplify","markdown":"\\nWe have used the AWS Amplify CLI to add `Auth` to our application and we ran `amplify push` initializing the `src/aws-exports.js` configuration. Now we need to complete the remaining application scaffolding.\\n\\n# Approach\\n\\n## Update Package and Script\\n\\nWe created a script package that will automatically perform these steps.  [The NPM Repository README](https://www.npmjs.com/package/@fireflysemantics/ng-amplify) for instructions.\\n\\n\\n## API Installation\\n\\n```\\nnpm install aws-amplify\\n```\\n\\n## Enable Loading of Javascript\\n\\nIn order to load `aws-exports.js` enable the loading of Javascript files in `tsconfig.json`:\\n\\n```\\n{\\n  \\"compilerOptions\\": {\\n    \\"allowJs\\": true\\n    ...\\n   }\\n}\\n```\\n\\n\\n## Add Node Compiler Types\\n\\nUpdate `tsconfig.app.json` with:\\n\\n```\\n\\"compilerOptions\\": {\\n    ....\\n    \\"types\\": [\\"node\\"]\\n},\\n```\\n\\n## Allow Javascript\\n\\nUpdate `tsconfig.json` with the `allowJs` option,\\nas the `aws-exports.js` file is a Javascript file\\nand Angular flag it otherwise:\\n\\n```\\n\\"compilerOptions\\": {\\n    \\"allowJs\\": true,\\n    ...\\n},\\n```\\n\\n## Update Polyfills\\n\\nUpdate `src/polyfills.ts`:\\n\\n```\\n(window as any).global = window;\\n(window as any).process = {\\n  env: { DEBUG: undefined },\\n};\\n```\\n\\n## Update index.html\\n\\nAdd this script tag to the `<head>` element:\\n\\n```\\n<script>\\nif(global === undefined) {\\n    var global=window\\n}\\n<\/script>\\n```\\n\\n## Configure AWS Amplify\\n\\nWithin `src/main.ts` add the configuration for Auth:\\n\\n```\\nimport Auth from \'@aws-amplify/auth\';\\nimport AWSConfig from \'./aws-exports\';\\nAuth.configure(AWSConfig);\\n```\\n\\nWe are now ready to use the Amplify `Auth` within our application.\\n\\n## API\\n\\nIf adding `API` that also has to be configured.\\n\\nIf not you will get the error API not configured.\\n\\nTo add configuration for API do the following:\\n\\n```\\nimport { API } from \'aws-amplify\';\\nAPI.configure(AWSConfig)\\n```\\n","html":"<p>We have used the AWS Amplify CLI to add <code>Auth</code> to our application and we ran <code>amplify push</code> initializing the <code>src/aws-exports.js</code> configuration. Now we need to complete the remaining application scaffolding.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'update-package-and-script\'>Update Package and Script</h2>\\n<p>We created a script package that will automatically perform these steps.  <a href=\'https://www.npmjs.com/package/@fireflysemantics/ng-amplify\'>The NPM Repository README</a> for instructions.</p>\\n<h2 id=\'api-installation\'>API Installation</h2>\\n<pre><code>npm install aws-amplify\\n</code></pre>\\n<h2 id=\'enable-loading-of-javascript\'>Enable Loading of Javascript</h2>\\n<p>In order to load <code>aws-exports.js</code> enable the loading of Javascript files in <code>tsconfig.json</code>:</p>\\n<pre><code>{\\n  &quot;compilerOptions&quot;: {\\n    &quot;allowJs&quot;: true\\n    ...\\n   }\\n}\\n</code></pre>\\n<h2 id=\'add-node-compiler-types\'>Add Node Compiler Types</h2>\\n<p>Update <code>tsconfig.app.json</code> with:</p>\\n<pre><code>&quot;compilerOptions&quot;: {\\n    ....\\n    &quot;types&quot;: [&quot;node&quot;]\\n},\\n</code></pre>\\n<h2 id=\'allow-javascript\'>Allow Javascript</h2>\\n<p>Update <code>tsconfig.json</code> with the <code>allowJs</code> option,\\nas the <code>aws-exports.js</code> file is a Javascript file\\nand Angular flag it otherwise:</p>\\n<pre><code>&quot;compilerOptions&quot;: {\\n    &quot;allowJs&quot;: true,\\n    ...\\n},\\n</code></pre>\\n<h2 id=\'update-polyfills\'>Update Polyfills</h2>\\n<p>Update <code>src/polyfills.ts</code>:</p>\\n<pre><code>(window as any).global = window;\\n(window as any).process = {\\n  env: { DEBUG: undefined },\\n};\\n</code></pre>\\n<h2 id=\'update-indexhtml\'>Update index.html</h2>\\n<p>Add this script tag to the <code>&lt;head&gt;</code> element:</p>\\n<pre><code>&lt;script&gt;\\nif(global === undefined) {\\n    var global=window\\n}\\n&lt;/script&gt;\\n</code></pre>\\n<h2 id=\'configure-aws-amplify\'>Configure AWS Amplify</h2>\\n<p>Within <code>src/main.ts</code> add the configuration for Auth:</p>\\n<pre><code>import Auth from &#39;@aws-amplify/auth&#39;;\\nimport AWSConfig from &#39;./aws-exports&#39;;\\nAuth.configure(AWSConfig);\\n</code></pre>\\n<p>We are now ready to use the Amplify <code>Auth</code> within our application.</p>\\n<h2 id=\'api\'>API</h2>\\n<p>If adding <code>API</code> that also has to be configured.</p>\\n<p>If not you will get the error API not configured.</p>\\n<p>To add configuration for API do the following:</p>\\n<pre><code>import { API } from &#39;aws-amplify&#39;;\\nAPI.configure(AWSConfig)\\n</code></pre>\\n","summary":"Getting Angular Ready for AWS Amplify.","tags":["Angular","JavaScript","Amplify","AWS"],"tagString":"Angular, JavaScript, Amplify, AWS","author":"Ole Ersoy","date":"2/04/2021","headerImage":"dolphin-203875_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dolphin-203875_1920.jpg","title":"Getting Angular Ready for AWS Amplify","readingTime":2,"wordCount":243},{"category":"Tasks","type":"task","md5":"03d2fbe84da39e4a5f595b5fe34a54df","filename":"hiding-angular-material-data-table-columns.md","path":"tasks/angular/hiding-angular-material-data-table-columns.md","id":"tasks--angular--hiding-angular-material-data-table-columns","markdown":"\\nWe have a material data table with the colums `id` and `Decription` .\\n\\nWe want to have two `mat-checkbox` fields, one for `id` and one for `description` that when clicked hide the corresponding column in the data table.\\n\\n# Approach\\n\\nWe\u2019ll use a `columnsDefinitions` object to define which column definitions are hidden:\\n\\n```\\ncolumnDefinitions = [\\n    { def: \'id\', hide: this.cb1.value},\\n    { def: \'description\', hide: this.cb2.value}\\n]\\n```\\n\\nThe RxJS merge operator is used to observe the `mat-checkbox` fields and update the columnDefinitions:\\n\\n```\\nlet o1:Observable<boolean> = this.cb1.valueChanges;\\n\\nlet o2:Observable<boolean> = this.cb2.valueChanges;\\n\\nmerge(o1, o2).subscribe( v=>{\\n   this.columnDefinitions[0].hide = this.cb1.value;\\n   this.columnDefinitions[1].hide = this.cb2.value;\\n      console.log(this.columnDefinitions);\\n    });\\n}\\n```\\n\\nFinally we\u2019ll filter the `columnDefinitions` to get the columns we want to display:\\n\\n```\\ngetDisplayedColumns():string[] {\\n    return this.columnDefinitions.filter(cd=>!cd.hide).map(cd=>cd.def);\\n}\\n```\\n\\nAnd we\u2019ll use `getDisplayedColumns` in our template like this:\\n\\n```\\n<mat-header-row *matHeaderRowDef=\\"getDisplayedColumns()\\">\\n</mat-header-row>\\n<mat-row *matRowDef=\\"let row; columns: getDisplayedColumns()\\"></mat-row>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n   imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n \\ttitle=\\"Stackblitz Demo\\" \\n   description=\\"Hiding Angular Material Data Table Columns\\"\\n \\tdomain=\\"stackblitz.com\\" \\n   url=\\"https://stackblitz.com/editangular-material-table-hide-columns\\">\\n</fs-link-preview>\\n\\n# Simpler Demo\\n\\nThis demo is shorter. It uses a `displayedColumns$:Observable<string[]>` to display the columns.\\n\\nThis should be better from a performance point of view, since the `getDisplayedColumns()` function will not be called on all state changes.\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Hiding Angular Material Data Table Columns\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-material-table-hide-columns-pure-obserable\\">\\n</fs-link-preview>\\n","html":"<p>We have a material data table with the colums <code>id</code> and <code>Decription</code> .</p>\\n<p>We want to have two <code>mat-checkbox</code> fields, one for <code>id</code> and one for <code>description</code> that when clicked hide the corresponding column in the data table.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We\u2019ll use a <code>columnsDefinitions</code> object to define which column definitions are hidden:</p>\\n<pre><code>columnDefinitions = [\\n    { def: &#39;id&#39;, hide: this.cb1.value},\\n    { def: &#39;description&#39;, hide: this.cb2.value}\\n]\\n</code></pre>\\n<p>The RxJS merge operator is used to observe the <code>mat-checkbox</code> fields and update the columnDefinitions:</p>\\n<pre><code>let o1:Observable&lt;boolean&gt; = this.cb1.valueChanges;\\n\\nlet o2:Observable&lt;boolean&gt; = this.cb2.valueChanges;\\n\\nmerge(o1, o2).subscribe( v=&gt;{\\n   this.columnDefinitions[0].hide = this.cb1.value;\\n   this.columnDefinitions[1].hide = this.cb2.value;\\n      console.log(this.columnDefinitions);\\n    });\\n}\\n</code></pre>\\n<p>Finally we\u2019ll filter the <code>columnDefinitions</code> to get the columns we want to display:</p>\\n<pre><code>getDisplayedColumns():string[] {\\n    return this.columnDefinitions.filter(cd=&gt;!cd.hide).map(cd=&gt;cd.def);\\n}\\n</code></pre>\\n<p>And we\u2019ll use <code>getDisplayedColumns</code> in our template like this:</p>\\n<pre><code>&lt;mat-header-row *matHeaderRowDef=&quot;getDisplayedColumns()&quot;&gt;\\n&lt;/mat-header-row&gt;\\n&lt;mat-row *matRowDef=&quot;let row; columns: getDisplayedColumns()&quot;&gt;&lt;/mat-row&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n   imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n     title=\'Stackblitz Demo\' \\n   description=\'Hiding Angular Material Data Table Columns\'\\n     domain=\'stackblitz.com\' \\n   url=\'https://stackblitz.com/editangular-material-table-hide-columns\'>\\n</fs-link-preview></p>\\n<h1 id=\'simpler-demo\'>Simpler Demo</h1>\\n<p>This demo is shorter. It uses a <code>displayedColumns$:Observable&lt;string[]&gt;</code> to display the columns.</p>\\n<p>This should be better from a performance point of view, since the <code>getDisplayedColumns()</code> function will not be called on all state changes.</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Hiding Angular Material Data Table Columns\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-material-table-hide-columns-pure-obserable\'>\\n</fs-link-preview></p>\\n","summary":"Hiding Angular Material Data Table Columns.","tags":["Angular","Angular Material","JavaScript","TypeScript","CSS","RxJs"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, CSS, RxJs","author":"Ole Ersoy","date":"2/06/2021","headerImage":"chameleon-4249344_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chameleon-4249344_1920.jpg","title":"Hiding Angular Material Data Table Columns","readingTime":2,"wordCount":288},{"category":"Tasks","type":"task","md5":"4a39040f5ed14d38f8f465c02eccc0d1","filename":"implementing-a-minimal-angular-material-data-table-with-drag-and-drop.md","path":"tasks/angular/implementing-a-minimal-angular-material-data-table-with-drag-and-drop.md","id":"tasks--angular--implementing-a-minimal-angular-material-data-table-with-drag-and-drop","markdown":"\\nBuilding on our previous [minimal data table](https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table) adding drag and rop:\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/elephant-3728225_1920.jpg\\"\\n  \\ttitle=\\"Material Data Table With Sorting\\" \\n    description=\\"Implementing a Minimal Angular Material Data Table\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-minimal-material-data-table\\">\\n</fs-link-preview>\\n\\n# Approach\\n\\n## Imports\\n\\nIn addition to the modules already in place in the Add the `DragDropModule`\\n```\\nimport { DragDropModule } from \\"@angular/cdk/drag-drop\\";\\n```\\n\\nRememer to also add it to `app.module.ts`.\\n\\n## Templating\\n\\nAdd the `cdkDropList` directive to `mat-table` and add the `cdkDrag` directive to `mat-row`.\\n\\nOn `mat-table` set the `[cdkDropListData]` property to `dataSource.data` like this:\\n\\n```\\n[cdkDropListData]=\\"dataSource.data\\"\\n```\\n\\nAlso on `mat-table` register a `cdkDropListDropped` event listener:\\n\\n```\\n (cdkDropListDropped)=\\"onListDrop($event)\\"\\n   \\n```\\n\\nThe implementation of `onListDrop` in `app.component.ts` looks like this:\\n\\n```\\n  onListDrop(event: CdkDragDrop<Todo[]>) {\\n    console.log(\\"Logging drop\\");\\n    console.log(this.todos);\\n    // Swap the elements around\\n    moveItemInArray(\\n      event.container.data,\\n      event.previousIndex,\\n      event.currentIndex\\n    );\\n  }\\n```\\n\\n\\nThis is the full template:\\n\\n```\\n<div style=\\"width: 20rem; margin: 2rem;\\">\\n  <mat-table\\n    (cdkDropListDropped)=\\"onListDrop($event)\\"\\n    [cdkDropListData]=\\"dataSource.data\\"\\n    cdkDropList\\n    class=\\"mat-elevation-z8\\"\\n    [dataSource]=\\"dataSource\\"\\n  >\\n    <ng-container matColumnDef=\\"id\\">\\n      <mat-header-cell *matHeaderCellDef>ID</mat-header-cell>\\n      <mat-cell *matCellDef=\\"let row;\\">{{row.id}}</mat-cell>\\n    </ng-container>\\n    <mat-header-row *matHeaderRowDef=\\"displayedColumns\\"> </mat-header-row>\\n    <mat-row cdkDrag *matRowDef=\\"let row; columns: displayedColumns\\"></mat-row>\\n  </mat-table>\\n</div>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Implementing a Minimal Angular Material Data Table With Drag and Drop\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-minimal-material-data-table-with-drag-drop\\">\\n</fs-link-preview>","html":"<p>Building on our previous <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table\'>minimal data table</a> adding drag and rop:</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/elephant-3728225_1920.jpg\'\\n      title=\'Material Data Table With Sorting\' \\n    description=\'Implementing a Minimal Angular Material Data Table\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-minimal-material-data-table\'>\\n</fs-link-preview></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'imports\'>Imports</h2>\\n<p>In addition to the modules already in place in the Add the <code>DragDropModule</code></p>\\n<pre><code>import { DragDropModule } from &quot;@angular/cdk/drag-drop&quot;;\\n</code></pre>\\n<p>Rememer to also add it to <code>app.module.ts</code>.</p>\\n<h2 id=\'templating\'>Templating</h2>\\n<p>Add the <code>cdkDropList</code> directive to <code>mat-table</code> and add the <code>cdkDrag</code> directive to <code>mat-row</code>.</p>\\n<p>On <code>mat-table</code> set the <code>[cdkDropListData]</code> property to <code>dataSource.data</code> like this:</p>\\n<pre><code>[cdkDropListData]=&quot;dataSource.data&quot;\\n</code></pre>\\n<p>Also on <code>mat-table</code> register a <code>cdkDropListDropped</code> event listener:</p>\\n<pre><code> (cdkDropListDropped)=&quot;onListDrop($event)&quot;\\n   \\n</code></pre>\\n<p>The implementation of <code>onListDrop</code> in <code>app.component.ts</code> looks like this:</p>\\n<pre><code>  onListDrop(event: CdkDragDrop&lt;Todo[]&gt;) {\\n    console.log(&quot;Logging drop&quot;);\\n    console.log(this.todos);\\n    // Swap the elements around\\n    moveItemInArray(\\n      event.container.data,\\n      event.previousIndex,\\n      event.currentIndex\\n    );\\n  }\\n</code></pre>\\n<p>This is the full template:</p>\\n<pre><code>&lt;div style=&quot;width: 20rem; margin: 2rem;&quot;&gt;\\n  &lt;mat-table\\n    (cdkDropListDropped)=&quot;onListDrop($event)&quot;\\n    [cdkDropListData]=&quot;dataSource.data&quot;\\n    cdkDropList\\n    class=&quot;mat-elevation-z8&quot;\\n    [dataSource]=&quot;dataSource&quot;\\n  &gt;\\n    &lt;ng-container matColumnDef=&quot;id&quot;&gt;\\n      &lt;mat-header-cell *matHeaderCellDef&gt;ID&lt;/mat-header-cell&gt;\\n      &lt;mat-cell *matCellDef=&quot;let row;&quot;&gt;{{row.id}}&lt;/mat-cell&gt;\\n    &lt;/ng-container&gt;\\n    &lt;mat-header-row *matHeaderRowDef=&quot;displayedColumns&quot;&gt; &lt;/mat-header-row&gt;\\n    &lt;mat-row cdkDrag *matRowDef=&quot;let row; columns: displayedColumns&quot;&gt;&lt;/mat-row&gt;\\n  &lt;/mat-table&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Implementing a Minimal Angular Material Data Table With Drag and Drop\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-minimal-material-data-table-with-drag-drop\'>\\n</fs-link-preview></p>\\n","summary":"Implementing a Minimal Angular Material Data Table With Drag and Drop.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/01/2021","headerImage":"picture-frame-3114263_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/picture-frame-3114263_1280.jpg","title":"Implementing a Minimal Angular Material Data Table With Drag and Drop","readingTime":2,"wordCount":294},{"category":"Tasks","type":"task","md5":"1f39b2f153518b2970e8e7d2d7319835","filename":"implementing-a-minimal-angular-material-data-table-with-sorting.md","path":"tasks/angular/implementing-a-minimal-angular-material-data-table-with-sorting.md","id":"tasks--angular--implementing-a-minimal-angular-material-data-table-with-sorting","markdown":"\\nBuilding on our previous [minimal data table](https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table) adding sorting:\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/elephant-3728225_1920.jpg\\"\\n  \\ttitle=\\"Material Data Table With Sorting\\" \\n    description=\\"Implementing a Minimal Angular Material Data Table\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table\\">\\n</fs-link-preview>\\n\\n# Approach\\n\\n## Imports\\n\\n```\\nimport { MatSortModule } from \'@angular/material/sort\';\\nimport { BrowserAnimationsModule } from \\"@angular/platform-browser/animations\\";\\nimport { ViewChild, AfterViewInit } from \'@angular/core\';\\n```\\n\\nAdd `MatSortModule` and `BrowserAnimationsModule` to `app.module.ts`.\\n\\n## Templating\\n\\nAdd the `matSort` and `mat-sort-header` directives:\\n\\n```\\n<mat-table class=\\"mat-elevation-z8\\" [dataSource]=\\"dataSource\\" matSort>\\n\\t<ng-container matColumnDef=\\"id\\">\\n\\t\\t<mat-header-cell *matHeaderCellDef mat-sort-header>ID</mat-header-cell>\\n\\t\\t<mat-cell *matCellDef=\\"let row;\\">{{row.id}}</mat-cell>\\n\\t</ng-container>\\n\\t<mat-header-row *matHeaderRowDef=\\"displayedColumns\\">\\n\\t</mat-header-row>\\n\\t<mat-row *matRowDef=\\"let row; columns: displayedColumns\\"></mat-row>\\n</mat-table>\\n```\\n\\n## DataSource\\n\\nFirst grab the template sort directive element with the `@ViewChild` annotation:\\n\\n``` \\n@ViewChild(MatSort, {static: false}) sort: MatSort;\\n```\\nThen configure the data source like this:\\n```\\nngAfterViewInit() {\\n    this.dataSource.sort = this.sort;\\n}\\n```\\n\\nWe have implemented the `AfterViewInit` interface like this:\\n```\\nexport class AppComponent implements OnInit, AfterViewInit {...}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Implementing a Minimal Angular Material Data Table\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-minimal-material-data-table-with-sorting\\">\\n</fs-link-preview>","html":"<p>Building on our previous <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table\'>minimal data table</a> adding sorting:</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/elephant-3728225_1920.jpg\'\\n      title=\'Material Data Table With Sorting\' \\n    description=\'Implementing a Minimal Angular Material Data Table\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://developer.fireflysemantics.com/tasks/tasks--angular--implementing-a-minimal-angular-material-data-table\'>\\n</fs-link-preview></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'imports\'>Imports</h2>\\n<pre><code>import { MatSortModule } from &#39;@angular/material/sort&#39;;\\nimport { BrowserAnimationsModule } from &quot;@angular/platform-browser/animations&quot;;\\nimport { ViewChild, AfterViewInit } from &#39;@angular/core&#39;;\\n</code></pre>\\n<p>Add <code>MatSortModule</code> and <code>BrowserAnimationsModule</code> to <code>app.module.ts</code>.</p>\\n<h2 id=\'templating\'>Templating</h2>\\n<p>Add the <code>matSort</code> and <code>mat-sort-header</code> directives:</p>\\n<pre><code>&lt;mat-table class=&quot;mat-elevation-z8&quot; [dataSource]=&quot;dataSource&quot; matSort&gt;\\n    &lt;ng-container matColumnDef=&quot;id&quot;&gt;\\n        &lt;mat-header-cell *matHeaderCellDef mat-sort-header&gt;ID&lt;/mat-header-cell&gt;\\n        &lt;mat-cell *matCellDef=&quot;let row;&quot;&gt;{{row.id}}&lt;/mat-cell&gt;\\n    &lt;/ng-container&gt;\\n    &lt;mat-header-row *matHeaderRowDef=&quot;displayedColumns&quot;&gt;\\n    &lt;/mat-header-row&gt;\\n    &lt;mat-row *matRowDef=&quot;let row; columns: displayedColumns&quot;&gt;&lt;/mat-row&gt;\\n&lt;/mat-table&gt;\\n</code></pre>\\n<h2 id=\'datasource\'>DataSource</h2>\\n<p>First grab the template sort directive element with the <code>@ViewChild</code> annotation:</p>\\n<pre><code>@ViewChild(MatSort, {static: false}) sort: MatSort;\\n</code></pre>\\n<p>Then configure the data source like this:</p>\\n<pre><code>ngAfterViewInit() {\\n    this.dataSource.sort = this.sort;\\n}\\n</code></pre>\\n<p>We have implemented the <code>AfterViewInit</code> interface like this:</p>\\n<pre><code>export class AppComponent implements OnInit, AfterViewInit {...}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Implementing a Minimal Angular Material Data Table\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-minimal-material-data-table-with-sorting\'>\\n</fs-link-preview></p>\\n","summary":"Implementing a Minimal Angular Material Data Table With Sorting.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/01/2021","headerImage":"elephants-5661842_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/elephants-5661842_1920.jpg","title":"Implementing a Minimal Angular Material Data Table With Sorting","readingTime":2,"wordCount":250},{"category":"Tasks","type":"task","md5":"c4f90d96a9c92a3339ae4bd6529a4b18","filename":"implementing-a-minimal-angular-material-data-table.md","path":"tasks/angular/implementing-a-minimal-angular-material-data-table.md","id":"tasks--angular--implementing-a-minimal-angular-material-data-table","markdown":"\\nWe need a minimal Angular material data table to play around with.\\n\\n# Approach\\n\\n## Module\\n\\nAdd the `@angular/material` table module and the `browser-animations-module` to `app.module.ts`:\\n\\n```\\nimport { MatTableModule} from \'@angular/material/table\';\\n@NgModule({\\n    imports: [ BrowserModule, MatTableModule, BrowserAnimationsModule ],\\n})\\n```\\n\\n## Theme\\n\\nThen add the indigo pink theme to `styles.css`.\\n```\\n@import \\"~@angular/material/prebuilt-themes/indigo-pink.css\\";\\n```\\n\\n## Imports\\n\\nIn `app.component.ts` import the `MatTableDataSource`:\\n```\\nimport { MatTableDataSource } from \\"@angular/material/table\\";\\n```\\n\\n## Data Source Type\\n\\nWe\u2019ll use a `Todo` class so implement that in `app.component.ts`:\\n\\n```\\nclass Todo {\\nid: string;\\ndescription: string;\\ncomplete: boolean;\\n}\\n```\\n\\n## Displayed Column\\n\\nWe will only display the `id` column at first, so we need this property:\\n```\\ndisplayedColumns =  [\'id\'];\\n```\\n\\nAdd more columns in the order that you want to display them to see more data.\\n\\n## Table Markup Definition\\n```\\n<mat-table class=\\"mat-elevation-z8\\" [dataSource]=\\"dataSource\\">\\n\\t<ng-container matColumnDef=\\"id\\">\\n\\t\\t<mat-header-cell *matHeaderCellDef>ID</mat-header-cell>\\n\\t\\t<mat-cell *matCellDef=\\"let row;\\">{{row.id}}</mat-cell>\\n\\t</ng-container>\\n\\t<mat-header-row *matHeaderRowDef=\\"displayedColumns\\">\\n\\t</mat-header-row>\\n\\t<mat-row *matRowDef=\\"let row; columns: displayedColumns\\"></mat-row>\\n</mat-table>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Implementing a Minimal Angular Material Data Table\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-minimal-material-data-table\\">\\n</fs-link-preview>\\n","html":"<p>We need a minimal Angular material data table to play around with.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'module\'>Module</h2>\\n<p>Add the <code>@angular/material</code> table module and the <code>browser-animations-module</code> to <code>app.module.ts</code>:</p>\\n<pre><code>import { MatTableModule} from &#39;@angular/material/table&#39;;\\n@NgModule({\\n    imports: [ BrowserModule, MatTableModule, BrowserAnimationsModule ],\\n})\\n</code></pre>\\n<h2 id=\'theme\'>Theme</h2>\\n<p>Then add the indigo pink theme to <code>styles.css</code>.</p>\\n<pre><code>@import &quot;~@angular/material/prebuilt-themes/indigo-pink.css&quot;;\\n</code></pre>\\n<h2 id=\'imports\'>Imports</h2>\\n<p>In <code>app.component.ts</code> import the <code>MatTableDataSource</code>:</p>\\n<pre><code>import { MatTableDataSource } from &quot;@angular/material/table&quot;;\\n</code></pre>\\n<h2 id=\'data-source-type\'>Data Source Type</h2>\\n<p>We\u2019ll use a <code>Todo</code> class so implement that in <code>app.component.ts</code>:</p>\\n<pre><code>class Todo {\\nid: string;\\ndescription: string;\\ncomplete: boolean;\\n}\\n</code></pre>\\n<h2 id=\'displayed-column\'>Displayed Column</h2>\\n<p>We will only display the <code>id</code> column at first, so we need this property:</p>\\n<pre><code>displayedColumns =  [&#39;id&#39;];\\n</code></pre>\\n<p>Add more columns in the order that you want to display them to see more data.</p>\\n<h2 id=\'table-markup-definition\'>Table Markup Definition</h2>\\n<pre><code>&lt;mat-table class=&quot;mat-elevation-z8&quot; [dataSource]=&quot;dataSource&quot;&gt;\\n    &lt;ng-container matColumnDef=&quot;id&quot;&gt;\\n        &lt;mat-header-cell *matHeaderCellDef&gt;ID&lt;/mat-header-cell&gt;\\n        &lt;mat-cell *matCellDef=&quot;let row;&quot;&gt;{{row.id}}&lt;/mat-cell&gt;\\n    &lt;/ng-container&gt;\\n    &lt;mat-header-row *matHeaderRowDef=&quot;displayedColumns&quot;&gt;\\n    &lt;/mat-header-row&gt;\\n    &lt;mat-row *matRowDef=&quot;let row; columns: displayedColumns&quot;&gt;&lt;/mat-row&gt;\\n&lt;/mat-table&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Implementing a Minimal Angular Material Data Table\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-minimal-material-data-table\'>\\n</fs-link-preview></p>\\n","summary":"Implementing a Minimal Angular Material Data Table.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/27/2021","headerImage":"elephant-3728225_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/elephant-3728225_1920.jpg","title":"Implementing a Minimal Angular Material Data Table","readingTime":2,"wordCount":223},{"category":"Tasks","type":"task","md5":"f97451d48e56b9a266d0695c90b0e006","filename":"importing-css-from-npm-packages-with-angular.md","path":"tasks/angular/importing-css-from-npm-packages-with-angular.md","id":"tasks--angular--importing-css-from-npm-packages-with-angular","markdown":"\\nWe have created a cross project css package `@fireflysemantics/css` and we want to import it into our Angular project `styles.scss` file.\\n\\n# Approach\\n\\nNote the use of `~`.  It is an alias for `node_modules`.\\n\\n```\\n@import \\"~@fireflysemantics/css/index.css\\"\\n```\\n\\nIt\'s also possible to include it using via `angular.json`.\\n\\nIn that case it should be added via the `styles` array.\\n\\nThe styles array ( `projects > architect > build > styles` looks looks like this with the Angular Material Indigo Pink theme added:\\n\\n```\\n\\"styles\\": [\\n  \\"./node_modules/@angular/material/prebuilt-themesindigo-pink.css\\",\\n  \\"src/styles.sass\\"\\n]\\n```\\n","html":"<p>We have created a cross project css package <code>@fireflysemantics/css</code> and we want to import it into our Angular project <code>styles.scss</code> file.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Note the use of <code>~</code>.  It is an alias for <code>node_modules</code>.</p>\\n<pre><code>@import &quot;~@fireflysemantics/css/index.css&quot;\\n</code></pre>\\n<p>It&#39;s also possible to include it using via <code>angular.json</code>.</p>\\n<p>In that case it should be added via the <code>styles</code> array.</p>\\n<p>The styles array ( <code>projects &gt; architect &gt; build &gt; styles</code> looks looks like this with the Angular Material Indigo Pink theme added:</p>\\n<pre><code>&quot;styles&quot;: [\\n  &quot;./node_modules/@angular/material/prebuilt-themesindigo-pink.css&quot;,\\n  &quot;src/styles.sass&quot;\\n]\\n</code></pre>\\n","summary":"Importing CSS from NPM Packages With Angular.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/20/2021","headerImage":"lights-5310589_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lights-5310589_1920.jpg","title":"Importing CSS from NPM Packages With Angular","readingTime":1,"wordCount":91},{"category":"Tasks","type":"task","md5":"bd0252021f3be64723f8dbb88bb46865","filename":"initializing-your-angular-reactive-form.md","path":"tasks/angular/initializing-your-angular-reactive-form.md","id":"tasks--angular--initializing-your-angular-reactive-form","markdown":"\\nWe have a form that captures a `Todo` `title` and `description` values. \\n\\nWe want to edit `Todo` instances, and therefore we need to initialize the form with the instance.\\n\\n# Approach\\n\\nImplement the form in the `AppComponent`:\\n\\n```\\nform: FormGroup = new FormGroup({\\n    title: new FormControl(\'\'),\\n    description: new FormControl(\'\')\\n})\\n```\\n\\nCreate the markup in `app.component.html`:\\n\\n```\\n<form [formGroup]=\'form\'>\\n<mat-form-field>\\n    <input matInput placeholder=\\"Title\\" \\n           formControlName=\\"title\\">\\n</mat-form-field>\\n<mat-form-field>\\n    <input matInput placeholder=\\"Description\\" \\n           formControlName=\\"description\\">\\n</mat-form-field>\\n</form>\\n```\\n\\n\\nInitialize form:\\n\\n```\\ninitializeForm() {\\n    this.form.setValue({\\n        title: \'Complete me\',\\n        description: \'Now!\'\\n    })\\n}\\nngOnInit() {\\n    this.initializeForm();\\n}\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Initializing Your Angular Reactive Form\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-initialize-form\\">\\n</fs-link-preview>","html":"<p>We have a form that captures a <code>Todo</code> <code>title</code> and <code>description</code> values. </p>\\n<p>We want to edit <code>Todo</code> instances, and therefore we need to initialize the form with the instance.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Implement the form in the <code>AppComponent</code>:</p>\\n<pre><code>form: FormGroup = new FormGroup({\\n    title: new FormControl(&#39;&#39;),\\n    description: new FormControl(&#39;&#39;)\\n})\\n</code></pre>\\n<p>Create the markup in <code>app.component.html</code>:</p>\\n<pre><code>&lt;form [formGroup]=&#39;form&#39;&gt;\\n&lt;mat-form-field&gt;\\n    &lt;input matInput placeholder=&quot;Title&quot; \\n           formControlName=&quot;title&quot;&gt;\\n&lt;/mat-form-field&gt;\\n&lt;mat-form-field&gt;\\n    &lt;input matInput placeholder=&quot;Description&quot; \\n           formControlName=&quot;description&quot;&gt;\\n&lt;/mat-form-field&gt;\\n&lt;/form&gt;\\n</code></pre>\\n<p>Initialize form:</p>\\n<pre><code>initializeForm() {\\n    this.form.setValue({\\n        title: &#39;Complete me&#39;,\\n        description: &#39;Now!&#39;\\n    })\\n}\\nngOnInit() {\\n    this.initializeForm();\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Initializing Your Angular Reactive Form\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-initialize-form\'>\\n</fs-link-preview></p>\\n","summary":"Initializing Your Angular Reactive Form.","tags":["Angular","Angular Material","JavaScript","TypeScript","RxJs"],"tagString":"Angular, Angular Material, JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"11/28/2021","headerImage":"dandelion-6798513_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-6798513_1920.jpg","title":"Initializing Your Angular Reactive Form","readingTime":1,"wordCount":131},{"category":"Tasks","type":"task","md5":"01a0b8a2086d0d47fd7a54840644a340","filename":"integrating-stripe-elements-with-angular.md","path":"tasks/angular/integrating-stripe-elements-with-angular.md","id":"tasks--angular--integrating-stripe-elements-with-angular","markdown":"\\nDuring checkout we want to obtain a checkout token from Stripe using Stripe Elements and Angular.\\n\\n# Approach\\n\\n## Stackblitz\\n\\nGo to stackblitz and start a brand new Angular project. Delete the `hello.component.ts` and remove it from `app.module.ts`.\\n\\nAlso remove the `<hello name=\u201d{{ name }}\u201d></hello>` from `app.component.html`.\\n\\n# Dependencies\\n\\nAdd [@fireflysemantics/angular-stripe-service\\n](https://www.npmjs.com/package/@fireflysemantics/angular-stripe-service) to the Stackblitz dependencies.\\n\\n\\n## Initialize Stripe Elements\\n\\nConstructor inject the `AngularStripeService` into `app.component.ts`.\\n\\n```\\nimport { AngularStripeService } from \'@fireflysemantics/angular-stripe-service\';\\nconstructor(\\n    private cd: ChangeDetectorRef,\\n    private stripeService:AngularStripeService) {}\\n```\\n\\n## Initialize stripe elements:\\n```\\nngAfterViewInit() {\\nthis.stripeService.setPublishableKey(\'pk_test_2syov9fTMRwOxYG97AAXbOgt008X6NL46o\').then(\\nstripe=> {\\n   this.stripe = stripe;\\n   const elements = stripe.elements();\\n   this.card = elements.create(\'card\');\\n   this.card.mount(this.cardInfo.nativeElement);\\n   this.card.addEventListener(\'change\', this.cardHandler);\\n});\\n}\\n```\\n\\nNote that key `pk_test_2syov9fTMRwOxYG97AAXbOgt008X6NL46o` is a temporary key used for this demo. You will need to provide your own.\\n\\n## Import the Form Module\\nIn `app.module.ts`:\\n```\\nimport {FormsModule} from \'@angular/forms\';\\n```\\n\\n\\n## Markup\\n\\nPut the following markup in app.component.html:\\n```\\n<form #checkout=\\"ngForm\\" (ngSubmit)=\\"onSubmit(checkout)\\" class=\\"checkout\\">\\n<div class=\\"form-row\\">\\n<label for=\\"card-info\\">Card Info</label>\\n<div id=\\"card-info\\" #cardInfo></div>\\n<div id=\\"card-errors\\" role=\\"alert\\" *ngIf=\\"error\\">{{ error }}</div></div>\\n<button type=\\"submit\\">Pay $5</button>\\n</form>\\n```\\n\\n## CSS\\nAdd the CSS to app.component.css:\\n```\\nform.checkout {\\n    max-width: 500px;\\n    margin: 2rem auto;\\n    text-align: center;\\n    border: 2px solid #eee;\\n    border-radius: 8px;\\n    padding: 1rem 2rem;\\n    background: white;\\n    font-family: monospace;\\n    color: #525252;\\n    font-size: 1.1rem;\\n}\\nform.checkout button {\\n    padding: 0.5rem 1rem;\\n    color: white;\\n    background: coral;\\n    border: none;\\n    border-radius: 4px;\\n    margin-top: 1rem;\\n}\\nform.checkout button:active {\\n    background: rgb(165, 76, 43);\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Integrating Stripe Elements with Angular\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-stripe-integration-fs\\">\\n</fs-link-preview>\\n\\n# Analysis\\n\\nThe `@fireflysemantics/angular-stripe-service` service injects the Stripe scripts for us and waits for it to load before attempting to initialize elements.\\n\\nThe reason this is important is that if our component containing the Stripe form is loaded before Stripe has a chance to initialize elements then the form will not paint correctly.\\n\\nIn other words the Stripe API download and subsequent elements construction is racing the construction of the credit card form component.\\n\\nIf the form component wins that race, the component does not get constructed right, because elements is not yet available.","html":"<p>During checkout we want to obtain a checkout token from Stripe using Stripe Elements and Angular.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'stackblitz\'>Stackblitz</h2>\\n<p>Go to stackblitz and start a brand new Angular project. Delete the <code>hello.component.ts</code> and remove it from <code>app.module.ts</code>.</p>\\n<p>Also remove the <code>&lt;hello name=\u201d{{ name }}\u201d&gt;&lt;/hello&gt;</code> from <code>app.component.html</code>.</p>\\n<h1 id=\'dependencies\'>Dependencies</h1>\\n<p>Add <a href=\'https://www.npmjs.com/package/@fireflysemantics/angular-stripe-service\'>@fireflysemantics/angular-stripe-service\\n</a> to the Stackblitz dependencies.</p>\\n<h2 id=\'initialize-stripe-elements\'>Initialize Stripe Elements</h2>\\n<p>Constructor inject the <code>AngularStripeService</code> into <code>app.component.ts</code>.</p>\\n<pre><code>import { AngularStripeService } from &#39;@fireflysemantics/angular-stripe-service&#39;;\\nconstructor(\\n    private cd: ChangeDetectorRef,\\n    private stripeService:AngularStripeService) {}\\n</code></pre>\\n<h2 id=\'initialize-stripe-elements-1\'>Initialize stripe elements:</h2>\\n<pre><code>ngAfterViewInit() {\\nthis.stripeService.setPublishableKey(&#39;pk_test_2syov9fTMRwOxYG97AAXbOgt008X6NL46o&#39;).then(\\nstripe=&gt; {\\n   this.stripe = stripe;\\n   const elements = stripe.elements();\\n   this.card = elements.create(&#39;card&#39;);\\n   this.card.mount(this.cardInfo.nativeElement);\\n   this.card.addEventListener(&#39;change&#39;, this.cardHandler);\\n});\\n}\\n</code></pre>\\n<p>Note that key <code>pk_test_2syov9fTMRwOxYG97AAXbOgt008X6NL46o</code> is a temporary key used for this demo. You will need to provide your own.</p>\\n<h2 id=\'import-the-form-module\'>Import the Form Module</h2>\\n<p>In <code>app.module.ts</code>:</p>\\n<pre><code>import {FormsModule} from &#39;@angular/forms&#39;;\\n</code></pre>\\n<h2 id=\'markup\'>Markup</h2>\\n<p>Put the following markup in app.component.html:</p>\\n<pre><code>&lt;form #checkout=&quot;ngForm&quot; (ngSubmit)=&quot;onSubmit(checkout)&quot; class=&quot;checkout&quot;&gt;\\n&lt;div class=&quot;form-row&quot;&gt;\\n&lt;label for=&quot;card-info&quot;&gt;Card Info&lt;/label&gt;\\n&lt;div id=&quot;card-info&quot; #cardInfo&gt;&lt;/div&gt;\\n&lt;div id=&quot;card-errors&quot; role=&quot;alert&quot; *ngIf=&quot;error&quot;&gt;{{ error }}&lt;/div&gt;&lt;/div&gt;\\n&lt;button type=&quot;submit&quot;&gt;Pay $5&lt;/button&gt;\\n&lt;/form&gt;\\n</code></pre>\\n<h2 id=\'css\'>CSS</h2>\\n<p>Add the CSS to app.component.css:</p>\\n<pre><code>form.checkout {\\n    max-width: 500px;\\n    margin: 2rem auto;\\n    text-align: center;\\n    border: 2px solid #eee;\\n    border-radius: 8px;\\n    padding: 1rem 2rem;\\n    background: white;\\n    font-family: monospace;\\n    color: #525252;\\n    font-size: 1.1rem;\\n}\\nform.checkout button {\\n    padding: 0.5rem 1rem;\\n    color: white;\\n    background: coral;\\n    border: none;\\n    border-radius: 4px;\\n    margin-top: 1rem;\\n}\\nform.checkout button:active {\\n    background: rgb(165, 76, 43);\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Integrating Stripe Elements with Angular\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-stripe-integration-fs\'>\\n</fs-link-preview></p>\\n<h1 id=\'analysis\'>Analysis</h1>\\n<p>The <code>@fireflysemantics/angular-stripe-service</code> service injects the Stripe scripts for us and waits for it to load before attempting to initialize elements.</p>\\n<p>The reason this is important is that if our component containing the Stripe form is loaded before Stripe has a chance to initialize elements then the form will not paint correctly.</p>\\n<p>In other words the Stripe API download and subsequent elements construction is racing the construction of the credit card form component.</p>\\n<p>If the form component wins that race, the component does not get constructed right, because elements is not yet available.</p>\\n","summary":"Integrating Stripe Elements with Angular.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/22/2021","headerImage":"molecule-2082634_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/molecule-2082634_1280.jpg","title":"Integrating Stripe Elements with Angular","readingTime":3,"wordCount":414},{"category":"Tasks","type":"task","md5":"f558de48a600f370545d3436918d838e","filename":"listening-to-enter-events-in-angular-material-reactive-input-fields.md","path":"tasks/angular/listening-to-enter-events-in-angular-material-reactive-input-fields.md","id":"tasks--angular--listening-to-enter-events-in-angular-material-reactive-input-fields","markdown":"\\nWe want to listen to keyboard enter events on an Angular Material reactive input field, calling `addTodo()` when the `enter` event occurs.  The field is bound to a reactive form control.  When the `enter` event occurs, we reset / clear the `FormControl` value.\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Listening to Enter Events in Angular Material Reactive Input Fields\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-input-with-form-reactive-control-with-enter\\">\\n</fs-link-preview>\\n","html":"<p>We want to listen to keyboard enter events on an Angular Material reactive input field, calling <code>addTodo()</code> when the <code>enter</code> event occurs.  The field is bound to a reactive form control.  When the <code>enter</code> event occurs, we reset / clear the <code>FormControl</code> value.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Listening to Enter Events in Angular Material Reactive Input Fields\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-input-with-form-reactive-control-with-enter\'>\\n</fs-link-preview></p>\\n","summary":"Listening to Enter Events in Angular Material Reactive Input Fields.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/14/2021","headerImage":"elephant-2870777_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/elephant-2870777_1920.jpg","title":"Listening to Enter Events in Angular Material Reactive Input Fields","readingTime":1,"wordCount":89},{"category":"Tasks","type":"task","md5":"cec26e8ffb1d2d76c6e9ea573ec7b549","filename":"listening-to-enter-input-events-with-angular.md","path":"tasks/angular/listening-to-enter-input-events-with-angular.md","id":"tasks--angular--listening-to-enter-input-events-with-angular","markdown":"\\nWe have an `<input>` element in our template and when we press Enter we want to trigger the component method `save($event)`.\\n\\n# Approach\\n\\nBind the `save($event)` method to the `keydown.enter` event:\\n\\n```\\n<input (keydown.enter)=\\"save($event)\\">\\n```\\n\\nImplement the `save(event)`:\\n\\n```\\nexport class SaveComponent { \\n   save() {\\n    console.log(\\"You entered: \\", event.target.value);\\n    }\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Listening to Enter Events on Input Text Elements With Angular\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-keydown-enter\\">\\n</fs-link-preview>","html":"<p>We have an <code>&lt;input&gt;</code> element in our template and when we press Enter we want to trigger the component method <code>save($event)</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Bind the <code>save($event)</code> method to the <code>keydown.enter</code> event:</p>\\n<pre><code>&lt;input (keydown.enter)=&quot;save($event)&quot;&gt;\\n</code></pre>\\n<p>Implement the <code>save(event)</code>:</p>\\n<pre><code>export class SaveComponent { \\n   save() {\\n    console.log(&quot;You entered: &quot;, event.target.value);\\n    }\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Listening to Enter Events on Input Text Elements With Angular\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-keydown-enter\'>\\n</fs-link-preview></p>\\n","summary":"Listening to Enter Events on Input Text Elements With Angular.","tags":["Angular","JavaScript","TypeScript","RxJs"],"tagString":"Angular, JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"2/15/2021","headerImage":"thailand-142982_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/thailand-142982_1920.jpg","title":"Listening to Enter Events on Input Text Elements With Angular","readingTime":1,"wordCount":94},{"category":"Tasks","type":"task","md5":"e6adb814425e704e68f6d7e9f42d281e","filename":"loading-json-on-stackblitz-with-angular.md","path":"tasks/angular/loading-json-on-stackblitz-with-angular.md","id":"tasks--angular--loading-json-on-stackblitz-with-angular","markdown":"\\nThe component `src/app/app.component.ts` wants to import `src/app/data.json`.\\n\\n# Approach\\n\\n## Configuration\\n\\nWithin `tsconfig.json` under `compilerOptions` set `resolveJsonModule` to `true`. \\n\\nIn Angular 10+ the `compilerOptions` are located in `tsconfig.app.json`.\\n\\nNote that Angular automatically parses the JSON for us, so we do not need to do `JSON.parse(...)`.\\n\\n```\\nimport * as data from \'./data.json\';\\nexport class AppComponent  {\\n    json:any = data;\\n    constructor() {\\n        console.log(json.default)\\n    }\\n}\\n```\\n\\nThe `default` property on the imported `data` json module contains the data.","html":"<p>The component <code>src/app/app.component.ts</code> wants to import <code>src/app/data.json</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'configuration\'>Configuration</h2>\\n<p>Within <code>tsconfig.json</code> under <code>compilerOptions</code> set <code>resolveJsonModule</code> to <code>true</code>. </p>\\n<p>In Angular 10+ the <code>compilerOptions</code> are located in <code>tsconfig.app.json</code>.</p>\\n<p>Note that Angular automatically parses the JSON for us, so we do not need to do <code>JSON.parse(...)</code>.</p>\\n<pre><code>import * as data from &#39;./data.json&#39;;\\nexport class AppComponent  {\\n    json:any = data;\\n    constructor() {\\n        console.log(json.default)\\n    }\\n}\\n</code></pre>\\n<p>The <code>default</code> property on the imported <code>data</code> json module contains the data.</p>\\n","summary":"Importing JSON with Angular.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/18/2021","headerImage":"raindrops-574971_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/raindrops-574971_1920.jpg","title":"Importing JSON with Angular","readingTime":1,"wordCount":83},{"category":"Tasks","type":"task","md5":"969c8f7aa47b420a98bde2af4304984c","filename":"logging-sass-variables-within-angular-projects.md","path":"tasks/angular/logging-sass-variables-within-angular-projects.md","id":"tasks--angular--logging-sass-variables-within-angular-projects","markdown":"\\nWe have defined a `SASS` variable in our angular project.\\n\\n```\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n```\\n\\nAnd we want to know what it contains.\\n\\n# Approach\\n\\n```\\n$theme-warn: mat.define-palette(mat.$orange-palette);\\n@debug $theme-warn;\\n```\\n\\nIn the below demo open `src/theme.scss`.\\n\\nIn the below Stackblitz demo open src/theme.scss .\\n\\nCheck the console. The content of `$theme-warn` has been logged.\\n\\n```\\ncss:16 DEBUG: (50: #fff3e0, 100: #ffe0b2, 200: #ffcc80, 300: #ffb74d, 400: #ffa726, 500: #ff9800, 600: #fb8c00, 700: #f57c00, 800: #ef6c00, 900: #e65100, A100: #ffd180, A200: #ffab40, A400: #ff9100, A700: #ff6d00, contrast: (50: rgba(0, 0, 0, 0.87), 100: rgba(0, 0, 0, 0.87), 200: rgba(0, 0, 0, 0.87), 300: rgba(0, 0, 0, 0.87), 400: rgba(0, 0, 0, 0.87), 500: rgba(0, 0, 0, 0.87), 600: rgba(0, 0, 0, 0.87), 700: rgba(0, 0, 0, 0.87), 800: white, 900: white, A100: rgba(0, 0, 0, 0.87), A200: rgba(0, 0, 0, 0.87), A400: rgba(0, 0, 0, 0.87), A700: black), default: #ff9800, lighter: #ffe0b2, darker: #f57c00, text: #ff9800, default-contrast: rgba(0, 0, 0, 0.87), lighter-contrast: rgba(0, 0, 0, 0.87), darker-contrast: rgba(0, 0, 0, 0.87), \\"50-contrast\\": rgba(0, 0, 0, 0.87), \\"100-contrast\\": rgba(0, 0, 0, 0.87), \\"200-contrast\\": rgba(0, 0, 0, 0.87), \\"300-contrast\\": rgba(0, 0, 0, 0.87), \\"400-contrast\\": rgba(0, 0, 0, 0.87), \\"500-contrast\\": rgba(0, 0, 0, 0.87), \\"600-contrast\\": rgba(0, 0, 0, 0.87), \\"700-contrast\\": rgba(0, 0, 0, 0.87), \\"800-contrast\\": white, \\"900-contrast\\": white, \\"A100-contrast\\": rgba(0, 0, 0, 0.87), \\"A200-contrast\\": rgba(0, 0, 0, 0.87), \\"A400-contrast\\": rgba(0, 0, 0, 0.87), \\"A700-contrast\\": black, \\"contrast-contrast\\": null)\\nDEBUG: (50: #fff3e0, 100: #ffe0b2, 200: #ffcc80, 300: #ffb74d, 400: #ffa726, 500: #ff9800, 600: #fb8c00, 700: #f57c00, 800: #ef6c00, 900: #e65100, A100: #ffd180, A200: #ffab40, A400: #ff9100, A700: #ff6d00, contrast: (50: rgba(0, 0, 0, 0.87), 100: rgba(0, 0, 0, 0.87), 200: rgba(0, 0, 0, 0.87), 300: rgba(0, 0, 0, 0.87), 400: rgba(0, 0, 0, 0.87), 500: rgba(0, 0, 0, 0.87), 600: rgba(0, 0, 0, 0.87), 700: rgba(0, 0, 0, 0.87), 800: white, 900: white, A100: rgba(0, 0, 0, 0.87), A200: rgba(0, 0, 0, 0.87), A400: rgba(0, 0, 0, 0.87), A700: black), default: #ff9800, lighter: #ffe0b2, darker: #f57c00, text: #ff9800, default-contrast: rgba(0, 0, 0, 0.87), lighter-contrast: rgba(0, 0, 0, 0.87), darker-contrast: rgba(0, 0, 0, 0.87), \\"50-contrast\\": rgba(0, 0, 0, 0.87), \\"100-contrast\\": rgba(0, 0, 0, 0.87), \\"200-contrast\\": rgba(0, 0, 0, 0.87), \\"300-contrast\\": rgba(0, 0, 0, 0.87), \\"400-contrast\\": rgba(0, 0, 0, 0.87), \\"500-contrast\\": rgba(0, 0, 0, 0.87), \\"600-contrast\\": rgba(0, 0, 0, 0.87), \\"700-contrast\\": rgba(0, 0, 0, 0.87), \\"800-contrast\\": white, \\"900-contrast\\": white, \\"A100-contrast\\": rgba(0, 0, 0, 0.87), \\"A200-contrast\\": rgba(0, 0, 0, 0.87), \\"A400-contrast\\": rgba(0, 0, 0, 0.87), \\"A700-contrast\\": black, \\"contrast-contrast\\": null)\\n\u2714 Browser application bundle generation complete\\n```\\n\\nOne thing we notice about this is that the entire map contained in one line. If we want separated key value pairs we can use [Firefly Semantics SASS Logger](https://www.npmjs.com/package/@fireflysemantics/sass-logger).\\n\\nAdd the dependency.\\n\\n```\\n\\"@fireflysemantics/sass-logger\\": \\"*\\"\\n```\\n\\nAnd import it into styles.scss like this.\\n```\\n@use \'@fireflysemantics/sass-logger\' as logger;\\n```\\n\\nWe can now generate the structure like this:\\n```\\n$result: logger.pretty-map($theme);\\n```\\n\\nAnd when we output that with `@debug $result` we get this.\\n```\\n         50: #fff3e0,  \\n         100: #ffe0b2,  \\n         200: #ffcc80,  \\n         300: #ffb74d,  \\n         400: #ffa726,  \\n         500: #ff9800,  \\n         600: #fb8c00,  \\n         700: #f57c00,  \\n         800: #ef6c00,  \\n         900: #e65100,  \\n         A100: #ffd180,  \\n         A200: #ffab40,  \\n         A400: #ff9100,  \\n         A700: #ff6d00,  \\n contrast: (  \\n         50: rgba(0, 0, 0, 0.87),  \\n         100: rgba(0, 0, 0, 0.87),  \\n         200: rgba(0, 0, 0, 0.87),  \\n         300: rgba(0, 0, 0, 0.87),  \\n         400: rgba(0, 0, 0, 0.87),  \\n         500: rgba(0, 0, 0, 0.87),  \\n         600: rgba(0, 0, 0, 0.87),  \\n         700: rgba(0, 0, 0, 0.87),  \\n         800: white,  \\n         900: white,  \\n         A100: rgba(0, 0, 0, 0.87),  \\n         A200: rgba(0, 0, 0, 0.87),  \\n         A400: rgba(0, 0, 0, 0.87),  \\n         A700: black,  \\n ),  \\n         default: #ff9800,  \\n         lighter: #ffe0b2,  \\n         darker: #f57c00,  \\n         text: #ff9800,  \\n         default-contrast: rgba(0, 0, 0, 0.87),  \\n         lighter-contrast: rgba(0, 0, 0, 0.87),  \\n         darker-contrast: rgba(0, 0, 0, 0.87),  \\n         50-contrast: rgba(0, 0, 0, 0.87),  \\n         100-contrast: rgba(0, 0, 0, 0.87),  \\n         200-contrast: rgba(0, 0, 0, 0.87),  \\n         300-contrast: rgba(0, 0, 0, 0.87),  \\n         400-contrast: rgba(0, 0, 0, 0.87),  \\n         500-contrast: rgba(0, 0, 0, 0.87),  \\n         600-contrast: rgba(0, 0, 0, 0.87),  \\n         700-contrast: rgba(0, 0, 0, 0.87),  \\n         800-contrast: white,  \\n         900-contrast: white,  \\n         A100-contrast: rgba(0, 0, 0, 0.87),  \\n         A200-contrast: rgba(0, 0, 0, 0.87),  \\n         A400-contrast: rgba(0, 0, 0, 0.87),  \\n         A700-contrast: black,  \\n         contrast-contrast: ,\\n```\\n\\n# Demo\\n\\nThis logs a formatted result using @fireflysemantics/sass-logger\xa0.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Logging SASS Maps within @fireflysemantics/sass-logger\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk-66ycqu\\">\\n</fs-link-preview>\\n\\nThis demo logs the result all in one line.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Logging SASS Variables within Angular Projects\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk-nkrnej?file=src%2Fstyles.scss\\">\\n</fs-link-preview>\\n\\n\\n","html":"<p>We have defined a <code>SASS</code> variable in our angular project.</p>\\n<pre><code>$theme-warn: mat.define-palette(mat.$orange-palette);\\n</code></pre>\\n<p>And we want to know what it contains.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>$theme-warn: mat.define-palette(mat.$orange-palette);\\n@debug $theme-warn;\\n</code></pre>\\n<p>In the below demo open <code>src/theme.scss</code>.</p>\\n<p>In the below Stackblitz demo open src/theme.scss .</p>\\n<p>Check the console. The content of <code>$theme-warn</code> has been logged.</p>\\n<pre><code>css:16 DEBUG: (50: #fff3e0, 100: #ffe0b2, 200: #ffcc80, 300: #ffb74d, 400: #ffa726, 500: #ff9800, 600: #fb8c00, 700: #f57c00, 800: #ef6c00, 900: #e65100, A100: #ffd180, A200: #ffab40, A400: #ff9100, A700: #ff6d00, contrast: (50: rgba(0, 0, 0, 0.87), 100: rgba(0, 0, 0, 0.87), 200: rgba(0, 0, 0, 0.87), 300: rgba(0, 0, 0, 0.87), 400: rgba(0, 0, 0, 0.87), 500: rgba(0, 0, 0, 0.87), 600: rgba(0, 0, 0, 0.87), 700: rgba(0, 0, 0, 0.87), 800: white, 900: white, A100: rgba(0, 0, 0, 0.87), A200: rgba(0, 0, 0, 0.87), A400: rgba(0, 0, 0, 0.87), A700: black), default: #ff9800, lighter: #ffe0b2, darker: #f57c00, text: #ff9800, default-contrast: rgba(0, 0, 0, 0.87), lighter-contrast: rgba(0, 0, 0, 0.87), darker-contrast: rgba(0, 0, 0, 0.87), &quot;50-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;100-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;200-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;300-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;400-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;500-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;600-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;700-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;800-contrast&quot;: white, &quot;900-contrast&quot;: white, &quot;A100-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A200-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A400-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A700-contrast&quot;: black, &quot;contrast-contrast&quot;: null)\\nDEBUG: (50: #fff3e0, 100: #ffe0b2, 200: #ffcc80, 300: #ffb74d, 400: #ffa726, 500: #ff9800, 600: #fb8c00, 700: #f57c00, 800: #ef6c00, 900: #e65100, A100: #ffd180, A200: #ffab40, A400: #ff9100, A700: #ff6d00, contrast: (50: rgba(0, 0, 0, 0.87), 100: rgba(0, 0, 0, 0.87), 200: rgba(0, 0, 0, 0.87), 300: rgba(0, 0, 0, 0.87), 400: rgba(0, 0, 0, 0.87), 500: rgba(0, 0, 0, 0.87), 600: rgba(0, 0, 0, 0.87), 700: rgba(0, 0, 0, 0.87), 800: white, 900: white, A100: rgba(0, 0, 0, 0.87), A200: rgba(0, 0, 0, 0.87), A400: rgba(0, 0, 0, 0.87), A700: black), default: #ff9800, lighter: #ffe0b2, darker: #f57c00, text: #ff9800, default-contrast: rgba(0, 0, 0, 0.87), lighter-contrast: rgba(0, 0, 0, 0.87), darker-contrast: rgba(0, 0, 0, 0.87), &quot;50-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;100-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;200-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;300-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;400-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;500-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;600-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;700-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;800-contrast&quot;: white, &quot;900-contrast&quot;: white, &quot;A100-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A200-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A400-contrast&quot;: rgba(0, 0, 0, 0.87), &quot;A700-contrast&quot;: black, &quot;contrast-contrast&quot;: null)\\n\u2714 Browser application bundle generation complete\\n</code></pre>\\n<p>One thing we notice about this is that the entire map contained in one line. If we want separated key value pairs we can use <a href=\'https://www.npmjs.com/package/@fireflysemantics/sass-logger\'>Firefly Semantics SASS Logger</a>.</p>\\n<p>Add the dependency.</p>\\n<pre><code>&quot;@fireflysemantics/sass-logger&quot;: &quot;*&quot;\\n</code></pre>\\n<p>And import it into styles.scss like this.</p>\\n<pre><code>@use &#39;@fireflysemantics/sass-logger&#39; as logger;\\n</code></pre>\\n<p>We can now generate the structure like this:</p>\\n<pre><code>$result: logger.pretty-map($theme);\\n</code></pre>\\n<p>And when we output that with <code>@debug $result</code> we get this.</p>\\n<pre><code>         50: #fff3e0,  \\n         100: #ffe0b2,  \\n         200: #ffcc80,  \\n         300: #ffb74d,  \\n         400: #ffa726,  \\n         500: #ff9800,  \\n         600: #fb8c00,  \\n         700: #f57c00,  \\n         800: #ef6c00,  \\n         900: #e65100,  \\n         A100: #ffd180,  \\n         A200: #ffab40,  \\n         A400: #ff9100,  \\n         A700: #ff6d00,  \\n contrast: (  \\n         50: rgba(0, 0, 0, 0.87),  \\n         100: rgba(0, 0, 0, 0.87),  \\n         200: rgba(0, 0, 0, 0.87),  \\n         300: rgba(0, 0, 0, 0.87),  \\n         400: rgba(0, 0, 0, 0.87),  \\n         500: rgba(0, 0, 0, 0.87),  \\n         600: rgba(0, 0, 0, 0.87),  \\n         700: rgba(0, 0, 0, 0.87),  \\n         800: white,  \\n         900: white,  \\n         A100: rgba(0, 0, 0, 0.87),  \\n         A200: rgba(0, 0, 0, 0.87),  \\n         A400: rgba(0, 0, 0, 0.87),  \\n         A700: black,  \\n ),  \\n         default: #ff9800,  \\n         lighter: #ffe0b2,  \\n         darker: #f57c00,  \\n         text: #ff9800,  \\n         default-contrast: rgba(0, 0, 0, 0.87),  \\n         lighter-contrast: rgba(0, 0, 0, 0.87),  \\n         darker-contrast: rgba(0, 0, 0, 0.87),  \\n         50-contrast: rgba(0, 0, 0, 0.87),  \\n         100-contrast: rgba(0, 0, 0, 0.87),  \\n         200-contrast: rgba(0, 0, 0, 0.87),  \\n         300-contrast: rgba(0, 0, 0, 0.87),  \\n         400-contrast: rgba(0, 0, 0, 0.87),  \\n         500-contrast: rgba(0, 0, 0, 0.87),  \\n         600-contrast: rgba(0, 0, 0, 0.87),  \\n         700-contrast: rgba(0, 0, 0, 0.87),  \\n         800-contrast: white,  \\n         900-contrast: white,  \\n         A100-contrast: rgba(0, 0, 0, 0.87),  \\n         A200-contrast: rgba(0, 0, 0, 0.87),  \\n         A400-contrast: rgba(0, 0, 0, 0.87),  \\n         A700-contrast: black,  \\n         contrast-contrast: ,\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>This logs a formatted result using @fireflysemantics/sass-logger\xa0.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Logging SASS Maps within @fireflysemantics/sass-logger\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk-66ycqu\'>\\n</fs-link-preview></p>\\n<p>This demo logs the result all in one line.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Logging SASS Variables within Angular Projects\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk-nkrnej?file=src%2Fstyles.scss\'>\\n</fs-link-preview></p>\\n","summary":"Logging SASS Variables within Angular Projects.","tags":["Angular","JavaScript","SASS"],"tagString":"Angular, JavaScript, SASS","author":"Ole Ersoy","date":"3/22/2021","headerImage":"dragonfly-1587252_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dragonfly-1587252_1920.jpg","title":"Logging SASS Variables within Angular Projects","readingTime":5,"wordCount":983},{"category":"Tasks","type":"task","md5":"c3400dff8eb6ed73845d855ce2d85bf0","filename":"minimal-angular-google-analytics-service.md","path":"tasks/angular/minimal-angular-google-analytics-service.md","id":"tasks--angular--minimal-angular-google-analytics-service","markdown":"\\nWe need a minimal service for tracking router navigation events with Google Analytics.\\n\\n\\n# Approach\\n\\nFirst setup a property in Google Analytics and obtain the tracking code for it. \\n\\nIt will give you something like this when clicking on Tracking Info > Tracking Code in the admin area of Google Analytics. It should look like this:\\n\\n```\\n\x3c!-- Global site tag (gtag.js) - Google Analytics --\x3e\\n<script async src=\\"https://www.googletagmanager.com/gtag/js?id=UA-140430388-3\\"><\/script>\\n<script>\\n  window.dataLayer = window.dataLayer || [];\\n  function gtag(){dataLayer.push(arguments);}\\n  gtag(\'js\', new Date());\\ngtag(\'config\', \'UA-140430388-3\');\\n<\/script>\\n```\\n\\nAdd the script to the `head` tag in `index.html` of your Angular project.\\n\\n## Service\\n\\nFirst declare `gtag` in `app.component.ts`. This lets Typescript know that the gtag function has been defined elsewhere:\\n```\\ndeclare var gtag\\n```\\n\\nThe service looks like this:\\n\\n```\\n/**\\n * Google Analytics.\\n */\\nimport { Injectable } from \'@angular/core\';\\nimport { Router, NavigationEnd } from \'@angular/router\';\\nimport { filter, map } from \'rxjs/operators\';\\n\\ndeclare var gtag\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AnalyticsService {\\n\\n  constructor(private r: Router) {\\n    const navEndEvents =\\n      r.events.pipe(\\n        filter(event => event instanceof NavigationEnd),\\n        map((event: NavigationEnd) => event.url))\\n\\n    navEndEvents.subscribe(url => {\\n      if (gtag) {\\n        gtag(\'event\', url, {\\n          \'event_category\': \'APP_NAVIGATION\'\\n        })\\n      }\\n    })\\n  }\\n}\\n```\\n\\nWhenever the user navigates the `navEndEvents` subscription will fire and track the navigation event for us.","html":"<p>We need a minimal service for tracking router navigation events with Google Analytics.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First setup a property in Google Analytics and obtain the tracking code for it. </p>\\n<p>It will give you something like this when clicking on Tracking Info &gt; Tracking Code in the admin area of Google Analytics. It should look like this:</p>\\n<pre><code>&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;\\n&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UA-140430388-3&quot;&gt;&lt;/script&gt;\\n&lt;script&gt;\\n  window.dataLayer = window.dataLayer || [];\\n  function gtag(){dataLayer.push(arguments);}\\n  gtag(&#39;js&#39;, new Date());\\ngtag(&#39;config&#39;, &#39;UA-140430388-3&#39;);\\n&lt;/script&gt;\\n</code></pre>\\n<p>Add the script to the <code>head</code> tag in <code>index.html</code> of your Angular project.</p>\\n<h2 id=\'service\'>Service</h2>\\n<p>First declare <code>gtag</code> in <code>app.component.ts</code>. This lets Typescript know that the gtag function has been defined elsewhere:</p>\\n<pre><code>declare var gtag\\n</code></pre>\\n<p>The service looks like this:</p>\\n<pre><code>/**\\n * Google Analytics.\\n */\\nimport { Injectable } from &#39;@angular/core&#39;;\\nimport { Router, NavigationEnd } from &#39;@angular/router&#39;;\\nimport { filter, map } from &#39;rxjs/operators&#39;;\\n\\ndeclare var gtag\\n\\n@Injectable({\\n  providedIn: &#39;root&#39;\\n})\\nexport class AnalyticsService {\\n\\n  constructor(private r: Router) {\\n    const navEndEvents =\\n      r.events.pipe(\\n        filter(event =&gt; event instanceof NavigationEnd),\\n        map((event: NavigationEnd) =&gt; event.url))\\n\\n    navEndEvents.subscribe(url =&gt; {\\n      if (gtag) {\\n        gtag(&#39;event&#39;, url, {\\n          &#39;event_category&#39;: &#39;APP_NAVIGATION&#39;\\n        })\\n      }\\n    })\\n  }\\n}\\n</code></pre>\\n<p>Whenever the user navigates the <code>navEndEvents</code> subscription will fire and track the navigation event for us.</p>\\n","summary":"Minimal Google Analytics Service.","tags":["Google Analytics","Angular","JavaScript","TypeScript"],"tagString":"Google Analytics, Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/14/2021","headerImage":"spider-2313079_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/spider-2313079_1920.jpg","title":"Minimal Google Analytics Service","readingTime":2,"wordCount":210},{"category":"Tasks","type":"task","md5":"f8b14d4db3a6a34d89ab3a4c229800bf","filename":"minimal-angular-material-stepper-implementation.md","path":"tasks/angular/minimal-angular-material-stepper-implementation.md","id":"tasks--angular--minimal-angular-material-stepper-implementation","markdown":"\\nWe need a minimal Angular Material stepper reference point that demos basic capabilities.\\n\\n# Approach\\n\\nIn the below demo, click toggle to continue to step 2 which is optional per the optional directive.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Minimal Angular Material Stepper Implementation\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-mat-stepper-demo-fs\\">\\n</fs-link-preview>\\n","html":"<p>We need a minimal Angular Material stepper reference point that demos basic capabilities.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In the below demo, click toggle to continue to step 2 which is optional per the optional directive.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Minimal Angular Material Stepper Implementation\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-mat-stepper-demo-fs\'>\\n</fs-link-preview></p>\\n","summary":"Minimal Angular Material Stepper Implementation.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/4/2021","headerImage":"arthropod-346190_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/arthropod-346190_1920.jpg","title":"Minimal Angular Material Stepper Implementation","readingTime":1,"wordCount":70},{"category":"Tasks","type":"task","md5":"329ff2c6219cf482be5af9cf016b1737","filename":"npm-installable-angular-material-kitchen-sink-module.md","path":"tasks/angular/npm-installable-angular-material-kitchen-sink-module.md","id":"tasks--angular--npm-installable-angular-material-kitchen-sink-module","markdown":"\\nWe want all the Angular Material components available in our project for prototyping.\\n\\n# Approach\\n\\nWe will install this module:\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/fs-link-preview.png\\"\\n  \\ttitle=\\"Firefly Semantics Material Module\\" \\n    description=\\"NPM Installable Angular Material Kitchen Sink Module\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n\\n\\n```\\nng new prototype --routing --style=scss --defaults\\nng add @angular/material\\nnpm i @fireflysemantics/material-base-module\\n```\\n\\nImport and add `MaterialBaseModule` to `app.module.ts`:\\n\\n```\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { NgModule } from \'@angular/core\';\\nimport { AppComponent } from \'./app.component\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\nimport { MaterialBaseModule } from \'@fireflysemantics/material-base-module\';\\n@NgModule({\\n    declarations: [\\n    AppComponent\\n],\\nimports: [\\n    MaterialBaseModule,\\n    BrowserModule,\\n    BrowserAnimationsModule],\\n    providers: [],\\n    bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n```\\n\\n","html":"<p>We want all the Angular Material components available in our project for prototyping.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will install this module:</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/fs-link-preview.png\'\\n      title=\'Firefly Semantics Material Module\' \\n    description=\'NPM Installable Angular Material Kitchen Sink Module\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n<pre><code>ng new prototype --routing --style=scss --defaults\\nng add @angular/material\\nnpm i @fireflysemantics/material-base-module\\n</code></pre>\\n<p>Import and add <code>MaterialBaseModule</code> to <code>app.module.ts</code>:</p>\\n<pre><code>import { BrowserModule } from &#39;@angular/platform-browser&#39;;\\nimport { NgModule } from &#39;@angular/core&#39;;\\nimport { AppComponent } from &#39;./app.component&#39;;\\nimport { BrowserAnimationsModule } from &#39;@angular/platform-browser/animations&#39;;\\nimport { MaterialBaseModule } from &#39;@fireflysemantics/material-base-module&#39;;\\n@NgModule({\\n    declarations: [\\n    AppComponent\\n],\\nimports: [\\n    MaterialBaseModule,\\n    BrowserModule,\\n    BrowserAnimationsModule],\\n    providers: [],\\n    bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n</code></pre>\\n","summary":"NPM Installable Angular Material Kitchen Sink Module.","tags":["Angular","Angular Material","JavaScript","TypeScript"],"tagString":"Angular, Angular Material, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/18/2021","headerImage":"sea-2361247_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sea-2361247_1920.jpg","title":"NPM Installable Angular Material Kitchen Sink Module","readingTime":1,"wordCount":136},{"category":"Tasks","type":"task","md5":"d0643b58c13d28fbe5aa293c7c409026","filename":"passing-function-arguments-in-the-angular-template-declaration.md","path":"tasks/angular/passing-function-arguments-in-the-angular-template-declaration.md","id":"tasks--angular--passing-function-arguments-in-the-angular-template-declaration","markdown":"\\nWe have a template declaration that invokes the components `log` function and we wish to pass different values to `log()`.\\n\\n# Approach\\n\\nSimply pass the function argument, as is done in the below demo like this:\\n```\\n<button (click)=\\"log(\'hola!\')\\">Log Hola!</button>\\n<button (click)=\\"log(\'hello!\')\\">Log Hello!</button>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Passing Function Arguments in the Angular Template Declaration\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-function-template-argument-fs?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We have a template declaration that invokes the components <code>log</code> function and we wish to pass different values to <code>log()</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Simply pass the function argument, as is done in the below demo like this:</p>\\n<pre><code>&lt;button (click)=&quot;log(&#39;hola!&#39;)&quot;&gt;Log Hola!&lt;/button&gt;\\n&lt;button (click)=&quot;log(&#39;hello!&#39;)&quot;&gt;Log Hello!&lt;/button&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Passing Function Arguments in the Angular Template Declaration\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-function-template-argument-fs?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Passing Function Arguments in the Angular Template Declaration.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/16/2021","headerImage":"spider-1137288_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/spider-1137288_1920.jpg","title":"Passing Function Arguments in the Angular Template Declaration","readingTime":1,"wordCount":96},{"category":"Tasks","type":"task","md5":"31ef5a020a443c864ec970ef426b07d5","filename":"prerendering-dynamic-seo-friendly-angular-routes-with-scully.md","path":"tasks/angular/prerendering-dynamic-seo-friendly-angular-routes-with-scully.md","id":"tasks--angular--prerendering-dynamic-seo-friendly-angular-routes-with-scully","markdown":"\\nWe have an angular app that renders Product descriptions. It has two routes defined like this:\\n```\\nconst routes: Routes = [\\n    { path: \'\', component: HomeComponent },\\n    { path: \':product\', component: ProductComponent }\\n];\\n```\\n\\n# Approach\\n\\n## Project\\n\\nCreate create a new Angular project with routing, skip test generation, and open it up in VSCode:\\n```\\nng new ngscully --routing --skip-tests\\ncd ngscully\\ncode .\\n```\\n\\n# Components\\n\\nCreate `home` and `product` component:\\n```\\nng g c components/product\\nng g c components/home\\n```\\n\\nUpdate the `ProductComponent` such that it shows the current `:product` routed to. Note that we have moved the component template inside the component.\\n\\n```\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-product\',\\n  template: `<p>The product id is {{product}}</p>`,\\n  styleUrls: [\'./product.component.scss\']\\n})\\nexport class ProductComponent implements OnInit {\\n  public product: string\\n\\n  constructor(private route:ActivatedRoute) {\\n    this.product = this.route.snapshot.paramMap.get(\':product\');\\n   }\\n\\n  ngOnInit(): void {\\n  }\\n}\\n```\\n\\n## Routing\\n\\nReplace everything in `src/app/app.component.html` with \\n```\\n<router-outlet></router-outlet> .\\n```\\n\\nUpdate `src/app/app-routing.module.ts` with the routes:\\n```\\nconst routes: Routes = [\\n    { path: \'\', component: HomeComponent },\\n    { path: \':product\', component: ProductComponent }\\n];\\n```\\n\\nServe the application just to make sure we are all good so far:\\n```\\nng serve -o\\n```\\n\\nTest the routes:\\n```\\nhttp://localhost:4200/\\nhttp://localhost:4200/someblogid\\n```\\n\\nThe `:product` route should show `someblogid` rendered when that route is triggered.\\n\\nStop the server as we need to compile the build with Scully added.\\n\\nAdding Scully without stopping the live server causes the live server build to fail.\\n\\n## Add Scully\\n```\\nng add @scullyio/init\\n```\\n\\nAnd build and prerender our app.\\n```\\nng build\\nnpm run scully\\n```\\n\\n## Scully Rendered Routes\\nLook in `src/assets/scully-routets.json`.\\n\\nWe see that Scully rendered this route:\\n```\\n[{\\"route\\":\\"/\\"}]\\n```\\n\\nWhich is the `HomeComponent`.\\n\\nThe corresponding static asset is `dist/static/index.html`.\\n\\nLooking inside it we see that is now includes `home works!` and that is content normally generated by Javascript after application load.\\n\\nBut what about the product route? We did not tell Scully the paths of any of the dynamic `:product` id values that this route can take and in order to render these dynamic routes we must do so.\\n\\nOpen `scully.ngscully.config.ts` (Located in the root project folder) and `addextraRoutes: [\u2018/p1\u2019, \u2018/p2\u2019]` so that it looks like this:\\n```\\nimport { ScullyConfig } from \'@scullyio/scully\';\\nexport const config: ScullyConfig = {\\nprojectRoot: \\"./src\\",\\nprojectName: \\"ngscully\\",\\noutDir: \'./dist/static\',\\nroutes: {},\\nextraRoutes: [\'/p1\', \'/p2\']\\n};\\n```\\n\\nNow run `npm run scully` again.\\n\\nScully tells us what files it is generating:\\n```\\nRoute \\"\\" rendered into file: \\"./dist/static/index.html\\"\\nRoute \\"/p2\\" rendered into file: \\"./dist/static/p2/index.html\\"\\nRoute \\"/p1\\" rendered into file: \\"./dist/static/p1/index.html\\"\\n```\\n\\nAnd if we look in `dist/static/p2/index.html` we see that it contains the paragraph string `product id is p2`.\\n\\nThus we now have static content for our SEO needs. But what about dynamic `title` and `meta` tag updates?\\n\\n## Title and Meta Tag Service\\n\\nCreate an `SEOService` service.\\n```\\nng g s services/SEO\\n```\\nThis is the implementation:\\n\\n```\\nimport { Injectable } from \'@angular/core\';\\nimport { Meta, Title } from \'@angular/platform-browser\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SEOService {\\n\\n  constructor(private titleService: Title, private metaService: Meta) { }\\n\\n  public setTitle(title: string) {\\n    this.titleService.setTitle(title)\\n  }\\n\\n  public updateMeta(description: string) {\\n    this.metaService.updateTag({ name: \'description\', content: `Product Page for ${description}` });\\n  }\\n}\\n```\\n\\n## Refactor the Product Component\\n\\nUpdate the product component design to such that it sets `title` and `meta` tags dynamically:\\n\\n```\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { SEOService } from \'src/app/services/seo.service\';\\n\\n@Component({\\n  selector: \'app-product\',\\n  template: `<p>The product id is {{id}}</p>`,\\n  styleUrls: [\'./product.component.scss\']\\n})\\nexport class ProductComponent implements OnInit {\\n  public id: string\\n\\n  constructor(private route: ActivatedRoute, private seo: SEOService) {\\n    this.route.paramMap.subscribe(params => {\\n      this.id = params.get(\\"product\\")\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.seo.setTitle(this.id)\\n    this.seo.setMeta(this.id)\\n  }\\n}\\n```\\n\\n## Rerun the Scully Build\\n```\\nng build\\nnpm run scully\\n```\\n\\nTake a look at the static pages generated for the product routes. They now include the dynamic title and meta tags we added using the `SEOService`.\\n\\nNote that if you refactor the app it is very important to run `ng build` again as Scully uses the build to create the static files.\\n\\nA simple way to ensure this is to update the `package.json` Scully script so that it looks like this:\\n```\\n\\"scully\\": \\"ng build --prod && scully\\",\\n```","html":"<p>We have an angular app that renders Product descriptions. It has two routes defined like this:</p>\\n<pre><code>const routes: Routes = [\\n    { path: &#39;&#39;, component: HomeComponent },\\n    { path: &#39;:product&#39;, component: ProductComponent }\\n];\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'project\'>Project</h2>\\n<p>Create create a new Angular project with routing, skip test generation, and open it up in VSCode:</p>\\n<pre><code>ng new ngscully --routing --skip-tests\\ncd ngscully\\ncode .\\n</code></pre>\\n<h1 id=\'components\'>Components</h1>\\n<p>Create <code>home</code> and <code>product</code> component:</p>\\n<pre><code>ng g c components/product\\nng g c components/home\\n</code></pre>\\n<p>Update the <code>ProductComponent</code> such that it shows the current <code>:product</code> routed to. Note that we have moved the component template inside the component.</p>\\n<pre><code>import { Component, OnInit } from &#39;@angular/core&#39;;\\nimport { ActivatedRoute } from &#39;@angular/router&#39;;\\n\\n@Component({\\n  selector: &#39;app-product&#39;,\\n  template: `&lt;p&gt;The product id is {{product}}&lt;/p&gt;`,\\n  styleUrls: [&#39;./product.component.scss&#39;]\\n})\\nexport class ProductComponent implements OnInit {\\n  public product: string\\n\\n  constructor(private route:ActivatedRoute) {\\n    this.product = this.route.snapshot.paramMap.get(&#39;:product&#39;);\\n   }\\n\\n  ngOnInit(): void {\\n  }\\n}\\n</code></pre>\\n<h2 id=\'routing\'>Routing</h2>\\n<p>Replace everything in <code>src/app/app.component.html</code> with </p>\\n<pre><code>&lt;router-outlet&gt;&lt;/router-outlet&gt; .\\n</code></pre>\\n<p>Update <code>src/app/app-routing.module.ts</code> with the routes:</p>\\n<pre><code>const routes: Routes = [\\n    { path: &#39;&#39;, component: HomeComponent },\\n    { path: &#39;:product&#39;, component: ProductComponent }\\n];\\n</code></pre>\\n<p>Serve the application just to make sure we are all good so far:</p>\\n<pre><code>ng serve -o\\n</code></pre>\\n<p>Test the routes:</p>\\n<pre><code>http://localhost:4200/\\nhttp://localhost:4200/someblogid\\n</code></pre>\\n<p>The <code>:product</code> route should show <code>someblogid</code> rendered when that route is triggered.</p>\\n<p>Stop the server as we need to compile the build with Scully added.</p>\\n<p>Adding Scully without stopping the live server causes the live server build to fail.</p>\\n<h2 id=\'add-scully\'>Add Scully</h2>\\n<pre><code>ng add @scullyio/init\\n</code></pre>\\n<p>And build and prerender our app.</p>\\n<pre><code>ng build\\nnpm run scully\\n</code></pre>\\n<h2 id=\'scully-rendered-routes\'>Scully Rendered Routes</h2>\\n<p>Look in <code>src/assets/scully-routets.json</code>.</p>\\n<p>We see that Scully rendered this route:</p>\\n<pre><code>[{&quot;route&quot;:&quot;/&quot;}]\\n</code></pre>\\n<p>Which is the <code>HomeComponent</code>.</p>\\n<p>The corresponding static asset is <code>dist/static/index.html</code>.</p>\\n<p>Looking inside it we see that is now includes <code>home works!</code> and that is content normally generated by Javascript after application load.</p>\\n<p>But what about the product route? We did not tell Scully the paths of any of the dynamic <code>:product</code> id values that this route can take and in order to render these dynamic routes we must do so.</p>\\n<p>Open <code>scully.ngscully.config.ts</code> (Located in the root project folder) and <code>addextraRoutes: [\u2018/p1\u2019, \u2018/p2\u2019]</code> so that it looks like this:</p>\\n<pre><code>import { ScullyConfig } from &#39;@scullyio/scully&#39;;\\nexport const config: ScullyConfig = {\\nprojectRoot: &quot;./src&quot;,\\nprojectName: &quot;ngscully&quot;,\\noutDir: &#39;./dist/static&#39;,\\nroutes: {},\\nextraRoutes: [&#39;/p1&#39;, &#39;/p2&#39;]\\n};\\n</code></pre>\\n<p>Now run <code>npm run scully</code> again.</p>\\n<p>Scully tells us what files it is generating:</p>\\n<pre><code>Route &quot;&quot; rendered into file: &quot;./dist/static/index.html&quot;\\nRoute &quot;/p2&quot; rendered into file: &quot;./dist/static/p2/index.html&quot;\\nRoute &quot;/p1&quot; rendered into file: &quot;./dist/static/p1/index.html&quot;\\n</code></pre>\\n<p>And if we look in <code>dist/static/p2/index.html</code> we see that it contains the paragraph string <code>product id is p2</code>.</p>\\n<p>Thus we now have static content for our SEO needs. But what about dynamic <code>title</code> and <code>meta</code> tag updates?</p>\\n<h2 id=\'title-and-meta-tag-service\'>Title and Meta Tag Service</h2>\\n<p>Create an <code>SEOService</code> service.</p>\\n<pre><code>ng g s services/SEO\\n</code></pre>\\n<p>This is the implementation:</p>\\n<pre><code>import { Injectable } from &#39;@angular/core&#39;;\\nimport { Meta, Title } from &#39;@angular/platform-browser&#39;;\\n\\n@Injectable({\\n  providedIn: &#39;root&#39;\\n})\\nexport class SEOService {\\n\\n  constructor(private titleService: Title, private metaService: Meta) { }\\n\\n  public setTitle(title: string) {\\n    this.titleService.setTitle(title)\\n  }\\n\\n  public updateMeta(description: string) {\\n    this.metaService.updateTag({ name: &#39;description&#39;, content: `Product Page for ${description}` });\\n  }\\n}\\n</code></pre>\\n<h2 id=\'refactor-the-product-component\'>Refactor the Product Component</h2>\\n<p>Update the product component design to such that it sets <code>title</code> and <code>meta</code> tags dynamically:</p>\\n<pre><code>import { Component, OnInit } from &#39;@angular/core&#39;;\\nimport { ActivatedRoute } from &#39;@angular/router&#39;;\\nimport { SEOService } from &#39;src/app/services/seo.service&#39;;\\n\\n@Component({\\n  selector: &#39;app-product&#39;,\\n  template: `&lt;p&gt;The product id is {{id}}&lt;/p&gt;`,\\n  styleUrls: [&#39;./product.component.scss&#39;]\\n})\\nexport class ProductComponent implements OnInit {\\n  public id: string\\n\\n  constructor(private route: ActivatedRoute, private seo: SEOService) {\\n    this.route.paramMap.subscribe(params =&gt; {\\n      this.id = params.get(&quot;product&quot;)\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.seo.setTitle(this.id)\\n    this.seo.setMeta(this.id)\\n  }\\n}\\n</code></pre>\\n<h2 id=\'rerun-the-scully-build\'>Rerun the Scully Build</h2>\\n<pre><code>ng build\\nnpm run scully\\n</code></pre>\\n<p>Take a look at the static pages generated for the product routes. They now include the dynamic title and meta tags we added using the <code>SEOService</code>.</p>\\n<p>Note that if you refactor the app it is very important to run <code>ng build</code> again as Scully uses the build to create the static files.</p>\\n<p>A simple way to ensure this is to update the <code>package.json</code> Scully script so that it looks like this:</p>\\n<pre><code>&quot;scully&quot;: &quot;ng build --prod &amp;&amp; scully&quot;,\\n</code></pre>\\n","summary":"Prerendering Dynamic SEO Friendly Angular Routes with Scully.","tags":["Angular","JavaScript","TypeScript","Scully"],"tagString":"Angular, JavaScript, TypeScript, Scully","author":"Ole Ersoy","date":"3/19/2021","headerImage":"balloon-991680_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/balloon-991680_1920.jpg","title":"Prerendering Dynamic SEO Friendly Angular Routes with Scully","readingTime":4,"wordCount":715},{"category":"Tasks","type":"task","md5":"7b2e8f93aa45855f103ab8d0804024a9","filename":"programmatically-disable-an-angular-email-material-input-field.md","path":"tasks/angular/programmatically-disable-an-angular-email-material-input-field.md","id":"tasks--angular--programmatically-disable-an-angular-email-material-input-field","markdown":"\\nWe want the user to confirm their `email` address by entering a code. \\n\\nWe also want to use a disabled email reactive material input field so that it only shows the email address without any editing capability:\\n```\\n<mat-form-field>\\n    <input matInput placeholder=\\"Email\\" type=\\"email\\" formControlName=\\"email\\">\\n</mat-form-field>\\n```\\n\\n# Approach\\n\\n```\\nemail = \'stephen@colbert.com\';\\nconfirm: FormGroup = new FormGroup({\\nemail: new FormControl({value: this.email, disabled: true}),\\ncode: new FormControl(\'\', [ Validators.required, Validators.min(3) ])});\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n    title=\\"Stackblitz Demo\\" \\n    description=\\"Programmatically Disable an Angular Email Material Input Field\\"\\n    domain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-email-disable-toggle-fs?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We want the user to confirm their <code>email</code> address by entering a code. </p>\\n<p>We also want to use a disabled email reactive material input field so that it only shows the email address without any editing capability:</p>\\n<pre><code>&lt;mat-form-field&gt;\\n    &lt;input matInput placeholder=&quot;Email&quot; type=&quot;email&quot; formControlName=&quot;email&quot;&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>email = &#39;stephen@colbert.com&#39;;\\nconfirm: FormGroup = new FormGroup({\\nemail: new FormControl({value: this.email, disabled: true}),\\ncode: new FormControl(&#39;&#39;, [ Validators.required, Validators.min(3) ])});\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n    description=\'Programmatically Disable an Angular Email Material Input Field\'\\n    domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-email-disable-toggle-fs?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Programmatically Disable an Angular Email Material Input Field.","tags":["Angular","Angular Material","JavaScript","CSS"],"tagString":"Angular, Angular Material, JavaScript, CSS","author":"Ole Ersoy","date":"2/18/2021","headerImage":"coast-3358820_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/coast-3358820_1920.jpg","title":"Programmatically Disable an Angular Email Material Input Field","readingTime":1,"wordCount":124},{"category":"Tasks","type":"task","md5":"cfcd123b19611f790b27f542e2ce971c","filename":"reacting-to-keyup-events-with-angular.md","path":"tasks/angular/reacting-to-keyup-events-with-angular.md","id":"tasks--angular--reacting-to-keyup-events-with-angular","markdown":"\\nWe have an `input` field and we want to log the contents of it whenever a `keyup` event occurs.\\n\\n# Approach\\n\\nFirst define the components keyup event handler:\\n```\\nkeyup(event) {\\n    console.log(event);\\n    console.log(this.fieldvalue);\\n}\\n```\\n\\nNote that we are logging the value both from the event that the handler receives and the field value that we bind in the component declaration.\\n\\nNext declare the input field in the component template (Note that the event must start with `$` as in `$event` ):\\n\\n```\\n<input placeholder=\\"Type stuff ...\\" [value]=\\"fieldvalue\\" (keyup)=\\"keyup($event.target.value)\\">\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Reacting to Keyup Events with Angular\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-keyup-handler-demo-fs?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We have an <code>input</code> field and we want to log the contents of it whenever a <code>keyup</code> event occurs.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First define the components keyup event handler:</p>\\n<pre><code>keyup(event) {\\n    console.log(event);\\n    console.log(this.fieldvalue);\\n}\\n</code></pre>\\n<p>Note that we are logging the value both from the event that the handler receives and the field value that we bind in the component declaration.</p>\\n<p>Next declare the input field in the component template (Note that the event must start with <code>$</code> as in <code>$event</code> ):</p>\\n<pre><code>&lt;input placeholder=&quot;Type stuff ...&quot; [value]=&quot;fieldvalue&quot; (keyup)=&quot;keyup($event.target.value)&quot;&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Reacting to Keyup Events with Angular\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-keyup-handler-demo-fs?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Reacting to Keyup Events with Angular.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"spider-564571_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/spider-564571_1920.jpg","title":"Reacting to Keyup Events with Angular","readingTime":1,"wordCount":137},{"category":"Tasks","type":"task","md5":"591b0a1ab2fc13c6d0e133aa6d0bc88e","filename":"rendering-your-angular-reactive-form-control-in-a-template.md","path":"tasks/angular/rendering-your-angular-reactive-form-control-in-a-template.md","id":"tasks--angular--rendering-your-angular-reactive-form-control-in-a-template","markdown":"\\nWe have an email form like this:\\n```\\n<form [formGroup]=\\"form\\">\\n    <input placeholder=\\"Email\\" type=\\"email\\" formControlName=\\"email\\">\\n</form>\\n```\\nAnd we want to render the value of the email form control like this:\\n```\\n<p>{{email}}</p>\\n```\\n\\n# Approach\\n\\nCreate a getter form the form control value:\\n```\\nget email() { return this.form.get(\'email\').value; }\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Angular Enum Template Demo\\" \\n    description=\\"Rendering Your Angular Reactive Form Control Value in a Template\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-onchanges-reactive-form-control-template-rendering\\">\\n</fs-link-preview>","html":"<p>We have an email form like this:</p>\\n<pre><code>&lt;form [formGroup]=&quot;form&quot;&gt;\\n    &lt;input placeholder=&quot;Email&quot; type=&quot;email&quot; formControlName=&quot;email&quot;&gt;\\n&lt;/form&gt;\\n</code></pre>\\n<p>And we want to render the value of the email form control like this:</p>\\n<pre><code>&lt;p&gt;{{email}}&lt;/p&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create a getter form the form control value:</p>\\n<pre><code>get email() { return this.form.get(&#39;email&#39;).value; }\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Angular Enum Template Demo\' \\n    description=\'Rendering Your Angular Reactive Form Control Value in a Template\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-onchanges-reactive-form-control-template-rendering\'>\\n</fs-link-preview></p>\\n","summary":"Rendering Your Angular Reactive Form Control Value in a Template.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"cloud-1867317_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/cloud-1867317_1920.jpg","title":"Rendering Your Angular Reactive Form Control Value in a Template","readingTime":1,"wordCount":100},{"category":"Tasks","type":"task","md5":"e45530d428bafdf8c7668d7a51463775","filename":"setting-angular-component-title-and-meta-tags-dynamically.md","path":"tasks/angular/setting-angular-component-title-and-meta-tags-dynamically.md","id":"tasks--angular--setting-angular-component-title-and-meta-tags-dynamically","markdown":"\\nWe are rendering static instances of our blog using Angular Universal or Scully and we wish to set the header meta `description`, `title`, and `tag` content dynamically.\\n\\nThis also enhances SEO as search engines index `title` and `description` tags.\\n\\n# Approach\\n\\n## Imports\\n\\n```\\nimport { Meta, Title } from \'@angular/platform-browser\';\\nimport { Component, OnInit } from \'@angular/core\';\\n```\\n\\n## Initialization\\n\\nInject Title and Meta services:\\n```\\nconstructor(\\n    private title: Title,\\n    private meta: Meta\\n) {}\\n```\\n\\n## Implementation\\n```\\nngOnInit() {\\n    this.title.setTitle(\'Dynamic Hello Angular Lovers Title\');\\n    this.meta.updateTag({ name: \'description\', content: \'Dynamic Hello Angular Lovers description!\' });\\n    }\\n}\\n```\\n\\n# Review\\n\\nClick on this [Stackblitz Fullpage Demo](https://angular-dynamic-title-and-meta.stackblitz.io/). \\n\\nOpen the developer console and find the title and meta tags. \\n\\nNote that the description and title have been set dynamically .\\n\\nIf we search for this page with Google we should see that Google uses the title as the header for the displayed search result.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Setting Angular Component Title and Meta Tags Dynamically\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-dynamic-title-and-meta\\">\\n</fs-link-preview>\\n","html":"<p>We are rendering static instances of our blog using Angular Universal or Scully and we wish to set the header meta <code>description</code>, <code>title</code>, and <code>tag</code> content dynamically.</p>\\n<p>This also enhances SEO as search engines index <code>title</code> and <code>description</code> tags.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'imports\'>Imports</h2>\\n<pre><code>import { Meta, Title } from &#39;@angular/platform-browser&#39;;\\nimport { Component, OnInit } from &#39;@angular/core&#39;;\\n</code></pre>\\n<h2 id=\'initialization\'>Initialization</h2>\\n<p>Inject Title and Meta services:</p>\\n<pre><code>constructor(\\n    private title: Title,\\n    private meta: Meta\\n) {}\\n</code></pre>\\n<h2 id=\'implementation\'>Implementation</h2>\\n<pre><code>ngOnInit() {\\n    this.title.setTitle(&#39;Dynamic Hello Angular Lovers Title&#39;);\\n    this.meta.updateTag({ name: &#39;description&#39;, content: &#39;Dynamic Hello Angular Lovers description!&#39; });\\n    }\\n}\\n</code></pre>\\n<h1 id=\'review\'>Review</h1>\\n<p>Click on this <a href=\'https://angular-dynamic-title-and-meta.stackblitz.io/\'>Stackblitz Fullpage Demo</a>. </p>\\n<p>Open the developer console and find the title and meta tags. </p>\\n<p>Note that the description and title have been set dynamically .</p>\\n<p>If we search for this page with Google we should see that Google uses the title as the header for the displayed search result.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Setting Angular Component Title and Meta Tags Dynamically\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-dynamic-title-and-meta\'>\\n</fs-link-preview></p>\\n","summary":"Setting Angular Component Title and Meta Tags Dynamically.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/16/2021","headerImage":"water-lily-1510707_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-lily-1510707_1920.jpg","title":"Setting Angular Component Title and Meta Tags Dynamically","readingTime":1,"wordCount":189},{"category":"Tasks","type":"task","md5":"674d17d53460e10aba3a458c23298b7e","filename":"styling-inner-html-content-with-angular.md","path":"tasks/angular/styling-inner-html-content-with-angular.md","id":"tasks--angular--styling-inner-html-content-with-angular","markdown":"\\nWe want to style paragraphs in `innerHTML` content:\\n\\n<div class=\\"content\\" [innerHTML]=\\"topic.html\\"></div>\\n\\nThe CSS rule does not turn the paragraphs red:\\n\\np {\\n   color: red;\\n}\\n\\n# Approach\\n\\nFirst import `ViewEncapsulation`:\\n\\n```\\nimport { ViewEncapsulation } from \'@angular/core\'\\n```\\n\\nThen use `encapsulation: ViewEncapsulation.None` :\\n\\n```\\n@Component({\\nselector: \'app-topic\',\\ntemplateUrl: \'./topic.component.html\',\\nstyleUrls: [\'./topic.component.scss\'],\\nencapsulation: ViewEncapsulation.None\\n})\\nexport class TopicComponent ...\\n```\\n\\nOn the component in order to switch off View Encapsulation for the components content.\\n\\n# Bonus\\n\\nThe same technique can be used to style content embedded with `ng-content`.","html":"<p>We want to style paragraphs in <code>innerHTML</code> content:</p>\\n<div class=\'content\' [innerHTML]=\'topic.html\'></div>\\n\\n<p>The CSS rule does not turn the paragraphs red:</p>\\n<p>p {\\n   color: red;\\n}</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First import <code>ViewEncapsulation</code>:</p>\\n<pre><code>import { ViewEncapsulation } from &#39;@angular/core&#39;\\n</code></pre>\\n<p>Then use <code>encapsulation: ViewEncapsulation.None</code> :</p>\\n<pre><code>@Component({\\nselector: &#39;app-topic&#39;,\\ntemplateUrl: &#39;./topic.component.html&#39;,\\nstyleUrls: [&#39;./topic.component.scss&#39;],\\nencapsulation: ViewEncapsulation.None\\n})\\nexport class TopicComponent ...\\n</code></pre>\\n<p>On the component in order to switch off View Encapsulation for the components content.</p>\\n<h1 id=\'bonus\'>Bonus</h1>\\n<p>The same technique can be used to style content embedded with <code>ng-content</code>.</p>\\n","summary":"Styling [ innerHTML ] Content with Angular.","tags":["Angular","JavaScript","CSS"],"tagString":"Angular, JavaScript, CSS","author":"Ole Ersoy","date":"1/30/2021","headerImage":"discus-fish-1943755_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/discus-fish-1943755_1920.jpg","title":"Styling [ innerHTML ] Content with Angular","readingTime":1,"wordCount":87},{"category":"Tasks","type":"task","md5":"aca54b2b9af3e04eda5a87ef79873743","filename":"submitting-your-reactive-angular-form.md","path":"tasks/angular/submitting-your-reactive-angular-form.md","id":"tasks--angular--submitting-your-reactive-angular-form","markdown":"\\nWe have created our form and now we want to submit it using an `EventEmitter`, leaving it to a smart component wrapper to handle the actual server submission.\\n\\n# Approach\\n\\nWithin the form template declare the `submit` function using the `ngSubmit` directive as well as a `type=\\"submit\\"` button:\\n\\n```\\n<form [formGroup]=\\"form\\" (ngSubmit)=\\"submit()\\">\\n...\\n<button type=\\"submit\\"></button>\\n</form>\\n```\\n\\nWithin the component initialize an `EventEmitter` instance and the following `submit()` method ( The form should model the `FormInterface` ):\\n\\n```\\nimport { Output, EventEmitter } from \'@angular/core\';\\nimport { FormGroup, FormControl } from \'@angular/forms\';\\nexport type FormInterface = { field1: string, field2: string };\\nform: FormGroup = new FormGroup({\\n//FormInterface property implementation\\n});\\n@Output() \\nEM = new EventEmitter<FormInterface>();\\nsubmit() {\\n    if (this.form.valid) {\\n    this.EM.emit(this.form.value);\\n  }\\n}\\n```\\n\\nThe form will be submitted when the forms `submit` button is clicked.","html":"<p>We have created our form and now we want to submit it using an <code>EventEmitter</code>, leaving it to a smart component wrapper to handle the actual server submission.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within the form template declare the <code>submit</code> function using the <code>ngSubmit</code> directive as well as a <code>type=&quot;submit&quot;</code> button:</p>\\n<pre><code>&lt;form [formGroup]=&quot;form&quot; (ngSubmit)=&quot;submit()&quot;&gt;\\n...\\n&lt;button type=&quot;submit&quot;&gt;&lt;/button&gt;\\n&lt;/form&gt;\\n</code></pre>\\n<p>Within the component initialize an <code>EventEmitter</code> instance and the following <code>submit()</code> method ( The form should model the <code>FormInterface</code> ):</p>\\n<pre><code>import { Output, EventEmitter } from &#39;@angular/core&#39;;\\nimport { FormGroup, FormControl } from &#39;@angular/forms&#39;;\\nexport type FormInterface = { field1: string, field2: string };\\nform: FormGroup = new FormGroup({\\n//FormInterface property implementation\\n});\\n@Output() \\nEM = new EventEmitter&lt;FormInterface&gt;();\\nsubmit() {\\n    if (this.form.valid) {\\n    this.EM.emit(this.form.value);\\n  }\\n}\\n</code></pre>\\n<p>The form will be submitted when the forms <code>submit</code> button is clicked.</p>\\n","summary":"Submitting Your Reactive Angular Form From a Presentation Component.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"animal-1839389_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-1839389_1920.jpg","title":"Submitting Your Reactive Angular Form From a Presentation Component","readingTime":1,"wordCount":130},{"category":"Tasks","type":"task","md5":"8b7c50239154b1fbff0d5856a142da41","filename":"switching-off-the-float-label-of-our-angular-material-search-field.md","path":"tasks/angular/switching-off-the-float-label-of-our-angular-material-search-field.md","id":"tasks--angular--switching-off-the-float-label-of-our-angular-material-search-field","markdown":"\\nWe have a material search form field:\\n```\\n<mat-form-field>\\n<input matInput placeholder=\\"Search\\">\\n</mat-form-field>\\n```\\n\\nAnd we want to turn off the floating label.\\n\\n# Approach\\n\\nJust add `floatLabel=\'never\'`.\\n\\n```\\n<mat-form-field floatLabel=\'never\'>\\n   <input matInput placeholder=\\"Search\\">\\n</mat-form-field>\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Angular Enum Template Demo\\" \\n    description=\\"Switching Off the Float Label of Our Angular Material Form Field\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-search-field-no-label\\">\\n</fs-link-preview>\\n","html":"<p>We have a material search form field:</p>\\n<pre><code>&lt;mat-form-field&gt;\\n&lt;input matInput placeholder=&quot;Search&quot;&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<p>And we want to turn off the floating label.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Just add <code>floatLabel=&#39;never&#39;</code>.</p>\\n<pre><code>&lt;mat-form-field floatLabel=&#39;never&#39;&gt;\\n   &lt;input matInput placeholder=&quot;Search&quot;&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Angular Enum Template Demo\' \\n    description=\'Switching Off the Float Label of Our Angular Material Form Field\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-search-field-no-label\'>\\n</fs-link-preview></p>\\n","summary":"Switching Off the Float Label of Our Angular Material Form Field.","tags":["Angular","Angular Material"],"tagString":"Angular, Angular Material","author":"Ole Ersoy","date":"2/16/2021","headerImage":"polar-bear-484515_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/polar-bear-484515_1920.jpg","title":"Switching Off the Float Label of Our Angular Material Form Field","readingTime":1,"wordCount":90},{"category":"Tasks","type":"task","md5":"fde5010441c24e32d32b45ced11b0c9d","filename":"synchronous-programmig-with-rxjs-observable.md","path":"tasks/angular/synchronous-programmig-with-rxjs-observable.md","id":"tasks--angular--synchronous-programmig-with-rxjs-observable","markdown":"\\nWe want to synchronous access to the value streamed by our `Observable`.\\n\\n# Approach\\n\\nTurn the `Observable` into a `Promise` and await it like this:\\n```\\nasync function syncAccess() {\\n    const value:boolean = await of(true).toPromise();\\n    console.log(value)\\n}\\n```\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Synchronous Programming with RxJS Observable\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/rxjs-synchronous-observable-value-access?file=index.ts\\">\\n</fs-link-preview>\\n","html":"<p>We want to synchronous access to the value streamed by our <code>Observable</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Turn the <code>Observable</code> into a <code>Promise</code> and await it like this:</p>\\n<pre><code>async function syncAccess() {\\n    const value:boolean = await of(true).toPromise();\\n    console.log(value)\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Synchronous Programming with RxJS Observable\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/rxjs-synchronous-observable-value-access?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Synchronous Programming with RxJS Observable.","tags":["JavaScript","TypeScript","RxJs"],"tagString":"JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"2/04/2021","headerImage":"ice-2291512_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ice-2291512_1920.jpg","title":"Synchronous Programming with RxJS Observable","readingTime":1,"wordCount":78},{"category":"Tasks","type":"task","md5":"c83d40b5a5849bfa42ae9dc208257082","filename":"the-pipe-async-could-not-be-found.md","path":"tasks/angular/the-pipe-async-could-not-be-found.md","id":"tasks--angular--the-pipe-async-could-not-be-found","markdown":"\\nWe have copied a component into our project and added it to routing. The component uses the `async` template pipe. \\n\\nWhen testing the route we get an error like this:\\n\\n```\\nERROR Error: Uncaught (in promise): Error: The pipe \'async\' could not be found!\\nError: The pipe \'async\' could not be found!\\n```\\n\\nAnd we are trying to figure out why that is happening.\\n\\n\\n# Approach\\n\\nIn my particular case this happened because I forgot to declare the component in `app.module.ts.` I copied in in to the project, imported into `app-routing.module.ts`, and registered it in a route.\\n\\nIf I remove the pipe it still renders fine, thus making it particularly tricky to diagnose.\\n\\nAlso the application will compile and render fine without any warnings.","html":"<p>We have copied a component into our project and added it to routing. The component uses the <code>async</code> template pipe. </p>\\n<p>When testing the route we get an error like this:</p>\\n<pre><code>ERROR Error: Uncaught (in promise): Error: The pipe &#39;async&#39; could not be found!\\nError: The pipe &#39;async&#39; could not be found!\\n</code></pre>\\n<p>And we are trying to figure out why that is happening.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In my particular case this happened because I forgot to declare the component in <code>app.module.ts.</code> I copied in in to the project, imported into <code>app-routing.module.ts</code>, and registered it in a route.</p>\\n<p>If I remove the pipe it still renders fine, thus making it particularly tricky to diagnose.</p>\\n<p>Also the application will compile and render fine without any warnings.</p>\\n","summary":"The pipe \u2018async\u2019 could not be found!","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"surreal-1899655_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/surreal-1899655_1920.jpg","title":"The pipe \u2018async\u2019 could not be found!","readingTime":1,"wordCount":126},{"category":"Tasks","type":"task","md5":"728fbf2a92b2f10682ac6c5ab564a18c","filename":"theming-angular-material.md","path":"tasks/angular/theming-angular-material.md","id":"tasks--angular--theming-angular-material","markdown":"\\nWe will be using the following markup to demo Angular Material theme creation and switching.  [This is a link to the Youtube](https://youtu.be/-A5P0SU0Qv0).\\n\\n```\\n<body [class]=\\"s.OS.S.theme.obs | async\\">\\n  <h2>Theme Demo</h2>\\n  <mat-form-field appearance=\\"fill\\">\\n    <mat-label>Theme Selection</mat-label>\\n    <mat-select [formControl]=\\"themeSelect\\">\\n      <mat-option *ngFor=\\"let theme of themes\\" [value]=\\"theme\\">{{theme}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  <section>\\n    <div class=\\"example-label\\">Basic</div>\\n    <div class=\\"example-button-row\\">\\n      <button mat-button>Basic</button>\\n      <button mat-button color=\\"primary\\">Primary</button>\\n      <button mat-button color=\\"accent\\">Accent</button>\\n      <button mat-button color=\\"warn\\">Warn</button>\\n      <button mat-button disabled>Disabled</button>\\n      <a mat-button href=\\"https://www.google.com/\\" target=\\"_blank\\">Link</a>\\n    </div>\\n  </section>\\n  <mat-divider></mat-divider>\\n  <section>\\n    <div class=\\"example-label\\">Raised</div>\\n    <div class=\\"example-button-row\\">\\n      <button mat-raised-button>Basic</button>\\n      <button mat-raised-button color=\\"primary\\">Primary</button>\\n      <button mat-raised-button color=\\"accent\\">Accent</button>\\n      <button mat-raised-button color=\\"warn\\">Warn</button>\\n      <button mat-raised-button disabled>Disabled</button>\\n      <a mat-raised-button href=\\"https://www.google.com/\\" target=\\"_blank\\">Link</a>\\n    </div>\\n  </section>  \\n</body>\\n```\\n\\nWe have placed the end result in this [Github Repository](https://github.com/fireflysemantics/angular-theming-example) in case you wish to clone it and run the code.\\n\\n```\\ngit clone git@github.com:fireflysemantics/angular-theming-example.git\\ncd angular-theming-example\\nnpm i\\nng serve -o\\n```\\n\\n# Approach\\n\\n## Setup\\n\\nFirst create the project angular-theming-example using the CLI.\\n\\n```\\nng new angular-theming-example --routing --style=scss skipTests=true\\ncd angular-theming-example\\n```\\n\\nAdd Angular Material.\\n```\\nng add @angular/material\\n```\\n\\nInstall our dependencies. We will be using a [Firefly Semantics Slice Object Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store) to house the theme state needed to switch themes.\\n\\n```\\nnpm i @fireflysemantics/slice @types/nanoid nanoid\\n```\\n\\n## Theme Initialization\\n\\nWithin the `src` directory create the file `themes.scss `containing our themes.\\n\\nThe `primary` color will be `mat-indigo` with the default hue (color) set to `500` and the lighter and darker hues (colors) set to `200` and `800` correspondingly.\\n\\nIf you would like to know more about the material design color palettes and how they are structured see [Understanding the Angular Material Color Palette](https://developer.fireflysemantics.com/tasks/tasks--angular--understanding-the-angular-material-color-palette) and [YouTube](https://youtu.be/cDd5-rb-6ks).\\n\\nThe accent color is set to `mat-cyan` and Angular material will apply the default weights (500, 100, 700) for the `default`, `lighter`, and `darker` hues since we don\u2019t specify these.\\n\\nThe `warn` color will be set to `mat-deep-orange `with a default weight of `A200`.\\n\\n```\\n\\n$my-theme-primary: mat-palette($mat-indigo, 500, 200, 800);\\n$my-theme-accent: mat-palette($mat-cyan);\\n$my-theme-warn: mat-palette($mat-deep-orange, A200);\\n\\n$light-theme: mat-light-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n\\n// ====================================\\n// Make sure to have a dark background\\n// Dropdowns will blend in with light\\n// backgrounds.\\n// ====================================\\n$dark-theme: mat-dark-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n```\\n\\nThe `dark` and `light` themes are defined with the `mat-light-theme` and `mat-dark-theme` Sass functions.\\n\\n\\nAfter this we need to update `styles.scss `to include our themes.\\n\\n```\\n@import \'~@angular/material/theming\';\\n\\n// =====================================\\n// always include only once per project\\n// =====================================\\n@include mat-core();\\n\\n// =====================================\\n// import our custom themes\\n// =====================================\\n@import \'themes.scss\';\\n\\n// =====================================\\n// Define the light theme\\n// =====================================\\n.light-theme {\\n  @include angular-material-theme($light-theme);\\n}\\n\\n.dark-theme {\\n  // use our theme with angular-material-theme mixin\\n  @include angular-material-theme($dark-theme);\\n  background-color: black;\\n}\\nhtml, body { height: 100%; }\\nbody { margin: 0; font-family: Roboto, \\"Helvetica Neue\\", sans-serif; }\\n```\\n\\nNote that we have defined the `light-theme `and `dark-theme `classes.\\n\\n## Theme State Service\\n\\nIn order to switch themes we will be emitting the currently select theme `class` via an `Observable<string> `. We will use a [Firefly Semantics Slice Object Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store) to initialize and manage this state.  The service is located in `src/services/state.service.ts`.\\n\\n```\\nimport { Injectable } from \\"@angular/core\\";\\nimport { KeyObsValueReset, ObsValueReset, OStore, OStoreStart } from \'@fireflysemantics/slice\'\\nimport { Observable } from \\"rxjs\\";\\n\\nconst START: OStoreStart = {\\n    theme: { value: \'dark-theme\' }\\n}\\n\\ninterface ISTART extends KeyObsValueReset {\\n    theme: ObsValueReset\\n}\\n\\n@Injectable({\\n    providedIn: \\"root\\"\\n})\\nexport class StateService {\\n    constructor() { }\\n    public OS: OStore<ISTART> = new OStore(START)\\n    public selectedTheme$:Observable<string> = this.OS.S.theme.obs\\n}\\n```\\n\\nFor more details on how this works see the Youtube [Firefly Semantics Slice Object Store Introduction](https://youtu.be/_3_mEKw3bM0).\\n\\nOr the [Introduction to the Firefly Semantics Slice Reactive Object Store](https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store).\\n\\n## Application Theme Switching\\n\\nWithin `app.component.ts `we will initialize the current theme select control with the current theme from our state service and `subscribe` to the select control `valueChanges` observable such that we can switch our theme.\\n\\n```\\nimport { OverlayContainer } from \'@angular/cdk/overlay\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { StateService } from \'./services/state.service\';\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\']\\n})\\nexport class AppComponent implements OnInit {\\n\\n  //========================================\\n  // The theme selection control\\n  // initialized with a snapshot\\n  // of the initial theme value\\n  // from the Object Store. \\n  //========================================\\n  public themeSelect = new FormControl(this.s.OS.snapshot(this.s.OS.S.theme));\\n\\n  //========================================\\n  // Array to populate the mat-select\\n  // for theme selection\\n  //========================================\\n  themes: string[] = [\'Light\', \'Dark\'];\\n\\n  //========================================\\n  // Map Light to light-theme and \\n  // Dark to dark-theme\\n  //========================================\\n  themeMap: Map<string, string> = new Map()\\n\\n  constructor(\\n    public s: StateService,\\n    private overlayContainer: OverlayContainer\\n  ) {\\n    //========================================\\n    // Map Light to light-theme and \\n    // Dark to dark-theme\\n    //========================================\\n    this.themeMap.set(\'Light\', \'light-theme\')\\n    this.themeMap.set(\'Dark\', \'dark-theme\')\\n  }\\n\\n  ngOnInit(): void {\\n    //========================================\\n    // Subscribe to the themeSelect control.\\n    // When the user selects a new theme\\n    // the control emmits the theme.\\n    // We put the new theme value in the object\\n    // store, and the object store theme \\n    // observable is then used by the app.component.html\\n    // template to switch the theme.\\n    //========================================\\n    this.themeSelect.valueChanges.subscribe(themeColor => {\\n      const theme:string | undefined = this.themeMap.get(themeColor)\\n      this.s.OS.put(this.s.OS.S.theme, theme)\\n      this.removeThemeClasses()\\n      this.addThemeClass()\\n    })\\n    //========================================\\n    // Remove any current theme classes from\\n    // overlay container.  Then add the default\\n    // theme class.\\n    //========================================\\n    this.removeThemeClasses()\\n    this.addThemeClass()\\n  }\\n\\n  /**\\n   * Remove css classes that contain the classPostfix\\n   * string from the CDK overlayContainer.\\n   */\\n  removeThemeClasses(classPostfix: string = \'-theme\') {\\n    const overlayContainerClasses = this.overlayContainer.getContainerElement().classList;\\n    const themeClassesToRemove = Array.from(overlayContainerClasses).filter((item: string) => item.includes(classPostfix));\\n    if (themeClassesToRemove.length) {\\n      overlayContainerClasses.remove(...themeClassesToRemove);\\n    }\\n  }\\n\\n  /**\\n   * Add the themeClass to the overlay container class list.\\n   * The current theme class is retrieved from the state service\\n   * Object Store.\\n   */\\n  addThemeClass() {\\n    const themeClass:string = this.s.OS.snapshot(this.s.OS.S.theme)\\n    this.overlayContainer.getContainerElement().classList.add(themeClass)\\n  }\\n}\\n```\\n\\nNote the methods `addThemeClass()` and `removeThemeClasses()`. These are used to add / remove the current theme class to / from the Angular CDK `OverlayContainer`. The container is used in the `Snackbar`, `MatSelect` and so on components that render overlays.\\n\\nFinally we have our application template.\\n\\n\\n```\\n<body [class]=\\"s.OS.S.theme.obs | async\\">\\n  <h2>Theme Demo</h2>\\n  <mat-form-field appearance=\\"fill\\">\\n    <mat-label>Theme Selection</mat-label>\\n    <mat-select [formControl]=\\"themeSelect\\">\\n      <mat-option *ngFor=\\"let theme of themes\\" [value]=\\"theme\\">{{theme}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  \\n  <section>\\n    <div class=\\"example-label\\">Basic</div>\\n    <div class=\\"example-button-row\\">\\n      <button mat-button>Basic</button>\\n      <button mat-button color=\\"primary\\">Primary</button>\\n      <button mat-button color=\\"accent\\">Accent</button>\\n      <button mat-button color=\\"warn\\">Warn</button>\\n      <button mat-button disabled>Disabled</button>\\n      <a mat-button href=\\"https://www.google.com/\\" target=\\"_blank\\">Link</a>\\n    </div>\\n  </section>\\n  <mat-divider></mat-divider>\\n  <section>\\n    <div class=\\"example-label\\">Raised</div>\\n    <div class=\\"example-button-row\\">\\n      <button mat-raised-button>Basic</button>\\n      <button mat-raised-button color=\\"primary\\">Primary</button>\\n      <button mat-raised-button color=\\"accent\\">Accent</button>\\n      <button mat-raised-button color=\\"warn\\">Warn</button>\\n      <button mat-raised-button disabled>Disabled</button>\\n      <a mat-raised-button href=\\"https://www.google.com/\\" target=\\"_blank\\">Link</a>\\n    </div>\\n  </section>  \\n</body>\\n```\\n\\nNote that within the body element `[class]` property we assign the current theme using our state service.\\n```\\n<body [class]=\\"s.OS.S.theme.obs | async\\">\\n```\\n\\nAnd that\u2019s it. To check out the end result clone the github repository and run it.\\n```\\ngit clone git@github.com:fireflysemantics/angular-theming-example.git\\ncd angular-theming-example\\nnpm i\\nng serve -o\\n```","html":"<p>We will be using the following markup to demo Angular Material theme creation and switching.  <a href=\'https://youtu.be/-A5P0SU0Qv0\'>This is a link to the Youtube</a>.</p>\\n<pre><code>&lt;body [class]=&quot;s.OS.S.theme.obs | async&quot;&gt;\\n  &lt;h2&gt;Theme Demo&lt;/h2&gt;\\n  &lt;mat-form-field appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Theme Selection&lt;/mat-label&gt;\\n    &lt;mat-select [formControl]=&quot;themeSelect&quot;&gt;\\n      &lt;mat-option *ngFor=&quot;let theme of themes&quot; [value]=&quot;theme&quot;&gt;{{theme}}&lt;/mat-option&gt;\\n    &lt;/mat-select&gt;\\n  &lt;/mat-form-field&gt;\\n  \\n  &lt;section&gt;\\n    &lt;div class=&quot;example-label&quot;&gt;Basic&lt;/div&gt;\\n    &lt;div class=&quot;example-button-row&quot;&gt;\\n      &lt;button mat-button&gt;Basic&lt;/button&gt;\\n      &lt;button mat-button color=&quot;primary&quot;&gt;Primary&lt;/button&gt;\\n      &lt;button mat-button color=&quot;accent&quot;&gt;Accent&lt;/button&gt;\\n      &lt;button mat-button color=&quot;warn&quot;&gt;Warn&lt;/button&gt;\\n      &lt;button mat-button disabled&gt;Disabled&lt;/button&gt;\\n      &lt;a mat-button href=&quot;https://www.google.com/&quot; target=&quot;_blank&quot;&gt;Link&lt;/a&gt;\\n    &lt;/div&gt;\\n  &lt;/section&gt;\\n  &lt;mat-divider&gt;&lt;/mat-divider&gt;\\n  &lt;section&gt;\\n    &lt;div class=&quot;example-label&quot;&gt;Raised&lt;/div&gt;\\n    &lt;div class=&quot;example-button-row&quot;&gt;\\n      &lt;button mat-raised-button&gt;Basic&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;primary&quot;&gt;Primary&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;accent&quot;&gt;Accent&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;warn&quot;&gt;Warn&lt;/button&gt;\\n      &lt;button mat-raised-button disabled&gt;Disabled&lt;/button&gt;\\n      &lt;a mat-raised-button href=&quot;https://www.google.com/&quot; target=&quot;_blank&quot;&gt;Link&lt;/a&gt;\\n    &lt;/div&gt;\\n  &lt;/section&gt;  \\n&lt;/body&gt;\\n</code></pre>\\n<p>We have placed the end result in this <a href=\'https://github.com/fireflysemantics/angular-theming-example\'>Github Repository</a> in case you wish to clone it and run the code.</p>\\n<pre><code>git clone git@github.com:fireflysemantics/angular-theming-example.git\\ncd angular-theming-example\\nnpm i\\nng serve -o\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'setup\'>Setup</h2>\\n<p>First create the project angular-theming-example using the CLI.</p>\\n<pre><code>ng new angular-theming-example --routing --style=scss skipTests=true\\ncd angular-theming-example\\n</code></pre>\\n<p>Add Angular Material.</p>\\n<pre><code>ng add @angular/material\\n</code></pre>\\n<p>Install our dependencies. We will be using a <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store\'>Firefly Semantics Slice Object Store</a> to house the theme state needed to switch themes.</p>\\n<pre><code>npm i @fireflysemantics/slice @types/nanoid nanoid\\n</code></pre>\\n<h2 id=\'theme-initialization\'>Theme Initialization</h2>\\n<p>Within the <code>src</code> directory create the file <code>themes.scss </code>containing our themes.</p>\\n<p>The <code>primary</code> color will be <code>mat-indigo</code> with the default hue (color) set to <code>500</code> and the lighter and darker hues (colors) set to <code>200</code> and <code>800</code> correspondingly.</p>\\n<p>If you would like to know more about the material design color palettes and how they are structured see <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--understanding-the-angular-material-color-palette\'>Understanding the Angular Material Color Palette</a> and <a href=\'https://youtu.be/cDd5-rb-6ks\'>YouTube</a>.</p>\\n<p>The accent color is set to <code>mat-cyan</code> and Angular material will apply the default weights (500, 100, 700) for the <code>default</code>, <code>lighter</code>, and <code>darker</code> hues since we don\u2019t specify these.</p>\\n<p>The <code>warn</code> color will be set to <code>mat-deep-orange </code>with a default weight of <code>A200</code>.</p>\\n<pre><code>\\n$my-theme-primary: mat-palette($mat-indigo, 500, 200, 800);\\n$my-theme-accent: mat-palette($mat-cyan);\\n$my-theme-warn: mat-palette($mat-deep-orange, A200);\\n\\n$light-theme: mat-light-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n\\n// ====================================\\n// Make sure to have a dark background\\n// Dropdowns will blend in with light\\n// backgrounds.\\n// ====================================\\n$dark-theme: mat-dark-theme(\\n    $my-theme-primary,\\n    $my-theme-accent,\\n    $my-theme-warn\\n);\\n</code></pre>\\n<p>The <code>dark</code> and <code>light</code> themes are defined with the <code>mat-light-theme</code> and <code>mat-dark-theme</code> Sass functions.</p>\\n<p>After this we need to update <code>styles.scss </code>to include our themes.</p>\\n<pre><code>@import &#39;~@angular/material/theming&#39;;\\n\\n// =====================================\\n// always include only once per project\\n// =====================================\\n@include mat-core();\\n\\n// =====================================\\n// import our custom themes\\n// =====================================\\n@import &#39;themes.scss&#39;;\\n\\n// =====================================\\n// Define the light theme\\n// =====================================\\n.light-theme {\\n  @include angular-material-theme($light-theme);\\n}\\n\\n.dark-theme {\\n  // use our theme with angular-material-theme mixin\\n  @include angular-material-theme($dark-theme);\\n  background-color: black;\\n}\\nhtml, body { height: 100%; }\\nbody { margin: 0; font-family: Roboto, &quot;Helvetica Neue&quot;, sans-serif; }\\n</code></pre>\\n<p>Note that we have defined the <code>light-theme </code>and <code>dark-theme </code>classes.</p>\\n<h2 id=\'theme-state-service\'>Theme State Service</h2>\\n<p>In order to switch themes we will be emitting the currently select theme <code>class</code> via an <code>Observable&lt;string&gt; </code>. We will use a <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store\'>Firefly Semantics Slice Object Store</a> to initialize and manage this state.  The service is located in <code>src/services/state.service.ts</code>.</p>\\n<pre><code>import { Injectable } from &quot;@angular/core&quot;;\\nimport { KeyObsValueReset, ObsValueReset, OStore, OStoreStart } from &#39;@fireflysemantics/slice&#39;\\nimport { Observable } from &quot;rxjs&quot;;\\n\\nconst START: OStoreStart = {\\n    theme: { value: &#39;dark-theme&#39; }\\n}\\n\\ninterface ISTART extends KeyObsValueReset {\\n    theme: ObsValueReset\\n}\\n\\n@Injectable({\\n    providedIn: &quot;root&quot;\\n})\\nexport class StateService {\\n    constructor() { }\\n    public OS: OStore&lt;ISTART&gt; = new OStore(START)\\n    public selectedTheme$:Observable&lt;string&gt; = this.OS.S.theme.obs\\n}\\n</code></pre>\\n<p>For more details on how this works see the Youtube <a href=\'https://youtu.be/_3_mEKw3bM0\'>Firefly Semantics Slice Object Store Introduction</a>.</p>\\n<p>Or the <a href=\'https://developer.fireflysemantics.com/guides/guides--introduction-to-the-firefly-semantics-slice-reactive-object-store\'>Introduction to the Firefly Semantics Slice Reactive Object Store</a>.</p>\\n<h2 id=\'application-theme-switching\'>Application Theme Switching</h2>\\n<p>Within <code>app.component.ts </code>we will initialize the current theme select control with the current theme from our state service and <code>subscribe</code> to the select control <code>valueChanges</code> observable such that we can switch our theme.</p>\\n<pre><code>import { OverlayContainer } from &#39;@angular/cdk/overlay&#39;;\\nimport { Component, OnInit } from &#39;@angular/core&#39;;\\nimport { FormControl } from &#39;@angular/forms&#39;;\\nimport { StateService } from &#39;./services/state.service&#39;;\\n\\n@Component({\\n  selector: &#39;app-root&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [&#39;./app.component.scss&#39;]\\n})\\nexport class AppComponent implements OnInit {\\n\\n  //========================================\\n  // The theme selection control\\n  // initialized with a snapshot\\n  // of the initial theme value\\n  // from the Object Store. \\n  //========================================\\n  public themeSelect = new FormControl(this.s.OS.snapshot(this.s.OS.S.theme));\\n\\n  //========================================\\n  // Array to populate the mat-select\\n  // for theme selection\\n  //========================================\\n  themes: string[] = [&#39;Light&#39;, &#39;Dark&#39;];\\n\\n  //========================================\\n  // Map Light to light-theme and \\n  // Dark to dark-theme\\n  //========================================\\n  themeMap: Map&lt;string, string&gt; = new Map()\\n\\n  constructor(\\n    public s: StateService,\\n    private overlayContainer: OverlayContainer\\n  ) {\\n    //========================================\\n    // Map Light to light-theme and \\n    // Dark to dark-theme\\n    //========================================\\n    this.themeMap.set(&#39;Light&#39;, &#39;light-theme&#39;)\\n    this.themeMap.set(&#39;Dark&#39;, &#39;dark-theme&#39;)\\n  }\\n\\n  ngOnInit(): void {\\n    //========================================\\n    // Subscribe to the themeSelect control.\\n    // When the user selects a new theme\\n    // the control emmits the theme.\\n    // We put the new theme value in the object\\n    // store, and the object store theme \\n    // observable is then used by the app.component.html\\n    // template to switch the theme.\\n    //========================================\\n    this.themeSelect.valueChanges.subscribe(themeColor =&gt; {\\n      const theme:string | undefined = this.themeMap.get(themeColor)\\n      this.s.OS.put(this.s.OS.S.theme, theme)\\n      this.removeThemeClasses()\\n      this.addThemeClass()\\n    })\\n    //========================================\\n    // Remove any current theme classes from\\n    // overlay container.  Then add the default\\n    // theme class.\\n    //========================================\\n    this.removeThemeClasses()\\n    this.addThemeClass()\\n  }\\n\\n  /**\\n   * Remove css classes that contain the classPostfix\\n   * string from the CDK overlayContainer.\\n   */\\n  removeThemeClasses(classPostfix: string = &#39;-theme&#39;) {\\n    const overlayContainerClasses = this.overlayContainer.getContainerElement().classList;\\n    const themeClassesToRemove = Array.from(overlayContainerClasses).filter((item: string) =&gt; item.includes(classPostfix));\\n    if (themeClassesToRemove.length) {\\n      overlayContainerClasses.remove(...themeClassesToRemove);\\n    }\\n  }\\n\\n  /**\\n   * Add the themeClass to the overlay container class list.\\n   * The current theme class is retrieved from the state service\\n   * Object Store.\\n   */\\n  addThemeClass() {\\n    const themeClass:string = this.s.OS.snapshot(this.s.OS.S.theme)\\n    this.overlayContainer.getContainerElement().classList.add(themeClass)\\n  }\\n}\\n</code></pre>\\n<p>Note the methods <code>addThemeClass()</code> and <code>removeThemeClasses()</code>. These are used to add / remove the current theme class to / from the Angular CDK <code>OverlayContainer</code>. The container is used in the <code>Snackbar</code>, <code>MatSelect</code> and so on components that render overlays.</p>\\n<p>Finally we have our application template.</p>\\n<pre><code>&lt;body [class]=&quot;s.OS.S.theme.obs | async&quot;&gt;\\n  &lt;h2&gt;Theme Demo&lt;/h2&gt;\\n  &lt;mat-form-field appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Theme Selection&lt;/mat-label&gt;\\n    &lt;mat-select [formControl]=&quot;themeSelect&quot;&gt;\\n      &lt;mat-option *ngFor=&quot;let theme of themes&quot; [value]=&quot;theme&quot;&gt;{{theme}}&lt;/mat-option&gt;\\n    &lt;/mat-select&gt;\\n  &lt;/mat-form-field&gt;\\n  \\n  &lt;section&gt;\\n    &lt;div class=&quot;example-label&quot;&gt;Basic&lt;/div&gt;\\n    &lt;div class=&quot;example-button-row&quot;&gt;\\n      &lt;button mat-button&gt;Basic&lt;/button&gt;\\n      &lt;button mat-button color=&quot;primary&quot;&gt;Primary&lt;/button&gt;\\n      &lt;button mat-button color=&quot;accent&quot;&gt;Accent&lt;/button&gt;\\n      &lt;button mat-button color=&quot;warn&quot;&gt;Warn&lt;/button&gt;\\n      &lt;button mat-button disabled&gt;Disabled&lt;/button&gt;\\n      &lt;a mat-button href=&quot;https://www.google.com/&quot; target=&quot;_blank&quot;&gt;Link&lt;/a&gt;\\n    &lt;/div&gt;\\n  &lt;/section&gt;\\n  &lt;mat-divider&gt;&lt;/mat-divider&gt;\\n  &lt;section&gt;\\n    &lt;div class=&quot;example-label&quot;&gt;Raised&lt;/div&gt;\\n    &lt;div class=&quot;example-button-row&quot;&gt;\\n      &lt;button mat-raised-button&gt;Basic&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;primary&quot;&gt;Primary&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;accent&quot;&gt;Accent&lt;/button&gt;\\n      &lt;button mat-raised-button color=&quot;warn&quot;&gt;Warn&lt;/button&gt;\\n      &lt;button mat-raised-button disabled&gt;Disabled&lt;/button&gt;\\n      &lt;a mat-raised-button href=&quot;https://www.google.com/&quot; target=&quot;_blank&quot;&gt;Link&lt;/a&gt;\\n    &lt;/div&gt;\\n  &lt;/section&gt;  \\n&lt;/body&gt;\\n</code></pre>\\n<p>Note that within the body element <code>[class]</code> property we assign the current theme using our state service.</p>\\n<pre><code>&lt;body [class]=&quot;s.OS.S.theme.obs | async&quot;&gt;\\n</code></pre>\\n<p>And that\u2019s it. To check out the end result clone the github repository and run it.</p>\\n<pre><code>git clone git@github.com:fireflysemantics/angular-theming-example.git\\ncd angular-theming-example\\nnpm i\\nng serve -o\\n</code></pre>\\n","summary":"Theming Angular Material.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/08/2022","headerImage":"butterfly-1131636_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/butterfly-1131636_1920.jpg","title":"Theming Angular Material","readingTime":8,"wordCount":1405},{"category":"Tasks","type":"task","md5":"733aa89b2099b3b22a62e76c61369bfa","filename":"trapping-focus-with-angular-cdk.md","path":"tasks/angular/trapping-focus-with-angular-cdk.md","id":"tasks--angular--trapping-focus-with-angular-cdk","markdown":"\\nWe have three buttons within a section and we want the third button to receive the initial focus. and subsequently we want to keep focus in the section as the user tabs around to the different buttons.\\n\\n\\n# Approach\\n\\nFirst add the Angular CDK `A11yModule` to the application imports.\\n```\\n@NgModule({\\nimports: [BrowserModule, FormsModule, A11yModule],\\ndeclarations: [AppComponent],\\nbootstrap: [AppComponent],\\n})\\n```\\n\\nNext markup the the `section` with the directive `cdkTrapFocus` and mark up Button 3 with `cdkFocusRegionStart`. When the section is focused the `Button 3` button will receive focus first upon navigation within the section.\\n\\n```\\n<h1>CDK Trap Section with Focus Regions</h1>\\n<section cdkTrapFocus>\\n<button>Button 1</button>\\n<button>Button 2</button>\\n<button cdkFocusRegionStart>Button 3</button>\\n<button>Button 4</button>\\n<button>Button 5</button>\\n</section>\\n```\\n\\n# Related Concepts\\n\\n[Angular CDK A11y Dcoumentation](https://material.angular.io/cdk/a11y/overview)\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Trapping Focus with Angular CDK\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ivy-usmhqw?file=src%2Fapp%2Fapp.component.html\\">\\n</fs-link-preview>\\n","html":"<p>We have three buttons within a section and we want the third button to receive the initial focus. and subsequently we want to keep focus in the section as the user tabs around to the different buttons.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First add the Angular CDK <code>A11yModule</code> to the application imports.</p>\\n<pre><code>@NgModule({\\nimports: [BrowserModule, FormsModule, A11yModule],\\ndeclarations: [AppComponent],\\nbootstrap: [AppComponent],\\n})\\n</code></pre>\\n<p>Next markup the the <code>section</code> with the directive <code>cdkTrapFocus</code> and mark up Button 3 with <code>cdkFocusRegionStart</code>. When the section is focused the <code>Button 3</code> button will receive focus first upon navigation within the section.</p>\\n<pre><code>&lt;h1&gt;CDK Trap Section with Focus Regions&lt;/h1&gt;\\n&lt;section cdkTrapFocus&gt;\\n&lt;button&gt;Button 1&lt;/button&gt;\\n&lt;button&gt;Button 2&lt;/button&gt;\\n&lt;button cdkFocusRegionStart&gt;Button 3&lt;/button&gt;\\n&lt;button&gt;Button 4&lt;/button&gt;\\n&lt;button&gt;Button 5&lt;/button&gt;\\n&lt;/section&gt;\\n</code></pre>\\n<h1 id=\'related-concepts\'>Related Concepts</h1>\\n<p><a href=\'https://material.angular.io/cdk/a11y/overview\'>Angular CDK A11y Dcoumentation</a></p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Trapping Focus with Angular CDK\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ivy-usmhqw?file=src%2Fapp%2Fapp.component.html\'>\\n</fs-link-preview></p>\\n","summary":"Trapping Focus with Angular CDK.","tags":["Angular","JavaScript","TypeScript","CDK"],"tagString":"Angular, JavaScript, TypeScript, CDK","author":"Ole Ersoy","date":"5/14/2022","headerImage":"insect-6946735_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/insect-6946735_1920.jpg","title":"Trapping Focus with Angular CDK","readingTime":1,"wordCount":178},{"category":"Tasks","type":"task","md5":"74ba58f9c336b089700358e6ed18be27","filename":"turn-off-angular-material-input-autocomplete.md","path":"tasks/angular/turn-off-angular-material-input-autocomplete.md","id":"tasks--angular--turn-off-angular-material-input-autocomplete","markdown":"\\nWe wish to turn off autocomplete for our Angular Material input field.\\n\\n# Approach\\n\\nSet `autocomplete` to off `<input matInput type=\\"text\\" autocomplete=\\"off\\"/>`:\\n\\n```\\n<mat-form-field class=\\"example-form-field\\">\\n  <mat-label>Clearable input</mat-label>\\n  <input matInput type=\\"text\\" [(ngModel)]=\\"value\\" autocomplete=\\"off\\" />\\n  <button\\n    mat-button\\n    *ngIf=\\"value\\"\\n    matSuffix\\n    mat-icon-button\\n    aria-label=\\"Clear\\"\\n    (click)=\\"value=\'\'\\"\\n  >\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</mat-form-field>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Turn Off Angular Material Input Autocomplete\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-input-with-form-control\\">\\n</fs-link-preview>\\n","html":"<p>We wish to turn off autocomplete for our Angular Material input field.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Set <code>autocomplete</code> to off <code>&lt;input matInput type=&quot;text&quot; autocomplete=&quot;off&quot;/&gt;</code>:</p>\\n<pre><code>&lt;mat-form-field class=&quot;example-form-field&quot;&gt;\\n  &lt;mat-label&gt;Clearable input&lt;/mat-label&gt;\\n  &lt;input matInput type=&quot;text&quot; [(ngModel)]=&quot;value&quot; autocomplete=&quot;off&quot; /&gt;\\n  &lt;button\\n    mat-button\\n    *ngIf=&quot;value&quot;\\n    matSuffix\\n    mat-icon-button\\n    aria-label=&quot;Clear&quot;\\n    (click)=&quot;value=&#39;&#39;&quot;\\n  &gt;\\n    &lt;mat-icon&gt;close&lt;/mat-icon&gt;\\n  &lt;/button&gt;\\n&lt;/mat-form-field&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Turn Off Angular Material Input Autocomplete\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-input-with-form-control\'>\\n</fs-link-preview></p>\\n","summary":"Turn Off Angular Material Input Autocomplete.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"jellyfish-698521_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-698521_1920.jpg","title":"Turn Off Angular Material Input Autocomplete","readingTime":1,"wordCount":107},{"category":"Tasks","type":"task","md5":"55c9c7917fadbc7f01fdeff46b048425","filename":"understanding-angular-router-specificity.md","path":"tasks/angular/understanding-angular-router-specificity.md","id":"tasks--angular--understanding-angular-router-specificity","markdown":"\\nWhich of these router configurations is correct:\\n\\n```\\nconst routes: Routes = [\\n   { path: \'404\', component: NotFoundComponent },\\n   { path: \':category\', component: CategoryComponent }\\n];\\n```\\n\\nor \\n\\n```\\nconst routes: Routes = [\\n   { path: \':category\', component: CategoryComponent },\\n   { path: \'404\', component: NotFoundComponent }\\n];\\n```\\n# Answer\\n\\n```\\nconst routes: Routes = [\\n   { path: \'404\', component: NotFoundComponent },\\n   { path: \':category\', component: CategoryComponent }\\n];\\n```\\n\\nBecause if we configure the router like this:\\n\\n```\\nconst routes: Routes = [\\n   { path: \':category\', component: CategoryComponent },\\n   { path: \'404\', component: NotFoundComponent }\\n];\\n```\\n\\nThe path `/404` will be treated as a `:category` value, and so we will never hit `/404`.","html":"<p>Which of these router configurations is correct:</p>\\n<pre><code>const routes: Routes = [\\n   { path: &#39;404&#39;, component: NotFoundComponent },\\n   { path: &#39;:category&#39;, component: CategoryComponent }\\n];\\n</code></pre>\\n<p>or </p>\\n<pre><code>const routes: Routes = [\\n   { path: &#39;:category&#39;, component: CategoryComponent },\\n   { path: &#39;404&#39;, component: NotFoundComponent }\\n];\\n</code></pre>\\n<h1 id=\'answer\'>Answer</h1>\\n<pre><code>const routes: Routes = [\\n   { path: &#39;404&#39;, component: NotFoundComponent },\\n   { path: &#39;:category&#39;, component: CategoryComponent }\\n];\\n</code></pre>\\n<p>Because if we configure the router like this:</p>\\n<pre><code>const routes: Routes = [\\n   { path: &#39;:category&#39;, component: CategoryComponent },\\n   { path: &#39;404&#39;, component: NotFoundComponent }\\n];\\n</code></pre>\\n<p>The path <code>/404</code> will be treated as a <code>:category</code> value, and so we will never hit <code>/404</code>.</p>\\n","summary":"Understanding Angular Router Specificity.","tags":["Angular","JavaScript"],"tagString":"Angular, JavaScript","author":"Ole Ersoy","date":"1/31/2021","headerImage":"motorcycle-459594_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/motorcycle-459594_1920.jpg","title":"Understanding Angular Router Specificity","readingTime":1,"wordCount":78},{"category":"Tasks","type":"task","md5":"b5dc7eada0e8e60b4ff930abe0d7020a","filename":"understanding-the-angular-material-color-palette.md","path":"tasks/angular/understanding-the-angular-material-color-palette.md","id":"tasks--angular--understanding-the-angular-material-color-palette","markdown":"\\nIn [Theming Angular Material](https://developer.fireflysemantics.com/tasks/tasks--angular--theming-angular-material) we implemented theming for Angular Material.\\n\\nAnd we used the Angular Material color palette selecting the colors `mat-indigo`, `mat-cyan`, and `mat-deep-orange`.\\n\\nNow we wish to know where to locate the other color palette hues (colors) and what the structure of the Angular Material Sass color palette is.\\n\\n\\n# Approach\\n\\nThe [Angular Material Theming Documentation](https://material.angular.io/guide/theming) shows us how the Sass color palette map is structured.\\n\\n```\\n$indigo-palette: (\\n 50: #e8eaf6,\\n 100: #c5cae9,\\n 200: #9fa8da,\\n 300: #7986cb,\\n // ... continues to 900\\n contrast: (\\n   50: rgba(black, 0.87),\\n   100: rgba(black, 0.87),\\n   200: rgba(black, 0.87),\\n   300: white,\\n   // ... continues to 900\\n )\\n);\\n```\\n\\nAnd so we see that that each number for each color (hue) maps the color to a specific shade of that color.\\n\\nWe also have a nested `contrast` map that is used to map the text color to the corresponding weight of a particular background color.\\n\\nThe documentation also contains a [link to the color palettes](https://material.io/archive/guidelines/style/color.html#color-color-palette) such that we get an overview of what colors come with Angular Material.\\n\\n[For Theme Creation and Material Design Guidance see this URL](https://material.io/design/color/the-color-system.html#color-theme-creation).\\n\\n[And for a tool that shows application of color to a UI see this URL](https://material.io/resources/color/#!/?view.left=0&view.right=0&primary.color=6002ee).\\n\\nAlso Material Design 3 has just been release and the [site has lots of great resources in it](https://m3.material.io/).\\n\\n","html":"<p>In <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--theming-angular-material\'>Theming Angular Material</a> we implemented theming for Angular Material.</p>\\n<p>And we used the Angular Material color palette selecting the colors <code>mat-indigo</code>, <code>mat-cyan</code>, and <code>mat-deep-orange</code>.</p>\\n<p>Now we wish to know where to locate the other color palette hues (colors) and what the structure of the Angular Material Sass color palette is.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The <a href=\'https://material.angular.io/guide/theming\'>Angular Material Theming Documentation</a> shows us how the Sass color palette map is structured.</p>\\n<pre><code>$indigo-palette: (\\n 50: #e8eaf6,\\n 100: #c5cae9,\\n 200: #9fa8da,\\n 300: #7986cb,\\n // ... continues to 900\\n contrast: (\\n   50: rgba(black, 0.87),\\n   100: rgba(black, 0.87),\\n   200: rgba(black, 0.87),\\n   300: white,\\n   // ... continues to 900\\n )\\n);\\n</code></pre>\\n<p>And so we see that that each number for each color (hue) maps the color to a specific shade of that color.</p>\\n<p>We also have a nested <code>contrast</code> map that is used to map the text color to the corresponding weight of a particular background color.</p>\\n<p>The documentation also contains a <a href=\'https://material.io/archive/guidelines/style/color.html#color-color-palette\'>link to the color palettes</a> such that we get an overview of what colors come with Angular Material.</p>\\n<p><a href=\'https://material.io/design/color/the-color-system.html#color-theme-creation\'>For Theme Creation and Material Design Guidance see this URL</a>.</p>\\n<p><a href=\'https://material.io/resources/color/#!/?view.left=0&amp;view.right=0&amp;primary.color=6002ee\'>And for a tool that shows application of color to a UI see this URL</a>.</p>\\n<p>Also Material Design 3 has just been release and the <a href=\'https://m3.material.io/\'>site has lots of great resources in it</a>.</p>\\n","summary":"Understanding the Angular Material Color Palette.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/04/2022","headerImage":"flower-5189902_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-5189902_1920.jpg","title":"Understanding the Angular Material Color Palette","readingTime":2,"wordCount":274},{"category":"Tasks","type":"task","md5":"c2844accae384db75446587d606e3aa1","filename":"understanding-the-angular-material-define-palette-sass-function.md","path":"tasks/angular/understanding-the-angular-material-define-palette-sass-function.md","id":"tasks--angular--understanding-the-angular-material-define-palette-sass-function","markdown":"\\nWe would like a breakdown of the result of applying the `define-palette` function (Formerly `mat-palette` ) as follows.\\n\\n```\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n```\\n\\n# Approach\\n\\nIf we `@debug mat.#cyan-palette` we see that it contains the following SASS map with hue key to color values. The hue keys range from `50` to `900`, with the addition of the accent colors `A100`, `A200`, `A400`, and `A700`.\\n\\nIn addition it contains a nested `contrast` map that has the same range of hue keys\\n\\n```\\n( 50: #e0f7fa, \\n 100: #b2ebf2, \\n 200: #80deea, \\n 300: #4dd0e1, \\n 400: #26c6da, \\n 500: #00bcd4, \\n 600: #00acc1, \\n 700: #0097a7, \\n 800: #00838f, \\n 900: #006064, \\n A100: #84ffff, \\n A200: #18ffff, \\n A400: #00e5ff, \\n A700: #00b8d4, \\n contrast: (\\n    50: rgba(0, 0, 0, 0.87), \\n    100: rgba(0, 0, 0, 0.87), \\n    200: rgba(0, 0, 0, 0.87), \\n    300: rgba(0, 0, 0, 0.87), \\n    400: rgba(0, 0, 0, 0.87), \\n    500: white, \\n    600: white, \\n    700: white, \\n    800: white, \\n    900: white, \\n    A100: rgba(0, 0, 0, 0.87), \\n    A200: rgba(0, 0, 0, 0.87), \\n    A400: rgba(0, 0, 0, 0.87), \\n    A700: rgba(0, 0, 0, 0.87)))\\n```\\n\\nIf we `@debug $theme-accent` we see that it contains.\\n\\n```\\n( 50: #e0f7fa, \\n 100: #b2ebf2, \\n 200: #80deea, \\n 300: #4dd0e1, \\n 400: #26c6da, \\n 500: #00bcd4, \\n 600: #00acc1, \\n 700: #0097a7, \\n 800: #00838f, \\n 900: #006064, \\n A100: #84ffff, \\n A200: #18ffff, \\n A400: #00e5ff, \\n A700: #00b8d4, \\n contrast: (\\n    50: rgba(0, 0, 0, 0.87), \\n    100: rgba(0, 0, 0, 0.87), \\n    200: rgba(0, 0, 0, 0.87), \\n    300: rgba(0, 0, 0, 0.87), \\n    400: rgba(0, 0, 0, 0.87), \\n    500: white, \\n    600: white, \\n    700: white, \\n    800: white, \\n    900: white, \\n    A100: rgba(0, 0, 0, 0.87), \\n    A200: rgba(0, 0, 0, 0.87), \\n    A400: rgba(0, 0, 0, 0.87), \\n    A700: rgba(0, 0, 0, 0.87)))\\ndefault: #00bcd4, \\nlighter: #b2ebf2, \\ndarker: #0097a7, \\ntext: #00bcd4, \\ndefault-contrast: white, \\nlighter-contrast: rgba(0, 0, 0, 0.87), \\ndarker-contrast: white, \\n\\"50-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"100-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"200-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"300-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"400-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"500-contrast\\": white, \\n\\"600-contrast\\": white, \\n\\"700-contrast\\": white, \\n\\"800-contrast\\": white, \\n\\"900-contrast\\": white, \\n\\"A100-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"A200-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"A400-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"A700-contrast\\": rgba(0, 0, 0, 0.87), \\n\\"contrast-contrast\\": null)\\n```\\n\\nTo understand how this result was generated lets have a look at the source code for `define-palette`.\\n\\n```\\n/// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\\n/// of the Material Design hues.\\n/// @param {Map} $base-palette Map of hue keys to color values for the basis for this palette.\\n/// @param {String | Number} $default Default hue for this palette.\\n/// @param {String | Number} $lighter \\"lighter\\" hue for this palette.\\n/// @param {String | Number} $darker \\"darker\\" hue for this palette.\\n/// @param {String | Number} $text \\"text\\" hue for this palette.\\n/// @returns {Map} A complete Angular Material theming palette.\\n@function define-palette($base-palette, $default: 500, $lighter: 100, $darker: 700,\\n  $text: $default) {\\n  $result: map.merge($base-palette, (\\n    default: _get-color-from-palette($base-palette, $default),\\n    lighter: _get-color-from-palette($base-palette, $lighter),\\n    darker: _get-color-from-palette($base-palette, $darker),\\n    text: _get-color-from-palette($base-palette, $text),\\n\\n    default-contrast: get-contrast-color-from-palette($base-palette, $default),\\n    lighter-contrast: get-contrast-color-from-palette($base-palette, $lighter),\\n    darker-contrast: get-contrast-color-from-palette($base-palette, $darker)\\n  ));\\n\\n  // For each hue in the palette, add a \\"-contrast\\" color to the map.\\n  @each $hue, $color in $base-palette {\\n    $result: map.merge($result, (\\n      \'#{$hue}-contrast\': get-contrast-color-from-palette($base-palette, $hue)\\n    ));\\n  }\\n\\n  @return $result;\\n```\\n\\nSo the `define-palette` function takes the a material color palette along with the `default`, `lighter`, `darker`, and `text` hue key values and uses these to augment the passed in color palette with additional values.\\n\\nThe block.\\n\\n```\\n$result: map.merge($base-palette, (    default: _get-color-from-palette($base-palette, $default),    lighter: _get-color-from-palette($base-palette, $lighter),    darker: _get-color-from-palette($base-palette, $darker),    text: _get-color-from-palette($base-palette, $text),     default-contrast: get-contrast-color-from-palette($base-palette, $default),    lighter-contrast: get-contrast-color-from-palette($base-palette, $lighter),    darker-contrast: get-contrast-color-from-palette($base-palette, $darker)  ));\\n```\\n\\nMerges in color values for the `default`, `lighter`, `darker`, and `text` keys, as well as the corresponding `contrast` values for these.\\n\\nThe block.\\n```\\n// For each hue in the palette, add a \\"-contrast\\" color to the map.  @each $hue, $color in $base-palette {    $result: map.merge($result, (      \'#{$hue}-contrast\': get-contrast-color-from-palette($base-palette, $hue)    ));  }\\n```\\n\\nGives us access to the `contrast` values contained in the nested contrast map within the main map. Each constrast key is postfixed with `-contrast`.\\n\\nThis new augmented palette can be used with Angular Materials `get-color-from-palette` function to retrieve color values. Here is an example from the Angular Material documentation.\\n\\n```\\n@use \'@angular/material\' as mat;\\n\\n$my-palette: mat.define-palette(mat.$indigo-palette);\\n\\n.my-custom-style {\\n background: mat.get-color-from-palette($my-palette, \'500\');\\n color: mat.get-color-from-palette($my-palette, \'500-contrast\');\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n \\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Understanding the Angular Material define-palette SASS Function\\"\\n \\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-minimal-material-table-demo-center-header\\">\\n</fs-link-preview>\\n","html":"<p>We would like a breakdown of the result of applying the <code>define-palette</code> function (Formerly <code>mat-palette</code> ) as follows.</p>\\n<pre><code>$theme-accent: mat.define-palette(mat.$cyan-palette);\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>If we <code>@debug mat.#cyan-palette</code> we see that it contains the following SASS map with hue key to color values. The hue keys range from <code>50</code> to <code>900</code>, with the addition of the accent colors <code>A100</code>, <code>A200</code>, <code>A400</code>, and <code>A700</code>.</p>\\n<p>In addition it contains a nested <code>contrast</code> map that has the same range of hue keys</p>\\n<pre><code>( 50: #e0f7fa, \\n 100: #b2ebf2, \\n 200: #80deea, \\n 300: #4dd0e1, \\n 400: #26c6da, \\n 500: #00bcd4, \\n 600: #00acc1, \\n 700: #0097a7, \\n 800: #00838f, \\n 900: #006064, \\n A100: #84ffff, \\n A200: #18ffff, \\n A400: #00e5ff, \\n A700: #00b8d4, \\n contrast: (\\n    50: rgba(0, 0, 0, 0.87), \\n    100: rgba(0, 0, 0, 0.87), \\n    200: rgba(0, 0, 0, 0.87), \\n    300: rgba(0, 0, 0, 0.87), \\n    400: rgba(0, 0, 0, 0.87), \\n    500: white, \\n    600: white, \\n    700: white, \\n    800: white, \\n    900: white, \\n    A100: rgba(0, 0, 0, 0.87), \\n    A200: rgba(0, 0, 0, 0.87), \\n    A400: rgba(0, 0, 0, 0.87), \\n    A700: rgba(0, 0, 0, 0.87)))\\n</code></pre>\\n<p>If we <code>@debug $theme-accent</code> we see that it contains.</p>\\n<pre><code>( 50: #e0f7fa, \\n 100: #b2ebf2, \\n 200: #80deea, \\n 300: #4dd0e1, \\n 400: #26c6da, \\n 500: #00bcd4, \\n 600: #00acc1, \\n 700: #0097a7, \\n 800: #00838f, \\n 900: #006064, \\n A100: #84ffff, \\n A200: #18ffff, \\n A400: #00e5ff, \\n A700: #00b8d4, \\n contrast: (\\n    50: rgba(0, 0, 0, 0.87), \\n    100: rgba(0, 0, 0, 0.87), \\n    200: rgba(0, 0, 0, 0.87), \\n    300: rgba(0, 0, 0, 0.87), \\n    400: rgba(0, 0, 0, 0.87), \\n    500: white, \\n    600: white, \\n    700: white, \\n    800: white, \\n    900: white, \\n    A100: rgba(0, 0, 0, 0.87), \\n    A200: rgba(0, 0, 0, 0.87), \\n    A400: rgba(0, 0, 0, 0.87), \\n    A700: rgba(0, 0, 0, 0.87)))\\ndefault: #00bcd4, \\nlighter: #b2ebf2, \\ndarker: #0097a7, \\ntext: #00bcd4, \\ndefault-contrast: white, \\nlighter-contrast: rgba(0, 0, 0, 0.87), \\ndarker-contrast: white, \\n&quot;50-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;100-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;200-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;300-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;400-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;500-contrast&quot;: white, \\n&quot;600-contrast&quot;: white, \\n&quot;700-contrast&quot;: white, \\n&quot;800-contrast&quot;: white, \\n&quot;900-contrast&quot;: white, \\n&quot;A100-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;A200-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;A400-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;A700-contrast&quot;: rgba(0, 0, 0, 0.87), \\n&quot;contrast-contrast&quot;: null)\\n</code></pre>\\n<p>To understand how this result was generated lets have a look at the source code for <code>define-palette</code>.</p>\\n<pre><code>/// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\\n/// of the Material Design hues.\\n/// @param {Map} $base-palette Map of hue keys to color values for the basis for this palette.\\n/// @param {String | Number} $default Default hue for this palette.\\n/// @param {String | Number} $lighter &quot;lighter&quot; hue for this palette.\\n/// @param {String | Number} $darker &quot;darker&quot; hue for this palette.\\n/// @param {String | Number} $text &quot;text&quot; hue for this palette.\\n/// @returns {Map} A complete Angular Material theming palette.\\n@function define-palette($base-palette, $default: 500, $lighter: 100, $darker: 700,\\n  $text: $default) {\\n  $result: map.merge($base-palette, (\\n    default: _get-color-from-palette($base-palette, $default),\\n    lighter: _get-color-from-palette($base-palette, $lighter),\\n    darker: _get-color-from-palette($base-palette, $darker),\\n    text: _get-color-from-palette($base-palette, $text),\\n\\n    default-contrast: get-contrast-color-from-palette($base-palette, $default),\\n    lighter-contrast: get-contrast-color-from-palette($base-palette, $lighter),\\n    darker-contrast: get-contrast-color-from-palette($base-palette, $darker)\\n  ));\\n\\n  // For each hue in the palette, add a &quot;-contrast&quot; color to the map.\\n  @each $hue, $color in $base-palette {\\n    $result: map.merge($result, (\\n      &#39;#{$hue}-contrast&#39;: get-contrast-color-from-palette($base-palette, $hue)\\n    ));\\n  }\\n\\n  @return $result;\\n</code></pre>\\n<p>So the <code>define-palette</code> function takes the a material color palette along with the <code>default</code>, <code>lighter</code>, <code>darker</code>, and <code>text</code> hue key values and uses these to augment the passed in color palette with additional values.</p>\\n<p>The block.</p>\\n<pre><code>$result: map.merge($base-palette, (    default: _get-color-from-palette($base-palette, $default),    lighter: _get-color-from-palette($base-palette, $lighter),    darker: _get-color-from-palette($base-palette, $darker),    text: _get-color-from-palette($base-palette, $text),     default-contrast: get-contrast-color-from-palette($base-palette, $default),    lighter-contrast: get-contrast-color-from-palette($base-palette, $lighter),    darker-contrast: get-contrast-color-from-palette($base-palette, $darker)  ));\\n</code></pre>\\n<p>Merges in color values for the <code>default</code>, <code>lighter</code>, <code>darker</code>, and <code>text</code> keys, as well as the corresponding <code>contrast</code> values for these.</p>\\n<p>The block.</p>\\n<pre><code>// For each hue in the palette, add a &quot;-contrast&quot; color to the map.  @each $hue, $color in $base-palette {    $result: map.merge($result, (      &#39;#{$hue}-contrast&#39;: get-contrast-color-from-palette($base-palette, $hue)    ));  }\\n</code></pre>\\n<p>Gives us access to the <code>contrast</code> values contained in the nested contrast map within the main map. Each constrast key is postfixed with <code>-contrast</code>.</p>\\n<p>This new augmented palette can be used with Angular Materials <code>get-color-from-palette</code> function to retrieve color values. Here is an example from the Angular Material documentation.</p>\\n<pre><code>@use &#39;@angular/material&#39; as mat;\\n\\n$my-palette: mat.define-palette(mat.$indigo-palette);\\n\\n.my-custom-style {\\n background: mat.get-color-from-palette($my-palette, &#39;500&#39;);\\n color: mat.get-color-from-palette($my-palette, &#39;500-contrast&#39;);\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n     title=\'Stackblitz Demo\' \\n  description=\'Understanding the Angular Material define-palette SASS Function\'\\n     domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-minimal-material-table-demo-center-header\'>\\n</fs-link-preview></p>\\n","summary":"Understanding the Angular Material define-palette SASS Function.","tags":["Angular","Angular Material","JavaScript","SASS"],"tagString":"Angular, Angular Material, JavaScript, SASS","author":"Ole Ersoy","date":"5/26/2022","headerImage":"gecko-baby-4763045_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/gecko-baby-4763045_1920.jpg","title":"Understanding the Angular Material define-palette SASS Function","readingTime":5,"wordCount":920},{"category":"Tasks","type":"task","md5":"404b1c37a206c23806865a8aaad8fd66","filename":"unit-testing-angular-with-jest.md","path":"tasks/angular/unit-testing-angular-with-jest.md","id":"tasks--angular--unit-testing-angular-with-jest","markdown":"\\nWe want unit test our Angular source code using Jest.\\n\\n# Approach\\n\\nCreate a new Angular project:\\n\\n```\\nng new jestproject\\ncd jestproject\\n//For Angular 13 and later\\nng add @patoudss/jest-schematic \\n//For Angular 12 and earlier\\nng add @briebug/jest-schematic\\n```\\n\\n\\nNow replace `app.component.spec.ts` test content with this:\\n```\\nit(\\"can run a test\\", () => {\\n    expect(1).toEqual(1);\\n});\\n```\\n\\nNow run the test with `npx jest`:\\n```\\nole@mkt:~/$ npx jest\\n PASS  src/app/app.component.spec.ts\\n  \u2713 should constructor initialize the store (3ms)\\nTest Suites: 1 passed, 1 total\\nTests:       1 passed, 1 total\\nSnapshots:   0 total\\nTime:        3.063s\\nRan all test suites.\\n```\\n\\n# Libraries\\n\\nIf we add a \u201cFictional\u201d optimization library to the project with:\\n```\\nng g library optimization\\n```\\n\\nThen we also need to place `jest.config.js` in the library folder optimization which also contains the `package.json` for the library:\\n\\n\\n```\\nmodule.exports = {\\n\\"roots\\": [\\n\\"<rootDir>/src/lib/\\"\\n],\\ntestMatch: [\\n\\"**/__tests__/**/*.+(ts|tsx|js)\\",\\n\\"**/?(*.)+(spec|test).+(ts|tsx|js)\\"\\n],\\n\\"transform\\": {\\n\\"^.+<svg style=\\"vertical-align: 0\\" xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"0.566ex\\" height=\\"0.036ex\\" role=\\"img\\" focusable=\\"false\\" viewBox=\\"0 0 250 16\\" xmlns:xlink=\\"http://www.w3.org/1999/xlink\\"><defs><style>svg a{fill:blue;stroke:blue}[data-mml-node=\\"merror\\"]>g{fill:red;stroke:red}[data-mml-node=\\"merror\\"]>rect[data-background]{fill:yellow;stroke:none}[data-frame],[data-line]{stroke-width:70px;fill:none}.mjx-dashed{stroke-dasharray:140}.mjx-dotted{stroke-linecap:round;stroke-dasharray:0,140}use[data-c]{stroke-width:3px}</style><path id=\\"MJX-1-TEX-N-A0\\" d=\\"\\"></path></defs><g stroke=\\"currentColor\\" fill=\\"currentColor\\" stroke-width=\\"0\\" transform=\\"scale(1,-1)\\"><g data-mml-node=\\"math\\"><g data-mml-node=\\"mtext\\"><use data-c=\\"A0\\" xlink:href=\\"#MJX-1-TEX-N-A0\\"></use></g></g></g></svg>.(ts|tsx)$\\": \\"ts-jest\\"\\n}\\n}\\n```","html":"<p>We want unit test our Angular source code using Jest.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create a new Angular project:</p>\\n<pre><code>ng new jestproject\\ncd jestproject\\n//For Angular 13 and later\\nng add @patoudss/jest-schematic \\n//For Angular 12 and earlier\\nng add @briebug/jest-schematic\\n</code></pre>\\n<p>Now replace <code>app.component.spec.ts</code> test content with this:</p>\\n<pre><code>it(&quot;can run a test&quot;, () =&gt; {\\n    expect(1).toEqual(1);\\n});\\n</code></pre>\\n<p>Now run the test with <code>npx jest</code>:</p>\\n<pre><code>ole@mkt:~/$ npx jest\\n PASS  src/app/app.component.spec.ts\\n  \u2713 should constructor initialize the store (3ms)\\nTest Suites: 1 passed, 1 total\\nTests:       1 passed, 1 total\\nSnapshots:   0 total\\nTime:        3.063s\\nRan all test suites.\\n</code></pre>\\n<h1 id=\'libraries\'>Libraries</h1>\\n<p>If we add a \u201cFictional\u201d optimization library to the project with:</p>\\n<pre><code>ng g library optimization\\n</code></pre>\\n<p>Then we also need to place <code>jest.config.js</code> in the library folder optimization which also contains the <code>package.json</code> for the library:</p>\\n<pre><code>module.exports = {\\n&quot;roots&quot;: [\\n&quot;&lt;rootDir&gt;/src/lib/&quot;\\n],\\ntestMatch: [\\n&quot;**/__tests__/**/*.+(ts|tsx|js)&quot;,\\n&quot;**/?(*.)+(spec|test).+(ts|tsx|js)&quot;\\n],\\n&quot;transform&quot;: {\\n&quot;^.+&lt;svg style=&quot;vertical-align: 0&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;0.566ex&quot; height=&quot;0.036ex&quot; role=&quot;img&quot; focusable=&quot;false&quot; viewBox=&quot;0 0 250 16&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;&lt;defs&gt;&lt;style&gt;svg a{fill:blue;stroke:blue}[data-mml-node=&quot;merror&quot;]&gt;g{fill:red;stroke:red}[data-mml-node=&quot;merror&quot;]&gt;rect[data-background]{fill:yellow;stroke:none}[data-frame],[data-line]{stroke-width:70px;fill:none}.mjx-dashed{stroke-dasharray:140}.mjx-dotted{stroke-linecap:round;stroke-dasharray:0,140}use[data-c]{stroke-width:3px}&lt;/style&gt;&lt;path id=&quot;MJX-2-TEX-N-A0&quot; d=&quot;&quot;&gt;&lt;/path&gt;&lt;/defs&gt;&lt;g stroke=&quot;currentColor&quot; fill=&quot;currentColor&quot; stroke-width=&quot;0&quot; transform=&quot;scale(1,-1)&quot;&gt;&lt;g data-mml-node=&quot;math&quot;&gt;&lt;g data-mml-node=&quot;mtext&quot;&gt;&lt;use data-c=&quot;A0&quot; xlink:href=&quot;#MJX-2-TEX-N-A0&quot;&gt;&lt;/use&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;.(ts|tsx)$&quot;: &quot;ts-jest&quot;\\n}\\n}\\n</code></pre>\\n","summary":"Unit Testing Angular with Jest.","tags":["Angular","JavaScript","TypeScript","Jest"],"tagString":"Angular, JavaScript, TypeScript, Jest","author":"Ole Ersoy","date":"3/04/2021","headerImage":"calculator-695084_1280.png","headerImageURL":"https://fireflysemantics.github.io/i/developer/calculator-695084_1280.png","title":"Unit Testing Angular with Jest","readingTime":1,"wordCount":165},{"category":"Tasks","type":"task","md5":"17794fff33b28ea15747d4ccec742cda","filename":"updating-the-angular-cli-to-the-latest-version.md","path":"tasks/angular/updating-the-angular-cli-to-the-latest-version.md","id":"tasks--angular--updating-the-angular-cli-to-the-latest-version","markdown":"\\nWe want to update Angular CLI to the latest version.\\n\\n# Approach\\n\\n```\\nnpm uninstall -g @angular-cli\\nnpm install -g @angular/cli@latest\\n```\\n\\nFor instructions on updating a specific project [click this link](https://update.angular.io/).\\n\\nHere\'s an example:\\n\\n```\\nng update @angular/core @angular/cli @angular/material\\n```","html":"<p>We want to update Angular CLI to the latest version.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>npm uninstall -g @angular-cli\\nnpm install -g @angular/cli@latest\\n</code></pre>\\n<p>For instructions on updating a specific project <a href=\'https://update.angular.io/\'>click this link</a>.</p>\\n<p>Here&#39;s an example:</p>\\n<pre><code>ng update @angular/core @angular/cli @angular/material\\n</code></pre>\\n","summary":"Updating Angular CLI to the Latest Version.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"earth-1756274_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/earth-1756274_1920.jpg","title":"Updating Angular CLI to the Latest Version","readingTime":1,"wordCount":48},{"category":"Tasks","type":"task","md5":"f25b61e0294c1b641f3871ce40d44346","filename":"using-angular-get-color-from-palette-to-retrieve-color-values.md","path":"tasks/angular/using-angular-get-color-from-palette-to-retrieve-color-values.md","id":"tasks--angular--using-angular-get-color-from-palette-to-retrieve-color-values","markdown":"\\nWe have defined our SASS Angular Material Accent color palette like this.\\n```\\n$theme-accent: mat.define-palette(mat.$cyan-palette);\\n```\\n\\nAnd now we wish to retrieve a text `color` and `background-color` from it using the `default` key (`500`).\\n\\n# Approach\\n\\n```\\nhtml,\\nbody {\\nheight: 100%;\\nbackground-color: mat.get-color-from-palette($theme-accent, default);\\ncolor: mat.get-color-from-palette($theme-accent, default-contrast);\\n}\\nFor the background-color we use the default key, and for the text color we use the default-contrast key.\\n```\\n\\nFor the `background-color` we use the `default` key, and for the text `color` we use the `default-contrast` key.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n \\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Using Angular get-color-from-palette to Retrieve Color Values\\"\\n \\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-r9tzuk-gmpxeg?file=src%2Fstyles.scss,src%2Findex.html\\">\\n</fs-link-preview>\\n","html":"<p>We have defined our SASS Angular Material Accent color palette like this.</p>\\n<pre><code>$theme-accent: mat.define-palette(mat.$cyan-palette);\\n</code></pre>\\n<p>And now we wish to retrieve a text <code>color</code> and <code>background-color</code> from it using the <code>default</code> key (<code>500</code>).</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>html,\\nbody {\\nheight: 100%;\\nbackground-color: mat.get-color-from-palette($theme-accent, default);\\ncolor: mat.get-color-from-palette($theme-accent, default-contrast);\\n}\\nFor the background-color we use the default key, and for the text color we use the default-contrast key.\\n</code></pre>\\n<p>For the <code>background-color</code> we use the <code>default</code> key, and for the text <code>color</code> we use the <code>default-contrast</code> key.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n     title=\'Stackblitz Demo\' \\n  description=\'Using Angular get-color-from-palette to Retrieve Color Values\'\\n     domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-r9tzuk-gmpxeg?file=src%2Fstyles.scss,src%2Findex.html\'>\\n</fs-link-preview></p>\\n","summary":"Using Angular get-color-from-palette to Retrieve Color Values.","tags":["Angular","Angular Material","JavaScript","SASS"],"tagString":"Angular, Angular Material, JavaScript, SASS","author":"Ole Ersoy","date":"5/26/2022","headerImage":"color-pop-5650322_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/color-pop-5650322_1920.jpg","title":"Using Angular get-color-from-palette to Retrieve Color Values","readingTime":1,"wordCount":152},{"category":"Tasks","type":"task","md5":"c7039f83ed8eaf3966919b1e51e7b45f","filename":"using-angulars-non-null-assertion-operator.md","path":"tasks/angular/using-angulars-non-null-assertion-operator.md","id":"tasks--angular--using-angulars-non-null-assertion-operator","markdown":"\\nWe have a decorated property like this in our component:\\n\\n```\\n@ViewChild(MatSort, { static: false }) sort: MatSort;\\n```\\n\\nAnd this produces the lint error:\\n\\n```\\nMatSort Property \'sort\' has no initializer and is not definitely assigned in the constructor.ts(2564)\\n```\\n\\n# Approach\\n\\nUse Angular\'s **non null assertion operator** `!`.\\n\\n```\\n@ViewChild(MatSort, { static: false }) sort!: MatSort;\\n```","html":"<p>We have a decorated property like this in our component:</p>\\n<pre><code>@ViewChild(MatSort, { static: false }) sort: MatSort;\\n</code></pre>\\n<p>And this produces the lint error:</p>\\n<pre><code>MatSort Property &#39;sort&#39; has no initializer and is not definitely assigned in the constructor.ts(2564)\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use Angular&#39;s <strong>non null assertion operator</strong> <code>!</code>.</p>\\n<pre><code>@ViewChild(MatSort, { static: false }) sort!: MatSort;\\n</code></pre>\\n","summary":"Using Angulars Non Null Assertion Operator.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/04/2021","headerImage":"butterflies-1127666_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/butterflies-1127666_1920.jpg","title":"Using Angulars Non Null Assertion Operator","readingTime":1,"wordCount":52},{"category":"Tasks","type":"task","md5":"53a560b074e9014e7c521001de64e15e","filename":"using-enum-values-in-angular-templates.md","path":"tasks/angular/using-enum-values-in-angular-templates.md","id":"tasks--angular--using-enum-values-in-angular-templates","markdown":"\\nWe want to use these `enum` values:\\n```\\nexport enum SocialMediaType {\\n   TWITTER,\\n   FACEBOOK,\\n   LINKEDIN\\n}\\n```\\n\\nAs input values for our Angular `SocialIconComponent` like this:\\n```\\n<fs-social-icon [topic]=\\"topic\\" [type]=\\"SMT.TWITTER\\"></fs-social-icon>\\n```\\n\\n# Approach\\n\\nIn order to gain access to the `enum` values in the `app.component.html` template we need to create a reference to the `SocialMediaType` within the `AppComponent`.\\n```\\npublic SMT = SocialMediaType;\\n```\\n\\nWe can now use use this reference to set the input:\\n```\\n<fs-social-icon [topic]=\\"topic\\" [type]=\\"SMT.TWITTER\\"></fs-social-icon>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Angular Enum Template Demo\\" \\n    description=\\"Using Enum Values in Angular Templates\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-social-icon-component?file=src%2Fapp%2Fapp.component.html\\">\\n</fs-link-preview>\\n","html":"<p>We want to use these <code>enum</code> values:</p>\\n<pre><code>export enum SocialMediaType {\\n   TWITTER,\\n   FACEBOOK,\\n   LINKEDIN\\n}\\n</code></pre>\\n<p>As input values for our Angular <code>SocialIconComponent</code> like this:</p>\\n<pre><code>&lt;fs-social-icon [topic]=&quot;topic&quot; [type]=&quot;SMT.TWITTER&quot;&gt;&lt;/fs-social-icon&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In order to gain access to the <code>enum</code> values in the <code>app.component.html</code> template we need to create a reference to the <code>SocialMediaType</code> within the <code>AppComponent</code>.</p>\\n<pre><code>public SMT = SocialMediaType;\\n</code></pre>\\n<p>We can now use use this reference to set the input:</p>\\n<pre><code>&lt;fs-social-icon [topic]=&quot;topic&quot; [type]=&quot;SMT.TWITTER&quot;&gt;&lt;/fs-social-icon&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Angular Enum Template Demo\' \\n    description=\'Using Enum Values in Angular Templates\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-social-icon-component?file=src%2Fapp%2Fapp.component.html\'>\\n</fs-link-preview></p>\\n","summary":"Using Enum Values in Angular Templates.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"bee-5420403_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bee-5420403_1920.jpg","title":"Using Enum Values in Angular Templates","readingTime":1,"wordCount":133},{"category":"Tasks","type":"task","md5":"69a6b772d18c32b41258f1c0d268ca99","filename":"using-web-components-with-angular.md","path":"tasks/angular/using-web-components-with-angular.md","id":"tasks--angular--using-web-components-with-angular","markdown":"\\nWe want to use the Firefly Semantics [fs-link-preview](https://developer.fireflysemantics.com/tasks/tasks--web-component--creating-link-previews-with-the-fs-link-preview-web-component) web component \\n\\n# Approach\\n\\nWithin the project add the `CUSTOM_ELEMENTS_SCHEMA` to `app.module.ts`.\\n\\n```\\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from \'@angular/core\';\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent\\n  ],\\n  imports: [\\n    BrowserModule\\n  ],\\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\\n  providers: [],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n\\n```\\n\\nYou may also want to add web components polyfills CDN script to the `head` element of `index.html`.\\n\\n```\\n<script src=\\"https://cdnjs.cloudflare.com/ajax/libs/webcomponentsjs/2.5.0/webcomponents-bundle.js\\" integrity=\\"sha512-I8ku8+abM93SgC4hbSAB6TERERGi/STakRCIQRrkgwyOMw2IHbgx+5boDeUTjzsXu55aTSBfyrI/toVBM38SzA==\\" crossorigin=\\"anonymous\\"><\/script>\\n```","html":"<p>We want to use the Firefly Semantics <a href=\'https://developer.fireflysemantics.com/tasks/tasks--web-component--creating-link-previews-with-the-fs-link-preview-web-component\'>fs-link-preview</a> web component </p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within the project add the <code>CUSTOM_ELEMENTS_SCHEMA</code> to <code>app.module.ts</code>.</p>\\n<pre><code>import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from &#39;@angular/core&#39;;\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent\\n  ],\\n  imports: [\\n    BrowserModule\\n  ],\\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\\n  providers: [],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n</code></pre>\\n<p>You may also want to add web components polyfills CDN script to the <code>head</code> element of <code>index.html</code>.</p>\\n<pre><code>&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/webcomponentsjs/2.5.0/webcomponents-bundle.js&quot; integrity=&quot;sha512-I8ku8+abM93SgC4hbSAB6TERERGi/STakRCIQRrkgwyOMw2IHbgx+5boDeUTjzsXu55aTSBfyrI/toVBM38SzA==&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\\n</code></pre>\\n","summary":"Using Web Components with Angular.","tags":["Angular","JavaScript","TypeScript","Web Component"],"tagString":"Angular, JavaScript, TypeScript, Web Component","author":"Ole Ersoy","date":"4/24/2021","headerImage":"leaf-5634673_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/leaf-5634673_1920.jpg","title":"Using Web Components with Angular","readingTime":1,"wordCount":103},{"category":"Tasks","type":"task","md5":"6733c32aec05aefb6ecce0a4d2270342","filename":"validating-passwords-with-angular-reactive-forms.md","path":"tasks/angular/validating-passwords-with-angular-reactive-forms.md","id":"tasks--angular--validating-passwords-with-angular-reactive-forms","markdown":"\\nOn our registration form we have a `password` field and a `confirmPassword` field.\\n\\nWe want to validate that the `confirmPassword` field matches the `password` field prior to enabling the submit button for the form.\\n\\nIf the passwords do not match then the `mat-error` notification below the `confirmPassword` field will display a message indicating this.\\n\\n# Approach\\n\\n## Matching the Passwords\\n\\nFirst within our `validation.service.ts` service we will create a factory function used to produce the `ValidatorFn` instance that will check whether the passwords match.\\n\\n```\\n  passwordMatch(password: string, confirmPassword: string): ValidatorFn {\\n    return (formGroup: AbstractControl): { [key: string]: any } | null => {\\n      const passwordControl = formGroup.get(password);\\n      const confirmPasswordControl = formGroup.get(confirmPassword);\\n\\n      if (!passwordControl || !confirmPasswordControl) {\\n        return null;\\n      }\\n\\n      if (\\n        confirmPasswordControl.errors &&\\n        !confirmPasswordControl.errors.passwordMismatch\\n      ) {\\n        return null;\\n      }\\n\\n      if (passwordControl.value !== confirmPasswordControl.value) {\\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\\n        return { passwordMismatch: true };\\n      } else {\\n        confirmPasswordControl.setErrors(null);\\n        return null;\\n      }\\n    };\\n  }\\n```\\n\\nIf the there are no errors then null is returned. If the passwords do no match we set the `passwordMismatch` error on the `confirmPasswordControl`.\\n\\n## Creating the Reactive Form\\n\\nNote that the `passwordMatch` function is passed in as the second argument in the `FormGroup` constructor:\\n\\n```\\npublic registrationForm: FormGroup = new FormGroup(\\n  {\\n    password: new FormControl(\'\', [\\n      Validators.required,\\n      Validators.minLength(8),\\n      Validators.maxLength(32),\\n      this.v.passwordMinLowerCaseLettersValidator(),\\n    ]),\\n    confirmPassword: new FormControl(\\n      \'\',\\n      Validators.compose([Validators.required])\\n    ),\\n  },\\n  this.v.passwordMatch(\'password\', \'confirmPassword\')\\n);\\n```\\n\\n## Creating the Reactive Form Template\\n\\n```\\n<mat-card style=\\"min-width: 10rem; max-width:30rem;margin: 2rem;\\">\\n  <form\\n    fxLayoutAlign=\\"stretch\\"\\n    fxLayout=\\"column\\"\\n    [formGroup]=\\"registrationForm\\"\\n    (ngSubmit)=\\"submit()\\"\\n  >\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\"password\\"\\n        placeholder=\\"Password\\"\\n        formControlName=\\"password\\"\\n      />\\n      <mat-hint *ngIf=\\"!passwordValue\\">Example @123PASSWord</mat-hint>\\n      <mat-error *ngIf=\\"passwordControl.invalid\\">{{\\n        getPasswordError()\\n      }}</mat-error>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input\\n        matInput\\n        type=\\"password\\"\\n        placeholder=\\"Confirm Password\\"\\n        formControlName=\\"confirmPassword\\"\\n      />\\n      <mat-error *ngIf=\\"confirmPasswordControl.invalid\\"\\n        >Passwords do not match\\n      </mat-error>\\n    </mat-form-field>\\n\\n    <button mat-button type=\\"submit\\" [disabled]=\\"!registrationForm.valid\\">\\n      Register\\n    </button>\\n  </form>\\n</mat-card>\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Validating Passwords with Angular Reactive Forms\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-ivy-hk79au\\">\\n</fs-link-preview>\\n","html":"<p>On our registration form we have a <code>password</code> field and a <code>confirmPassword</code> field.</p>\\n<p>We want to validate that the <code>confirmPassword</code> field matches the <code>password</code> field prior to enabling the submit button for the form.</p>\\n<p>If the passwords do not match then the <code>mat-error</code> notification below the <code>confirmPassword</code> field will display a message indicating this.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'matching-the-passwords\'>Matching the Passwords</h2>\\n<p>First within our <code>validation.service.ts</code> service we will create a factory function used to produce the <code>ValidatorFn</code> instance that will check whether the passwords match.</p>\\n<pre><code>  passwordMatch(password: string, confirmPassword: string): ValidatorFn {\\n    return (formGroup: AbstractControl): { [key: string]: any } | null =&gt; {\\n      const passwordControl = formGroup.get(password);\\n      const confirmPasswordControl = formGroup.get(confirmPassword);\\n\\n      if (!passwordControl || !confirmPasswordControl) {\\n        return null;\\n      }\\n\\n      if (\\n        confirmPasswordControl.errors &amp;&amp;\\n        !confirmPasswordControl.errors.passwordMismatch\\n      ) {\\n        return null;\\n      }\\n\\n      if (passwordControl.value !== confirmPasswordControl.value) {\\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\\n        return { passwordMismatch: true };\\n      } else {\\n        confirmPasswordControl.setErrors(null);\\n        return null;\\n      }\\n    };\\n  }\\n</code></pre>\\n<p>If the there are no errors then null is returned. If the passwords do no match we set the <code>passwordMismatch</code> error on the <code>confirmPasswordControl</code>.</p>\\n<h2 id=\'creating-the-reactive-form\'>Creating the Reactive Form</h2>\\n<p>Note that the <code>passwordMatch</code> function is passed in as the second argument in the <code>FormGroup</code> constructor:</p>\\n<pre><code>public registrationForm: FormGroup = new FormGroup(\\n  {\\n    password: new FormControl(&#39;&#39;, [\\n      Validators.required,\\n      Validators.minLength(8),\\n      Validators.maxLength(32),\\n      this.v.passwordMinLowerCaseLettersValidator(),\\n    ]),\\n    confirmPassword: new FormControl(\\n      &#39;&#39;,\\n      Validators.compose([Validators.required])\\n    ),\\n  },\\n  this.v.passwordMatch(&#39;password&#39;, &#39;confirmPassword&#39;)\\n);\\n</code></pre>\\n<h2 id=\'creating-the-reactive-form-template\'>Creating the Reactive Form Template</h2>\\n<pre><code>&lt;mat-card style=&quot;min-width: 10rem; max-width:30rem;margin: 2rem;&quot;&gt;\\n  &lt;form\\n    fxLayoutAlign=&quot;stretch&quot;\\n    fxLayout=&quot;column&quot;\\n    [formGroup]=&quot;registrationForm&quot;\\n    (ngSubmit)=&quot;submit()&quot;\\n  &gt;\\n    &lt;mat-form-field&gt;\\n      &lt;input\\n        matInput\\n        type=&quot;password&quot;\\n        placeholder=&quot;Password&quot;\\n        formControlName=&quot;password&quot;\\n      /&gt;\\n      &lt;mat-hint *ngIf=&quot;!passwordValue&quot;&gt;Example @123PASSWord&lt;/mat-hint&gt;\\n      &lt;mat-error *ngIf=&quot;passwordControl.invalid&quot;&gt;{{\\n        getPasswordError()\\n      }}&lt;/mat-error&gt;\\n    &lt;/mat-form-field&gt;\\n    &lt;mat-form-field&gt;\\n      &lt;input\\n        matInput\\n        type=&quot;password&quot;\\n        placeholder=&quot;Confirm Password&quot;\\n        formControlName=&quot;confirmPassword&quot;\\n      /&gt;\\n      &lt;mat-error *ngIf=&quot;confirmPasswordControl.invalid&quot;\\n        &gt;Passwords do not match\\n      &lt;/mat-error&gt;\\n    &lt;/mat-form-field&gt;\\n\\n    &lt;button mat-button type=&quot;submit&quot; [disabled]=&quot;!registrationForm.valid&quot;&gt;\\n      Register\\n    &lt;/button&gt;\\n  &lt;/form&gt;\\n&lt;/mat-card&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Validating Passwords with Angular Reactive Forms\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-ivy-hk79au\'>\\n</fs-link-preview></p>\\n","summary":"Validating Passwords with Angular Reactive Forms.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"1/14/2022","headerImage":"wildlife-3289121_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/wildlife-3289121_1920.jpg","title":"Validating Passwords with Angular Reactive Forms","readingTime":2,"wordCount":345},{"category":"Tasks","type":"task","md5":"69593041831dd277d51c461197d4fedd","filename":"viewing-generated-global-css-for-angular-sass-projects.md","path":"tasks/angular/viewing-generated-global-css-for-angular-sass-projects.md","id":"tasks--angular--viewing-generated-global-css-for-angular-sass-projects","markdown":"\\nWe wish to see what CSS is generated for `styles.scss`.\\n\\n# Approach\\n\\nWhen opening an element in Chrome Developer Tools, by default it will show the SCSS `source map`, and not `styles.css`. However `styles.css` is right next to the tab containing the `SCSS`.\\n\\n# Demo\\n\\nIf we use a web container on Stackblitz it will serve `styles.css`.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Viewing Generated Global CSS For Angular SASS Projects\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\\">\\n</fs-link-preview>\\n","html":"<p>We wish to see what CSS is generated for <code>styles.scss</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>When opening an element in Chrome Developer Tools, by default it will show the SCSS <code>source map</code>, and not <code>styles.css</code>. However <code>styles.css</code> is right next to the tab containing the <code>SCSS</code>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>If we use a web container on Stackblitz it will serve <code>styles.css</code>.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Viewing Generated Global CSS For Angular SASS Projects\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-login-form-learning?file=src/app/app.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Viewing Generated Global CSS For Angular SASS Projects.","tags":["Angular","JavaScript","TypeScript",null],"tagString":"Angular, JavaScript, TypeScript, ","author":"Ole Ersoy","date":"5/24/2022","headerImage":"clover-1949981_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/clover-1949981_1920.jpg","title":"Viewing Generated Global CSS For Angular SASS Projects","readingTime":1,"wordCount":105},{"category":"Tasks","type":"task","md5":"e9bd11f0e5fb37fb723dfe6c57da181b","filename":"checking-aws-amplify-project-status.md","path":"tasks/aws/checking-aws-amplify-project-status.md","id":"tasks--aws--checking-aws-amplify-project-status","markdown":"\\nWe want to check the project status for our AWS Amplify project.\\n\\n# Approach\\n\\nFrom the root of the project folder run:\\n```\\namplify status\\n```\\n","html":"<p>We want to check the project status for our AWS Amplify project.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>From the root of the project folder run:</p>\\n<pre><code>amplify status\\n</code></pre>\\n","summary":"Checking Project Status Using the Amplify CLI.","tags":["AWS","Amplify"],"tagString":"AWS, Amplify","author":"Ole Ersoy","date":"11/16/2021","headerImage":"jumping-spider-1127626_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jumping-spider-1127626_1920.jpg","title":"Checking Project Status Using the Amplify CLI","readingTime":1,"wordCount":23},{"category":"Tasks","type":"task","md5":"3d1222b19368817df00153059e342e16","filename":"configuring-the-aws-amplify-cli.md","path":"tasks/aws/configuring-the-aws-amplify-cli.md","id":"tasks--aws--configuring-the-aws-amplify-cli","markdown":"\\nWe are getting started with AWS Amplify and we need to configure the CLI.\\n\\n# Approach\\n\\nFirst setup the [AWS Free Tier Account](https://aws.amazon.com/free/?all-free-tier.sort-by=item.additionalFields.SortRank&all-free-tier.sort-order=asc).\\n\\nThen install AWS Amplify:\\n\\n```\\nnpm i -g @aws-amplify/cli\\n```\\n\\nConfigure Amplify:\\n\\n```\\namplify configure\\n```\\n\\nSelect the options.  For example:\\n\\n```\\nregion: US East 1\\nuser name (For IAM User): amplifyuser\\n```\\n\\nThe IAM Dashboard will now open up. Will will use this to obtain our access key and secret access key.\\n\\nSelect `next permissisons > next review > Create user`.\\n\\nSave the `access key id` and the `secret access key` CSV file and store it some place safe.\\n\\n\\nCongrats you are ready to Rock! To see a list of command the CLI provides run `amplify --help`.","html":"<p>We are getting started with AWS Amplify and we need to configure the CLI.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First setup the <a href=\'https://aws.amazon.com/free/?all-free-tier.sort-by=item.additionalFields.SortRank&amp;all-free-tier.sort-order=asc\'>AWS Free Tier Account</a>.</p>\\n<p>Then install AWS Amplify:</p>\\n<pre><code>npm i -g @aws-amplify/cli\\n</code></pre>\\n<p>Configure Amplify:</p>\\n<pre><code>amplify configure\\n</code></pre>\\n<p>Select the options.  For example:</p>\\n<pre><code>region: US East 1\\nuser name (For IAM User): amplifyuser\\n</code></pre>\\n<p>The IAM Dashboard will now open up. Will will use this to obtain our access key and secret access key.</p>\\n<p>Select <code>next permissisons &gt; next review &gt; Create user</code>.</p>\\n<p>Save the <code>access key id</code> and the <code>secret access key</code> CSV file and store it some place safe.</p>\\n<p>Congrats you are ready to Rock! To see a list of command the CLI provides run <code>amplify --help</code>.</p>\\n","summary":"Configuring the AWS Amplify CLI.","tags":["AWS","Amplify"],"tagString":"AWS, Amplify","author":"Ole Ersoy","date":"1/16/2021","headerImage":"music-player-2951399_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/music-player-2951399_1920.jpg","title":"Configuring the AWS Amplify CLI","readingTime":1,"wordCount":133},{"category":"Tasks","type":"task","md5":"2c81fbd87205f4d2ccbcf4858245893d","filename":"importing-existing-cognito-resources.md","path":"tasks/aws/importing-existing-cognito-resources.md","id":"tasks--aws--importing-existing-cognito-resources","markdown":"\\nWe are redesigning an Angular Application from scratch and need to import existing Cognito resources into it. \\n\\n# Approach\\n\\n[This is the reference document](https://aws.amazon.com/blogs/mobile/use-existing-cognito-resources-for-your-amplify-api-storage-and-more/).\\n\\nFirst initialize amplify for the new project:\\n```\\namplify init\\n```\\n\\nThen run the import:\\n```\\namplify import auth\\n```\\n\\nSelect the user and identiy pool from the list of options.\\n\\nAs the native client, we select the web client as we are using `OAuth`.\\n\\nRun `amplify push`.  The app is now using the existing Cognito identity pool for authentication.","html":"<p>We are redesigning an Angular Application from scratch and need to import existing Cognito resources into it. </p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p><a href=\'https://aws.amazon.com/blogs/mobile/use-existing-cognito-resources-for-your-amplify-api-storage-and-more/\'>This is the reference document</a>.</p>\\n<p>First initialize amplify for the new project:</p>\\n<pre><code>amplify init\\n</code></pre>\\n<p>Then run the import:</p>\\n<pre><code>amplify import auth\\n</code></pre>\\n<p>Select the user and identiy pool from the list of options.</p>\\n<p>As the native client, we select the web client as we are using <code>OAuth</code>.</p>\\n<p>Run <code>amplify push</code>.  The app is now using the existing Cognito identity pool for authentication.</p>\\n","summary":"Importing Existing Cognito Resources.","tags":["AWS","Amplify"],"tagString":"AWS, Amplify","author":"Ole Ersoy","date":"9/16/2021","headerImage":"leopard-2896635_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/leopard-2896635_1920.jpg","title":"Importing Existing Cognito Resources","readingTime":1,"wordCount":96},{"category":"Tasks","type":"task","md5":"c1f516f93ee1365a0ea0b3c7ffd40193","filename":"reconfiguring-the-aws-amplify-cli.md","path":"tasks/aws/reconfiguring-the-aws-amplify-cli.md","id":"tasks--aws--reconfiguring-the-aws-amplify-cli","markdown":"\\nWe have already [created an AWS Account and initialized the Amplify CLI](https://developer.fireflysemantics.com/tasks/tasks--aws--configuring-the-aws-amplify-cli) and now we have moved to a new laptop and need to configure the AWS Amplify CLI using our existing aws credentials.\\n\\n# Approach\\n\\nFirst install the CLI again on the new laptop.  Then configure Amplify:\\n\\n```\\namplify configure\\n```\\n\\nSelect the region and enter your existing amplify IAM user.  For example:\\n\\n```\\nregion: US East 1\\nuser name (For IAM User): amplifyuser\\n```\\n\\nThe IAM Dashboard will now open up.\\n\\nJust cancel out of it and continue with the seutp process using you existing credentials (access key and secret access key).","html":"<p>We have already <a href=\'https://developer.fireflysemantics.com/tasks/tasks--aws--configuring-the-aws-amplify-cli\'>created an AWS Account and initialized the Amplify CLI</a> and now we have moved to a new laptop and need to configure the AWS Amplify CLI using our existing aws credentials.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First install the CLI again on the new laptop.  Then configure Amplify:</p>\\n<pre><code>amplify configure\\n</code></pre>\\n<p>Select the region and enter your existing amplify IAM user.  For example:</p>\\n<pre><code>region: US East 1\\nuser name (For IAM User): amplifyuser\\n</code></pre>\\n<p>The IAM Dashboard will now open up.</p>\\n<p>Just cancel out of it and continue with the seutp process using you existing credentials (access key and secret access key).</p>\\n","summary":"Reconfiguring the AWS Amplify CLI.","tags":["AWS","Amplify"],"tagString":"AWS, Amplify","author":"Ole Ersoy","date":"1/16/2021","headerImage":"tube-full-amplifier-2087082_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/tube-full-amplifier-2087082_1920.jpg","title":"Reconfiguring the AWS Amplify CLI","readingTime":1,"wordCount":111},{"category":"Tasks","type":"task","md5":"04a0e82eeb9b99aa8600d9caf7b7d703","filename":"removing-your-newly-created-amplify-cognito-pool.md","path":"tasks/aws/removing-your-newly-created-amplify-cognito-pool.md","id":"tasks--aws--removing-your-newly-created-amplify-cognito-pool","markdown":"\\nWe ran `amplify add auth` and made a mistake and now we want to delete the cloudformation for auth and start over.\\n\\n# Approach\\n\\nRun `amplify remove auth`.","html":"<p>We ran <code>amplify add auth</code> and made a mistake and now we want to delete the cloudformation for auth and start over.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Run <code>amplify remove auth</code>.</p>\\n","summary":"Removing Your Newly Created Amplify Cognito Pool.","tags":["AWS","Amplify","Cognito","JavaScript"],"tagString":"AWS, Amplify, Cognito, JavaScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"remove-cognito-pool.png","headerImageURL":"https://fireflysemantics.github.io/i/developer/remove-cognito-pool.png","title":"Removing Your Newly Created Amplify Cognito Pool","readingTime":1,"wordCount":27},{"category":"Tasks","type":"task","md5":"f619f6f7c4c74afda9eed4a7e199e295","filename":"resetting-aws-amplify.md","path":"tasks/aws/resetting-aws-amplify.md","id":"tasks--aws--resetting-aws-amplify","markdown":"\\n\\nWe are getting errors after configuration on `amplify push`.\\n\\n# Approach\\n\\n```\\namplify delete \\nScanning for plugins...\\nPlugin scan successful\\n? Are you sure you want to continue? (This would delete all the environments of the project from the cloud and wipe out all the local amplify resource files) (Y/n)\\n```\\n\\nThen reset the project from scratch:\\n```\\namplify init\\namplify add auth\\namplify push\\n```\\n","html":"<p>We are getting errors after configuration on <code>amplify push</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>amplify delete \\nScanning for plugins...\\nPlugin scan successful\\n? Are you sure you want to continue? (This would delete all the environments of the project from the cloud and wipe out all the local amplify resource files) (Y/n)\\n</code></pre>\\n<p>Then reset the project from scratch:</p>\\n<pre><code>amplify init\\namplify add auth\\namplify push\\n</code></pre>\\n","summary":"Resetting AWS Amplify.","tags":["AWS","Amplify","JavaScript"],"tagString":"AWS, Amplify, JavaScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"counter-949233_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/counter-949233_1920.jpg","title":"Resetting AWS Amplify","readingTime":1,"wordCount":61},{"category":"Tasks","type":"task","md5":"86131d49544ac7a2bcfa8a6f9635fc9d","filename":"updating-amplify-google-oauth-client-credentials.md","path":"tasks/aws/updating-amplify-google-oauth-client-credentials.md","id":"tasks--aws--updating-amplify-google-oauth-client-credentials","markdown":"\\nWe\u2019ve created a new client for our Google Social application login and we need to update the client credentials for the application.\\n\\n# Approach\\n\\nFrom the root of the project run:\\n\\n```\\namplify auth update\\nWhat do you want to do? Update OAuth social providers\\nSelect the identity providers you want to configure for your user pool: Google\\nEnter your Google Web Client ID for your OAuth flow:  \\n51-uqc4baf.apps.googleusercontent.com\\nm\\nEnter your Google Web Client Secret for your OAuth flow:  \\nGOFX-zasbsNwq-ila8mV945mdl\\namplify push\\n```\\n\\nThe client is now updated.","html":"<p>We\u2019ve created a new client for our Google Social application login and we need to update the client credentials for the application.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>From the root of the project run:</p>\\n<pre><code>amplify auth update\\nWhat do you want to do? Update OAuth social providers\\nSelect the identity providers you want to configure for your user pool: Google\\nEnter your Google Web Client ID for your OAuth flow:  \\n51-uqc4baf.apps.googleusercontent.com\\nm\\nEnter your Google Web Client Secret for your OAuth flow:  \\nGOFX-zasbsNwq-ila8mV945mdl\\namplify push\\n</code></pre>\\n<p>The client is now updated.</p>\\n","summary":"Updating Amplify Google OAuth Client Credentials.","tags":["AWS","Amplify"],"tagString":"AWS, Amplify","author":"Ole Ersoy","date":"12/11/2021","headerImage":"flying-6397200_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flying-6397200_1920.jpg","title":"Updating Amplify Google OAuth Client Credentials","readingTime":1,"wordCount":93},{"category":"Tasks","type":"task","md5":"bc350a92d56e7224f732ff0d42cfd596","filename":"updating-cognito-redirect-uris-with-amplify.md","path":"tasks/aws/updating-cognito-redirect-uris-with-amplify.md","id":"tasks--aws--updating-cognito-redirect-uris-with-amplify","markdown":"\\nWe need to update the Amplify Redirect URIs for our project.\\n\\n# Approach\\n\\n```\\namplify update auth\\n```","html":"<p>We need to update the Amplify Redirect URIs for our project.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>amplify update auth\\n</code></pre>\\n","summary":"Updating AWS Congnito Redirect URIs with Amplify.","tags":["AWS","Amplify","JavaScript"],"tagString":"AWS, Amplify, JavaScript","author":"Ole Ersoy","date":"9/22/2021","headerImage":"counter-949233_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/counter-949233_1920.jpg","title":"Updating AWS Congnito Redirect URIs with Amplify","readingTime":1,"wordCount":15},{"category":"Tasks","type":"task","md5":"2d238faa8c804a3127e97a20b97d51ed","filename":"changing-all-js-file-extensions-to-ts-using-bash-shell.md","path":"tasks/bash/changing-all-js-file-extensions-to-ts-using-bash-shell.md","id":"tasks--bash--changing-all-js-file-extensions-to-ts-using-bash-shell","markdown":"\\nWe wish to change all `*.js` files to `*.ts` files in the current directory and sub directories.\\n\\n# Approach\\n\\nMake sure `rename` is installed ( `brew install rename` ).\\n\\n```\\nfind . -name \\"*.js\\" -exec rename \'s/\\\\.js$/.ts/\' \'{}\' +\\n...","html":"<p>We wish to change all <code>*.js</code> files to <code>*.ts</code> files in the current directory and sub directories.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Make sure <code>rename</code> is installed ( <code>brew install rename</code> ).</p>\\n<p>```\\nfind . -name &quot;*.js&quot; -exec rename &#39;s/.js$/.ts/&#39; &#39;{}&#39; +\\n...</p>\\n","summary":"Changing all JS File Extensions to TS Using BASH Shell.","tags":["BASH","Linux","TypeScript","JavaScript","MacOS"],"tagString":"BASH, Linux, TypeScript, JavaScript, MacOS","author":"Ole Ersoy","date":"6/04/2021","headerImage":"jellyfish-994487_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-994487_1920.jpg","title":"Changing all JS File Extensions to TS Using BASH Shell","readingTime":1,"wordCount":34},{"category":"Tasks","type":"task","md5":"569e1170ef6eb168f3cd93426662b55b","filename":"creating-a-blockchain.md","path":"tasks/blockchain/creating-a-blockchain.md","id":"tasks--blockchain--creating-a-blockchain","markdown":"\\nWe have created a [Block](https://developer.fireflysemantics.com/concepts/concepts--blockchain--understanding-what-a-blockchain-block-is) implementation.\\n\\nNow we want to create a Blockchain.\\n\\n# Approach\\n\\nThe method `initializeChain()` will create the genesis block and put it on the `blockchain` array.\\n\\nThe `lastBlock` method retrieves the most recent block added to the chain.  We use this method to retrieve the current hash when creating a new block.\\n\\nTo create a new `Block` instance we can call `createBlock()`.\\n\\nWe can then `post` (Add) this block to the chain using `postBlock()`.\\n\\n```\\nclass BlockChain {\\n  index: number = 0;\\n  blockchain: Block[];\\n  constructor() {\\n    this.initializeChain();\\n  }\\n  initializeChain() {\\n    const block: Block = new Block(\\n      this.index,\\n      \\"02/21/2021\\",\\n      \\"Our first ever block\\",\\n      \\"Block 0\\"\\n    );\\n    this.blockchain = [block];\\n    this.index++;\\n  }\\n  lastBlock(): Block {\\n    return this.blockchain[this.blockchain.length - 1];\\n  }\\n  createBlock(timestamp: string, data: any): Block {\\n    const b = new Block(this.index, timestamp, data, this.lastBlock().hash);\\n    this.index++;\\n    return b;\\n  }\\n  postBlock(block: Block) {\\n    this.blockchain.push(block);\\n  }\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Blockchain\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/blockchain-api\\">\\n</fs-link-preview>\\n","html":"<p>We have created a <a href=\'https://developer.fireflysemantics.com/concepts/concepts--blockchain--understanding-what-a-blockchain-block-is\'>Block</a> implementation.</p>\\n<p>Now we want to create a Blockchain.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The method <code>initializeChain()</code> will create the genesis block and put it on the <code>blockchain</code> array.</p>\\n<p>The <code>lastBlock</code> method retrieves the most recent block added to the chain.  We use this method to retrieve the current hash when creating a new block.</p>\\n<p>To create a new <code>Block</code> instance we can call <code>createBlock()</code>.</p>\\n<p>We can then <code>post</code> (Add) this block to the chain using <code>postBlock()</code>.</p>\\n<pre><code>class BlockChain {\\n  index: number = 0;\\n  blockchain: Block[];\\n  constructor() {\\n    this.initializeChain();\\n  }\\n  initializeChain() {\\n    const block: Block = new Block(\\n      this.index,\\n      &quot;02/21/2021&quot;,\\n      &quot;Our first ever block&quot;,\\n      &quot;Block 0&quot;\\n    );\\n    this.blockchain = [block];\\n    this.index++;\\n  }\\n  lastBlock(): Block {\\n    return this.blockchain[this.blockchain.length - 1];\\n  }\\n  createBlock(timestamp: string, data: any): Block {\\n    const b = new Block(this.index, timestamp, data, this.lastBlock().hash);\\n    this.index++;\\n    return b;\\n  }\\n  postBlock(block: Block) {\\n    this.blockchain.push(block);\\n  }\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Blockchain\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/blockchain-api\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Blockchain.","tags":["JavaScript","TypeScript","Blockchain"],"tagString":"JavaScript, TypeScript, Blockchain","author":"Ole Ersoy","date":"3/17/2021","headerImage":"fish-swarm-432821_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/fish-swarm-432821_1920.jpg","title":"Creating a Blockchain","readingTime":1,"wordCount":192},{"category":"Tasks","type":"task","md5":"7079918519e12de5e96bae021de5eb19","filename":"Spacing Links with the CSS Adjacent (+) Selector.md","path":"tasks/css/Spacing Links with the CSS Adjacent (+) Selector.md","id":"tasks--css--Spacing Links with the CSS Adjacent (+) Selector","markdown":"\\nWhen a `link` is adjacent to another `link` we want to give it a left margin of `2rem`.\\n\\n# Approach\\n\\nUse the adjacent ( `+` ) selector.\\n```\\na + a {\\n    margin-left: 2rem;\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Spacing Links with the CSS Adjacent (+) Selector\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-r8zam7?file=styles.css,index.html\\">\\n</fs-link-preview>","html":"<p>When a <code>link</code> is adjacent to another <code>link</code> we want to give it a left margin of <code>2rem</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use the adjacent ( <code>+</code> ) selector.</p>\\n<pre><code>a + a {\\n    margin-left: 2rem;\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Spacing Links with the CSS Adjacent (+) Selector\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-r8zam7?file=styles.css,index.html\'>\\n</fs-link-preview></p>\\n","summary":"Spacing Links with the CSS Adjacent (+) Selector.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"6/17/2022","headerImage":"ginko-3510673_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ginko-3510673_1920.jpg","title":"Spacing Links with the CSS Adjacent (+) Selector","readingTime":1,"wordCount":71},{"category":"Tasks","type":"task","md5":"0927db9e37265e344ed5b55ff1ae6986","filename":"applying-styling-to-all-but-the-first-element-of-a-certain-type.md","path":"tasks/css/applying-styling-to-all-but-the-first-element-of-a-certain-type.md","id":"tasks--css--applying-styling-to-all-but-the-first-element-of-a-certain-type","markdown":"\\nWe have the following div elements:\\n\\n```\\n  <div>Box 1</div>\\n  <div>Box 2</div>\\n  <div>Box 3</div>\\n```\\n\\nWe want to assign a left margin of `2rem` to all but the first `div` element.\\n\\n\\n# Approach\\n\\n```\\ndiv:not(:first-of-type) {\\n  margin-left: 2rem;\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Applying Styling to All But the First Element of a Certain Type\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/css-style-all-but-first-element?file=styles.css\\">\\n</fs-link-preview>","html":"<p>We have the following div elements:</p>\\n<pre><code>  &lt;div&gt;Box 1&lt;/div&gt;\\n  &lt;div&gt;Box 2&lt;/div&gt;\\n  &lt;div&gt;Box 3&lt;/div&gt;\\n</code></pre>\\n<p>We want to assign a left margin of <code>2rem</code> to all but the first <code>div</code> element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>div:not(:first-of-type) {\\n  margin-left: 2rem;\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Applying Styling to All But the First Element of a Certain Type\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/css-style-all-but-first-element?file=styles.css\'>\\n</fs-link-preview></p>\\n","summary":"Applying Styling to All But the First Element of a Certain Type.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"2/17/2021","headerImage":"fish-1033538_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/fish-1033538_1920.jpg","title":"Applying Styling to All But the First Element of a Certain Type","readingTime":1,"wordCount":92},{"category":"Tasks","type":"task","md5":"0ce175e936078689236275d1326358f6","filename":"binding-angular-css-classes-dynamically-with-@host-binding.md","path":"tasks/css/binding-angular-css-classes-dynamically-with-@host-binding.md","id":"tasks--css--binding-angular-css-classes-dynamically-with-@host-binding","markdown":"\\nWithin our `app` component we wish to add a `onValid` CSS class whenever the `_valid` property on the component is true.\\n\\n# Approach\\n\\nWithin `styles.css` create the `onValid` CSS `class`.\\n\\n```\\n.onValid {\\n    color: aqua;\\n}\\n```\\n\\nDecorate a `isValid()` `getter` with `@HostBinding` that will add the `onValid` CSS `class` to the component whenever the `_valid` property is true.\\n```\\n@HostBinding(\'class.onValid\')\\nget isValid() { \\n    return this._valid;\\n}\\nprivate _valid = true;\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Binding Angular CSS Classes Dynamically with @HostBinding\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/angular-ivy-kicr8c?file=src%2Findex.html\\">\\n</fs-link-preview>","html":"<p>Within our <code>app</code> component we wish to add a <code>onValid</code> CSS class whenever the <code>_valid</code> property on the component is true.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within <code>styles.css</code> create the <code>onValid</code> CSS <code>class</code>.</p>\\n<pre><code>.onValid {\\n    color: aqua;\\n}\\n</code></pre>\\n<p>Decorate a <code>isValid()</code> <code>getter</code> with <code>@HostBinding</code> that will add the <code>onValid</code> CSS <code>class</code> to the component whenever the <code>_valid</code> property is true.</p>\\n<pre><code>@HostBinding(&#39;class.onValid&#39;)\\nget isValid() { \\n    return this._valid;\\n}\\nprivate _valid = true;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Binding Angular CSS Classes Dynamically with @HostBinding\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/angular-ivy-kicr8c?file=src%2Findex.html\'>\\n</fs-link-preview></p>\\n","summary":"Binding Angular CSS Classes Dynamically with @HostBinding.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"6/26/2022","headerImage":"chameleon-4185364_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chameleon-4185364_1920.jpg","title":"Binding Angular CSS Classes Dynamically with @HostBinding","readingTime":1,"wordCount":108},{"category":"Tasks","type":"task","md5":"68d1031167c10e57f2296f241837b910","filename":"generating-a-css-background-shape-with-css-clip-path.md","path":"tasks/css/generating-a-css-background-shape-with-css-clip-path.md","id":"tasks--css--generating-a-css-background-shape-with-css-clip-path","markdown":"\\nWe want the background of our div element to slice away the bottom right corner of our element.\\n\\n# Approach\\n\\nWe will generate a CSS clip path ( We will clip away a portion of the element) using [ Clippy ](https://bennettfeely.com/clippy/).\\n\\nUnder demo size, set the height of the clippy to 600px so that it matches a mobile phone. Then clip away the bottom right corner so that it looks like this:\\n\\n<img src=\\"https://fireflysemantics.github.io/i/developer/clippy-css-article.png\\">\\n\\n\\nThe clip path code is at the bottom. It\u2019s this:\\n```\\nclip-path: polygon(100% 0, 100% 57%, 54% 100%, 0 100%, 0 0);\\nWe will style our div like this:\\ndiv {\\n    height: 100%;\\n    clip-path: polygon(100% 0, 100% 57%, 54% 100%, 0 100%, 0 0);\\n    background-color:rgb(180, 197, 27);\\n}\\n```\\n\\nOnly the portions of the element that matches the clip-path is tennis ball colored.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Generating a CSS Background Shape with CSS Clip Path\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/typescript-materialize-file-input\\">\\n</fs-link-preview>","html":"<p>We want the background of our div element to slice away the bottom right corner of our element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will generate a CSS clip path ( We will clip away a portion of the element) using <a href=\'https://bennettfeely.com/clippy/\'> Clippy </a>.</p>\\n<p>Under demo size, set the height of the clippy to 600px so that it matches a mobile phone. Then clip away the bottom right corner so that it looks like this:</p>\\n<img src=\'https://fireflysemantics.github.io/i/developer/clippy-css-article.png\'>\\n\\n\\n<p>The clip path code is at the bottom. It\u2019s this:</p>\\n<pre><code>clip-path: polygon(100% 0, 100% 57%, 54% 100%, 0 100%, 0 0);\\nWe will style our div like this:\\ndiv {\\n    height: 100%;\\n    clip-path: polygon(100% 0, 100% 57%, 54% 100%, 0 100%, 0 0);\\n    background-color:rgb(180, 197, 27);\\n}\\n</code></pre>\\n<p>Only the portions of the element that matches the clip-path is tennis ball colored.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Generating a CSS Background Shape with CSS Clip Path\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/typescript-materialize-file-input\'>\\n</fs-link-preview></p>\\n","summary":"Generating a CSS Background Shape with CSS Clip Path.","tags":["CSS","JavaScript","HTML"],"tagString":"CSS, JavaScript, HTML","author":"Ole Ersoy","date":"2/17/2021","headerImage":"nature-3801537_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/nature-3801537_1920.jpg","title":"Generating a CSS Background Shape with CSS Clip Path","readingTime":1,"wordCount":193},{"category":"Tasks","type":"task","md5":"f5698264c8c31cf0ebb3c325699daf23","filename":"learning-css-flexbox-using-the-chrome-developer-tools.md","path":"tasks/css/learning-css-flexbox-using-the-chrome-developer-tools.md","id":"tasks--css--learning-css-flexbox-using-the-chrome-developer-tools","markdown":"\\nWe have a `main` element flexbox container with three `div` elements (flexbox items) in it.\\n\\n```\\n<main>\\n   <div class=\\"item1\\"></div>\\n   <div class=\\"item2\\"></div>\\n   <div class=\\"item3\\"></div>\\n</main>\\n```\\n\\nAnd we want to see how these can be styled using Flexbox.\\n\\n# Approach\\n\\n[This is a link to our Youtube for this tutorial](https://youtu.be/Y_2PFtCj2Nw).\\n\\nWe will be using the Flexbox tooling that comes with Chrome Developer Tools so we have created a [Stackblitz Demo with scaffolding](https://stackblitz.com/edit/web-platform-yvqcp2?file=index.html).\\n\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Learning CSS Flexbox Using the Chrome Developer Tools - Demo 1\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-ebu4bf?file=index.html\\">\\n</fs-link-preview>\\n\\nOpen it and you will find an `index.html` document with both the CSS and `html`.\\n\\nThe `main` flexbox container has been given the following base styling.\\n\\n```\\nmain {\\n    display: flex;\\n    padding: 1rem;\\n    background-color: gray;\\n    height: 400px;\\n}\\n```\\n\\nWe\u2019ve also created base styling for each `div` flex item contained within the `main` element.\\n\\n```\\ndiv {\\n   margin: 1rem;\\n   min-height: 100px;\\n   width: 100px;\\n   padding: 1rem;\\n}\\n```\\n\\nEach `div` item has been given a unique `color` and an initial `width` and `height`. For example the last item `.item3` has this style.\\n\\n```\\n.item3 {\\n   background-color: aqua;\\n   min-height: 300px;\\n}\\n```\\n\\nOpen the page in a new Window by clicking `Open in New Window` on the Stackblitz demo.\\n\\nThen open the developer tooling and dock it to the left side of the window.\\n\\nTo do this click on the three little vertical dots menu selector and the dock options will appear.\\n\\n<img src=\\"https://fireflysemantics.github.io/i/developer/flexboxCSS2.png\\" alt=\\"Dock Chrome Developer Tooling\\" title=\\"Dock Chrome Developer Tooling\\">\\n\\nThen click on the `main` element. Notice that the CSS for it has a little flexbox icon on the right side that allows us to open Chromes Developer Flexbox Tooling. Open that like this.\\n\\n<img src=\\"https://fireflysemantics.github.io/i/developer/flexboxCSS3.png\\" alt=\\"Flexbox Chrome Developer Tooling\\" title=\\"Flexbox  Chrome Developer Tooling\\">\\n\\nWe now have access to the flex container properties.\\n\\n- `flex-direction`\\n- `flex-wrap`\\n- `align-content`\\n- `justify-content`\\n- `align-items`\\n\\nBy clicking on each option we apply them to the styling of the `main` element flexbox container.\\n\\nIf we were to explicitly set these options using the defaults on the `main` element they would be set as shown on the chrome developer tooling flexbox dialog or as follows (Look in the computed tab as well to verify these default settings).\\n\\n```\\nmain {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    align-content: normal;\\n    justify-content: normal;\\n    align-items: normal; \\n}\\n```\\n\\n## Turn off Flexbox Display\\n\\nIf we turn off flexbox by clicking on the `checkbox` next to the `display` property we see that the `display` property value returns to the default which is `block` and then items render at their designated vertical document flow order.\\n\\nNotice that the `main` element container retains the height of `400px`, thus the items overflow the container. If we turn off the `height` property the container stretches to fit the items.\\n\\n# Experiments\\n\\nExperimentation with the flexbox properties can now begin using the flexbox dialog.\\n\\n## align-items\\n\\nWhen the `flex-direction` is set to `row` or `row-reverse` the `align-items` property aligns the items along the `cross-axis` or the vertical axis (top to bottom).\\n\\nIf the `flex-direction` is set to column or `column-reverse` then the items are aligned along the main axis.\\n\\nThe default value for `align-items` is `normal` or `stretch`. \\n\\nClick on the `stretch` option in the developer tooling for `align-items` and the rendering will remain the same. \\n\\nThe `stretch` value is the reason that we see that all the items are stretched out to fit the size of the `main` container.\\n\\nIf we change the container `height` to `500px`, we see that the flex items now stretch to fill the additional space. If we set the `main` element `height` to `200px` we see that the flex items with a `height` greater than this overflow the container.\\n\\nSet the `height` back to `400px` and try out the other values:\\n\\n- `center`\\n- `flex-start`\\n- `flex-end`\\n- `baseline`\\n- `justify-content`\\n\\n## justify-content\\n\\nWhen the `flex-direction` is set to `row` or `row-reverse` the `justify-content` property aligns the items along the `main-axis` or the horizontal axis (left to right).\\n\\nIf the `flex-direction` is set to `column` or `column-reverse` then the items are aligned along the cross axis.\\n\\nThe default value for `justify-content` is `flex-start`. Try out the other values.\\n\\n- `center`\\n- `flex-end`\\n- `space-between`\\n- `space-around`\\n- `space-evenly`\\n- `align-content`\\n\\n## align-content\\n\\nThe default value for `align-content` is `normal` or `stretch`.\\n\\nIf we try any of the property values for `align-content` while the `flex-direction` is set to `row` nothing changes.\\n\\nThe reason for this is that the `align-content` property sets the distribution of space between and around content items along a flexbox\'s `cross-axis`.\\n\\nSo in order to see the effect we need the items to wrap.\\n\\nWe setup a different Stackblitz such that our items are wrapped and given an initial height thats the same for each item. We set `flex-wrap` to `wrap`. The `height` of the container is `100vh` giving the items a chance to wrap and the width is `400px`, causing the items to wrap.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Learning CSS Flexbox Using the Chrome Developer Tools - Demo 2\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-ut3f9r?file=index.html\\">\\n</fs-link-preview>\\n\\nThis is the `main` container CSS declaration.\\n\\n```\\nmain {\\ndisplay: flex;\\nflex-wrap: wrap;\\nheight: 100vh;\\nwidth: 400px;\\npadding: 1rem;\\nbackground-color: gray;\\n}\\n```\\n\\nAnd we have fixed the `height` and `width` of each `div` element.\\n\\n```\\ndiv {\\n    margin: 1rem;\\n    height: 100px;\\n    padding: 1rem;\\n    width: 100px;\\n}\\n.item1 {\\n    background-color: red;\\n}\\n.item2 {\\n    background-color: yellow;\\n}\\n.item3 {\\n    background-color: aqua;\\n}\\n```\\n\\nTry the different values for `align-content` and watch how the items are distributed along the cross-axis.\\n\\n## flex-basis, flex-grow, flex-shrink\\n\\nNotice that in the first Stacblitz demo the flexbox if we shrink the window the items shrink also even thought they have been given a fixed `100px` `width`.\\n\\nThat the \u201cFlexible\u201d part of flexbox.\\n\\nWe can also cause them to g`row` and `shrink` proportionately by using the values `flex-basis`, `flex-grow`, and `flex-shrink`. These must be applied to each flex item individually. So for example if we set `flex-grow` to `1` on the first `div` element it will expand that element to fill the remaining space.\\n```\\n.item1 {\\n    background-color: red;\\n    flex-grow: 1;\\n}\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Learning CSS Flexbox Using the Chrome Developer Tools - Demo 3\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-yvqcp2?file=index.html\\">\\n</fs-link-preview>\\n\\nIf you would like more insight into these [WebDevSimplified has an excellent Youtube covering these](https://youtu.be/fYq5PXgSsbE).\\n\\n\\n# Summary\\n\\nOne final note is that for the most part we looked at the distribution of the items using `flex-direction: row`.\\n\\nIf we change it to `flex-direction: column` then the `main-axis` runs from top to bottom and the `cross-axis` runs from left to right.\\n\\nAnd so for example `justify-content` when `flex-direction` is set to `column` will distribute the items along the `main-axis` still, however the `main-axis` now runs vertically from top to bottom.","html":"<p>We have a <code>main</code> element flexbox container with three <code>div</code> elements (flexbox items) in it.</p>\\n<pre><code>&lt;main&gt;\\n   &lt;div class=&quot;item1&quot;&gt;&lt;/div&gt;\\n   &lt;div class=&quot;item2&quot;&gt;&lt;/div&gt;\\n   &lt;div class=&quot;item3&quot;&gt;&lt;/div&gt;\\n&lt;/main&gt;\\n</code></pre>\\n<p>And we want to see how these can be styled using Flexbox.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p><a href=\'https://youtu.be/Y_2PFtCj2Nw\'>This is a link to our Youtube for this tutorial</a>.</p>\\n<p>We will be using the Flexbox tooling that comes with Chrome Developer Tools so we have created a <a href=\'https://stackblitz.com/edit/web-platform-yvqcp2?file=index.html\'>Stackblitz Demo with scaffolding</a>.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Learning CSS Flexbox Using the Chrome Developer Tools - Demo 1\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-ebu4bf?file=index.html\'>\\n</fs-link-preview></p>\\n<p>Open it and you will find an <code>index.html</code> document with both the CSS and <code>html</code>.</p>\\n<p>The <code>main</code> flexbox container has been given the following base styling.</p>\\n<pre><code>main {\\n    display: flex;\\n    padding: 1rem;\\n    background-color: gray;\\n    height: 400px;\\n}\\n</code></pre>\\n<p>We\u2019ve also created base styling for each <code>div</code> flex item contained within the <code>main</code> element.</p>\\n<pre><code>div {\\n   margin: 1rem;\\n   min-height: 100px;\\n   width: 100px;\\n   padding: 1rem;\\n}\\n</code></pre>\\n<p>Each <code>div</code> item has been given a unique <code>color</code> and an initial <code>width</code> and <code>height</code>. For example the last item <code>.item3</code> has this style.</p>\\n<pre><code>.item3 {\\n   background-color: aqua;\\n   min-height: 300px;\\n}\\n</code></pre>\\n<p>Open the page in a new Window by clicking <code>Open in New Window</code> on the Stackblitz demo.</p>\\n<p>Then open the developer tooling and dock it to the left side of the window.</p>\\n<p>To do this click on the three little vertical dots menu selector and the dock options will appear.</p>\\n<img src=\'https://fireflysemantics.github.io/i/developer/flexboxCSS2.png\' alt=\'Dock Chrome Developer Tooling\' title=\'Dock Chrome Developer Tooling\'>\\n\\n<p>Then click on the <code>main</code> element. Notice that the CSS for it has a little flexbox icon on the right side that allows us to open Chromes Developer Flexbox Tooling. Open that like this.</p>\\n<img src=\'https://fireflysemantics.github.io/i/developer/flexboxCSS3.png\' alt=\'Flexbox Chrome Developer Tooling\' title=\'Flexbox  Chrome Developer Tooling\'>\\n\\n<p>We now have access to the flex container properties.</p>\\n<ul>\\n<li><code>flex-direction</code></li>\\n<li><code>flex-wrap</code></li>\\n<li><code>align-content</code></li>\\n<li><code>justify-content</code></li>\\n<li><code>align-items</code></li>\\n</ul>\\n<p>By clicking on each option we apply them to the styling of the <code>main</code> element flexbox container.</p>\\n<p>If we were to explicitly set these options using the defaults on the <code>main</code> element they would be set as shown on the chrome developer tooling flexbox dialog or as follows (Look in the computed tab as well to verify these default settings).</p>\\n<pre><code>main {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: nowrap;\\n    align-content: normal;\\n    justify-content: normal;\\n    align-items: normal; \\n}\\n</code></pre>\\n<h2 id=\'turn-off-flexbox-display\'>Turn off Flexbox Display</h2>\\n<p>If we turn off flexbox by clicking on the <code>checkbox</code> next to the <code>display</code> property we see that the <code>display</code> property value returns to the default which is <code>block</code> and then items render at their designated vertical document flow order.</p>\\n<p>Notice that the <code>main</code> element container retains the height of <code>400px</code>, thus the items overflow the container. If we turn off the <code>height</code> property the container stretches to fit the items.</p>\\n<h1 id=\'experiments\'>Experiments</h1>\\n<p>Experimentation with the flexbox properties can now begin using the flexbox dialog.</p>\\n<h2 id=\'align-items\'>align-items</h2>\\n<p>When the <code>flex-direction</code> is set to <code>row</code> or <code>row-reverse</code> the <code>align-items</code> property aligns the items along the <code>cross-axis</code> or the vertical axis (top to bottom).</p>\\n<p>If the <code>flex-direction</code> is set to column or <code>column-reverse</code> then the items are aligned along the main axis.</p>\\n<p>The default value for <code>align-items</code> is <code>normal</code> or <code>stretch</code>. </p>\\n<p>Click on the <code>stretch</code> option in the developer tooling for <code>align-items</code> and the rendering will remain the same. </p>\\n<p>The <code>stretch</code> value is the reason that we see that all the items are stretched out to fit the size of the <code>main</code> container.</p>\\n<p>If we change the container <code>height</code> to <code>500px</code>, we see that the flex items now stretch to fill the additional space. If we set the <code>main</code> element <code>height</code> to <code>200px</code> we see that the flex items with a <code>height</code> greater than this overflow the container.</p>\\n<p>Set the <code>height</code> back to <code>400px</code> and try out the other values:</p>\\n<ul>\\n<li><code>center</code></li>\\n<li><code>flex-start</code></li>\\n<li><code>flex-end</code></li>\\n<li><code>baseline</code></li>\\n<li><code>justify-content</code></li>\\n</ul>\\n<h2 id=\'justify-content\'>justify-content</h2>\\n<p>When the <code>flex-direction</code> is set to <code>row</code> or <code>row-reverse</code> the <code>justify-content</code> property aligns the items along the <code>main-axis</code> or the horizontal axis (left to right).</p>\\n<p>If the <code>flex-direction</code> is set to <code>column</code> or <code>column-reverse</code> then the items are aligned along the cross axis.</p>\\n<p>The default value for <code>justify-content</code> is <code>flex-start</code>. Try out the other values.</p>\\n<ul>\\n<li><code>center</code></li>\\n<li><code>flex-end</code></li>\\n<li><code>space-between</code></li>\\n<li><code>space-around</code></li>\\n<li><code>space-evenly</code></li>\\n<li><code>align-content</code></li>\\n</ul>\\n<h2 id=\'align-content\'>align-content</h2>\\n<p>The default value for <code>align-content</code> is <code>normal</code> or <code>stretch</code>.</p>\\n<p>If we try any of the property values for <code>align-content</code> while the <code>flex-direction</code> is set to <code>row</code> nothing changes.</p>\\n<p>The reason for this is that the <code>align-content</code> property sets the distribution of space between and around content items along a flexbox&#39;s <code>cross-axis</code>.</p>\\n<p>So in order to see the effect we need the items to wrap.</p>\\n<p>We setup a different Stackblitz such that our items are wrapped and given an initial height thats the same for each item. We set <code>flex-wrap</code> to <code>wrap</code>. The <code>height</code> of the container is <code>100vh</code> giving the items a chance to wrap and the width is <code>400px</code>, causing the items to wrap.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Learning CSS Flexbox Using the Chrome Developer Tools - Demo 2\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-ut3f9r?file=index.html\'>\\n</fs-link-preview></p>\\n<p>This is the <code>main</code> container CSS declaration.</p>\\n<pre><code>main {\\ndisplay: flex;\\nflex-wrap: wrap;\\nheight: 100vh;\\nwidth: 400px;\\npadding: 1rem;\\nbackground-color: gray;\\n}\\n</code></pre>\\n<p>And we have fixed the <code>height</code> and <code>width</code> of each <code>div</code> element.</p>\\n<pre><code>div {\\n    margin: 1rem;\\n    height: 100px;\\n    padding: 1rem;\\n    width: 100px;\\n}\\n.item1 {\\n    background-color: red;\\n}\\n.item2 {\\n    background-color: yellow;\\n}\\n.item3 {\\n    background-color: aqua;\\n}\\n</code></pre>\\n<p>Try the different values for <code>align-content</code> and watch how the items are distributed along the cross-axis.</p>\\n<h2 id=\'flex-basis-flex-grow-flex-shrink\'>flex-basis, flex-grow, flex-shrink</h2>\\n<p>Notice that in the first Stacblitz demo the flexbox if we shrink the window the items shrink also even thought they have been given a fixed <code>100px</code> <code>width</code>.</p>\\n<p>That the \u201cFlexible\u201d part of flexbox.</p>\\n<p>We can also cause them to g<code>row</code> and <code>shrink</code> proportionately by using the values <code>flex-basis</code>, <code>flex-grow</code>, and <code>flex-shrink</code>. These must be applied to each flex item individually. So for example if we set <code>flex-grow</code> to <code>1</code> on the first <code>div</code> element it will expand that element to fill the remaining space.</p>\\n<pre><code>.item1 {\\n    background-color: red;\\n    flex-grow: 1;\\n}\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Learning CSS Flexbox Using the Chrome Developer Tools - Demo 3\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-yvqcp2?file=index.html\'>\\n</fs-link-preview></p>\\n<p>If you would like more insight into these <a href=\'https://youtu.be/fYq5PXgSsbE\'>WebDevSimplified has an excellent Youtube covering these</a>.</p>\\n<h1 id=\'summary\'>Summary</h1>\\n<p>One final note is that for the most part we looked at the distribution of the items using <code>flex-direction: row</code>.</p>\\n<p>If we change it to <code>flex-direction: column</code> then the <code>main-axis</code> runs from top to bottom and the <code>cross-axis</code> runs from left to right.</p>\\n<p>And so for example <code>justify-content</code> when <code>flex-direction</code> is set to <code>column</code> will distribute the items along the <code>main-axis</code> still, however the <code>main-axis</code> now runs vertically from top to bottom.</p>\\n","summary":"Learning CSS Flexbox Using the Chrome Developer Tools.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"6/22/2022","headerImage":"sea-turtle-427940_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sea-turtle-427940_1920.jpg","title":"Learning CSS Flexbox Using the Chrome Developer Tools","readingTime":7,"wordCount":1265},{"category":"Tasks","type":"task","md5":"1ef5b74e6e2f41fac3d7b6fcca6b4e66","filename":"pure-css-google-material-design-icons.md","path":"tasks/css/pure-css-google-material-design-icons.md","id":"tasks--css--pure-css-google-material-design-icons","markdown":"\\nWe want the Google Material Design `face` icon displayed with `CSS` and `HTML` only.\\n\\n# Approach\\n\\nIn the `<head>` element add:\\n\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\">\\n```\\n\\nThen create an icon like this:\\n```\\n<i style=\\"font-size: 48px;\\" class=\\"material-icons\\">face</i>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Pure CSS Google Material Design Icons\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-xydkg2\\">\\n</fs-link-preview>","html":"<p>We want the Google Material Design <code>face</code> icon displayed with <code>CSS</code> and <code>HTML</code> only.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In the <code>&lt;head&gt;</code> element add:</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n</code></pre>\\n<p>Then create an icon like this:</p>\\n<pre><code>&lt;i style=&quot;font-size: 48px;&quot; class=&quot;material-icons&quot;&gt;face&lt;/i&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Pure CSS Google Material Design Icons\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-xydkg2\'>\\n</fs-link-preview></p>\\n","summary":"Pure CSS Google Material Design Icons.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"3/17/2022","headerImage":"lizard-638493_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lizard-638493_1920.jpg","title":"Pure CSS Google Material Design Icons","readingTime":1,"wordCount":85},{"category":"Tasks","type":"task","md5":"6f9a66d60124130bca1c7ccdeddb00e7","filename":"relative-positioning-of-elements-contained-in-a-flexbox.md","path":"tasks/css/relative-positioning-of-elements-contained-in-a-flexbox.md","id":"tasks--css--relative-positioning-of-elements-contained-in-a-flexbox","markdown":"\\nWe have a `mat-select` element and a `mat-icon` element contained within a flexbox and we want to align the `mat-icon` to the visible vertical center of the `mat-select`.\\n\\n# Approach\\n\\nTo `mat-icon` inline `style` property add `position: relative; bottom: 20px;`\\n```\\n<div style=\\"display: flex; align-items: center;\\">\\n  <mat-form-field appearance=\\"fill\\">\\n    <mat-label>Favorite food</mat-label>\\n    <mat-select [formControl]=\\"control\\">\\n      <mat-option *ngFor=\\"let food of foods\\" [value]=\\"food.value\\">\\n        {{food.viewValue}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-icon\\n    style=\\"color: green; font-size: 44px; margin-left: 1rem; position: relative; bottom: 20px;\\"\\n    >check_circle</mat-icon\\n  >\\n</div>\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Relative Positioning of Elements Contained in a Flexbox\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/angular-material-select-align-icon\\">\\n</fs-link-preview>","html":"<p>We have a <code>mat-select</code> element and a <code>mat-icon</code> element contained within a flexbox and we want to align the <code>mat-icon</code> to the visible vertical center of the <code>mat-select</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>To <code>mat-icon</code> inline <code>style</code> property add <code>position: relative; bottom: 20px;</code></p>\\n<pre><code>&lt;div style=&quot;display: flex; align-items: center;&quot;&gt;\\n  &lt;mat-form-field appearance=&quot;fill&quot;&gt;\\n    &lt;mat-label&gt;Favorite food&lt;/mat-label&gt;\\n    &lt;mat-select [formControl]=&quot;control&quot;&gt;\\n      &lt;mat-option *ngFor=&quot;let food of foods&quot; [value]=&quot;food.value&quot;&gt;\\n        {{food.viewValue}}\\n      &lt;/mat-option&gt;\\n    &lt;/mat-select&gt;\\n  &lt;/mat-form-field&gt;\\n  &lt;mat-icon\\n    style=&quot;color: green; font-size: 44px; margin-left: 1rem; position: relative; bottom: 20px;&quot;\\n    &gt;check_circle&lt;/mat-icon\\n  &gt;\\n&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Relative Positioning of Elements Contained in a Flexbox\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/angular-material-select-align-icon\'>\\n</fs-link-preview></p>\\n","summary":"Relative Positioning of Elements Contained in a Flexbox.","tags":["CSS","Flexbox","HTML"],"tagString":"CSS, Flexbox, HTML","author":"Ole Ersoy","date":"2/17/2021","headerImage":"mars-67522_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/mars-67522_1920.jpg","title":"Relative Positioning of Elements Contained in a Flexbox","readingTime":1,"wordCount":145},{"category":"Tasks","type":"task","md5":"741183d0e23dd719262f8e6d05ae44f9","filename":"styling-a-file-input-button-with-materialize copy.md","path":"tasks/css/styling-a-file-input-button-with-materialize copy.md","id":"tasks--css--styling-a-file-input-button-with-materialize copy","markdown":"\\nWe have a CSS rule.\\n```\\n.name1.name2 {\\n    color:red;\\n}\\n```\\n\\nAnd we are wondering what the selector `.name1.name2` selects.\\n\\n# Approach\\n\\nIt will select elements with both class names, so for this example `Hello there!` will be red.\\n\\n```\\n<h1 class=\\"name1 name2\\">Hello there!</h1>\\n```\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Understanding CSS .selector.selector Syntax\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/web-platform-powi27?file=index.html,styles.css\\">\\n</fs-link-preview>\\n\\n# Additional Concepts\\n\\n[W3 Schools Selector Reference](https://www.w3schools.com/cssref/css_selectors.asp)","html":"<p>We have a CSS rule.</p>\\n<pre><code>.name1.name2 {\\n    color:red;\\n}\\n</code></pre>\\n<p>And we are wondering what the selector <code>.name1.name2</code> selects.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>It will select elements with both class names, so for this example <code>Hello there!</code> will be red.</p>\\n<pre><code>&lt;h1 class=&quot;name1 name2&quot;&gt;Hello there!&lt;/h1&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Understanding CSS .selector.selector Syntax\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/web-platform-powi27?file=index.html,styles.css\'>\\n</fs-link-preview></p>\\n<h1 id=\'additional-concepts\'>Additional Concepts</h1>\\n<p><a href=\'https://www.w3schools.com/cssref/css_selectors.asp\'>W3 Schools Selector Reference</a></p>\\n","summary":"Understanding CSS .selector.selector Syntax.","tags":["CSS","JavaScript","HTML"],"tagString":"CSS, JavaScript, HTML","author":"Ole Ersoy","date":"5/29/2022","headerImage":"girl-pin-cushion.jpeg","headerImageURL":"https://fireflysemantics.github.io/i/developer/girl-pin-cushion.jpeg","title":"Understanding CSS .selector.selector Syntax","readingTime":1,"wordCount":98},{"category":"Tasks","type":"task","md5":"ac1bb90d43181b1eb8b5d240cc2f3524","filename":"styling-a-file-input-button-with-materialize.md","path":"tasks/css/styling-a-file-input-button-with-materialize.md","id":"tasks--css--styling-a-file-input-button-with-materialize","markdown":"\\nWe have a `<input type=\u201dfile\u201d>` button and we want to style it with Materialize.\\n\\n# Approach\\n\\nFirst add Materialize and Material Icons to the index.html file:\\n\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\">\\n<link rel=\\"stylesheet\\" href=\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css\\">\\n```\\n\\nThen add the following custom CSS:\\n```\\n.btn-file {\\n    position: relative;\\n    overflow: hidden;\\n}\\n.btn-file input[type=file] {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    min-width: 100%;\\n    min-height: 100%;\\n    font-size: 100px;\\n    text-align: right;\\n    filter: alpha(opacity=0);\\n    opacity: 0;\\n    outline: none;\\n    background: white;\\n    cursor: inherit;\\n    display: block;\\n}\\n```\\n\\nAnd declare the button:\\n```\\n<span class=\\"btn btn-file\\">\\n    <i class=\\"material-icons left\\">cloud_upload</i>\\n    Browse<input type=\\"file\\">\\n</span>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Styling a File Input Button with Materialize\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/typescript-materialize-file-input\\">\\n</fs-link-preview>","html":"<p>We have a <code>&lt;input type=\u201dfile\u201d&gt;</code> button and we want to style it with Materialize.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First add Materialize and Material Icons to the index.html file:</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css&quot;&gt;\\n</code></pre>\\n<p>Then add the following custom CSS:</p>\\n<pre><code>.btn-file {\\n    position: relative;\\n    overflow: hidden;\\n}\\n.btn-file input[type=file] {\\n    position: absolute;\\n    top: 0;\\n    right: 0;\\n    min-width: 100%;\\n    min-height: 100%;\\n    font-size: 100px;\\n    text-align: right;\\n    filter: alpha(opacity=0);\\n    opacity: 0;\\n    outline: none;\\n    background: white;\\n    cursor: inherit;\\n    display: block;\\n}\\n</code></pre>\\n<p>And declare the button:</p>\\n<pre><code>&lt;span class=&quot;btn btn-file&quot;&gt;\\n    &lt;i class=&quot;material-icons left&quot;&gt;cloud_upload&lt;/i&gt;\\n    Browse&lt;input type=&quot;file&quot;&gt;\\n&lt;/span&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Styling a File Input Button with Materialize\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/typescript-materialize-file-input\'>\\n</fs-link-preview></p>\\n","summary":"Styling a File Input Button with Materialize.","tags":["CSS","JavaScript","HTML"],"tagString":"CSS, JavaScript, HTML","author":"Ole Ersoy","date":"2/17/2021","headerImage":"girl-pin-cushion.jpeg","headerImageURL":"https://fireflysemantics.github.io/i/developer/girl-pin-cushion.jpeg","title":"Styling a File Input Button with Materialize","readingTime":1,"wordCount":167},{"category":"Tasks","type":"task","md5":"ee9b5ac244af86951460a517925ef9fb","filename":"using-papaparse-with-typescript.md","path":"tasks/csv/using-papaparse-with-typescript.md","id":"tasks--csv--using-papaparse-with-typescript","markdown":"\\nWe want to do this, but with Typescript:\\n```\\nconst papa = require(\'papaparse\');\\nconst fs = require(\'fs\');\\nconst file = fs.readFileSync(\'sample.csv\', \'utf8\');\\npapa.parse(file, {\\n    complete: (result) => console.dir(result.data)\\n});\\n```\\n\\n# Approach\\n\\nInstall ts-node in order to execute our `.ts` files directly without having to compile them:\\n```\\nnpm i -g ts-node\\n```\\n\\nYou may also wish to create an alias such that you can just type ts each time you want to run your script.\\n\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/fantasy-4872955_1920.jpg\\"\\n    title=\\"Creating an Alias for TS Node on Linux\\" \\n    description=\\"Creating an Alias for TS Node on Linux\\"\\n    domain=\\"developer.fireflysemantics.com\\" \\n    url=\\"https://developer.fireflysemantics.com/tasks/tasks--linux--creating-an-alias-for-ts-node-on-linux\\">\\n</fs-link-preview>\\n\\n```\\nnpm install --save @types/node\\n```\\n\\nThe readFileSync function can now be imported like this:\\n```\\nimport {readFileSync} from \'fs\';\\n```\\n\\nInstall the types for Papaparse:\\n```\\nnpm i -g @types/papaparse;\\n```\\n\\nImport the parse function directly like this:\\n```\\nimport { parse } from \u2018papaparse\u2019;\\n```\\nThe entire equivalent typescript final version is:\\n```\\nimport { parse } from \'papaparse\';\\nimport { readFileSync } from \'fs\';\\nconst file = readFileSync(\'sample.csv\', \'utf8\');\\nparse(file, {complete: (result) => console.dir(result.data)});\\n```\\n\\nNow you can go CSV crazy! Just make sure you keep all fingers over the laptop keyboard at all times. Enjoy.","html":"<p>We want to do this, but with Typescript:</p>\\n<pre><code>const papa = require(&#39;papaparse&#39;);\\nconst fs = require(&#39;fs&#39;);\\nconst file = fs.readFileSync(&#39;sample.csv&#39;, &#39;utf8&#39;);\\npapa.parse(file, {\\n    complete: (result) =&gt; console.dir(result.data)\\n});\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Install ts-node in order to execute our <code>.ts</code> files directly without having to compile them:</p>\\n<pre><code>npm i -g ts-node\\n</code></pre>\\n<p>You may also wish to create an alias such that you can just type ts each time you want to run your script.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/fantasy-4872955_1920.jpg\'\\n    title=\'Creating an Alias for TS Node on Linux\' \\n    description=\'Creating an Alias for TS Node on Linux\'\\n    domain=\'developer.fireflysemantics.com\' \\n    url=\'https://developer.fireflysemantics.com/tasks/tasks--linux--creating-an-alias-for-ts-node-on-linux\'>\\n</fs-link-preview></p>\\n<pre><code>npm install --save @types/node\\n</code></pre>\\n<p>The readFileSync function can now be imported like this:</p>\\n<pre><code>import {readFileSync} from &#39;fs&#39;;\\n</code></pre>\\n<p>Install the types for Papaparse:</p>\\n<pre><code>npm i -g @types/papaparse;\\n</code></pre>\\n<p>Import the parse function directly like this:</p>\\n<pre><code>import { parse } from \u2018papaparse\u2019;\\n</code></pre>\\n<p>The entire equivalent typescript final version is:</p>\\n<pre><code>import { parse } from &#39;papaparse&#39;;\\nimport { readFileSync } from &#39;fs&#39;;\\nconst file = readFileSync(&#39;sample.csv&#39;, &#39;utf8&#39;);\\nparse(file, {complete: (result) =&gt; console.dir(result.data)});\\n</code></pre>\\n<p>Now you can go CSV crazy! Just make sure you keep all fingers over the laptop keyboard at all times. Enjoy.</p>\\n","summary":"Using Papaparse with Typescript.","tags":["JavaScript","TypeScript","CSV"],"tagString":"JavaScript, TypeScript, CSV","author":"Ole Ersoy","date":"2/06/2021","headerImage":"dandelion-5178095_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-5178095_1920.jpg","title":"Using Papaparse with Typescript","readingTime":2,"wordCount":220},{"category":"Tasks","type":"task","md5":"44cf77b92d4cbbca70054ca8e555af3e","filename":"one-to-many-relationships-with-dexie.md","path":"tasks/dexie/one-to-many-relationships-with-dexie.md","id":"tasks--dexie--one-to-many-relationships-with-dexie","markdown":"\\nWe have a `Contact` instance that has many `PhoneNumber` and `EmailAddress` `AbstractEntity` references.\\n\\nWe want a Dexie IndexedDB database and a CRUD API for performing operations on it with the class types that we are modeling.\\n\\n# Approach\\n\\n## Dependencies\\n\\nAdd [dexie](https://www.npmjs.com/package/dexie) to either your Stackblitz dependencies or install it like this in your local project:\\n\\n```\\nnpm i -S dexie\\n```\\n\\nAdd [nanoid](https://www.npmjs.com/package/nanoid) is well.  We will use it to generate \\nglobal identifier strings for the entities.\\n\\n```\\nnpm i -S nanoid\\n```\\n\\n# Model\\n\\n## AbstractEntity\\n\\nThis entity makes it easy to perform equals comparisons and as well as general identification of all database instances both before and after persistance / generally throughout the lifetime of entity.\\n```\\n/**\\n * Abstract entity model with `gid` property initialization\\n * and `equals` method for entity comparisons.\\n */\\nexport abstract class AbstractEntity {\\n    constructor(public gid?: string) {\\n        gid ? (this.gid = gid) : (this.gid = cuid());\\n    }\\n    equals(e1: AbstractEntity, e2: AbstractEntity) {\\n        return e1.gid == e2.gid\\n    }\\n}\\n```\\n\\n## PhoneNumber\\n```\\n/*\\n * The class helps with code completion\\n *\\n * Defines the interface of objects in the phone number table.\\n */\\nexport class PhoneNumber extends AbstractEntity {\\n    constructor(\\n        public contactId: string,\\n        public type: string,\\n        public phone: string,\\n        gid?: string) {\\n            super(gid)\\n   }\\n}\\n```\\n\\n## EmailAddress\\n\\n```\\n/*\\n * The class helps with code completion\\n *\\n * Defines the interface of objects in the phone number table.\\n */\\nexport class EmailAddress extends AbstractEntity {\\n    constructor(\\n        public contactId: string,\\n        public type: string,\\n        public email: string,\\n        gid?: string) {\\n            super(gid);\\n    }\\n}\\n```\\n\\n## Contact\\n\\nNote that we are setting the enumerable attribute of the properties emails and phones to false . This tells Dexie that these properties should not be considered columns in the `Contact` table.\\n\\n```\\n/*\\n * Class mapped to the the contacts table in db.ts by the line:\\n * db.contacts.mapToClass(Contact)\\n */\\nexport class Contact extends AbstractEntity {\\n  emails: EmailAddress[]\\n  phones: PhoneNumber[]\\n\\n  constructor(\\n    public firstName: string,\\n    public lastName: string,\\n    gid?: string\\n  ) {\\n    super(gid)\\n    // Define navigation properties.\\n    // Making them non-enumerable will prevent them from being handled by indexedDB\\n    // when doing put() or add().\\n    Object.defineProperties(this, {\\n      emails: { value: [], enumerable: false, writable: true },\\n      phones: { value: [], enumerable: false, writable: true }\\n    });\\n  }\\n}\\n```\\n\\n# Database\\n\\nWe will define the database class in `db.ts`.\\n\\n```\\nimport Dexie from \'dexie\';\\n\\nimport { EmailAddress, \\n         PhoneNumber, \\n         Contact } from \'./model\';\\n\\nexport class AppDatabase extends Dexie {\\n\\n    public contacts: Dexie.Table<Contact, string>\\n    public emails: Dexie.Table<EmailAddress, number>\\n    public phones: Dexie.Table<PhoneNumber, number>\\n\\n    constructor() {\\n\\n        super(\\"ContactsDatabase\\")\\n        const db = this\\n\\n        //\\n        // Define tables and indexes\\n        //\\n        db.version(1).stores({\\n            contacts: \'&gid, firstName, lastName\',\\n            emails: \'&gid, contactId, type, email\',\\n            phones: \'&gid, contactId, type, phone\',\\n        });\\n\\n        // Let\'s physically map Contact class to contacts table.\\n        // This will make it possible to call loadEmailsAndPhones()\\n        // directly on retrieved database objects.\\n        db.contacts.mapToClass(Contact)\\n        db.emails.mapToClass(EmailAddress)\\n        db.phones.mapToClass(PhoneNumber)\\n    }\\n}\\nexport const db = new AppDatabase()\\n```\\n\\nNote that we are calling `mapToClass` to map table records to their corresponding class instance.\\n\\nFor example `Contact` is mapped like this:\\n```\\ndb.contacts.mapToClass(Contact)\\n```\\n\\nThis allows us to define API methods like this:\\n```\\n/**\\n * Read a contact\\n */\\nexport  async function readContact(db, contactGID:string):Promise<Contact> {\\n    return await db.contacts.get(contactGID)\\n}\\n```\\n\\nAnd invoke `readContact` like this:\\n\\n```\\nconst c:Contact = await readContact(db, arnold.gid)\\n\\nThe tables and indexes are defined in the constructor call:\\ndb.version(1).stores({\\n    contacts: \'&gid, firstName, lastName\',\\n    emails: \'&gid, contactId, type, email\',\\n    phones: \'&gid, contactId, type, phone\',\\n});\\n```\\n\\nThe `&` that prefixes `gid` means that `gid` is globally unique.\\n\\n# API\\n\\nThe API is defined in `utilities.ts`:\\n\\n```\\nimport { Contact, EmailAddress, PhoneNumber } from \'./model\'\\nimport cuid from \'cuid\'\\n\\n/**\\n * Delete the entire database\\n */\\nexport async function deleteDatabase(db) {\\n  await db.delete()\\n}\\n\\n/**\\n * Open a  database\\n */\\nexport async function openDatabase(db) {\\n  await db.open()\\n}\\n\\n/**\\n * Clear all tables\\n */\\nexport async function clearAllTables(db) {\\n    await Promise.all(\\n      [db.contacts.clear(), \\n       db.emails.clear(), \\n       db.phones.clear()]);\\n}\\n\\n/**\\n * Read all contacts\\n */\\nexport async function readAllContacts(db) {\\n  return await db.contacts.toArray()\\n}\\n\\n/**\\n * Delete all contacts\\n */\\nexport async function deleteAllContact(db) {\\n  return await db.contacts.clear()\\n}\\n\\n/**\\n * Create a contact\\n * \\n * Note that since the contact is guaranteed\\n * to have a unique ID we are using `put` \\n * to update the databse.\\n */\\nexport  async function createContact(db, contact:Contact):Promise<string> {\\n  return await db.contacts.put(contact)\\n}\\n\\n/**\\n * Read a contact\\n */\\nexport  async function readContact(db, contactGID:string):Promise<Contact> {\\n  return await db.contacts.get(contactGID)\\n}\\n\\n/**\\n * Update contact\\n */\\nexport async function updateContact(db, contact:Contact) {\\n  return await db.contacts.put(contact)\\n}\\n\\n/**\\n * Delete contact\\n */\\nexport async function deleteContact(db, contact:Contact) {\\n  return await db.contacts.where(\'gid\').equals(contact.gid).delete()\\n}\\n\\n/**\\n * Read all email addresses\\n */\\nexport async function readAllEmailAddresses(db) {\\n  return await db.emails.toArray()\\n}\\n\\n/**\\n * Delete all email addresses\\n */\\nexport async function deleteAllEmailAddresses(db) {\\n  return await db.emails.clear()\\n}\\n\\n/**\\n * Create email address record\\n * \\n * Note that since the EmailAddress instance\\n * is guaranteed\\n * to have a unique ID we are using `put` \\n * to update the databse.\\n */\\nexport async function createEmailAddress(db, email:EmailAddress) {\\n  return await db.emails.put(email)\\n}\\n\\n/**\\n * Update an email address record\\n */\\nexport async function updateEmailAddress(db, email:EmailAddress) {\\n  return await db.emails.put(email)\\n}\\n\\n/**\\n * Delete contact\\n */\\nexport async function deleteEmail(db, email:EmailAddress) {\\n  await db.contacts.where(\'gid\').equals(email.gid).delete()\\n}\\n\\n/**\\n * Read all phone number records\\n */\\nexport async function readAllPhoneNumbers(db) {\\n  return await db.phones.toArray()\\n}\\n\\n/**\\n * Delete all phone numbers\\n */\\nexport async function deleteAllPhoneNumbers(db) {\\n  await db.phones.clear()\\n}\\n\\n/**\\n * Create email address record\\n */\\nexport async function createPhoneNumber(db, phone:PhoneNumber) {\\n  return await db.phones.put(phone)\\n}\\n\\n/**\\n * Update the PhoneNumber record\\n */\\nexport async function updatePhoneNumber(db, phone:PhoneNumber) {\\n  await db.phones.put(phone)\\n}\\n\\n/**\\n * Deletre the phone number\\n */\\nexport async function deletePhoneNumber(db, phone:PhoneNumber) {\\n  await db.phones.where(\'gid\').equals(phone.gid).delete()\\n}\\n\\n/**\\n * Load email records and \\n * update the corresponding ocntact fields.\\n */\\nexport async function loadContactEmails(contact, db) {\\n    contact.emails = \\n    await db.emails.where(\'contactId\').equals(contact.id).toArray()\\n}\\n\\n/**\\n * Load phone records and \\n * update the ocrresponding ocntact fields.\\n */\\nexport async function loadContactPhones(contact:Contact, db) {\\n    contact.phones = \\n    await db.phones.where(\'contactId\').equals(contact.gid).toArray()\\n}\\n\\n/**\\n * Load navgiation properties (Email and Phone records) and \\n * update the ocrresponding ocntact fields.\\n */\\nexport async function loadNavigationProperties(db, contact:Contact) {\\n    [contact.emails, contact.phones] = await Promise.all([\\n        db.emails.where(\'contactId\').equals(contact.gid).toArray(),\\n        db.phones.where(\'contactId\').equals(contact.gid).toArray()\\n    ]);\\n}\\n\\n/**\\n * Save a contact entity.  If email or phone records \\n * were removed from the contact, then these will also\\n * be deleted from the database.\\n */\\nexport async function saveContact(db, contact:Contact) {\\n    return db.transaction(\'rw\', db.contacts, db.emails, db.phones, async () => {\\n        \\n        // Add or update contact. If add, record contact.id.\\n        contact.gid = await db.contacts.put(contact);\\n        // Save all navigation properties (arrays of emails and phones)\\n        // Some may be new and some may be updates of existing objects.\\n        // put() will handle both cases.\\n        // (record the result keys from the put() operations into emailIds and phoneIds\\n        //  so that we can find local deletes)\\n        let [emailIds, phoneIds] = await Promise.all ([\\n            Promise.all(contact.emails.map(email => updateEmailAddress(db, email))),\\n            Promise.all(contact.phones.map(phone => updatePhoneNumber(db, phone)))\\n        ]);\\n                        \\n        // Was any email or phone number deleted from out navigation properties?\\n        // Delete any item in DB that reference us, but is not present\\n        // in our navigation properties:\\n        await Promise.all([\\n            db.emails.where(\'contactId\').equals(contact.gid) // references us\\n                .and(email => emailIds.indexOf(email.id) === -1) // Not anymore in our array\\n                .delete(),\\n        \\n            db.phones.where(\'contactId\').equals(contact.gid)\\n                .and(phone => phoneIds.indexOf(phone.id) === -1)\\n                .delete()\\n        ])\\n    });\\n}\\n```\\n\\n# Initialize and Test Database Operations\\n\\nThe script `index.ts` in the below Stackblitz demo performs a series of operations on our database.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\"\\n    description=\\"One to Many Relationships With Dexie\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-dexie-one-to-many-fs\\">\\n</fs-link-preview>","html":"<p>We have a <code>Contact</code> instance that has many <code>PhoneNumber</code> and <code>EmailAddress</code> <code>AbstractEntity</code> references.</p>\\n<p>We want a Dexie IndexedDB database and a CRUD API for performing operations on it with the class types that we are modeling.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'dependencies\'>Dependencies</h2>\\n<p>Add <a href=\'https://www.npmjs.com/package/dexie\'>dexie</a> to either your Stackblitz dependencies or install it like this in your local project:</p>\\n<pre><code>npm i -S dexie\\n</code></pre>\\n<p>Add <a href=\'https://www.npmjs.com/package/nanoid\'>nanoid</a> is well.  We will use it to generate \\nglobal identifier strings for the entities.</p>\\n<pre><code>npm i -S nanoid\\n</code></pre>\\n<h1 id=\'model\'>Model</h1>\\n<h2 id=\'abstractentity\'>AbstractEntity</h2>\\n<p>This entity makes it easy to perform equals comparisons and as well as general identification of all database instances both before and after persistance / generally throughout the lifetime of entity.</p>\\n<pre><code>/**\\n * Abstract entity model with `gid` property initialization\\n * and `equals` method for entity comparisons.\\n */\\nexport abstract class AbstractEntity {\\n    constructor(public gid?: string) {\\n        gid ? (this.gid = gid) : (this.gid = cuid());\\n    }\\n    equals(e1: AbstractEntity, e2: AbstractEntity) {\\n        return e1.gid == e2.gid\\n    }\\n}\\n</code></pre>\\n<h2 id=\'phonenumber\'>PhoneNumber</h2>\\n<pre><code>/*\\n * The class helps with code completion\\n *\\n * Defines the interface of objects in the phone number table.\\n */\\nexport class PhoneNumber extends AbstractEntity {\\n    constructor(\\n        public contactId: string,\\n        public type: string,\\n        public phone: string,\\n        gid?: string) {\\n            super(gid)\\n   }\\n}\\n</code></pre>\\n<h2 id=\'emailaddress\'>EmailAddress</h2>\\n<pre><code>/*\\n * The class helps with code completion\\n *\\n * Defines the interface of objects in the phone number table.\\n */\\nexport class EmailAddress extends AbstractEntity {\\n    constructor(\\n        public contactId: string,\\n        public type: string,\\n        public email: string,\\n        gid?: string) {\\n            super(gid);\\n    }\\n}\\n</code></pre>\\n<h2 id=\'contact\'>Contact</h2>\\n<p>Note that we are setting the enumerable attribute of the properties emails and phones to false . This tells Dexie that these properties should not be considered columns in the <code>Contact</code> table.</p>\\n<pre><code>/*\\n * Class mapped to the the contacts table in db.ts by the line:\\n * db.contacts.mapToClass(Contact)\\n */\\nexport class Contact extends AbstractEntity {\\n  emails: EmailAddress[]\\n  phones: PhoneNumber[]\\n\\n  constructor(\\n    public firstName: string,\\n    public lastName: string,\\n    gid?: string\\n  ) {\\n    super(gid)\\n    // Define navigation properties.\\n    // Making them non-enumerable will prevent them from being handled by indexedDB\\n    // when doing put() or add().\\n    Object.defineProperties(this, {\\n      emails: { value: [], enumerable: false, writable: true },\\n      phones: { value: [], enumerable: false, writable: true }\\n    });\\n  }\\n}\\n</code></pre>\\n<h1 id=\'database\'>Database</h1>\\n<p>We will define the database class in <code>db.ts</code>.</p>\\n<pre><code>import Dexie from &#39;dexie&#39;;\\n\\nimport { EmailAddress, \\n         PhoneNumber, \\n         Contact } from &#39;./model&#39;;\\n\\nexport class AppDatabase extends Dexie {\\n\\n    public contacts: Dexie.Table&lt;Contact, string&gt;\\n    public emails: Dexie.Table&lt;EmailAddress, number&gt;\\n    public phones: Dexie.Table&lt;PhoneNumber, number&gt;\\n\\n    constructor() {\\n\\n        super(&quot;ContactsDatabase&quot;)\\n        const db = this\\n\\n        //\\n        // Define tables and indexes\\n        //\\n        db.version(1).stores({\\n            contacts: &#39;&amp;gid, firstName, lastName&#39;,\\n            emails: &#39;&amp;gid, contactId, type, email&#39;,\\n            phones: &#39;&amp;gid, contactId, type, phone&#39;,\\n        });\\n\\n        // Let&#39;s physically map Contact class to contacts table.\\n        // This will make it possible to call loadEmailsAndPhones()\\n        // directly on retrieved database objects.\\n        db.contacts.mapToClass(Contact)\\n        db.emails.mapToClass(EmailAddress)\\n        db.phones.mapToClass(PhoneNumber)\\n    }\\n}\\nexport const db = new AppDatabase()\\n</code></pre>\\n<p>Note that we are calling <code>mapToClass</code> to map table records to their corresponding class instance.</p>\\n<p>For example <code>Contact</code> is mapped like this:</p>\\n<pre><code>db.contacts.mapToClass(Contact)\\n</code></pre>\\n<p>This allows us to define API methods like this:</p>\\n<pre><code>/**\\n * Read a contact\\n */\\nexport  async function readContact(db, contactGID:string):Promise&lt;Contact&gt; {\\n    return await db.contacts.get(contactGID)\\n}\\n</code></pre>\\n<p>And invoke <code>readContact</code> like this:</p>\\n<pre><code>const c:Contact = await readContact(db, arnold.gid)\\n\\nThe tables and indexes are defined in the constructor call:\\ndb.version(1).stores({\\n    contacts: &#39;&amp;gid, firstName, lastName&#39;,\\n    emails: &#39;&amp;gid, contactId, type, email&#39;,\\n    phones: &#39;&amp;gid, contactId, type, phone&#39;,\\n});\\n</code></pre>\\n<p>The <code>&amp;</code> that prefixes <code>gid</code> means that <code>gid</code> is globally unique.</p>\\n<h1 id=\'api\'>API</h1>\\n<p>The API is defined in <code>utilities.ts</code>:</p>\\n<pre><code>import { Contact, EmailAddress, PhoneNumber } from &#39;./model&#39;\\nimport cuid from &#39;cuid&#39;\\n\\n/**\\n * Delete the entire database\\n */\\nexport async function deleteDatabase(db) {\\n  await db.delete()\\n}\\n\\n/**\\n * Open a  database\\n */\\nexport async function openDatabase(db) {\\n  await db.open()\\n}\\n\\n/**\\n * Clear all tables\\n */\\nexport async function clearAllTables(db) {\\n    await Promise.all(\\n      [db.contacts.clear(), \\n       db.emails.clear(), \\n       db.phones.clear()]);\\n}\\n\\n/**\\n * Read all contacts\\n */\\nexport async function readAllContacts(db) {\\n  return await db.contacts.toArray()\\n}\\n\\n/**\\n * Delete all contacts\\n */\\nexport async function deleteAllContact(db) {\\n  return await db.contacts.clear()\\n}\\n\\n/**\\n * Create a contact\\n * \\n * Note that since the contact is guaranteed\\n * to have a unique ID we are using `put` \\n * to update the databse.\\n */\\nexport  async function createContact(db, contact:Contact):Promise&lt;string&gt; {\\n  return await db.contacts.put(contact)\\n}\\n\\n/**\\n * Read a contact\\n */\\nexport  async function readContact(db, contactGID:string):Promise&lt;Contact&gt; {\\n  return await db.contacts.get(contactGID)\\n}\\n\\n/**\\n * Update contact\\n */\\nexport async function updateContact(db, contact:Contact) {\\n  return await db.contacts.put(contact)\\n}\\n\\n/**\\n * Delete contact\\n */\\nexport async function deleteContact(db, contact:Contact) {\\n  return await db.contacts.where(&#39;gid&#39;).equals(contact.gid).delete()\\n}\\n\\n/**\\n * Read all email addresses\\n */\\nexport async function readAllEmailAddresses(db) {\\n  return await db.emails.toArray()\\n}\\n\\n/**\\n * Delete all email addresses\\n */\\nexport async function deleteAllEmailAddresses(db) {\\n  return await db.emails.clear()\\n}\\n\\n/**\\n * Create email address record\\n * \\n * Note that since the EmailAddress instance\\n * is guaranteed\\n * to have a unique ID we are using `put` \\n * to update the databse.\\n */\\nexport async function createEmailAddress(db, email:EmailAddress) {\\n  return await db.emails.put(email)\\n}\\n\\n/**\\n * Update an email address record\\n */\\nexport async function updateEmailAddress(db, email:EmailAddress) {\\n  return await db.emails.put(email)\\n}\\n\\n/**\\n * Delete contact\\n */\\nexport async function deleteEmail(db, email:EmailAddress) {\\n  await db.contacts.where(&#39;gid&#39;).equals(email.gid).delete()\\n}\\n\\n/**\\n * Read all phone number records\\n */\\nexport async function readAllPhoneNumbers(db) {\\n  return await db.phones.toArray()\\n}\\n\\n/**\\n * Delete all phone numbers\\n */\\nexport async function deleteAllPhoneNumbers(db) {\\n  await db.phones.clear()\\n}\\n\\n/**\\n * Create email address record\\n */\\nexport async function createPhoneNumber(db, phone:PhoneNumber) {\\n  return await db.phones.put(phone)\\n}\\n\\n/**\\n * Update the PhoneNumber record\\n */\\nexport async function updatePhoneNumber(db, phone:PhoneNumber) {\\n  await db.phones.put(phone)\\n}\\n\\n/**\\n * Deletre the phone number\\n */\\nexport async function deletePhoneNumber(db, phone:PhoneNumber) {\\n  await db.phones.where(&#39;gid&#39;).equals(phone.gid).delete()\\n}\\n\\n/**\\n * Load email records and \\n * update the corresponding ocntact fields.\\n */\\nexport async function loadContactEmails(contact, db) {\\n    contact.emails = \\n    await db.emails.where(&#39;contactId&#39;).equals(contact.id).toArray()\\n}\\n\\n/**\\n * Load phone records and \\n * update the ocrresponding ocntact fields.\\n */\\nexport async function loadContactPhones(contact:Contact, db) {\\n    contact.phones = \\n    await db.phones.where(&#39;contactId&#39;).equals(contact.gid).toArray()\\n}\\n\\n/**\\n * Load navgiation properties (Email and Phone records) and \\n * update the ocrresponding ocntact fields.\\n */\\nexport async function loadNavigationProperties(db, contact:Contact) {\\n    [contact.emails, contact.phones] = await Promise.all([\\n        db.emails.where(&#39;contactId&#39;).equals(contact.gid).toArray(),\\n        db.phones.where(&#39;contactId&#39;).equals(contact.gid).toArray()\\n    ]);\\n}\\n\\n/**\\n * Save a contact entity.  If email or phone records \\n * were removed from the contact, then these will also\\n * be deleted from the database.\\n */\\nexport async function saveContact(db, contact:Contact) {\\n    return db.transaction(&#39;rw&#39;, db.contacts, db.emails, db.phones, async () =&gt; {\\n        \\n        // Add or update contact. If add, record contact.id.\\n        contact.gid = await db.contacts.put(contact);\\n        // Save all navigation properties (arrays of emails and phones)\\n        // Some may be new and some may be updates of existing objects.\\n        // put() will handle both cases.\\n        // (record the result keys from the put() operations into emailIds and phoneIds\\n        //  so that we can find local deletes)\\n        let [emailIds, phoneIds] = await Promise.all ([\\n            Promise.all(contact.emails.map(email =&gt; updateEmailAddress(db, email))),\\n            Promise.all(contact.phones.map(phone =&gt; updatePhoneNumber(db, phone)))\\n        ]);\\n                        \\n        // Was any email or phone number deleted from out navigation properties?\\n        // Delete any item in DB that reference us, but is not present\\n        // in our navigation properties:\\n        await Promise.all([\\n            db.emails.where(&#39;contactId&#39;).equals(contact.gid) // references us\\n                .and(email =&gt; emailIds.indexOf(email.id) === -1) // Not anymore in our array\\n                .delete(),\\n        \\n            db.phones.where(&#39;contactId&#39;).equals(contact.gid)\\n                .and(phone =&gt; phoneIds.indexOf(phone.id) === -1)\\n                .delete()\\n        ])\\n    });\\n}\\n</code></pre>\\n<h1 id=\'initialize-and-test-database-operations\'>Initialize and Test Database Operations</h1>\\n<p>The script <code>index.ts</code> in the below Stackblitz demo performs a series of operations on our database.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\'\\n    description=\'One to Many Relationships With Dexie\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-dexie-one-to-many-fs\'>\\n</fs-link-preview></p>\\n","summary":"One to Many Relationships With Dexie.","tags":["Dexie","JavaScript","TypeScript"],"tagString":"Dexie, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/05/2021","headerImage":"water-1283152_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-1283152_1920.jpg","title":"One to Many Relationships With Dexie","readingTime":7,"wordCount":1261},{"category":"Tasks","type":"task","md5":"64423fb4fb2ec8f2d639d82569c230bb","filename":"archiving-the-git-master-branch.md","path":"tasks/git/archiving-the-git-master-branch.md","id":"tasks--git--archiving-the-git-master-branch","markdown":"\\nWe have a Github project that we want to upgrade to a brand new set of files.  So we want to create an `archive1` branch, in addition to deleting existing files and committing the new ones. \\n\\n# Approach\\n\\nCreate and push the `archive1` branch.\\n\\n```\\ngit checkout -b archive1\\ngit commit -m \\"New Archive Branch\\"\\ngit push origin archive1\\n```\\n\\nYou should now see the `archive1` branch on Github.\\n\\nDelete the existing project files that will be replaced, commit, and push (VSCode is a good option for this.).\\n\\nCopy over the new projet files, add, commit, and push.\\n\\nIt\'s a good idea to verify that tests are still running as expected.","html":"<p>We have a Github project that we want to upgrade to a brand new set of files.  So we want to create an <code>archive1</code> branch, in addition to deleting existing files and committing the new ones. </p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create and push the <code>archive1</code> branch.</p>\\n<pre><code>git checkout -b archive1\\ngit commit -m &quot;New Archive Branch&quot;\\ngit push origin archive1\\n</code></pre>\\n<p>You should now see the <code>archive1</code> branch on Github.</p>\\n<p>Delete the existing project files that will be replaced, commit, and push (VSCode is a good option for this.).</p>\\n<p>Copy over the new projet files, add, commit, and push.</p>\\n<p>It&#39;s a good idea to verify that tests are still running as expected.</p>\\n","summary":"Archiving the Git Master Branch.","tags":["Git"],"tagString":"Git","author":"Ole Ersoy","date":"9/27/2021","headerImage":"chameleon-4501712_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chameleon-4501712_1920.jpg","title":"Archiving the Git Master Branch","readingTime":1,"wordCount":109},{"category":"Tasks","type":"task","md5":"fd1117d5a08758ab3d1f0c2b7397b813","filename":"partitioning-project-variations-in-git-branches.md","path":"tasks/git/partitioning-project-variations-in-git-branches.md","id":"tasks--git--partitioning-project-variations-in-git-branches","markdown":"\\nWe have three different variations of a project managed with Git that we want to share while keeping the file contents of each variation unique and specific to that variation.\\n\\nJust to keep this scenario simple we will say that the first variation is a markdown file `mark1.md` containing.\\n```\\nProject Variation 1\\n```\\n\\nThe second project variation will contain both `mark1.md` and another file `mark2.md`.\\n\\nThe third variation will contain only a third file `mark3.md`. Each of these variation scenarios will have be stored in their own git branch.\\n\\n# Approach\\n \\nFirst we will create a new project directory `~/Temp/variations` and initialize it as a git project.\\n\\n```\\ncd ~/Temp\\nmkdir variations\\ncd variations\\ngit init\\n```\\n\\n## Variation 1 Branch\\n\\nCreate a new branch called `variation1`.\\n\\n```\\nTemp/variations $ git checkout -b variation1\\nSwitched to a new branch \'variation1\'\\n```\\n\\nNow we can create the `mark1.md` file and commit it.\\n\\n```\\ntouch mark1.md\\n// Add the content to mark1.md\\n// Project Variation 1\\ngit add .\\ngit commit -m \\"Adding mark1.md to the variation1 branch\\"\\n```\\n\\n## Variation 2 Branch\\n\\nCreate the `variation2` branch.\\n\\n```\\nTemp/variations $ git checkout -b variation2\\nSwitched to a new branch \'variation1\'\\n```\\n\\nThis branch will contain the `mark1.md` file, as it is copied over from the version history.\\n\\nCreate `mark2.md` and initialize its contents.\\n```\\ntouch mark2.md\\n// Add the mark2 contents\\n// Project Variation 2\\n```\\n\\nCommit the change.\\n\\n```\\ngit add .\\ngit commit -m \\"Adding mark2.md to the variation2 branch\\"\\n```\\n\\nThe variation2 branch now has both `mark1.md` and `mark2.md` in it.\\n\\n## Variation 3 Branch\\n\\nCreate the `variation3` branch.\\n\\n```\\nTemp/variations $ git checkout -b variation3\\nSwitched to a new branch \'variation3\'\\n```\\n\\nIf we run `git ls-files` on this branch we will see that it contains the first two files we created.\\n\\n```\\nTemp/variations $ git ls-files\\nmark1.md\\nmark2.md\\n```\\n\\nWe want this branch to only have the file `mark3.md` in it, so first we will delete the files already in it and then add the new file.\\n\\n```\\nTemp/variations $ git rm -r .\\nrm \'mark1.md\'\\nrm \'mark2.md\'\\n```\\n\\nAnd now the branch is empty.\\n\\n```\\nTemp/variations $ git ls-files\\nTemp/variations $\\n```\\n\\nLets add `mark3.md` along with contents.\\n\\n```\\ntouch mark3.md\\n// Add the mark2 contents\\n// Project Variation 3\\n```\\n\\nCommit the change.\\n\\n```\\ngit add .\\nTemp/variations $ git commit -m \\"Adding mark3.md to the variation3 branch\\"\\n```\\n\\nThe console lets us know that the changes have been made.\\n\\n```\\n[variation3 878e3c3] Adding mark3.md to the variation3 branch\\n2 files changed, 2 deletions(-)\\ndelete mode 100644 mark1.md\\ndelete mode 100644 mark2.md\\n```\\n\\n# Summary\\n\\nWe now have a git project with 3 branches containing our file and content variations.\\n\\nOur peers can move between the project branches like this:\\n\\n## Switch to Variation 1\\n```\\nTemp/variations $ git checkout variation1\\nSwitched to branch \'variation1\'\\n```\\n\\n## Switch to Variation 2\\n```\\nTemp/variations $ git checkout variation2\\nSwitched to branch \'variation2\'\\n```\\n\\n## Switch to Variation 3\\n\\n```\\nTemp/variations $ git checkout variation3\\nSwitched to branch \'variation3\'\\n```\\n","html":"<p>We have three different variations of a project managed with Git that we want to share while keeping the file contents of each variation unique and specific to that variation.</p>\\n<p>Just to keep this scenario simple we will say that the first variation is a markdown file <code>mark1.md</code> containing.</p>\\n<pre><code>Project Variation 1\\n</code></pre>\\n<p>The second project variation will contain both <code>mark1.md</code> and another file <code>mark2.md</code>.</p>\\n<p>The third variation will contain only a third file <code>mark3.md</code>. Each of these variation scenarios will have be stored in their own git branch.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First we will create a new project directory <code>~/Temp/variations</code> and initialize it as a git project.</p>\\n<pre><code>cd ~/Temp\\nmkdir variations\\ncd variations\\ngit init\\n</code></pre>\\n<h2 id=\'variation-1-branch\'>Variation 1 Branch</h2>\\n<p>Create a new branch called <code>variation1</code>.</p>\\n<pre><code>Temp/variations $ git checkout -b variation1\\nSwitched to a new branch &#39;variation1&#39;\\n</code></pre>\\n<p>Now we can create the <code>mark1.md</code> file and commit it.</p>\\n<pre><code>touch mark1.md\\n// Add the content to mark1.md\\n// Project Variation 1\\ngit add .\\ngit commit -m &quot;Adding mark1.md to the variation1 branch&quot;\\n</code></pre>\\n<h2 id=\'variation-2-branch\'>Variation 2 Branch</h2>\\n<p>Create the <code>variation2</code> branch.</p>\\n<pre><code>Temp/variations $ git checkout -b variation2\\nSwitched to a new branch &#39;variation1&#39;\\n</code></pre>\\n<p>This branch will contain the <code>mark1.md</code> file, as it is copied over from the version history.</p>\\n<p>Create <code>mark2.md</code> and initialize its contents.</p>\\n<pre><code>touch mark2.md\\n// Add the mark2 contents\\n// Project Variation 2\\n</code></pre>\\n<p>Commit the change.</p>\\n<pre><code>git add .\\ngit commit -m &quot;Adding mark2.md to the variation2 branch&quot;\\n</code></pre>\\n<p>The variation2 branch now has both <code>mark1.md</code> and <code>mark2.md</code> in it.</p>\\n<h2 id=\'variation-3-branch\'>Variation 3 Branch</h2>\\n<p>Create the <code>variation3</code> branch.</p>\\n<pre><code>Temp/variations $ git checkout -b variation3\\nSwitched to a new branch &#39;variation3&#39;\\n</code></pre>\\n<p>If we run <code>git ls-files</code> on this branch we will see that it contains the first two files we created.</p>\\n<pre><code>Temp/variations $ git ls-files\\nmark1.md\\nmark2.md\\n</code></pre>\\n<p>We want this branch to only have the file <code>mark3.md</code> in it, so first we will delete the files already in it and then add the new file.</p>\\n<pre><code>Temp/variations $ git rm -r .\\nrm &#39;mark1.md&#39;\\nrm &#39;mark2.md&#39;\\n</code></pre>\\n<p>And now the branch is empty.</p>\\n<pre><code>Temp/variations $ git ls-files\\nTemp/variations $\\n</code></pre>\\n<p>Lets add <code>mark3.md</code> along with contents.</p>\\n<pre><code>touch mark3.md\\n// Add the mark2 contents\\n// Project Variation 3\\n</code></pre>\\n<p>Commit the change.</p>\\n<pre><code>git add .\\nTemp/variations $ git commit -m &quot;Adding mark3.md to the variation3 branch&quot;\\n</code></pre>\\n<p>The console lets us know that the changes have been made.</p>\\n<pre><code>[variation3 878e3c3] Adding mark3.md to the variation3 branch\\n2 files changed, 2 deletions(-)\\ndelete mode 100644 mark1.md\\ndelete mode 100644 mark2.md\\n</code></pre>\\n<h1 id=\'summary\'>Summary</h1>\\n<p>We now have a git project with 3 branches containing our file and content variations.</p>\\n<p>Our peers can move between the project branches like this:</p>\\n<h2 id=\'switch-to-variation-1\'>Switch to Variation 1</h2>\\n<pre><code>Temp/variations $ git checkout variation1\\nSwitched to branch &#39;variation1&#39;\\n</code></pre>\\n<h2 id=\'switch-to-variation-2\'>Switch to Variation 2</h2>\\n<pre><code>Temp/variations $ git checkout variation2\\nSwitched to branch &#39;variation2&#39;\\n</code></pre>\\n<h2 id=\'switch-to-variation-3\'>Switch to Variation 3</h2>\\n<pre><code>Temp/variations $ git checkout variation3\\nSwitched to branch &#39;variation3&#39;\\n</code></pre>\\n","summary":"Partitioning Project Variations in Git Branches.","tags":["Git"],"tagString":"Git","author":"Ole Ersoy","date":"5/09/2022","headerImage":"bee-170551_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bee-170551_1920.jpg","title":"Partitioning Project Variations in Git Branches","readingTime":3,"wordCount":491},{"category":"Tasks","type":"task","md5":"e5f998b7fa5bddc824161a9ea008bc52","filename":"rendering-and-wrapping-html-content-inside-pre-elements.md","path":"tasks/html/rendering-and-wrapping-html-content-inside-pre-elements.md","id":"tasks--html--rendering-and-wrapping-html-content-inside-pre-elements","markdown":"\\nWe have want to take the Google Material Icons link element and we want to render it such that it wraps inside a pre element like this :\\n```\\n<link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons\\" rel=\\"stylesheet\\">\\n```\\n\\n# Approach\\n\\nFirst we need to escape the `html` such that it looks like this (Otherwise the html document will render it as a normal element):\\n\\n\\n```\\n&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n```\\n\\nIn order to escape your html you can use [this online resource](https://www.freeformatter.com/html-escape.html).\\n\\nThen we can place our escaped content inside a pre element styled like this:\\n\\n```\\n<pre style=\\"white-space: pre-wrap; \\n            word-wrap: break-word; \\n            word-break:keep-all;\\">\\n</pre>\\n```","html":"<p>We have want to take the Google Material Icons link element and we want to render it such that it wraps inside a pre element like this :</p>\\n<pre><code>&lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons&quot; rel=&quot;stylesheet&quot;&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First we need to escape the <code>html</code> such that it looks like this (Otherwise the html document will render it as a normal element):</p>\\n<pre><code>&amp;lt;link href=&amp;quot;https://fonts.googleapis.com/icon?family=Material+Icons&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;\\n</code></pre>\\n<p>In order to escape your html you can use <a href=\'https://www.freeformatter.com/html-escape.html\'>this online resource</a>.</p>\\n<p>Then we can place our escaped content inside a pre element styled like this:</p>\\n<pre><code>&lt;pre style=&quot;white-space: pre-wrap; \\n            word-wrap: break-word; \\n            word-break:keep-all;&quot;&gt;\\n&lt;/pre&gt;\\n</code></pre>\\n","summary":"Rendering and Wrapping HTML Content Inside Pre Elements.","tags":["HTML","Web Design","Web Development"],"tagString":"HTML, Web Design, Web Development","author":"Ole Ersoy","date":"3/19/2021","headerImage":"water-lily-2334209_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-lily-2334209_1920.jpg","title":"Rendering and Wrapping HTML Content Inside Pre Elements","readingTime":1,"wordCount":130},{"category":"Tasks","type":"task","md5":"033b58a5eff91c4c374223da3e4efe1f","filename":"turn-off-autocomplete-for-the-entire-form.md","path":"tasks/html/turn-off-autocomplete-for-the-entire-form.md","id":"tasks--html--turn-off-autocomplete-for-the-entire-form","markdown":"\\nWe wish to turn off `autocomplete` for our entire `form` such that we do not get suggestions for any fields.\\n\\n# Approach\\n\\n```\\n<form autocomplete=\\"off\\">...</form>\\n```","html":"<p>We wish to turn off <code>autocomplete</code> for our entire <code>form</code> such that we do not get suggestions for any fields.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>&lt;form autocomplete=&quot;off&quot;&gt;...&lt;/form&gt;\\n</code></pre>\\n","summary":"Turn Off Autocomplete for the Entire Form.","tags":["HTML","Web Design","Web Development"],"tagString":"HTML, Web Design, Web Development","author":"Ole Ersoy","date":"2/04/2021","headerImage":"tree-838666_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/tree-838666_1280.jpg","title":"Turn Off Autocomplete for the Entire Form","readingTime":1,"wordCount":25},{"category":"Tasks","type":"task","md5":"dcca31878275fd33c1e9166c0ba8f04c","filename":"analyzing-a-javascript-expression-that-is-always-true.md","path":"tasks/javascript/analyzing-a-javascript-expression-that-is-always-true.md","id":"tasks--javascript--analyzing-a-javascript-expression-that-is-always-true","markdown":"\\nWe have a Javascript array `arr` that has a length other than zero.  \\n\\nAnd the expression:\\n\\n```\\narr.length !=7 || arr.length !=4\\n```\\n\\nThis expression is always `true`.  lets see why.\\n\\n# Approach\\n\\nSuppose the length is `7`.  In this case `arr.length !=7` is false, but `arr.length !=4` is `true`.\\n\\nSuppose the length is `4`.  In this case `arr.length !=7` is true, so we stop.\\n\\nThus we can see that no matter what length is plugged in the expression is always true.","html":"<p>We have a Javascript array <code>arr</code> that has a length other than zero.  </p>\\n<p>And the expression:</p>\\n<pre><code>arr.length !=7 || arr.length !=4\\n</code></pre>\\n<p>This expression is always <code>true</code>.  lets see why.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Suppose the length is <code>7</code>.  In this case <code>arr.length !=7</code> is false, but <code>arr.length !=4</code> is <code>true</code>.</p>\\n<p>Suppose the length is <code>4</code>.  In this case <code>arr.length !=7</code> is true, so we stop.</p>\\n<p>Thus we can see that no matter what length is plugged in the expression is always true.</p>\\n","summary":"Analyzing a Javascript Expression That is Always True","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/14/2021","headerImage":"fall-foliage-2822593_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/fall-foliage-2822593_1920.jpg","title":"Analyzing a Javascript Expression That is Always True","readingTime":1,"wordCount":83},{"category":"Tasks","type":"task","md5":"355a5f1a0c69f35385f626a53ac659ba","filename":"applying-the-nullish-coalescing-operatorp-on-runtime-function-invocations.md","path":"tasks/javascript/applying-the-nullish-coalescing-operatorp-on-runtime-function-invocations.md","id":"tasks--javascript--applying-the-nullish-coalescing-operatorp-on-runtime-function-invocations","markdown":"\\nWe have a `hello()` function.\\n```\\nfunction hello(name: string = \'\') {\\n  return `hello ${name}`;\\n}\\n```\\n\\nAnd we are using it in a code block where `userName` is a variable that may be `null` and if it is we wish the replace it with a default value `Wilma`.\\n\\n# Approach\\n\\nWe can use the Nullish Coalescing Operator like this:\\n```\\nhello(userName ?? \'Wilma\')\\n```\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Applying the Nullish Coalescing Operator on Runtime Function Invocations\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-cwylba\\">\\n</fs-link-preview>","html":"<p>We have a <code>hello()</code> function.</p>\\n<pre><code>function hello(name: string = &#39;&#39;) {\\n  return `hello ${name}`;\\n}\\n</code></pre>\\n<p>And we are using it in a code block where <code>userName</code> is a variable that may be <code>null</code> and if it is we wish the replace it with a default value <code>Wilma</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We can use the Nullish Coalescing Operator like this:</p>\\n<pre><code>hello(userName ?? &#39;Wilma&#39;)\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Applying the Nullish Coalescing Operator on Runtime Function Invocations\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-cwylba\'>\\n</fs-link-preview></p>\\n","summary":"Applying the Nullish Coalescing Operator on Runtime Function Invocations.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"3/21/2022","headerImage":"flower-4290533_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-4290533_1920.jpg","title":"Applying the Nullish Coalescing Operator on Runtime Function Invocations","readingTime":1,"wordCount":96},{"category":"Tasks","type":"task","md5":"5205fd45ca2e4f419a55cac5b0c453c6","filename":"awaiting-the-result-of-multiple-async-operations.md","path":"tasks/javascript/awaiting-the-result-of-multiple-async-operations.md","id":"tasks--javascript--awaiting-the-result-of-multiple-async-operations","markdown":"\\nWe have an array of input id data values where each value will be used to fetch some data via an asynchrounous operation that returns a promise.\\n\\n```\\nconst ids = [1,2,3]\\nids.map(id => fetch(id));\\nnext();\\n```\\n\\nAnd we want to wait for the promises to resolve before calling `next()`.\\n\\n# Approach\\n\\nFirst `await Promise.all` like this:\\n```\\nasync function resolvePromisesAndCallNext(ids) {\\n    await Promise.all(ids.map(id => fetch(id)));\\n    next();\\n}\\n```","html":"<p>We have an array of input id data values where each value will be used to fetch some data via an asynchrounous operation that returns a promise.</p>\\n<pre><code>const ids = [1,2,3]\\nids.map(id =&gt; fetch(id));\\nnext();\\n</code></pre>\\n<p>And we want to wait for the promises to resolve before calling <code>next()</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First <code>await Promise.all</code> like this:</p>\\n<pre><code>async function resolvePromisesAndCallNext(ids) {\\n    await Promise.all(ids.map(id =&gt; fetch(id)));\\n    next();\\n}\\n</code></pre>\\n","summary":"Awaiting the Result of Multiple Async Operations.","tags":["JavaScript","TypeScript","HTML","Promise"],"tagString":"JavaScript, TypeScript, HTML, Promise","author":"Ole Ersoy","date":"5/02/2021","headerImage":"dandelion-2266558_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-2266558_1920.jpg","title":"Awaiting the Result of Multiple Async Operations","readingTime":1,"wordCount":71},{"category":"Tasks","type":"task","md5":"e8643ffbbd3a4c3782e577a7bc1e9efe","filename":"checking-whether-a-javascript-string-is-a-number.md","path":"tasks/javascript/checking-whether-a-javascript-string-is-a-number.md","id":"tasks--javascript--checking-whether-a-javascript-string-is-a-number","markdown":"\\nWe have a string `\\"\\"` and we want to check if it is a number.\\n\\n# Approach\\n\\nUse this function:\\n\\n```\\nfunction isNumeric(s) {\\n  if (typeof s != \\"string\\") return false\\n  // ... will return false for \\"\\"\\n  return !isNaN(s) && !isNaN(parseFloat(str)) \\n}\\n```\\n\\nThe code `!isNaN(s)` will return true for `\\"\\"`, so we also \\ncheck whether we can `parseFloat()` it.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Checking Whether a Javascript String is a Number\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-isnumeric?file=index.ts\\">\\n</fs-link-preview>\\n","html":"<p>We have a string <code>&quot;&quot;</code> and we want to check if it is a number.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use this function:</p>\\n<pre><code>function isNumeric(s) {\\n  if (typeof s != &quot;string&quot;) return false\\n  // ... will return false for &quot;&quot;\\n  return !isNaN(s) &amp;&amp; !isNaN(parseFloat(str)) \\n}\\n</code></pre>\\n<p>The code <code>!isNaN(s)</code> will return true for <code>&quot;&quot;</code>, so we also \\ncheck whether we can <code>parseFloat()</code> it.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Checking Whether a Javascript String is a Number\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-isnumeric?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Checking Whether a Javascript String is a Number","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/09/2021","headerImage":"gecko-247316_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/gecko-247316_1920.jpg","title":"Checking Whether a Javascript String is a Number","readingTime":1,"wordCount":95},{"category":"Tasks","type":"task","md5":"662fe7bea9acbf516014d113111f2ba3","filename":"checking-whether-a-javascript-string-is-a-whole-number.md","path":"tasks/javascript/checking-whether-a-javascript-string-is-a-whole-number.md","id":"tasks--javascript--checking-whether-a-javascript-string-is-a-whole-number","markdown":"\\nWe have a string `2010` and we want to check if it\'s a year.\\n\\n# Approach\\n\\nUse `isPositiveWholeNumber(value)`:\\n\\n```\\nfunction isPositiveWholeNumber(value) {\\n  return /^\\\\d+$/.test(value);\\n}\\n\\nfunction isWholeNumber(value) {\\n  return /^-?\\\\d+$/.test(value);\\n}\\n\\nconsole.log(isPositiveWholeNumber(undefined)); // false\\nconsole.log(isPositiveWholeNumber(null)); // false\\nconsole.log(isPositiveWholeNumber(\'a\')); // false\\nconsole.log(isPositiveWholeNumber(\'1a\')); // false\\nconsole.log(isPositiveWholeNumber(\'1\')); // true\\nconsole.log(isPositiveWholeNumber(\'1234\')); // true\\nconsole.log(isPositiveWholeNumber(\'-23\')); // false\\nconsole.log(isPositiveWholeNumber(123)); // true\\nconsole.log(isPositiveWholeNumber(123n)); // true\\nconsole.log(isPositiveWholeNumber(\'1.2\')); // false\\nconsole.log(isPositiveWholeNumber(\'\')); // false\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Checking Whether a Javascript String is a Whole Number\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/js-whole-number\\">\\n</fs-link-preview>\\n","html":"<p>We have a string <code>2010</code> and we want to check if it&#39;s a year.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use <code>isPositiveWholeNumber(value)</code>:</p>\\n<pre><code>function isPositiveWholeNumber(value) {\\n  return /^\\\\d+$/.test(value);\\n}\\n\\nfunction isWholeNumber(value) {\\n  return /^-?\\\\d+$/.test(value);\\n}\\n\\nconsole.log(isPositiveWholeNumber(undefined)); // false\\nconsole.log(isPositiveWholeNumber(null)); // false\\nconsole.log(isPositiveWholeNumber(&#39;a&#39;)); // false\\nconsole.log(isPositiveWholeNumber(&#39;1a&#39;)); // false\\nconsole.log(isPositiveWholeNumber(&#39;1&#39;)); // true\\nconsole.log(isPositiveWholeNumber(&#39;1234&#39;)); // true\\nconsole.log(isPositiveWholeNumber(&#39;-23&#39;)); // false\\nconsole.log(isPositiveWholeNumber(123)); // true\\nconsole.log(isPositiveWholeNumber(123n)); // true\\nconsole.log(isPositiveWholeNumber(&#39;1.2&#39;)); // false\\nconsole.log(isPositiveWholeNumber(&#39;&#39;)); // false\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Checking Whether a Javascript String is a Whole Number\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/js-whole-number\'>\\n</fs-link-preview></p>\\n","summary":"Checking Whether a Javascript String is a Whole Number","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/09/2021","headerImage":"sunset-2180346_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sunset-2180346_1920.jpg","title":"Checking Whether a Javascript String is a Whole Number","readingTime":1,"wordCount":128},{"category":"Tasks","type":"task","md5":"9c6718d2399a49f4e2fc14070c9b8346","filename":"checking-whether-javascript-array-numbers-are-unique.md","path":"tasks/javascript/checking-whether-javascript-array-numbers-are-unique.md","id":"tasks--javascript--checking-whether-javascript-array-numbers-are-unique","markdown":"\\nWe have an array [1,2,3] and we want to know whether the numbers are unique.\\n\\n# Approach\\n\\n```\\nfunction isArrayUnique(target: any[]): boolean {\\nconst uniqueItems = target.filter((a, b, c) => c.indexOf(a) === b);\\n   return target.length === uniqueItems.length;\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Checking Whether Javascript Array Numbers are Unique\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-qtvbfs\\">\\n</fs-link-preview>\\n","html":"<p>We have an array [1,2,3] and we want to know whether the numbers are unique.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>function isArrayUnique(target: any[]): boolean {\\nconst uniqueItems = target.filter((a, b, c) =&gt; c.indexOf(a) === b);\\n   return target.length === uniqueItems.length;\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Checking Whether Javascript Array Numbers are Unique\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-qtvbfs\'>\\n</fs-link-preview></p>\\n","summary":"Checking Whether Javascript Array Numbers are Unique.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"10/14/2021","headerImage":"chameleon-6307349_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chameleon-6307349_1920.jpg","title":"Checking Whether Javascript Array Numbers are Unique","readingTime":1,"wordCount":76},{"category":"Tasks","type":"task","md5":"789897d1d6ad49ba8c9bb50d594ecfef","filename":"creating-a-custom-angular-material-google-social-login-button.md","path":"tasks/javascript/creating-a-custom-angular-material-google-social-login-button.md","id":"tasks--javascript--creating-a-custom-angular-material-google-social-login-button","markdown":"\\nWe want a custom Google social login button for our Angular component.\\n\\n# Approach\\n\\n\\nFirst grab the public domain Google G SVG icon from [Wikipedia](https://commons.wikimedia.org/wiki/File:Google_%22G%22_Logo.svg). I\u2019ve removed the meta data so it looks like this:\\n\\n```\\n<svg enable-background=\\"new 0 0 533.5 544.3\\" version=\\"1.1\\" viewBox=\\"0 0 533.5 544.3\\" xml:space=\\"preserve\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:cc=\\"http://creativecommons.org/ns#\\" xmlns:dc=\\"http://purl.org/dc/elements/1.1/\\" xmlns:ns=\\"&amp;ns_sfw;\\" xmlns:rdf=\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\">\\n    <path d=\\"m533.5 278.4c0-18.5-1.5-37.1-4.7-55.3h-256.7v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\\" style=\\"fill:#4285f4\\"/>\\n    <path d=\\"m272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3h-90.5v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\\" style=\\"fill:#34a853\\"/>\\n    <path d=\\"M119.3,324.3c-11.4-33.8-11.4-70.4,0-104.2V150H28.9c-38.6,76.9-38.6,167.5,0,244.4L119.3,324.3z\\" style=\\"fill:#fbbc04\\"/>\\n    <path d=\\"m272.1 107.7c38.8-0.6 76.3 14 104.4 40.8l77.7-77.7c-49.2-46.2-114.5-71.6-182.1-70.8-102.9 0-197 58-243.2 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\\" style=\\"fill:#ea4335\\"/>\\n</svg>\\n```\\n\\nIt can be downloaded via the this [github raw url](https://medium.com/p/aee2fe376ea5).\\n\\nCreate a material icon from the logo like this:\\n```\\nconst googleLogoURL = \\n\\"https://raw.githubusercontent.com/fireflysemantics/logo/master/Google.svg\\";\\n\\n@Component({\\n  selector: \'my-app\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [ \'./app.component.css\' ]\\n})\\nexport class AppComponent  {\\n  constructor (\\n    private matIconRegistry: MatIconRegistry,\\n    private domSanitizer: DomSanitizer) {\\n          this.matIconRegistry.addSvgIcon(\\n      \\"logo\\",\\n      this.domSanitizer.bypassSecurityTrustResourceUrl(googleLogoURL));\\n    }\\n}\\n```\\nThen create the button icon like this:\\n\\n```\\n<button mat-button style=\\"padding: 1rem;\\">\\n    <mat-icon style=\\"width: 50px; height:30px\\"\\n              svgIcon=\\"logo\\"></mat-icon> Login With Google\\n</button>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating a Custom Angular Material Google Social Login Button\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-material-google-social-login\\">\\n</fs-link-preview>","html":"<p>We want a custom Google social login button for our Angular component.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First grab the public domain Google G SVG icon from <a href=\'https://commons.wikimedia.org/wiki/File:Google_%22G%22_Logo.svg\'>Wikipedia</a>. I\u2019ve removed the meta data so it looks like this:</p>\\n<pre><code>&lt;svg enable-background=&quot;new 0 0 533.5 544.3&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 533.5 544.3&quot; xml:space=&quot;preserve&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:cc=&quot;http://creativecommons.org/ns#&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:ns=&quot;&amp;amp;ns_sfw;&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;\\n    &lt;path d=&quot;m533.5 278.4c0-18.5-1.5-37.1-4.7-55.3h-256.7v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z&quot; style=&quot;fill:#4285f4&quot;/&gt;\\n    &lt;path d=&quot;m272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3h-90.5v70.1c46.2 91.9 140.3 149.9 243.2 149.9z&quot; style=&quot;fill:#34a853&quot;/&gt;\\n    &lt;path d=&quot;M119.3,324.3c-11.4-33.8-11.4-70.4,0-104.2V150H28.9c-38.6,76.9-38.6,167.5,0,244.4L119.3,324.3z&quot; style=&quot;fill:#fbbc04&quot;/&gt;\\n    &lt;path d=&quot;m272.1 107.7c38.8-0.6 76.3 14 104.4 40.8l77.7-77.7c-49.2-46.2-114.5-71.6-182.1-70.8-102.9 0-197 58-243.2 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z&quot; style=&quot;fill:#ea4335&quot;/&gt;\\n&lt;/svg&gt;\\n</code></pre>\\n<p>It can be downloaded via the this <a href=\'https://medium.com/p/aee2fe376ea5\'>github raw url</a>.</p>\\n<p>Create a material icon from the logo like this:</p>\\n<pre><code>const googleLogoURL = \\n&quot;https://raw.githubusercontent.com/fireflysemantics/logo/master/Google.svg&quot;;\\n\\n@Component({\\n  selector: &#39;my-app&#39;,\\n  templateUrl: &#39;./app.component.html&#39;,\\n  styleUrls: [ &#39;./app.component.css&#39; ]\\n})\\nexport class AppComponent  {\\n  constructor (\\n    private matIconRegistry: MatIconRegistry,\\n    private domSanitizer: DomSanitizer) {\\n          this.matIconRegistry.addSvgIcon(\\n      &quot;logo&quot;,\\n      this.domSanitizer.bypassSecurityTrustResourceUrl(googleLogoURL));\\n    }\\n}\\n</code></pre>\\n<p>Then create the button icon like this:</p>\\n<pre><code>&lt;button mat-button style=&quot;padding: 1rem;&quot;&gt;\\n    &lt;mat-icon style=&quot;width: 50px; height:30px&quot;\\n              svgIcon=&quot;logo&quot;&gt;&lt;/mat-icon&gt; Login With Google\\n&lt;/button&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating a Custom Angular Material Google Social Login Button\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-material-google-social-login\'>\\n</fs-link-preview></p>\\n","summary":"Creating a Custom Angular Material Google Social Login Button.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/14/2022","headerImage":"ladybug-3475779_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ladybug-3475779_1920.jpg","title":"Creating a Custom Angular Material Google Social Login Button","readingTime":3,"wordCount":435},{"category":"Tasks","type":"task","md5":"6fa7aae29782bc8aee7ad0dd67213dea","filename":"creating-template-functions-with-javascript.md","path":"tasks/javascript/creating-template-functions-with-javascript.md","id":"tasks--javascript--creating-template-functions-with-javascript","markdown":"\\nWe have a template string:\\n\\n```\\n`The character is ${C}`\\n```\\n\\nAnd we need to pass `C` to it such that we can create string like:\\n\\n```\\nThe character is Q\\n```\\n\\n# Approach\\n\\n```\\nexport function characterTemplate(C:string) {\\n  return `The character is ${C}`\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating Template Functions With Javascript\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-template-function\\">\\n</fs-link-preview>","html":"<p>We have a template string:</p>\\n<pre><code>`The character is ${C}`\\n</code></pre>\\n<p>And we need to pass <code>C</code> to it such that we can create string like:</p>\\n<pre><code>The character is Q\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>export function characterTemplate(C:string) {\\n  return `The character is ${C}`\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating Template Functions With Javascript\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-template-function\'>\\n</fs-link-preview></p>\\n","summary":"Creating Template Functions With Javascript.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/14/2021","headerImage":"ladybug-3475779_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/ladybug-3475779_1920.jpg","title":"Creating Template Functions With Javascript","readingTime":1,"wordCount":75},{"category":"Tasks","type":"task","md5":"af507c544f0d42d73a71c086da2c687d","filename":"deep-cloning-a-javascript-string.md","path":"tasks/javascript/deep-cloning-a-javascript-string.md","id":"tasks--javascript--deep-cloning-a-javascript-string","markdown":"\\nWe have a Javascript string `const howdy = \'Hola!\'`.  We want to deep clone it.\\n\\n# Approach\\n\\n```\\nconst hei = `${howdy}`\\n```","html":"<p>We have a Javascript string <code>const howdy = &#39;Hola!&#39;</code>.  We want to deep clone it.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const hei = `${howdy}`\\n</code></pre>\\n","summary":"Deep Cloning a Javascript String.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"5/14/2021","headerImage":"colors-of-autumn-3707589_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/colors-of-autumn-3707589_1920.jpg","title":"Deep Cloning a Javascript String","readingTime":1,"wordCount":18},{"category":"Tasks","type":"task","md5":"3c9955af06e849f95d3ede6e5a1110c4","filename":"formatting-a-javascript-number-to-2-decimal-places.md","path":"tasks/javascript/formatting-a-javascript-number-to-2-decimal-places.md","id":"tasks--javascript--formatting-a-javascript-number-to-2-decimal-places","markdown":"\\nWe have a number and a string and we want to format both to 2 decimal places:\\n\\n```\\nvar num1: any = 213.73145;\\nvar num2: any = \'213.73145\';\\n```\\n\\n# Approach\\n\\n```\\n/**\\n * Round the number.\\n * @param num The number\\n * @param precision The precision\\n */\\nexport function round(num: number, precision: number = 2) {\\n    return (Math.round(num * 100) / 100).toFixed(precision);\\n}\\nvar num1: any = 213.73145;\\nvar num2: any = \'213.73145\';\\nconsole.log(round(num1));\\nconsole.log(round(num2));\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Formatting Javascript Strings and Numbers to 2 Decimal Places\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-rmlk1v\\">\\n</fs-link-preview>\\n","html":"<p>We have a number and a string and we want to format both to 2 decimal places:</p>\\n<pre><code>var num1: any = 213.73145;\\nvar num2: any = &#39;213.73145&#39;;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>/**\\n * Round the number.\\n * @param num The number\\n * @param precision The precision\\n */\\nexport function round(num: number, precision: number = 2) {\\n    return (Math.round(num * 100) / 100).toFixed(precision);\\n}\\nvar num1: any = 213.73145;\\nvar num2: any = &#39;213.73145&#39;;\\nconsole.log(round(num1));\\nconsole.log(round(num2));\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Formatting Javascript Strings and Numbers to 2 Decimal Places\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-rmlk1v\'>\\n</fs-link-preview></p>\\n","summary":"Formatting Javascript Strings and Numbers to 2 Decimal Places","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"6/09/2021","headerImage":"reptile-4098439_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/reptile-4098439_1920.jpg","title":"Formatting Javascript Strings and Numbers to 2 Decimal Places","readingTime":1,"wordCount":112},{"category":"Tasks","type":"task","md5":"40f136aec37d66d316f52821da8bceeb","filename":"generating-an-array-of-integers-from-1-to-10-with-javascript.md","path":"tasks/javascript/generating-an-array-of-integers-from-1-to-10-with-javascript.md","id":"tasks--javascript--generating-an-array-of-integers-from-1-to-10-with-javascript","markdown":"\\nWe want the array `[1,2,3,4,5,6,7,8,9,10]`.\\n\\n# Approach\\n\\n```\\nconst periods = Array.from({ length: 10 }, (v, k) => k + 1);\\nconsole.log(periods);\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Generating an Integer Array from 1 to 10\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/js-integer-array-generation?file=index.js\\">\\n</fs-link-preview>","html":"<p>We want the array <code>[1,2,3,4,5,6,7,8,9,10]</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const periods = Array.from({ length: 10 }, (v, k) =&gt; k + 1);\\nconsole.log(periods);\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Generating an Integer Array from 1 to 10\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/js-integer-array-generation?file=index.js\'>\\n</fs-link-preview></p>\\n","summary":"Generating an Integer Array from 1 to 10.","tags":["JavaScript"],"tagString":"JavaScript","author":"Ole Ersoy","date":"5/11/2021","headerImage":"flower-827000_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-827000_1280.jpg","title":"Generating an Integer Array from 1 to 10","readingTime":1,"wordCount":70},{"category":"Tasks","type":"task","md5":"4675c3ee9f97d3937fe2d22c061b410f","filename":"get-the-last-2-items-of-a-javascript-array-with-slice.md","path":"tasks/javascript/get-the-last-2-items-of-a-javascript-array-with-slice.md","id":"tasks--javascript--get-the-last-2-items-of-a-javascript-array-with-slice","markdown":"\\nWe have an array `[1,2,3]` and we want get the last 2 items on it, or [2,3].\\n\\n# Approach\\n\\n```\\nconst arr: number[] = [1, 2, 3];\\nconst lasttwo = arr.slice(-2);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Get the last 2 items of an Array with Javascripts Slice\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-kilrrv\\">\\n</fs-link-preview>","html":"<p>We have an array <code>[1,2,3]</code> and we want get the last 2 items on it, or [2,3].</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const arr: number[] = [1, 2, 3];\\nconst lasttwo = arr.slice(-2);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Get the last 2 items of an Array with Javascripts Slice\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-kilrrv\'>\\n</fs-link-preview></p>\\n","summary":"Get the last 2 items of an Array with Javascripts Slice.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"8/14/2021","headerImage":"salamander-3298820_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/salamander-3298820_1920.jpg","title":"Get the last 2 items of an Array with Javascripts Slice","readingTime":1,"wordCount":73},{"category":"Tasks","type":"task","md5":"e7723ffc2d1cb360db96627fcc6d94d2","filename":"logging-enumerable-data-with-javascript.md","path":"tasks/javascript/logging-enumerable-data-with-javascript.md","id":"tasks--javascript--logging-enumerable-data-with-javascript","markdown":"\\nWe have a `Todo` class:\\n\\n```\\nclass Todo {\\n  constructor(\\n    public id: string,\\n    public label: string,\\n    public description: string\\n  ) {}\\n}\\n```\\n\\nAnd we we want to `log` instances in table format.\\n\\n# Approach\\n\\n\\n```\\nconst t = new Todo(\'1\', \'Completed\', \\"You\'ve completed me!\\");\\n\\nconsole.table(t);\\n```\\n\\nThe instance is is logged with property names appearing in the first column and values in the second. \\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Logging Enumerable Data With Javascript\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-jakjs3\\">\\n</fs-link-preview>\\n","html":"<p>We have a <code>Todo</code> class:</p>\\n<pre><code>class Todo {\\n  constructor(\\n    public id: string,\\n    public label: string,\\n    public description: string\\n  ) {}\\n}\\n</code></pre>\\n<p>And we we want to <code>log</code> instances in table format.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const t = new Todo(&#39;1&#39;, &#39;Completed&#39;, &quot;You&#39;ve completed me!&quot;);\\n\\nconsole.table(t);\\n</code></pre>\\n<p>The instance is is logged with property names appearing in the first column and values in the second. </p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Logging Enumerable Data With Javascript\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-jakjs3\'>\\n</fs-link-preview></p>\\n","summary":"Logging Enumerable Data With Javascript","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"1/22/2022","headerImage":"grasshopper-2655486_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/grasshopper-2655486_1280.jpg","title":"Logging Enumerable Data With Javascript","readingTime":1,"wordCount":94},{"category":"Tasks","type":"task","md5":"a0f7240c7e67d073f0fdc0cc235991a6","filename":"performing-global-replacement-within-javascript-strings.md","path":"tasks/javascript/performing-global-replacement-within-javascript-strings.md","id":"tasks--javascript--performing-global-replacement-within-javascript-strings","markdown":"\\nWe have the string `boo the foo boo the foo`.  And we want to replace all occurences of `boo` with `pity`.\\n\\n# Approach\\n\\nNote that for `result1` we use `RegExp` to create the regular expression, since this allows us to pass in the `BOO_LITERAL`.  The second argument `g` means that we should perform the replacement globally.\\n\\n```\\nconst BOO_LITERAL = `boo`;\\nconst r = `boo the foo boo the foo`;\\nconst result1 = r.replace(new RegExp(BOO_LITERAL, \\"g\\"), \\"pity\\");\\nconst result2 = r.replace(/boo/g, \\"pity\\");\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Performing Global Replacement Within Javascript Strings\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/js-string-global-replacement?file=index.js\\">\\n</fs-link-preview>\\n","html":"<p>We have the string <code>boo the foo boo the foo</code>.  And we want to replace all occurences of <code>boo</code> with <code>pity</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Note that for <code>result1</code> we use <code>RegExp</code> to create the regular expression, since this allows us to pass in the <code>BOO_LITERAL</code>.  The second argument <code>g</code> means that we should perform the replacement globally.</p>\\n<pre><code>const BOO_LITERAL = `boo`;\\nconst r = `boo the foo boo the foo`;\\nconst result1 = r.replace(new RegExp(BOO_LITERAL, &quot;g&quot;), &quot;pity&quot;);\\nconst result2 = r.replace(/boo/g, &quot;pity&quot;);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Performing Global Replacement Within Javascript Strings\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/js-string-global-replacement?file=index.js\'>\\n</fs-link-preview></p>\\n","summary":"Performing Global Replacement Within Javascript Strings.","tags":["JavaScript"],"tagString":"JavaScript","author":"Ole Ersoy","date":"5/01/2021","headerImage":"globe-thistle-599653_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/globe-thistle-599653_1920.jpg","title":"Performing Global Replacement Within Javascript Strings","readingTime":1,"wordCount":123},{"category":"Tasks","type":"task","md5":"f58b063c9264decfd41e05349255b8fd","filename":"pretty-printing-deep-javascript-objects.md","path":"tasks/javascript/pretty-printing-deep-javascript-objects.md","id":"tasks--javascript--pretty-printing-deep-javascript-objects","markdown":"\\nWe have a nested object graph \\ncomposed like this:\\n\\n```\\nclass Task {\\n  constructor(public id: number, public description, public previous?: Task) {}\\n}\\n\\nconst first = new Task(1, \'First\');\\nconst last = new Task(1, \'Last\', first);\\n\\n```\\n\\nAnd we want to pretty print it so that we can see the structure\\nand values like this:\\n\\n```\\n{\\nid: 1,\\ndescription: \\"Last\\",\\nprevious: {\\n      id: 1,\\n      description: \\"First\\",\\n      previous: undefined\\n}\\n```\\n\\n# Approach\\n\\nFirst install `stringify-object`:\\n```\\nnpm i -D stringify-object @types/stringify-object\\n```\\n\\nPrint (log) the graph like this:\\n\\n```\\nconst s = stringifyObject(last, {\\n  indent: \'      \',\\n  singleQuotes: false,\\n});\\nconsole.log(s);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"File Input Button\\" \\n  description=\\"Pretty Printing Deep Javascript Objects\\"\\n\\tdomain=\\"developer.fireflysemantics.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-bdpjpb\\">\\n</fs-link-preview>\\n\\n\\n","html":"<p>We have a nested object graph \\ncomposed like this:</p>\\n<pre><code>class Task {\\n  constructor(public id: number, public description, public previous?: Task) {}\\n}\\n\\nconst first = new Task(1, &#39;First&#39;);\\nconst last = new Task(1, &#39;Last&#39;, first);\\n</code></pre>\\n<p>And we want to pretty print it so that we can see the structure\\nand values like this:</p>\\n<pre><code>{\\nid: 1,\\ndescription: &quot;Last&quot;,\\nprevious: {\\n      id: 1,\\n      description: &quot;First&quot;,\\n      previous: undefined\\n}\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First install <code>stringify-object</code>:</p>\\n<pre><code>npm i -D stringify-object @types/stringify-object\\n</code></pre>\\n<p>Print (log) the graph like this:</p>\\n<pre><code>const s = stringifyObject(last, {\\n  indent: &#39;      &#39;,\\n  singleQuotes: false,\\n});\\nconsole.log(s);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'File Input Button\' \\n  description=\'Pretty Printing Deep Javascript Objects\'\\n    domain=\'developer.fireflysemantics.com\' \\n  url=\'https://stackblitz.com/edit/typescript-bdpjpb\'>\\n</fs-link-preview></p>\\n","summary":"Pretty Printing Deep Javascript Objects.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2022","headerImage":"peacock-6185159_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/peacock-6185159_1920.jpg","title":"Pretty Printing Deep Javascript Objects","readingTime":1,"wordCount":128},{"category":"Tasks","type":"task","md5":"55699405774b9786afdb4e490b029167","filename":"reading-text-files-with-javascript.md","path":"tasks/javascript/reading-text-files-with-javascript.md","id":"tasks--javascript--reading-text-files-with-javascript","markdown":"\\nWe have a markdown text file `markdown.md` and we want to read the contents of it using Javascript.\\n\\n# Approach\\n\\nPlace a load button on the page.  See this for an example:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/girl-pin-cushion.jpeg\\"\\n\\ttitle=\\"File Input Button\\" \\n  description=\\"Styling a File Input Button with Materialize\\"\\n\\tdomain=\\"developer.fireflysemantics.com\\" \\n  url=\\"https://developer.fireflysemantics.com/tasks/tasks--css--styling-a-file-input-button-with-materialize\\">\\n</fs-link-preview>\\n\\n\\nCreate an event listener:\\n```\\nfunction onFileSelect(event) {\\n    this.selectedFile = event.target.files[0];\\n    const reader = new FileReader();\\n    reader.onload = (e) => {\\n        const text = reader.result.toString().trim();\\n        console.log(text);\\n    }\\n    reader.readAsText(this.selectedFile);\\n}\\n```\\n\\nHook up an event listener:\\n```\\nconst button:HTMLInputElement = document.getElementById(\'file-button-id\');\\nbutton.addEventListener(\'change\', onFileSelect, false);\\n```\\n\\n# Test\\n\\nAdd this content to a text file:\\n\\n```\\n## This is a markdown file\\n```\\nAnd open the text file with the button.\\n\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Reading Text Files With Typescript\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-file-load\\">\\n</fs-link-preview>\\n","html":"<p>We have a markdown text file <code>markdown.md</code> and we want to read the contents of it using Javascript.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Place a load button on the page.  See this for an example:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/girl-pin-cushion.jpeg\'\\n    title=\'File Input Button\' \\n  description=\'Styling a File Input Button with Materialize\'\\n    domain=\'developer.fireflysemantics.com\' \\n  url=\'https://developer.fireflysemantics.com/tasks/tasks--css--styling-a-file-input-button-with-materialize\'>\\n</fs-link-preview></p>\\n<p>Create an event listener:</p>\\n<pre><code>function onFileSelect(event) {\\n    this.selectedFile = event.target.files[0];\\n    const reader = new FileReader();\\n    reader.onload = (e) =&gt; {\\n        const text = reader.result.toString().trim();\\n        console.log(text);\\n    }\\n    reader.readAsText(this.selectedFile);\\n}\\n</code></pre>\\n<p>Hook up an event listener:</p>\\n<pre><code>const button:HTMLInputElement = document.getElementById(&#39;file-button-id&#39;);\\nbutton.addEventListener(&#39;change&#39;, onFileSelect, false);\\n</code></pre>\\n<h1 id=\'test\'>Test</h1>\\n<p>Add this content to a text file:</p>\\n<pre><code>## This is a markdown file\\n</code></pre>\\n<p>And open the text file with the button.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Reading Text Files With Typescript\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-file-load\'>\\n</fs-link-preview></p>\\n","summary":"Reading Text Files With Javascript.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"2/14/2021","headerImage":"book-1822474_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/book-1822474_1920.jpg","title":"Reading Text Files With Javascript","readingTime":1,"wordCount":188},{"category":"Tasks","type":"task","md5":"19c8447d5793735d39d642909bc0456e","filename":"removing-the-first-two-items-of-an-array-with-slice.md","path":"tasks/javascript/removing-the-first-two-items-of-an-array-with-slice.md","id":"tasks--javascript--removing-the-first-two-items-of-an-array-with-slice","markdown":"\\nWe have an array `[1,2,3]` and we want to remove `[1,2]` so that we end up with `[3]`.\\n\\n# Approach\\n\\n```\\nconst arr = [1, 2, 3];\\nconst three = arr.slice(2);\\n```\\n\\nThus when only one argument (`2`) is passed to slice as shown, it removes indexes up to that number.  In this case it removes the items with indexes `0` and `1` and returns the resulting array `[3]`.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Removing the First Two Items of an Array with Javascripts Slice\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/removing-the-start-of-an-array-with-slice\\">\\n</fs-link-preview>","html":"<p>We have an array <code>[1,2,3]</code> and we want to remove <code>[1,2]</code> so that we end up with <code>[3]</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const arr = [1, 2, 3];\\nconst three = arr.slice(2);\\n</code></pre>\\n<p>Thus when only one argument (<code>2</code>) is passed to slice as shown, it removes indexes up to that number.  In this case it removes the items with indexes <code>0</code> and <code>1</code> and returns the resulting array <code>[3]</code>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Removing the First Two Items of an Array with Javascripts Slice\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/removing-the-start-of-an-array-with-slice\'>\\n</fs-link-preview></p>\\n","summary":"Removing the First Two Items of an Array with Javascripts Slice.","tags":["JavaScript","TypeScript","HTML"],"tagString":"JavaScript, TypeScript, HTML","author":"Ole Ersoy","date":"6/14/2021","headerImage":"butterfly-1964621_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/butterfly-1964621_1920.jpg","title":"Removing the First Two Items of an Array with Javascripts Slice","readingTime":1,"wordCount":116},{"category":"Tasks","type":"task","md5":"51f47d5f8d6e33796daac2e4a62a5280","filename":"sorting-javascript-objects-in-ascending-order-by-date.md","path":"tasks/javascript/sorting-javascript-objects-in-ascending-order-by-date.md","id":"tasks--javascript--sorting-javascript-objects-in-ascending-order-by-date","markdown":"\\nHave have the following Typescript class instances:\\n```\\nclass DateClass {\\n    constructor(public name: string, public receiptDate: Date) {}\\n}\\nconst d1 = new DateClass(\'d1\', new Date(3));\\nconst d2 = new DateClass(\'d2\', new Date(2));\\nconst arr: DateClass[] = [d1, d2];\\n```\\n\\nAnd we wish to sort them in the following order:\\n```\\n[d2, d1]\\n```\\n\\n# Approach\\n\\n```\\nconst sorted = arr.sort((a, b) => {\\nreturn a.receiptDate.getTime() - b.receiptDate.getTime();\\n});\\nconsole.log(sorted);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Sorting Javascript Objects in Ascending Order by Date\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-mx7zry\\">\\n</fs-link-preview>\\n","html":"<p>Have have the following Typescript class instances:</p>\\n<pre><code>class DateClass {\\n    constructor(public name: string, public receiptDate: Date) {}\\n}\\nconst d1 = new DateClass(&#39;d1&#39;, new Date(3));\\nconst d2 = new DateClass(&#39;d2&#39;, new Date(2));\\nconst arr: DateClass[] = [d1, d2];\\n</code></pre>\\n<p>And we wish to sort them in the following order:</p>\\n<pre><code>[d2, d1]\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const sorted = arr.sort((a, b) =&gt; {\\nreturn a.receiptDate.getTime() - b.receiptDate.getTime();\\n});\\nconsole.log(sorted);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Sorting Javascript Objects in Ascending Order by Date\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-mx7zry\'>\\n</fs-link-preview></p>\\n","summary":"Sorting Javascript Objects in Ascending Order by Date.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"1/01/2022","headerImage":"jellyfish-1838613_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1838613_1920.jpg","title":"Sorting Javascript Objects in Ascending Order by Date","readingTime":1,"wordCount":104},{"category":"Tasks","type":"task","md5":"bc677424b0f2254225baf437c88d4901","filename":"testing-the-javascript-date-api.md","path":"tasks/javascript/testing-the-javascript-date-api.md","id":"tasks--javascript--testing-the-javascript-date-api","markdown":"\\nWe are subtracting days from a date in Javascript like this:\\n\\n```\\nconst date = new Date(\'2010-10-10)\\nconst behind = date.setDate(date.getDate()-8)\\n```\\n\\nAnd we expect the new date to be `2010-10-02`.  However if we log the current day of the `behind` date like this, we get `1`.\\n\\n```\\nconsole.log(behind.getDate())\\n```\\n# Approach\\n\\nInstead of logging `getDate()` use `getUTCDate()`:\\n\\n```\\nconsole.log(behind.getUTCDate())\\n```\\n\\nThis will log the correct day.","html":"<p>We are subtracting days from a date in Javascript like this:</p>\\n<pre><code>const date = new Date(&#39;2010-10-10)\\nconst behind = date.setDate(date.getDate()-8)\\n</code></pre>\\n<p>And we expect the new date to be <code>2010-10-02</code>.  However if we log the current day of the <code>behind</code> date like this, we get <code>1</code>.</p>\\n<pre><code>console.log(behind.getDate())\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Instead of logging <code>getDate()</code> use <code>getUTCDate()</code>:</p>\\n<pre><code>console.log(behind.getUTCDate())\\n</code></pre>\\n<p>This will log the correct day.</p>\\n","summary":"Testing the Javascript Data API.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"1/02/2022","headerImage":"starfishes-1351559_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/starfishes-1351559_1920.jpg","title":"Testing the Javascript Data API","readingTime":1,"wordCount":73},{"category":"Tasks","type":"task","md5":"70fa75d83c29c3c7d4b7db32610b3f73","filename":"embedding-test-example-documentation-for-api-usability-and-code-flow.md","path":"tasks/jest/embedding-test-example-documentation-for-api-usability-and-code-flow.md","id":"tasks--jest--embedding-test-example-documentation-for-api-usability-and-code-flow","markdown":"\\nWe want a simple example to illustrate our API, aid in coding the implementation, and unit test at the same time.\\n\\n# Approach\\n\\n```\\n\\n/**\\n * @param source The source array\\n * @param target The target array\\n * @return An array containing any strings missing in the target array\\n * \\n * @example\\n * \\n    let source = [\'A\', \'B\']\\n    let target = [\'A\']\\n    let missing = findMissingStrings(source, target)\\n    expect(missing.length).toEqual(1)\\n    expect(missing[0]).toEqual(\'B\')\\n * \\n */\\nexport function findMissingStrings(source: string[], target: string[]) {\\n    const missing = []\\n    source.forEach(s => {\\n        !target.includes(s) && missing.push(s)\\n    })\\n    return missing\\n}\\n```","html":"<p>We want a simple example to illustrate our API, aid in coding the implementation, and unit test at the same time.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>\\n/**\\n * @param source The source array\\n * @param target The target array\\n * @return An array containing any strings missing in the target array\\n * \\n * @example\\n * \\n    let source = [&#39;A&#39;, &#39;B&#39;]\\n    let target = [&#39;A&#39;]\\n    let missing = findMissingStrings(source, target)\\n    expect(missing.length).toEqual(1)\\n    expect(missing[0]).toEqual(&#39;B&#39;)\\n * \\n */\\nexport function findMissingStrings(source: string[], target: string[]) {\\n    const missing = []\\n    source.forEach(s =&gt; {\\n        !target.includes(s) &amp;&amp; missing.push(s)\\n    })\\n    return missing\\n}\\n</code></pre>\\n","summary":"Embedding Test Example Documentation for API Usability and Code Flow.","tags":["Unit Testing","Jest","JavaScript"],"tagString":"Unit Testing, Jest, JavaScript","author":"Ole Ersoy","date":"2/16/2021","headerImage":"leaf-1551202_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/leaf-1551202_1920.jpg","title":"Embedding Test Example Documentation for API Usability and Code Flow","readingTime":1,"wordCount":86},{"category":"Tasks","type":"task","md5":"6a0062b12ba6775b31922d087fb8dda1","filename":"practical-unit-testing.md","path":"tasks/jest/practical-unit-testing.md","id":"tasks--jest--practical-unit-testing","markdown":"\\nWe have a `Map<number,any>` like this:\\n```\\nconst map1 = new Map();\\nmap1.set(0,\'alpha\');\\nmap1.set(1,\'beta\');\\nmap1.set(2,\'gamma\');\\nmap1.set(3,\'omega\');\\nmap1.set(4,\'theta\');\\n```\\n\\nIf we delete the entry with index `2` the remaining indexes are `[3,4]`. \\n\\nWe want a function that calculates this result and we want unit tests for it.\\n\\n# Approach\\n\\nFirst lets document and implement our function:\\n\\n<fs-gist height=\\"40rem\\" gistID=\\"fireflysemantics/8e515d7007ba4ef0826c4cd599810796\\">\\n</fs-gist>\\n\\nNotice that the way we documented our function makes it easy to unit test it.\\nHere\u2019s the unit test. Note that we are testing edge conditions:\\n\\n<fs-gist height=\\"40rem\\" gistID=\\"fireflysemantics/d2a5689ae3357b55571eafb915d9b764\\">\\n</fs-gist>","html":"<p>We have a <code>Map&lt;number,any&gt;</code> like this:</p>\\n<pre><code>const map1 = new Map();\\nmap1.set(0,&#39;alpha&#39;);\\nmap1.set(1,&#39;beta&#39;);\\nmap1.set(2,&#39;gamma&#39;);\\nmap1.set(3,&#39;omega&#39;);\\nmap1.set(4,&#39;theta&#39;);\\n</code></pre>\\n<p>If we delete the entry with index <code>2</code> the remaining indexes are <code>[3,4]</code>. </p>\\n<p>We want a function that calculates this result and we want unit tests for it.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First lets document and implement our function:</p>\\n<fs-gist height=\'40rem\' gistID=\'fireflysemantics/8e515d7007ba4ef0826c4cd599810796\'>\\n</fs-gist>\\n\\n<p>Notice that the way we documented our function makes it easy to unit test it.\\nHere\u2019s the unit test. Note that we are testing edge conditions:</p>\\n<fs-gist height=\'40rem\' gistID=\'fireflysemantics/d2a5689ae3357b55571eafb915d9b764\'>\\n</fs-gist>","summary":"Practical Unit Testing.","tags":["Unit Testing","Jest","JavaScript"],"tagString":"Unit Testing, Jest, JavaScript","author":"Ole Ersoy","date":"2/16/2021","headerImage":"science-1182713_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/science-1182713_1920.jpg","title":"Practical Unit Testing","readingTime":1,"wordCount":114},{"category":"Tasks","type":"task","md5":"342dcd713ec659a3c36c9bd58228ce59","filename":"cd-faster-on-linux.md","path":"tasks/linux/cd-faster-on-linux.md","id":"tasks--linux--cd-faster-on-linux","markdown":"\\nWe have been typing:\\n```\\ncd ~/path/to/some/down/deep/example/yougetit/directory/\\n```\\nAnd we just want to type `cdex`\\n\\n# Approach\\n\\nIn `~/.bashrc add`:\\n\\n```\\nalias cdex=\'cd ~/path/to/some/down/deep/example/yougetit/directory/\\n```\\n\\nThen reload ~/.bashrc\\n```\\nsource ~/.bashrc\\n```","html":"<p>We have been typing:</p>\\n<pre><code>cd ~/path/to/some/down/deep/example/yougetit/directory/\\n</code></pre>\\n<p>And we just want to type <code>cdex</code></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In <code>~/.bashrc add</code>:</p>\\n<pre><code>alias cdex=&#39;cd ~/path/to/some/down/deep/example/yougetit/directory/\\n</code></pre>\\n<p>Then reload ~/.bashrc</p>\\n<pre><code>source ~/.bashrc\\n</code></pre>\\n","summary":"CD Faster on Linux.","tags":["Linux"],"tagString":"Linux","author":"Ole Ersoy","date":"3/16/2021","headerImage":"animal-4118594_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-4118594_1920.jpg","title":"CD Faster on Linux","readingTime":1,"wordCount":40},{"category":"Tasks","type":"task","md5":"0dbc24ab5b59b253fc4621f778ec6f0c","filename":"creating-an-alias-for-ts-node-on-linux.md","path":"tasks/linux/creating-an-alias-for-ts-node-on-linux.md","id":"tasks--linux--creating-an-alias-for-ts-node-on-linux","markdown":"\\nInstead of typing `ts-node script.ts` we just want to type `ts script.ts`.\\n\\n# Approach\\n\\nEdit `~/.bashrc` and at the bottom add `alias ts=\'ts-node\'` and save. \\n\\nNow run `source ~/.bashrc`. \\n\\nNow create a `test.ts` file containing a `console.log(\\"hello\u201d)` statement, and run `ts test.ts`.","html":"<p>Instead of typing <code>ts-node script.ts</code> we just want to type <code>ts script.ts</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Edit <code>~/.bashrc</code> and at the bottom add <code>alias ts=&#39;ts-node&#39;</code> and save. </p>\\n<p>Now run <code>source ~/.bashrc</code>. </p>\\n<p>Now create a <code>test.ts</code> file containing a <code>console.log(&quot;hello\u201d)</code> statement, and run <code>ts test.ts</code>.</p>\\n","summary":"Creating an Alias for TS Node on Linux.","tags":["Linux"],"tagString":"Linux","author":"Ole Ersoy","date":"2/16/2021","headerImage":"fantasy-4872955_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/fantasy-4872955_1920.jpg","title":"Creating an Alias for TS Node on Linux","readingTime":1,"wordCount":50},{"category":"Tasks","type":"task","md5":"5ae5fc1f78d6e5accc9971ebe731c9fa","filename":"indexing-typescript-todo-entities-with-lunr.md","path":"tasks/lunr/indexing-typescript-todo-entities-with-lunr.md","id":"tasks--lunr--indexing-typescript-todo-entities-with-lunr","markdown":"\\nWe have Todo entities defined using this `interface`.\\n```\\ninterface Todo {\\n    gid?: string;\\n    id?: string;\\n    complete: boolean;\\n    title: string;\\n}\\n```\\n\\nAnd we have a few instances of it:\\n```\\nconst TODO_ID_1 = \'1\';\\nconst TODO_ID_2 = \'2\';\\nconst TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: \'You complete me!\'\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: \'You completed me!\'\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n\\n```\\n\\nAnd we want to index these using `Lunr.js` so that we can search for `Todo` entities.\\n\\n# Approach\\n\\nFirst we need to add `lunr` and `@types/lunr `to our Stackblitz.\\n\\nThen create the index like this by passing a callback function to `lunr` that will index the `Todo` fields `complete` and `title` .\\n\\n```\\nfunction initializeSearchIndex(todos: Todo[]): lunr.Index {\\n    const idx: lunr.Index = lunr(function () {\\n            this.field(\'complete\');\\n            this.field(\'title\');\\n            todos.forEach((todo) => {\\n                this.add(todo);\\n        });\\n    });\\n    return idx;\\n}\\n```\\nOnce we have the index we can use it to search for `Todo` instances.\\n\\n```\\nconst idx = initializeSearchIndex(todos);\\nconst idxResult: lunr.Index.Result[] = idx.search(\'false\');\\n```\\nAnd if we `console.log` the `idxResult` we see that it contains the `incomplete` `Todo` instance reference with `ref id 1`:\\n\\n```\\n[\\n  {\\n    \\"ref\\": \\"1\\",\\n    \\"score\\": 0.693,\\n    \\"matchData\\": {\\n      \\"metadata\\": {\\n        \\"fals\\": {\\n          \\"complete\\": {}\\n        }\\n      }\\n    }\\n  }\\n]\\n```\\nSo we need to map this result using our todos array.\\n```\\nfunction search(query: string) {\\n    const results = idx.search(query);\\n    return results.map((result) => {\\n        return todos.find((todo) => result.ref === todo.id);\\n    });\\n}\\n```\\nAnd now we can search for our `Todo` instances.\\n```\\nconst searchResult = search(\'false\');\\n//console.log(searchResult);\\n```\\nNow our search result contains the `Todo` instance with `complete` set too `false`.\\n```\\n[\\n  {\\n    \\"id\\": \\"1\\",\\n    \\"complete\\": false,\\n    \\"title\\": \\"Firefly Semantics Slice Rocks!!\\"\\n  }\\n]\\n```\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Indexing Typescript Todo Entities with Lunr\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-u21xa4\\">\\n</fs-link-preview>","html":"<p>We have Todo entities defined using this <code>interface</code>.</p>\\n<pre><code>interface Todo {\\n    gid?: string;\\n    id?: string;\\n    complete: boolean;\\n    title: string;\\n}\\n</code></pre>\\n<p>And we have a few instances of it:</p>\\n<pre><code>const TODO_ID_1 = &#39;1&#39;;\\nconst TODO_ID_2 = &#39;2&#39;;\\nconst TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: &#39;You complete me!&#39;\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: &#39;You completed me!&#39;\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n</code></pre>\\n<p>And we want to index these using <code>Lunr.js</code> so that we can search for <code>Todo</code> entities.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First we need to add <code>lunr</code> and <code>@types/lunr </code>to our Stackblitz.</p>\\n<p>Then create the index like this by passing a callback function to <code>lunr</code> that will index the <code>Todo</code> fields <code>complete</code> and <code>title</code> .</p>\\n<pre><code>function initializeSearchIndex(todos: Todo[]): lunr.Index {\\n    const idx: lunr.Index = lunr(function () {\\n            this.field(&#39;complete&#39;);\\n            this.field(&#39;title&#39;);\\n            todos.forEach((todo) =&gt; {\\n                this.add(todo);\\n        });\\n    });\\n    return idx;\\n}\\n</code></pre>\\n<p>Once we have the index we can use it to search for <code>Todo</code> instances.</p>\\n<pre><code>const idx = initializeSearchIndex(todos);\\nconst idxResult: lunr.Index.Result[] = idx.search(&#39;false&#39;);\\n</code></pre>\\n<p>And if we <code>console.log</code> the <code>idxResult</code> we see that it contains the <code>incomplete</code> <code>Todo</code> instance reference with <code>ref id 1</code>:</p>\\n<pre><code>[\\n  {\\n    &quot;ref&quot;: &quot;1&quot;,\\n    &quot;score&quot;: 0.693,\\n    &quot;matchData&quot;: {\\n      &quot;metadata&quot;: {\\n        &quot;fals&quot;: {\\n          &quot;complete&quot;: {}\\n        }\\n      }\\n    }\\n  }\\n]\\n</code></pre>\\n<p>So we need to map this result using our todos array.</p>\\n<pre><code>function search(query: string) {\\n    const results = idx.search(query);\\n    return results.map((result) =&gt; {\\n        return todos.find((todo) =&gt; result.ref === todo.id);\\n    });\\n}\\n</code></pre>\\n<p>And now we can search for our <code>Todo</code> instances.</p>\\n<pre><code>const searchResult = search(&#39;false&#39;);\\n//console.log(searchResult);\\n</code></pre>\\n<p>Now our search result contains the <code>Todo</code> instance with <code>complete</code> set too <code>false</code>.</p>\\n<pre><code>[\\n  {\\n    &quot;id&quot;: &quot;1&quot;,\\n    &quot;complete&quot;: false,\\n    &quot;title&quot;: &quot;Firefly Semantics Slice Rocks!!&quot;\\n  }\\n]\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Indexing Typescript Todo Entities with Lunr\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-u21xa4\'>\\n</fs-link-preview></p>\\n","summary":"Indexing Typescript Todo Entities with Lunr.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/3/2022","headerImage":"dragonfly-5957597_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dragonfly-5957597_1920.jpg","title":"Indexing Typescript Todo Entities with Lunr","readingTime":2,"wordCount":303},{"category":"Tasks","type":"task","md5":"62c16a742637c592547d86684c6b75a6","filename":"installing-all-google-fonts-on-macos.md","path":"tasks/macos/installing-all-google-fonts-on-macos.md","id":"tasks--macos--installing-all-google-fonts-on-macos","markdown":"\\nWe wish to install all on MacOS using [Google Fonts](https://fonts.google.com/) on MacOS.\\n\\n# Approach\\n\\n```\\ncd ~/Library/Fonts/\\ngit clone https://github.com/google/fonts.git google-fonts\\n```\\n\\nThis will clone the Google Fonts repository thereby creating the directory `google-fonts`.\\n\\nOpen `User` section in the Font Book app.  All the Google Fonts will be indexed there.\\n\\nIn the event that Google adds more fonts update the fonts like this:\\n\\n```\\ncd ~/Library/Fonts/google-fonts/\\ngit pull\\n```\\n","html":"<p>We wish to install all on MacOS using <a href=\'https://fonts.google.com/\'>Google Fonts</a> on MacOS.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>cd ~/Library/Fonts/\\ngit clone https://github.com/google/fonts.git google-fonts\\n</code></pre>\\n<p>This will clone the Google Fonts repository thereby creating the directory <code>google-fonts</code>.</p>\\n<p>Open <code>User</code> section in the Font Book app.  All the Google Fonts will be indexed there.</p>\\n<p>In the event that Google adds more fonts update the fonts like this:</p>\\n<pre><code>cd ~/Library/Fonts/google-fonts/\\ngit pull\\n</code></pre>\\n","summary":"Installing All Google Fonts on macOS.","tags":["MacOS"],"tagString":"MacOS","author":"Ole Ersoy","date":"3/11/2022","headerImage":"lily-6478427_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lily-6478427_1920.jpg","title":"Installing All Google Fonts on macOS","readingTime":1,"wordCount":79},{"category":"Tasks","type":"task","md5":"efa8fd1333ac449f3fe3f9488ccecb8c","filename":"installing-node-with-nvm-on-macos.md","path":"tasks/macos/installing-node-with-nvm-on-macos.md","id":"tasks--macos--installing-node-with-nvm-on-macos","markdown":"\\nWe wish to install [Node](https://nodejs.org/en/) on MacOS using [NVM](https://github.com/nvm-sh/nvm).\\n\\n# Approach\\n\\nOpen the Github link to the [NVM](https://github.com/nvm-sh/nvm).  Currently the script statement that installs NVM looks like this:\\n\\n```\\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash\\n```\\n\\nWhen the command is run, macOS will prompt for an install of Apple Developer Tools.  \\n\\nYou may want to install [brew](https://brew.sh/) and [install git with brew](https://git-scm.com/download/mac) first, otherwise Apple Git will be installed.\\n\\nAfter it is installed, check the version:\\n\\n```\\nnvm --version\\n```\\n\\nTo install node run [nvm install node](https://github.com/nvm-sh/nvm#usage).\\n\\nTo install a specific version:\\n```\\nnvm install 6.14.4 # or 10.10.0, 8.9.1, etc\\n```\\n\\nFor more use cases see the [README.md](https://github.com/nvm-sh/nvm#usage).","html":"<p>We wish to install <a href=\'https://nodejs.org/en/\'>Node</a> on MacOS using <a href=\'https://github.com/nvm-sh/nvm\'>NVM</a>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Open the Github link to the <a href=\'https://github.com/nvm-sh/nvm\'>NVM</a>.  Currently the script statement that installs NVM looks like this:</p>\\n<pre><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash\\n</code></pre>\\n<p>When the command is run, macOS will prompt for an install of Apple Developer Tools.  </p>\\n<p>You may want to install <a href=\'https://brew.sh/\'>brew</a> and <a href=\'https://git-scm.com/download/mac\'>install git with brew</a> first, otherwise Apple Git will be installed.</p>\\n<p>After it is installed, check the version:</p>\\n<pre><code>nvm --version\\n</code></pre>\\n<p>To install node run <a href=\'https://github.com/nvm-sh/nvm#usage\'>nvm install node</a>.</p>\\n<p>To install a specific version:</p>\\n<pre><code>nvm install 6.14.4 # or 10.10.0, 8.9.1, etc\\n</code></pre>\\n<p>For more use cases see the <a href=\'https://github.com/nvm-sh/nvm#usage\'>README.md</a>.</p>\\n","summary":"Installing Node with NVM on MacOS.","tags":["NodeJS","MacOS"],"tagString":"NodeJS, MacOS","author":"Ole Ersoy","date":"4/10/2021","headerImage":"body-of-water-3332522_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/body-of-water-3332522_1920.jpg","title":"Installing Node with NVM on MacOS","readingTime":1,"wordCount":156},{"category":"Tasks","type":"task","md5":"e6a73ddb703a31dc40943df4d13f9ba0","filename":"usb-drive-backup-on-macos-with-rsync.md","path":"tasks/macos/usb-drive-backup-on-macos-with-rsync.md","id":"tasks--macos--usb-drive-backup-on-macos-with-rsync","markdown":"\\nWe want to backup files contained `~/FireflySemantics` to our USB C drive located at `/Volumes/backup`.\\n\\n# Approach\\n\\n```\\nrsync -vaz ~/FireflySemantics /Volumes/backup \\n```","html":"<p>We want to backup files contained <code>~/FireflySemantics</code> to our USB C drive located at <code>/Volumes/backup</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>rsync -vaz ~/FireflySemantics /Volumes/backup \\n</code></pre>\\n","summary":"USB Backup on MacOS with RSync.","tags":["MacOS","RSync"],"tagString":"MacOS, RSync","author":"Ole Ersoy","date":"10/10/2021","headerImage":"lotus-1629225_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lotus-1629225_1920.jpg","title":"USB Backup on MacOS with RSync","readingTime":1,"wordCount":22},{"category":"Tasks","type":"task","md5":"d6e102ac9223750a7eb58d91ccb4205b","filename":"comparing-sitemaps-using-node.md","path":"tasks/node/comparing-sitemaps-using-node.md","id":"tasks--node--comparing-sitemaps-using-node","markdown":"\\nWe have two site map files `sitemapA.xml` and `sitemapB.xml` and we want to compare the two to see whether `sitemapA.xml` contains all the `URL`s declared in `sitemapB.xml`.  If any of the `URL`s are not in `sitemapA.xml` then we log the `URL`.  \\n\\nHere\'s a minimal sitemap example:\\n\\n```\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n\\n<urlset xmlns=\\"http://www.sitemaps.org/schemas/sitemap/0.9\\">\\n\\n   <url>\\n\\n      <loc>http://www.e.com/</loc>\\n\\n      <lastmod>2006-05-01</lastmod>\\n\\n      <changefreq>monthly</changefreq>\\n\\n      <priority>0.8</priority>\\n\\n   </url>\\n\\n</urlset> \\n```\\n\\n# Approach\\n\\nWe will be using the package `xml2js` to load xml.\\n\\n```\\nnpm i -D xml2js \\n```\\nThis is the node script that will be used to compare the two site map files.  It reads in each file, parses the XML into Javascript objects, indexes `sitemapA.xml` content using a Javascript map, and examines whether all the `URL`s in `sitemapB.xml` are contained in the `m` index:\\n\\n```\\nconst { promises: fs } = require(\\"fs\\");\\nvar parser = new xml2js.Parser(/* options */);\\n\\nasync function compare() {\\n    const xmlA = await fs.readFile( \'./sitemapA.xml\',\'utf8\')\\n    const xmlB = await fs.readFile( \'./sitemapB.xml\',\'utf8\')\\n    const jsA = await parser.parseStringPromise(xmlA)\\n    const jsB = await parser.parseStringPromise(xmlB)\\n    const m = new Map();\\n    jsA.urlset.url.forEach(v=>{\\n        m.set(v.loc[0], v.loc[0])\\n    })\\n\\n    jsB.urlset.url.forEach(v=>{\\n        if (!m.get(v.loc[0])) {\\n             console.log(v.loc[0])\\n        }\\n    })\\n }\\n compare();\\n```","html":"<p>We have two site map files <code>sitemapA.xml</code> and <code>sitemapB.xml</code> and we want to compare the two to see whether <code>sitemapA.xml</code> contains all the <code>URL</code>s declared in <code>sitemapB.xml</code>.  If any of the <code>URL</code>s are not in <code>sitemapA.xml</code> then we log the <code>URL</code>.  </p>\\n<p>Here&#39;s a minimal sitemap example:</p>\\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\\n\\n&lt;urlset xmlns=&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;&gt;\\n\\n   &lt;url&gt;\\n\\n      &lt;loc&gt;http://www.e.com/&lt;/loc&gt;\\n\\n      &lt;lastmod&gt;2006-05-01&lt;/lastmod&gt;\\n\\n      &lt;changefreq&gt;monthly&lt;/changefreq&gt;\\n\\n      &lt;priority&gt;0.8&lt;/priority&gt;\\n\\n   &lt;/url&gt;\\n\\n&lt;/urlset&gt; \\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will be using the package <code>xml2js</code> to load xml.</p>\\n<pre><code>npm i -D xml2js \\n</code></pre>\\n<p>This is the node script that will be used to compare the two site map files.  It reads in each file, parses the XML into Javascript objects, indexes <code>sitemapA.xml</code> content using a Javascript map, and examines whether all the <code>URL</code>s in <code>sitemapB.xml</code> are contained in the <code>m</code> index:</p>\\n<pre><code>const { promises: fs } = require(&quot;fs&quot;);\\nvar parser = new xml2js.Parser(/* options */);\\n\\nasync function compare() {\\n    const xmlA = await fs.readFile( &#39;./sitemapA.xml&#39;,&#39;utf8&#39;)\\n    const xmlB = await fs.readFile( &#39;./sitemapB.xml&#39;,&#39;utf8&#39;)\\n    const jsA = await parser.parseStringPromise(xmlA)\\n    const jsB = await parser.parseStringPromise(xmlB)\\n    const m = new Map();\\n    jsA.urlset.url.forEach(v=&gt;{\\n        m.set(v.loc[0], v.loc[0])\\n    })\\n\\n    jsB.urlset.url.forEach(v=&gt;{\\n        if (!m.get(v.loc[0])) {\\n             console.log(v.loc[0])\\n        }\\n    })\\n }\\n compare();\\n</code></pre>\\n","summary":"Comparing Site Maps Using Node.","tags":["NodeJS","JavaScript","XML"],"tagString":"NodeJS, JavaScript, XML","author":"Ole Ersoy","date":"6/6/2021","headerImage":"butterbur-3469942_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/butterbur-3469942_1920.jpg","title":"Comparing Site Maps Using Node","readingTime":2,"wordCount":234},{"category":"Tasks","type":"task","md5":"539c62523f8156f548ba970f28fb0285","filename":"determining-a-node-scripts-current-working-directory.md","path":"tasks/node/determining-a-node-scripts-current-working-directory.md","id":"tasks--node--determining-a-node-scripts-current-working-directory","markdown":"\\nWe are invoking a [Commander](https://www.npmjs.com/package/commander) script and we are wondering what directory it is executing in?\\n\\n# Approach\\n\\nWithin the command being coded run:\\n\\n```\\nlog(\'info\', \\"The current working directory is: \\", process.cwd())\\n```\\n","html":"<p>We are invoking a <a href=\'https://www.npmjs.com/package/commander\'>Commander</a> script and we are wondering what directory it is executing in?</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Within the command being coded run:</p>\\n<pre><code>log(&#39;info&#39;, &quot;The current working directory is: &quot;, process.cwd())\\n</code></pre>\\n","summary":"Determining a Node Scripts Current Working Directory.","tags":["NodeJS","CommanderJS"],"tagString":"NodeJS, CommanderJS","author":"Ole Ersoy","date":"1/16/2021","headerImage":"binary-1254502.png","headerImageURL":"https://fireflysemantics.github.io/i/developer/binary-1254502.png","title":"Determining a Node Scripts Current Working Directory","readingTime":1,"wordCount":38},{"category":"Tasks","type":"task","md5":"e175d6a38141437d1f467105a5c294a2","filename":"automatically-bumping-the-npm-package-semver-patch-version.md","path":"tasks/npm/automatically-bumping-the-npm-package-semver-patch-version.md","id":"tasks--npm--automatically-bumping-the-npm-package-semver-patch-version","markdown":"\\nBefore publishing our NPM Package we want to automatically bump the semver `patch` version.\\n\\n# Approach\\n\\nWe will be using the NPM package [@jsdevtools/version-bump-prompt](https://www.npmjs.com/package/@jsdevtools/version-bump-prompt) to perform the automatic bump.\\n\\nIn the `scripts` section add the install script for it, such that users of the package know where the `bump` command comes from.\\n```\\n\\"scripts\\": {\\n    \\"ig\\": \\"npm install -g @jsdevtools/version-bump-prompt\\"\\n}\\n```\\n\\nNow to install the `bump` command globally `run npm run ig`.\\n\\nNext add a script that bumps the projects patch version:\\n```\\n\\"scripts\\": {\\n...\\n    \\"bp\\": \\"bump patch\\"\\n}\\n```\\n\\nTo bump the projects `patch` version run `npm run bp`.\\n","html":"<p>Before publishing our NPM Package we want to automatically bump the semver <code>patch</code> version.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will be using the NPM package <a href=\'https://www.npmjs.com/package/@jsdevtools/version-bump-prompt\'>@jsdevtools/version-bump-prompt</a> to perform the automatic bump.</p>\\n<p>In the <code>scripts</code> section add the install script for it, such that users of the package know where the <code>bump</code> command comes from.</p>\\n<pre><code>&quot;scripts&quot;: {\\n    &quot;ig&quot;: &quot;npm install -g @jsdevtools/version-bump-prompt&quot;\\n}\\n</code></pre>\\n<p>Now to install the <code>bump</code> command globally <code>run npm run ig</code>.</p>\\n<p>Next add a script that bumps the projects patch version:</p>\\n<pre><code>&quot;scripts&quot;: {\\n...\\n    &quot;bp&quot;: &quot;bump patch&quot;\\n}\\n</code></pre>\\n<p>To bump the projects <code>patch</code> version run <code>npm run bp</code>.</p>\\n","summary":"Automatically Bumping the NPM Package Semver Patch Version.","tags":["NPM","NodeJS","JavaScript"],"tagString":"NPM, NodeJS, JavaScript","author":"Ole Ersoy","date":"2/04/2021","headerImage":"panda-4655326_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/panda-4655326_1920.jpg","title":"Automatically Bumping the NPM Package Semver Patch Version","readingTime":1,"wordCount":107},{"category":"Tasks","type":"task","md5":"d235f8150339553ba7355ecc3cd0e634","filename":"emitting-rxjs-observable-fallback-values.md","path":"tasks/rxjs/emitting-rxjs-observable-fallback-values.md","id":"tasks--rxjs--emitting-rxjs-observable-fallback-values","markdown":"\\nWhen our `Observable<E>` errors out, we want to emit the string fallback value `OOOPS`.\\n\\n# Approach\\n\\n```\\noops.pipe(catchError(err => of(\'OOOPS\')))\\n```    \\n\\n# Demo\\n\\nThe first part of the demo uses `throwError` to error out the `catchMeIfYouCan:Observable<string>`, and therefore only the `error` handler is called, and neither the `next` nor the `complete` handlers are called.\\n\\n```\\nlet catchMeIfYouCan: Observable<string> = throwError(\\"Catch me if you can\\");\\ncatchMeIfYouCan.subscribe(\\n() => console.log(\\"Next handler will not execute\\"),\\ne => console.log(e),\\n() => console.log(\\"Completion handler will not execute\\")\\n);\\n```\\nIn the second part we `pipe` through `catchError` and emit the fallback, and now both the `next` and `complete` handlers are called and the `error` handler is not called.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Emitting RxJS Observable Fallback\xa0Values\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/rxjs-fallback-value\\">\\n</fs-link-preview>\\n","html":"<p>When our <code>Observable&lt;E&gt;</code> errors out, we want to emit the string fallback value <code>OOOPS</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>oops.pipe(catchError(err =&gt; of(&#39;OOOPS&#39;)))\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>The first part of the demo uses <code>throwError</code> to error out the <code>catchMeIfYouCan:Observable&lt;string&gt;</code>, and therefore only the <code>error</code> handler is called, and neither the <code>next</code> nor the <code>complete</code> handlers are called.</p>\\n<pre><code>let catchMeIfYouCan: Observable&lt;string&gt; = throwError(&quot;Catch me if you can&quot;);\\ncatchMeIfYouCan.subscribe(\\n() =&gt; console.log(&quot;Next handler will not execute&quot;),\\ne =&gt; console.log(e),\\n() =&gt; console.log(&quot;Completion handler will not execute&quot;)\\n);\\n</code></pre>\\n<p>In the second part we <code>pipe</code> through <code>catchError</code> and emit the fallback, and now both the <code>next</code> and <code>complete</code> handlers are called and the <code>error</code> handler is not called.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Emitting RxJS Observable Fallback\xa0Values\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/rxjs-fallback-value\'>\\n</fs-link-preview></p>\\n","summary":"Emitting RxJS Observable Fallback\xa0Values.","tags":["JavaScript","TypeScript","RxJs"],"tagString":"JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"2/04/2021","headerImage":"snake-653639_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/snake-653639_1920.jpg","title":"Emitting RxJS Observable Fallback\xa0Values","readingTime":1,"wordCount":150},{"category":"Tasks","type":"task","md5":"044c0d948f2c5c64d8661a75318bcfa7","filename":"simulating-errors-with-rxjs.md","path":"tasks/rxjs/simulating-errors-with-rxjs.md","id":"tasks--rxjs--simulating-errors-with-rxjs","markdown":"\\nWe want to understand how to go about catching an `Observable` error, thus we need an `Observable` that we can `subscribe` to that will trigger the error.\\n\\n# Approach\\n\\nUse RxJs `throwError`:\\n```\\nimport { throwError, Observable } from \'rxjs\';\\nconst catchMeIfYouCan:Observable<string> = throwError(\'Catch me if you can\')\\ncatchMeIfYouCan.subscribe(\\n    ()=>console.log(\\"Next handler will not execute\\"), \\n    (e)=>console.error(e), \\n    ()=>console.log(\\"Completion handler will not execute\\"))\\n```    \\n\\nOnly `Catch me if you can` is logged, indicating that the `Observable` errored out.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Simulating Errors with RxJS\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/rxjs-error-handing-fs\\">\\n</fs-link-preview>\\n","html":"<p>We want to understand how to go about catching an <code>Observable</code> error, thus we need an <code>Observable</code> that we can <code>subscribe</code> to that will trigger the error.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use RxJs <code>throwError</code>:</p>\\n<pre><code>import { throwError, Observable } from &#39;rxjs&#39;;\\nconst catchMeIfYouCan:Observable&lt;string&gt; = throwError(&#39;Catch me if you can&#39;)\\ncatchMeIfYouCan.subscribe(\\n    ()=&gt;console.log(&quot;Next handler will not execute&quot;), \\n    (e)=&gt;console.error(e), \\n    ()=&gt;console.log(&quot;Completion handler will not execute&quot;))\\n</code></pre>\\n<p>Only <code>Catch me if you can</code> is logged, indicating that the <code>Observable</code> errored out.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Simulating Errors with RxJS\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/rxjs-error-handing-fs\'>\\n</fs-link-preview></p>\\n","summary":"Simulating Errors with RxJS.","tags":["JavaScript","TypeScript","RxJs"],"tagString":"JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"2/04/2021","headerImage":"manta-1639965_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/manta-1639965_1920.jpg","title":"Simulating Errors with RxJS","readingTime":1,"wordCount":116},{"category":"Tasks","type":"task","md5":"90675a7695ce3ddc4957c914876eb939","filename":"upgrading-combine-latest-to-the-version-6-plus--rxjs-combine-latest-api.md","path":"tasks/rxjs/upgrading-combine-latest-to-the-version-6-plus--rxjs-combine-latest-api.md","id":"tasks--rxjs--upgrading-combine-latest-to-the-version-6-plus--rxjs-combine-latest-api","markdown":"\\nWe are using the old version of `combineLatest` and \\n`TSLint` strikes out `combineLatest` with this message:\\n\\n> @deprecated \u2014 resultSelector no longer supported, pipe to map instead\\n\\n# Approach\\n\\nThe old way is to pass the result selector like this:\\n\\n```\\nlet o$: Observable<boolean> = combineLatest(\\n  [of(true), of(false)],\\n  (value1, value2) => {\\n    return !!(value1 && value2);\\n  }\\n);\\n```\\n\\nThe new way is to pipe through the result selector with map:\\n```\\no$ = combineLatest([of(true), of(false)]).pipe(\\n  map(arr => {\\n    console.log(`a[0] is ${arr[0]} && a[1] is ${arr[1]}`);\\n    return !!(arr[0] && arr[1]);\\n  })\\n);\\no$.subscribe(o => console.log(`ohh o is ${o}`));\\n```\\n\\nWe now see that `o$` emits `false`, since the second value passed in the to `map` via `arr` is `false`.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Upgrading to Version Six Plus of the RxJs API\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/rxjs-6-combine-lastest-api-demo\\">\\n</fs-link-preview>\\n","html":"<p>We are using the old version of <code>combineLatest</code> and \\n<code>TSLint</code> strikes out <code>combineLatest</code> with this message:</p>\\n<blockquote>\\n<p>@deprecated \u2014 resultSelector no longer supported, pipe to map instead</p>\\n</blockquote>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The old way is to pass the result selector like this:</p>\\n<pre><code>let o$: Observable&lt;boolean&gt; = combineLatest(\\n  [of(true), of(false)],\\n  (value1, value2) =&gt; {\\n    return !!(value1 &amp;&amp; value2);\\n  }\\n);\\n</code></pre>\\n<p>The new way is to pipe through the result selector with map:</p>\\n<pre><code>o$ = combineLatest([of(true), of(false)]).pipe(\\n  map(arr =&gt; {\\n    console.log(`a[0] is ${arr[0]} &amp;&amp; a[1] is ${arr[1]}`);\\n    return !!(arr[0] &amp;&amp; arr[1]);\\n  })\\n);\\no$.subscribe(o =&gt; console.log(`ohh o is ${o}`));\\n</code></pre>\\n<p>We now see that <code>o$</code> emits <code>false</code>, since the second value passed in the to <code>map</code> via <code>arr</code> is <code>false</code>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Upgrading to Version Six Plus of the RxJs API\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/rxjs-6-combine-lastest-api-demo\'>\\n</fs-link-preview></p>\\n","summary":"Upgrading combineLatest to Version Six Plus RxJs of the API.","tags":["JavaScript","TypeScript","RxJs"],"tagString":"JavaScript, TypeScript, RxJs","author":"Ole Ersoy","date":"3/24/2021","headerImage":"skate-2311561_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/skate-2311561_1920.jpg","title":"Upgrading combineLatest to Version Six Plus of the RxJs API","readingTime":1,"wordCount":161},{"category":"Tasks","type":"task","md5":"050191a29b738241411c82802ef51dea","filename":"sass-terniary-expressions.md","path":"tasks/sass/sass-terniary-expressions.md","id":"tasks--sass--sass-terniary-expressions","markdown":"\\nWe want to use a ternary expression in SASS.\\n\\n# Approach\\n\\nThe evaluation of the below expression will set `$result` to `$foreground`.\\n```\\n$property: \'text\';\\n$result: if($property == \'text\', \'$foreground\', \'$background\');\\n@debug $result;\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"SASS Terniary Expressions\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/angular-r9tzuk-hglo6v\\">\\n</fs-link-preview>\\n","html":"<p>We want to use a ternary expression in SASS.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The evaluation of the below expression will set <code>$result</code> to <code>$foreground</code>.</p>\\n<pre><code>$property: &#39;text&#39;;\\n$result: if($property == &#39;text&#39;, &#39;$foreground&#39;, &#39;$background&#39;);\\n@debug $result;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'SASS Terniary Expressions\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/angular-r9tzuk-hglo6v\'>\\n</fs-link-preview></p>\\n","summary":"SASS Terniary Expressions.","tags":["Angular","JavaScript","TypeScript","SASS"],"tagString":"Angular, JavaScript, TypeScript, SASS","author":"Ole Ersoy","date":"5/31/2022","headerImage":"dragonfly-867888_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dragonfly-867888_1920.jpg","title":"SASS Terniary Expressions","readingTime":1,"wordCount":65},{"category":"Tasks","type":"task","md5":"0c1f61c4ac0853cbfc98285936ff5930","filename":"using-the-sass-function-to-apply-host-syles-conditionally.md","path":"tasks/sass/using-the-sass-function-to-apply-host-syles-conditionally.md","id":"tasks--sass--using-the-sass-function-to-apply-host-syles-conditionally","markdown":"\\nWe are styling the `:host` element of our component and we want the `host` element `font-weight` to be bold when the `active` class is applied to the `host` element.\\n\\n# Approach\\n\\nFrom the [Angular SASS Documentation](https://angular.io/guide/component-styles#host).\\n\\n> Use the function form to apply host styles conditionally by including another selector inside parentheses after :host.\\n\\n```\\n:host(.active) {   font-weight: bold; }\\n```\\n","html":"<p>We are styling the <code>:host</code> element of our component and we want the <code>host</code> element <code>font-weight</code> to be bold when the <code>active</code> class is applied to the <code>host</code> element.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>From the <a href=\'https://angular.io/guide/component-styles#host\'>Angular SASS Documentation</a>.</p>\\n<blockquote>\\n<p>Use the function form to apply host styles conditionally by including another selector inside parentheses after :host.</p>\\n</blockquote>\\n<pre><code>:host(.active) {   font-weight: bold; }\\n</code></pre>\\n","summary":"Using the SASS Function Form to Apply Host Styles Conditionally.","tags":["Angular","JavaScript","SASS"],"tagString":"Angular, JavaScript, SASS","author":"Ole Ersoy","date":"7/31/2022","headerImage":"taiwan-3511017_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/taiwan-3511017_1920.jpg","title":"Using the SASS Function Form to Apply Host Styles Conditionally","readingTime":1,"wordCount":65},{"category":"Tasks","type":"task","md5":"8701817edf21e1e3fa4d2718278a620a","filename":"running-scully-without-a-data-collection-promt.md","path":"tasks/scully/running-scully-without-a-data-collection-promt.md","id":"tasks--scully--running-scully-without-a-data-collection-promt","markdown":"\\nWhen we run `npm run scully` it asks us if it\u2019s OK to collect anymous data. We want to switch this off.\\n\\n# Approach\\n\\n```\\nnpm run scully --noPrompt\\n```","html":"<p>When we run <code>npm run scully</code> it asks us if it\u2019s OK to collect anymous data. We want to switch this off.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>npm run scully --noPrompt\\n</code></pre>\\n","summary":"Running Scully Without Data Collection Prompt.","tags":["Scully","Angular","JavaScript","SPA"],"tagString":"Scully, Angular, JavaScript, SPA","author":"Ole Ersoy","date":"1/17/2021","headerImage":"camel-2500618_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/camel-2500618_1920.jpg","title":"Running Scully Without Data Collection Prompt","readingTime":1,"wordCount":28},{"category":"Tasks","type":"task","md5":"84e3305f371eb4414e6f7c3bbb10fe94","filename":"accessing-slice-object-store-observables-in-angular-templates.md","path":"tasks/slice/accessing-slice-object-store-observables-in-angular-templates.md","id":"tasks--slice--accessing-slice-object-store-observables-in-angular-templates","markdown":"\\nWe are accessing a Slice Object Store Observable ( `obs` ) directly in our Angular template like this:\\n\\n```\\n<fs-data-table [tableData$]=\\"s.OS.S.SALES_HISTORY.obs\\"></fs-data-table>\\n```\\n\\nAnd we get the error:\\n\\n```\\nType \'Observable<any> | undefined\' is not assignable to type \'Observable<TableData>\'.Type \'undefined\' is not assignable to type \'Observable<TableData>\'.ngtsc(2322)\\n```\\nWe need to resolve this.\\n\\n# Approach\\n\\nAppend the Angular non null assertion operator (`!`) to `obs` in the Angular template.\\n\\n```\\ns.OS.S.SALES_HISTORY.obs!\\n```\\n\\nThis tells Angular that the value will not be `undefined`.","html":"<p>We are accessing a Slice Object Store Observable ( <code>obs</code> ) directly in our Angular template like this:</p>\\n<pre><code>&lt;fs-data-table [tableData$]=&quot;s.OS.S.SALES_HISTORY.obs&quot;&gt;&lt;/fs-data-table&gt;\\n</code></pre>\\n<p>And we get the error:</p>\\n<pre><code>Type &#39;Observable&lt;any&gt; | undefined&#39; is not assignable to type &#39;Observable&lt;TableData&gt;&#39;.Type &#39;undefined&#39; is not assignable to type &#39;Observable&lt;TableData&gt;&#39;.ngtsc(2322)\\n</code></pre>\\n<p>We need to resolve this.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Append the Angular non null assertion operator (<code>!</code>) to <code>obs</code> in the Angular template.</p>\\n<pre><code>s.OS.S.SALES_HISTORY.obs!\\n</code></pre>\\n<p>This tells Angular that the value will not be <code>undefined</code>.</p>\\n","summary":"Accessing Slice Object Store Observables In Angular Templates.","tags":["Angular","Slice","JavaScript","TypeScript"],"tagString":"Angular, Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/29/2021","headerImage":"dandelion-3416140_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-3416140_1920.jpg","title":"Accessing Slice Object Store Observables In Angular Templates","readingTime":1,"wordCount":89},{"category":"Tasks","type":"task","md5":"f2fd1042a16cc27e1b4aaa2a62196c6a","filename":"adding-search-to-the-firefly-semantics-slice-angular-todo-application.md","path":"tasks/slice/adding-search-to-the-firefly-semantics-slice-angular-todo-application.md","id":"tasks--slice--adding-search-to-the-firefly-semantics-slice-angular-todo-application","markdown":"\\n[In this article we implemented an Angular Todo application](https://developer.fireflysemantics.com/guides/guides--slice--creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager).\\n\\n[And the backbone of it was the Firefly Semantics Slice Reactive State Manager](https://www.npmjs.com/package/@fireflysemantics/slice).\\n\\nNow we are going to add search as well.\\n\\n# Approach\\n\\n\\n[First fork the Stackblitz Demo from this article](https://developer.fireflysemantics.com/guides/guides--slice--creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager).\\n\\n\\n## Dependencies Update\\n\\nAdd `lunr` and `@types/lunr` to the dependencies.\\n\\n## Search Component\\n\\nAdd `search.component.ts` to the `app/components` folder.\\n\\n\\n```\\nimport { Component } from \'@angular/core\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { StateService } from \'../services/state.service\';\\n\\n@Component({\\n  selector: \'app-search-todo\',\\n  template: `\\n<div class=\\"input-field\\">\\n\\t<i class=\\"material-icons prefix\\">search</i>\\n  <input placeholder=\\"Search\\" \\n  (keyup)=\\"search($event)\\" \\n  [value]=\\"s.todoStore.query\\">\\n</div>`,\\n})\\nexport class TodoSearchComponent {\\n  constructor(public s: StateService) {}\\n  searchControl: FormControl = new FormControl(this.s.todoStore.query);\\n\\n  search(event: any) {\\n    const element = event.currentTarget as HTMLInputElement;\\n    const value = element.value;\\n    this.s.onSearch(value);\\n  }\\n}\\n```\\n\\nThis component listens to `keyup` events on the `input` field and emits the query value via the `StateService` \u2018s `onSearch` function.\\n\\nAlso register the component in the `declarations` section of `app.module.ts`.\\n\\n\\n## State Service Update\\n\\nWithin the `services/state.service.ts` file import `lunr`.\\n```\\nimport lunr from \'lunr\';\\n```\\n\\nIn the `constructor` initialize the `todoStore` `query` .\\n\\n```\\n//============================================\\n// Set the todoStore.query to something\\n// so the obervable fires at least once.\\n//============================================\\nthis.todoStore.query = \'\';\\n```\\n\\n\\nAlso updated the expression that creates the `selectedTodos$` observable so that the expression includes the `todoStore` query observable.\\n\\n```\\n    //============================================\\n    // Observe the Selected Todo category\\n    //============================================\\n    this.selectedTodos$ = combineLatest([\\n      this.activeFilter$,\\n      this.completeTodos$,\\n      this.incompleteTodos$,\\n      this.todos$,\\n      this.todoStore.observeQuery(),\\n    ]).pipe(\\n      map((arr) => {\\n        return this.applyFilter(arr[0], arr[1], arr[2], arr[3], arr[4]);\\n      })\\n    );\\n```\\n\\nWe also need to update the `applyFilter` function to apply the query from the `todoStore` if the user has entered a `query` value into the `input` field.\\n\\n```\\n  public applyFilter(\\n    filter,\\n    completeTodos,\\n    incompleteTodos,\\n    todos,\\n    query\\n  ): Todo[] {\\n    switch (filter) {\\n      case VISIBILITY_FILTER.SHOW_COMPLETED:\\n        if (query) {\\n          return this.search(query, completeTodos);\\n        }\\n        return completeTodos;\\n      case VISIBILITY_FILTER.SHOW_ACTIVE:\\n        if (query) {\\n          return this.search(query, incompleteTodos);\\n        }\\n        return incompleteTodos;\\n      default:\\n        if (query) {\\n          return this.search(query, todos);\\n        }\\n        return todos;\\n    }\\n  }\\n```\\n\\nIn order or to be able to search through the entered `Todo` instances we index them with `lunr`:\\n\\n```\\n  initializeSearchIndex(todos: Todo[]): lunr.Index {\\n    const idx: lunr.Index = lunr(function () {\\n      this.ref(\'gid\');\\n      this.field(\'complete\');\\n      this.field(\'title\');\\n      todos.forEach((todo) => {\\n        this.add(todo);\\n      });\\n    });\\n    return idx;\\n  }\\n```\\n\\n\\nNote that in the `callback` function to lunr we call `this.ref(\'gid\')` to let `lunr` know that each `Todo` instance should be identified by the `gid` value.\\n\\nWe also implement a search function to use the created index:\\n```\\n  search(query: string, todos: Todo[]): Todo[] {\\n    const idx = this.initializeSearchIndex(todos);\\n    const result: lunr.Index.Result[] = idx.search(query);\\n    return result.map((r) => {\\n      return this.todoStore.findOne(r.ref);\\n    });\\n  }\\n```\\n\\nLastly add an `onSearch` function that we will bind in our `search.component.ts` to receive the search queries on `keyup` events.\\n\\n```\\nonSearch(query: string) {\\n    this.todoStore.query = query;\\n}\\n```\\n\\n# Update the Application\\n\\nNow that that\u2019s all done we can update the application.component.html with `<app-search-todo></app-search-todo>`.\\n\\nIt should look like this:\\n\\n```\\n<div style=\\"margin: 2rem;\\">\\n<app-add-todo></app-add-todo>\\n<app-search-todo></app-search-todo>\\n<app-todos-filter></app-todos-filter>\\n<app-todos></app-todos>\\n<div *ngIf=\\"s.finito$ | async\\">Finito!</div>\\n</div>\\n```\\n\\nAnd that\u2019s it. We can now both `filter` and `search` within the filter of the app.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Adding Search To the Firefly Semantics Slice Angular Todo Application\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-ivy-7m1mau?file=src%2Fapp%2Fcomponents%2Fsearch.component.ts\\">\\n</fs-link-preview>","html":"<p><a href=\'https://developer.fireflysemantics.com/guides/guides--slice--creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager\'>In this article we implemented an Angular Todo application</a>.</p>\\n<p><a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>And the backbone of it was the Firefly Semantics Slice Reactive State Manager</a>.</p>\\n<p>Now we are going to add search as well.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p><a href=\'https://developer.fireflysemantics.com/guides/guides--slice--creating-a-reactive-todo-application-with-the-firefly-semantics-slice-state-manager\'>First fork the Stackblitz Demo from this article</a>.</p>\\n<h2 id=\'dependencies-update\'>Dependencies Update</h2>\\n<p>Add <code>lunr</code> and <code>@types/lunr</code> to the dependencies.</p>\\n<h2 id=\'search-component\'>Search Component</h2>\\n<p>Add <code>search.component.ts</code> to the <code>app/components</code> folder.</p>\\n<pre><code>import { Component } from &#39;@angular/core&#39;;\\nimport { FormControl } from &#39;@angular/forms&#39;;\\nimport { StateService } from &#39;../services/state.service&#39;;\\n\\n@Component({\\n  selector: &#39;app-search-todo&#39;,\\n  template: `\\n&lt;div class=&quot;input-field&quot;&gt;\\n    &lt;i class=&quot;material-icons prefix&quot;&gt;search&lt;/i&gt;\\n  &lt;input placeholder=&quot;Search&quot; \\n  (keyup)=&quot;search($event)&quot; \\n  [value]=&quot;s.todoStore.query&quot;&gt;\\n&lt;/div&gt;`,\\n})\\nexport class TodoSearchComponent {\\n  constructor(public s: StateService) {}\\n  searchControl: FormControl = new FormControl(this.s.todoStore.query);\\n\\n  search(event: any) {\\n    const element = event.currentTarget as HTMLInputElement;\\n    const value = element.value;\\n    this.s.onSearch(value);\\n  }\\n}\\n</code></pre>\\n<p>This component listens to <code>keyup</code> events on the <code>input</code> field and emits the query value via the <code>StateService</code> \u2018s <code>onSearch</code> function.</p>\\n<p>Also register the component in the <code>declarations</code> section of <code>app.module.ts</code>.</p>\\n<h2 id=\'state-service-update\'>State Service Update</h2>\\n<p>Within the <code>services/state.service.ts</code> file import <code>lunr</code>.</p>\\n<pre><code>import lunr from &#39;lunr&#39;;\\n</code></pre>\\n<p>In the <code>constructor</code> initialize the <code>todoStore</code> <code>query</code> .</p>\\n<pre><code>//============================================\\n// Set the todoStore.query to something\\n// so the obervable fires at least once.\\n//============================================\\nthis.todoStore.query = &#39;&#39;;\\n</code></pre>\\n<p>Also updated the expression that creates the <code>selectedTodos$</code> observable so that the expression includes the <code>todoStore</code> query observable.</p>\\n<pre><code>    //============================================\\n    // Observe the Selected Todo category\\n    //============================================\\n    this.selectedTodos$ = combineLatest([\\n      this.activeFilter$,\\n      this.completeTodos$,\\n      this.incompleteTodos$,\\n      this.todos$,\\n      this.todoStore.observeQuery(),\\n    ]).pipe(\\n      map((arr) =&gt; {\\n        return this.applyFilter(arr[0], arr[1], arr[2], arr[3], arr[4]);\\n      })\\n    );\\n</code></pre>\\n<p>We also need to update the <code>applyFilter</code> function to apply the query from the <code>todoStore</code> if the user has entered a <code>query</code> value into the <code>input</code> field.</p>\\n<pre><code>  public applyFilter(\\n    filter,\\n    completeTodos,\\n    incompleteTodos,\\n    todos,\\n    query\\n  ): Todo[] {\\n    switch (filter) {\\n      case VISIBILITY_FILTER.SHOW_COMPLETED:\\n        if (query) {\\n          return this.search(query, completeTodos);\\n        }\\n        return completeTodos;\\n      case VISIBILITY_FILTER.SHOW_ACTIVE:\\n        if (query) {\\n          return this.search(query, incompleteTodos);\\n        }\\n        return incompleteTodos;\\n      default:\\n        if (query) {\\n          return this.search(query, todos);\\n        }\\n        return todos;\\n    }\\n  }\\n</code></pre>\\n<p>In order or to be able to search through the entered <code>Todo</code> instances we index them with <code>lunr</code>:</p>\\n<pre><code>  initializeSearchIndex(todos: Todo[]): lunr.Index {\\n    const idx: lunr.Index = lunr(function () {\\n      this.ref(&#39;gid&#39;);\\n      this.field(&#39;complete&#39;);\\n      this.field(&#39;title&#39;);\\n      todos.forEach((todo) =&gt; {\\n        this.add(todo);\\n      });\\n    });\\n    return idx;\\n  }\\n</code></pre>\\n<p>Note that in the <code>callback</code> function to lunr we call <code>this.ref(&#39;gid&#39;)</code> to let <code>lunr</code> know that each <code>Todo</code> instance should be identified by the <code>gid</code> value.</p>\\n<p>We also implement a search function to use the created index:</p>\\n<pre><code>  search(query: string, todos: Todo[]): Todo[] {\\n    const idx = this.initializeSearchIndex(todos);\\n    const result: lunr.Index.Result[] = idx.search(query);\\n    return result.map((r) =&gt; {\\n      return this.todoStore.findOne(r.ref);\\n    });\\n  }\\n</code></pre>\\n<p>Lastly add an <code>onSearch</code> function that we will bind in our <code>search.component.ts</code> to receive the search queries on <code>keyup</code> events.</p>\\n<pre><code>onSearch(query: string) {\\n    this.todoStore.query = query;\\n}\\n</code></pre>\\n<h1 id=\'update-the-application\'>Update the Application</h1>\\n<p>Now that that\u2019s all done we can update the application.component.html with <code>&lt;app-search-todo&gt;&lt;/app-search-todo&gt;</code>.</p>\\n<p>It should look like this:</p>\\n<pre><code>&lt;div style=&quot;margin: 2rem;&quot;&gt;\\n&lt;app-add-todo&gt;&lt;/app-add-todo&gt;\\n&lt;app-search-todo&gt;&lt;/app-search-todo&gt;\\n&lt;app-todos-filter&gt;&lt;/app-todos-filter&gt;\\n&lt;app-todos&gt;&lt;/app-todos&gt;\\n&lt;div *ngIf=&quot;s.finito$ | async&quot;&gt;Finito!&lt;/div&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<p>And that\u2019s it. We can now both <code>filter</code> and <code>search</code> within the filter of the app.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Adding Search To the Firefly Semantics Slice Angular Todo Application\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-ivy-7m1mau?file=src%2Fapp%2Fcomponents%2Fsearch.component.ts\'>\\n</fs-link-preview></p>\\n","summary":"Adding Search To the Firefly Semantics Slice Angular Todo Application.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/03/2022","headerImage":"manta-5248156_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/manta-5248156_1920.jpg","title":"Adding Search To the Firefly Semantics Slice Angular Todo Application","readingTime":4,"wordCount":648},{"category":"Tasks","type":"task","md5":"f0f1e7fbfe1feef6fe46f1e4baae6045","filename":"adding-slices-to-the-firefly-semantics-entity-store.md","path":"tasks/slice/adding-slices-to-the-firefly-semantics-entity-store.md","id":"tasks--slice--adding-slices-to-the-firefly-semantics-entity-store","markdown":"\\nWe have a Firefly Semantics Slice Entity Store ( `EStore<Todo>`) containing `Todo` Entity instances.\\n\\nWe want to add 2 slices, or live filtered observable collections, to the entity store. One for `complete Todo` instances and one for incomplete `Todo` instances.\\n\\nWe also want to observe the filters as we change the stores state.\\n\\n# Approach\\n\\nIn this demo we will create a `Todo` interface for our entities and two `Todo` objects that we will use for our initial entity store state and to display how the `Slice` instances track modified state.\\n\\n```\\ninterface Todo {\\n    gid?: string;\\n    id?: string;\\n    complete: boolean;\\n    title: string;\\n}\\nconst TODO_ID_1 = \'1\';\\nconst TODO_ID_2 = \'2\';\\nconst TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: \'You complete me!\'\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: \'You completed me!\'\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n```\\n\\n\\nNext we will initialize our store with the `todos` array we created and obtain references of the added `Todo` instances from the store:\\n\\n```\\n//==============================================\\n// Constructor Initialize the Store\\n//==============================================\\nlet store: EStore<Todo> = new EStore<Todo>(todos);\\n//==============================================\\n// Retrieve Entities from the Store by ID\\n//==============================================\\nlet t1 = store.findOneByID(TODO_ID_1);\\nlet t2 = store.findOneByID(TODO_ID_2);\\n```\\n\\nNow we are going to add our slices for tracking `complete` and `incomplete` Todo instances.\\n\\n```\\n//==============================================\\n// Add Slices\\n//==============================================\\n// Create an enum to key slices\\nexport const enum TodoSlices {\\n   COMPLETE = \'Complete\',\\n   INCOMPLETE = \'Incomplete\'\\n}\\nstore.addSlice((todo) => todo.complete, TodoSlices.COMPLETE);\\nstore.addSlice((todo) => !todo.complete, TodoSlices.INCOMPLETE);\\n```\\n\\nWe first create an `enum` `TodoSlices` containing the keys for the slices we will be adding to the store.\\n\\nWe then call `store.addSlice` passing in the `predicate` function and the key.\\n\\nAs can be seen for the `complete` slice we pass in `(todo)=>todo.complete` as the predicate function. And this function will filter out all of the complete `Todo` instances. We pass in `TodoSlices.complete` as the key.\\n\\nNext we will take a snapshot of each slice to see what is in it.\\n\\n```\\nconst completeTodos = store.getSlice(TodoSlices.COMPLETE).allSnapshot();\\n//console.log(JSON.stringify(completeTodos));\\nconst incompletedTodos = store.getSlice(TodoSlices.INCOMPLETE).allSnapshot();\\n//console.log(JSON.stringify(incompletedTodos));\\n```\\n\\nAnd if we log each snapshot we will see that the `completeTodos` one contains the `complete` `Todo` instance, and the `incompleteTodos` one contains the `incomplete` instance.\\n\\nNext we will observe each the `complete` `Todos` slice:\\n\\n```\\nconst completeTodos$ = store.getSlice(TodoSlices.COMPLETE).obs;\\ncompleteTodos$.subscribe((todos) => {\\n    //console.log(\'COMPLETED TODOS\');\\n    //console.log(JSON.stringify(todos));\\n});\\n```\\n\\nIf we log the `todos` array emitted in our subscription function we will see that the array contains the completed `Todo` instance.\\n\\n\\nWe will now post a third `Todo` object to the store.\\n\\n```\\nconst T3: Todo = { id: \'3\', title: \'Adding a Complete Todo\', complete: true };\\nstore.post(T3);\\n```\\n\\nAnd after doing this we notice that the subscription to the `completed` `Todos` slice now logs a new array with two `completed` items.\\n\\nIf we change the `complete` property value to `false` and do a put on the entity store the subscription only logs one array.\\n\\n```\\nT3.complete = false;\\nstore.put(T3);\\n```\\n\\nNow the subscription to the `completed` `Todos` slice only logs the first completed todo we added. The third Todo instance has been dynamically removed from the slice.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Adding Slices to an Firefly Semantics Slice Entity Store\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-exyabj\\">\\n</fs-link-preview>","html":"<p>We have a Firefly Semantics Slice Entity Store ( <code>EStore&lt;Todo&gt;</code>) containing <code>Todo</code> Entity instances.</p>\\n<p>We want to add 2 slices, or live filtered observable collections, to the entity store. One for <code>complete Todo</code> instances and one for incomplete <code>Todo</code> instances.</p>\\n<p>We also want to observe the filters as we change the stores state.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In this demo we will create a <code>Todo</code> interface for our entities and two <code>Todo</code> objects that we will use for our initial entity store state and to display how the <code>Slice</code> instances track modified state.</p>\\n<pre><code>interface Todo {\\n    gid?: string;\\n    id?: string;\\n    complete: boolean;\\n    title: string;\\n}\\nconst TODO_ID_1 = &#39;1&#39;;\\nconst TODO_ID_2 = &#39;2&#39;;\\nconst TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: &#39;You complete me!&#39;\\n};\\nconst TODO2: Todo = {\\n    id: TODO_ID_2,\\n    complete: true,\\n    title: &#39;You completed me!&#39;\\n};\\nlet todos: Todo[] = [TODO1, TODO2];\\n</code></pre>\\n<p>Next we will initialize our store with the <code>todos</code> array we created and obtain references of the added <code>Todo</code> instances from the store:</p>\\n<pre><code>//==============================================\\n// Constructor Initialize the Store\\n//==============================================\\nlet store: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;(todos);\\n//==============================================\\n// Retrieve Entities from the Store by ID\\n//==============================================\\nlet t1 = store.findOneByID(TODO_ID_1);\\nlet t2 = store.findOneByID(TODO_ID_2);\\n</code></pre>\\n<p>Now we are going to add our slices for tracking <code>complete</code> and <code>incomplete</code> Todo instances.</p>\\n<pre><code>//==============================================\\n// Add Slices\\n//==============================================\\n// Create an enum to key slices\\nexport const enum TodoSlices {\\n   COMPLETE = &#39;Complete&#39;,\\n   INCOMPLETE = &#39;Incomplete&#39;\\n}\\nstore.addSlice((todo) =&gt; todo.complete, TodoSlices.COMPLETE);\\nstore.addSlice((todo) =&gt; !todo.complete, TodoSlices.INCOMPLETE);\\n</code></pre>\\n<p>We first create an <code>enum</code> <code>TodoSlices</code> containing the keys for the slices we will be adding to the store.</p>\\n<p>We then call <code>store.addSlice</code> passing in the <code>predicate</code> function and the key.</p>\\n<p>As can be seen for the <code>complete</code> slice we pass in <code>(todo)=&gt;todo.complete</code> as the predicate function. And this function will filter out all of the complete <code>Todo</code> instances. We pass in <code>TodoSlices.complete</code> as the key.</p>\\n<p>Next we will take a snapshot of each slice to see what is in it.</p>\\n<pre><code>const completeTodos = store.getSlice(TodoSlices.COMPLETE).allSnapshot();\\n//console.log(JSON.stringify(completeTodos));\\nconst incompletedTodos = store.getSlice(TodoSlices.INCOMPLETE).allSnapshot();\\n//console.log(JSON.stringify(incompletedTodos));\\n</code></pre>\\n<p>And if we log each snapshot we will see that the <code>completeTodos</code> one contains the <code>complete</code> <code>Todo</code> instance, and the <code>incompleteTodos</code> one contains the <code>incomplete</code> instance.</p>\\n<p>Next we will observe each the <code>complete</code> <code>Todos</code> slice:</p>\\n<pre><code>const completeTodos$ = store.getSlice(TodoSlices.COMPLETE).obs;\\ncompleteTodos$.subscribe((todos) =&gt; {\\n    //console.log(&#39;COMPLETED TODOS&#39;);\\n    //console.log(JSON.stringify(todos));\\n});\\n</code></pre>\\n<p>If we log the <code>todos</code> array emitted in our subscription function we will see that the array contains the completed <code>Todo</code> instance.</p>\\n<p>We will now post a third <code>Todo</code> object to the store.</p>\\n<pre><code>const T3: Todo = { id: &#39;3&#39;, title: &#39;Adding a Complete Todo&#39;, complete: true };\\nstore.post(T3);\\n</code></pre>\\n<p>And after doing this we notice that the subscription to the <code>completed</code> <code>Todos</code> slice now logs a new array with two <code>completed</code> items.</p>\\n<p>If we change the <code>complete</code> property value to <code>false</code> and do a put on the entity store the subscription only logs one array.</p>\\n<pre><code>T3.complete = false;\\nstore.put(T3);\\n</code></pre>\\n<p>Now the subscription to the <code>completed</code> <code>Todos</code> slice only logs the first completed todo we added. The third Todo instance has been dynamically removed from the slice.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Adding Slices to an Firefly Semantics Slice Entity Store\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-exyabj\'>\\n</fs-link-preview></p>\\n","summary":"Adding Slices to an Firefly Semantics Slice Entity Store.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/03/2022","headerImage":"orange-6508617_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/orange-6508617_1920.jpg","title":"Adding Slices to an Firefly Semantics Slice Entity Store","readingTime":3,"wordCount":563},{"category":"Tasks","type":"task","md5":"819e524e4134b1c69dc07b69f2d488e0","filename":"changing-the-fireflysemantics-slice-estore-default-configuration.md","path":"tasks/slice/changing-the-fireflysemantics-slice-estore-default-configuration.md","id":"tasks--slice--changing-the-fireflysemantics-slice-estore-default-configuration","markdown":"\\nThe default configuration for **Firefly Semantics Slice** entities expects entities to have a `id` and `gid` property.\\n\\nWe are creating a `EStore<Todo>` for `Todo` entities and we want the global `id` property to be `guid` instead of `gid`.\\n\\n# Approach\\n\\nThe `StoreConfig` interface looks like this:\\n```\\ninterface StoreConfig {    \\n   idKey: string;\\n   guidKey: string;\\n};\\n```\\n\\nCreate a new configuration object:\\n```\\nconst config: StoreConfig = { guidKey: \'guid\' }\\n```\\nPass it to the constructor when initializing the store:\\n```\\nlet store: EStore<Todo> = new EStore<Todo>(todos, config);\\n```\\n\\nTo see what the current global id property name is check `store.GUID_KEY`.\\n\\nTo see what the current global id property name is check `store.ID_KEY`.\\n\\nThe below demo logs the result of this operation:\\n\\n```\\nconsole.log(`The Global ID Key is: ${store.GUID_KEY}`);\\nconsole.log(`The ID Key is: ${store.ID_KEY}`);\\n```\\n\\n# Demo\\n\\nWe can see by logging store contents that each entity now has a `guid` property initialized with a global ID:\\n\\n```\\n[{\\"id\\":\\"1\\",\\"complete\\":false,\\"title\\":\\"You complete me!\\",\\"guid\\":\\"J2yGsD9Z5tdXsux1kLaet\\"},{\\"id\\":\\"2\\",\\"complete\\":true,\\"title\\":\\"You completed me!\\",\\"guid\\":\\"wIBAvxyquUo9Tqj-Kzilz\\"}]\\n```\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice EStore Configuration Demo\\" \\n  description=\\"Demo of how to go about changing the EStore default configuration\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-slice-config-demo\\">\\n</fs-link-preview>","html":"<p>The default configuration for <strong>Firefly Semantics Slice</strong> entities expects entities to have a <code>id</code> and <code>gid</code> property.</p>\\n<p>We are creating a <code>EStore&lt;Todo&gt;</code> for <code>Todo</code> entities and we want the global <code>id</code> property to be <code>guid</code> instead of <code>gid</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The <code>StoreConfig</code> interface looks like this:</p>\\n<pre><code>interface StoreConfig {    \\n   idKey: string;\\n   guidKey: string;\\n};\\n</code></pre>\\n<p>Create a new configuration object:</p>\\n<pre><code>const config: StoreConfig = { guidKey: &#39;guid&#39; }\\n</code></pre>\\n<p>Pass it to the constructor when initializing the store:</p>\\n<pre><code>let store: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;(todos, config);\\n</code></pre>\\n<p>To see what the current global id property name is check <code>store.GUID_KEY</code>.</p>\\n<p>To see what the current global id property name is check <code>store.ID_KEY</code>.</p>\\n<p>The below demo logs the result of this operation:</p>\\n<pre><code>console.log(`The Global ID Key is: ${store.GUID_KEY}`);\\nconsole.log(`The ID Key is: ${store.ID_KEY}`);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>We can see by logging store contents that each entity now has a <code>guid</code> property initialized with a global ID:</p>\\n<pre><code>[{&quot;id&quot;:&quot;1&quot;,&quot;complete&quot;:false,&quot;title&quot;:&quot;You complete me!&quot;,&quot;guid&quot;:&quot;J2yGsD9Z5tdXsux1kLaet&quot;},{&quot;id&quot;:&quot;2&quot;,&quot;complete&quot;:true,&quot;title&quot;:&quot;You completed me!&quot;,&quot;guid&quot;:&quot;wIBAvxyquUo9Tqj-Kzilz&quot;}]\\n</code></pre>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice EStore Configuration Demo\' \\n  description=\'Demo of how to go about changing the EStore default configuration\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-slice-config-demo\'>\\n</fs-link-preview></p>\\n","summary":"Demo of how to go about changing the EStore default configuration.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/11/2021","headerImage":"sticker-1049721_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sticker-1049721_1920.jpg","title":"Changing the Firefly Semantics Slice EStore Default Configuration","readingTime":2,"wordCount":219},{"category":"Tasks","type":"task","md5":"98e28d4ab23d3b3de2beee51dfa49c19","filename":"comparing-firefly-semantics-slice-entities.md","path":"tasks/slice/comparing-firefly-semantics-slice-entities.md","id":"tasks--slice--comparing-firefly-semantics-slice-entities","markdown":"\\nWe wish to compare `Todo` instances that have been added to a `todoStore:EStore<Todo>` for equality.\\n\\n# Demo\\n\\nFirst we will create the `Todo` model and a few `Todo` instances.\\n\\n```\\nexport class Todo {\\nconstructor(\\npublic complete: boolean,\\npublic title: string,\\npublic gid?: string,\\npublic id?: number\\n) {}\\n}\\n\\nconst todo1 = new Todo(false, \'Finish it!\');\\nconst todo2 = new Todo(false, \'Just do it!\');\\nconst todos = [todo1, todo2];\\n```\\nThen we will initialize our Todo entity store.\\n```\\nconst todoStore: EStore<Todo> = new EStore<Todo>(todos);\\n```\\nNote that when each `Todo` instance as added to the store a unique global id was assigned to it.\\n\\n```\\n//========================================\\n// Check Global ID Assignment\\n//========================================\\nconsole.log(todo1);\\n```\\nNext we will compare entities using their global IDs (`gid`).\\n\\n```\\nlet todo1EqualsTodo1 = todoStore.equalsByGUID(todo1, todo1);\\n//console.log(`Todo 1 Equals Todo1 ${todo1EqualsTodo1}`);\\nlet todo1EqualsTodo2 = todoStore.equalsByGUID(todo1, todo2);\\n//console.log(`Todo 1 Equals Todo2 ${todo1EqualsTodo2}`);\\n```\\n\\nWe can also compare entities by their `id` property using `equalsByID`.\\n\\n```\\ntodo1.id = 1;\\ntodo2.id = 2;\\ntodo1EqualsTodo1 = todoStore.equalsByID(todo1, todo1);\\n//console.log(`Todo 1 Equals Todo1 ${todo1EqualsTodo1}`);\\ntodo1EqualsTodo1 = todoStore.equalsByID(todo1, todo2);\\nconsole.log(`Todo 1 Equals Todo2 ${todo1EqualsTodo2}`);\\n```\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Comparing Firefly Semantics Slice Entities\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-slice-active-entity-fs-czmbs7?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We wish to compare <code>Todo</code> instances that have been added to a <code>todoStore:EStore&lt;Todo&gt;</code> for equality.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>First we will create the <code>Todo</code> model and a few <code>Todo</code> instances.</p>\\n<pre><code>export class Todo {\\nconstructor(\\npublic complete: boolean,\\npublic title: string,\\npublic gid?: string,\\npublic id?: number\\n) {}\\n}\\n\\nconst todo1 = new Todo(false, &#39;Finish it!&#39;);\\nconst todo2 = new Todo(false, &#39;Just do it!&#39;);\\nconst todos = [todo1, todo2];\\n</code></pre>\\n<p>Then we will initialize our Todo entity store.</p>\\n<pre><code>const todoStore: EStore&lt;Todo&gt; = new EStore&lt;Todo&gt;(todos);\\n</code></pre>\\n<p>Note that when each <code>Todo</code> instance as added to the store a unique global id was assigned to it.</p>\\n<pre><code>//========================================\\n// Check Global ID Assignment\\n//========================================\\nconsole.log(todo1);\\n</code></pre>\\n<p>Next we will compare entities using their global IDs (<code>gid</code>).</p>\\n<pre><code>let todo1EqualsTodo1 = todoStore.equalsByGUID(todo1, todo1);\\n//console.log(`Todo 1 Equals Todo1 ${todo1EqualsTodo1}`);\\nlet todo1EqualsTodo2 = todoStore.equalsByGUID(todo1, todo2);\\n//console.log(`Todo 1 Equals Todo2 ${todo1EqualsTodo2}`);\\n</code></pre>\\n<p>We can also compare entities by their <code>id</code> property using <code>equalsByID</code>.</p>\\n<pre><code>todo1.id = 1;\\ntodo2.id = 2;\\ntodo1EqualsTodo1 = todoStore.equalsByID(todo1, todo1);\\n//console.log(`Todo 1 Equals Todo1 ${todo1EqualsTodo1}`);\\ntodo1EqualsTodo1 = todoStore.equalsByID(todo1, todo2);\\nconsole.log(`Todo 1 Equals Todo2 ${todo1EqualsTodo2}`);\\n</code></pre>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Comparing Firefly Semantics Slice Entities\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-slice-active-entity-fs-czmbs7?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Comparing Firefly Semantics Slice Entities.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/12/2022","headerImage":"/harris-hawk-4373431_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer//harris-hawk-4373431_1920.jpg","title":"Comparing Firefly Semantics Slice Entities","readingTime":2,"wordCount":225},{"category":"Tasks","type":"task","md5":"0a8a75f4ee9840971f89c46db9f85f07","filename":"creating-proxies-to-slice-object-store-observables-in-an-angular-environment.md","path":"tasks/slice/creating-proxies-to-slice-object-store-observables-in-an-angular-environment.md","id":"tasks--slice--creating-proxies-to-slice-object-store-observables-in-an-angular-environment","markdown":"\\nWe model `IS_AUTHENTICATED` in our Firefly Semantics Slice Object Store ( `OStore` ).\\n\\n```\\nconst START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore<ISTART> = new OStore(START);\\n```\\n\\nAnd we can access the corresponding Observable like this:\\n\\n```\\nOS.S.IS_AUTHENTICATED.obs\\n```\\n\\nBut we would rather access it like this:\\n\\n```\\npublic isAuthenticated$:Observable<boolean>\\n```\\n\\n# Approach\\n\\nNote that in order to ensure that the value is `boolean` typed we `map` it with the expression `v=>!!v`.\\n\\nWe also need to use Angulars `non null assertion` operator to tell Typescripts lint checker that the `obs` property is initialized.\\n\\n```\\npublic isAuthenticated$:Observable<boolean> = this.OS.S.IS_AUTHENTICATED.obs!.pipe(map(v=>!!v))\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice EStore Configuration Demo\\" \\n  description=\\"Creating Proxies to Slice Object Store Observables in an Angular Environment\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/slice-object-store-observable-proxies?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We model <code>IS_AUTHENTICATED</code> in our Firefly Semantics Slice Object Store ( <code>OStore</code> ).</p>\\n<pre><code>const START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore&lt;ISTART&gt; = new OStore(START);\\n</code></pre>\\n<p>And we can access the corresponding Observable like this:</p>\\n<pre><code>OS.S.IS_AUTHENTICATED.obs\\n</code></pre>\\n<p>But we would rather access it like this:</p>\\n<pre><code>public isAuthenticated$:Observable&lt;boolean&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Note that in order to ensure that the value is <code>boolean</code> typed we <code>map</code> it with the expression <code>v=&gt;!!v</code>.</p>\\n<p>We also need to use Angulars <code>non null assertion</code> operator to tell Typescripts lint checker that the <code>obs</code> property is initialized.</p>\\n<pre><code>public isAuthenticated$:Observable&lt;boolean&gt; = this.OS.S.IS_AUTHENTICATED.obs!.pipe(map(v=&gt;!!v))\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice EStore Configuration Demo\' \\n  description=\'Creating Proxies to Slice Object Store Observables in an Angular Environment\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/slice-object-store-observable-proxies?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating Proxies to Slice Object Store Observables in an Angular Environment.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"5/11/2021","headerImage":"sunflower-1127174_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sunflower-1127174_1920.jpg","title":"Creating Proxies to Slice Object Store Observables in an Angular Environment","readingTime":1,"wordCount":158},{"category":"Tasks","type":"task","md5":"b739478ae4d26e9868892cf65c7af5ff","filename":"creating-proxies-to-slice-object-store-observables.md","path":"tasks/slice/creating-proxies-to-slice-object-store-observables.md","id":"tasks--slice--creating-proxies-to-slice-object-store-observables","markdown":"\\nWe model `IS_AUTHENTICATED` in our Firefly Semantics Slice Object Store (`OStore`).\\n\\n```\\nconst START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore<ISTART> = new OStore(START);\\n```\\n\\nAnd we can access the corresponding `Observable` like this:\\n\\n```\\nOS.S.IS_AUTHENTICATED.obs\\n```\\n\\nBut we would rather access it like this:\\n```\\nisAuthenticated$\\n```\\n\\n# Approach\\n\\n```\\nconst isAuthenticated$: Observable<boolean> = OS.S.IS_AUTHENTICATED.obs;\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Creating Proxies to Slice Object Store Observables\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/slice-object-store-observable-proxies?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We model <code>IS_AUTHENTICATED</code> in our Firefly Semantics Slice Object Store (<code>OStore</code>).</p>\\n<pre><code>const START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore&lt;ISTART&gt; = new OStore(START);\\n</code></pre>\\n<p>And we can access the corresponding <code>Observable</code> like this:</p>\\n<pre><code>OS.S.IS_AUTHENTICATED.obs\\n</code></pre>\\n<p>But we would rather access it like this:</p>\\n<pre><code>isAuthenticated$\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const isAuthenticated$: Observable&lt;boolean&gt; = OS.S.IS_AUTHENTICATED.obs;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Creating Proxies to Slice Object Store Observables\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/slice-object-store-observable-proxies?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Creating Proxies to Slice Object Store Observables.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/29/2021","headerImage":"beach-1851101_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/beach-1851101_1920.jpg","title":"Creating Proxies to Slice Object Store Observables","readingTime":1,"wordCount":103},{"category":"Tasks","type":"task","md5":"aaaf7bd31e733e635b05bd69322ca1b9","filename":"derived-reactive-observable-state-with-slice.md","path":"tasks/slice/derived-reactive-observable-state-with-slice.md","id":"tasks--slice--derived-reactive-observable-state-with-slice","markdown":"\\nOur applications state service uses a [Firefly Semantics Slice](https://www.npmjs.com/package/@fireflysemantics/slice) Object Store  ( `OStore`) to store an authenticated `User` instance.\\n\\n```\\nexport const OSK: OStoreStart = {\\n  USER: { value: null },\\n};\\nexport interface OSKI extends KeyObsValueReset {\\n  USER: ObsValueReset;\\n}\\nconst OS: OStore<OSKI> = new OStore<OSKI>(OSK);\\n```\\n\\nThe application will also use a reference an `Observable<boolean>` that notifies whether the user is authenticated.\\n\\n```\\nconst isAuthenticated$: Observable<boolean> \\n```\\n\\nWe wish to derive this `Observable` reference from the `USER` state in our object store.\\n\\n# Approach\\n\\nWe will pipe the value emitted by the `USER` `obs` `Observable` through `map` where we map it to a `boolean` value. \\n\\n```\\nconst isAuthenticated$: Observable<boolean> = OS.S.USER.obs.pipe(\\n  map((r) => {\\n    return !!r;\\n  })\\n);\\n```\\n\\n# Demo\\n\\nWhen we update the value of `USER` to a non `null` value, `true` is logged. When `USER` is set to `null` false is logged:\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\" \\n  description=\\"Derived Reactive Observable State with Slice\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/slice-derived-reactive-observable-state\\">\\n</fs-link-preview>","html":"<p>Our applications state service uses a <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice</a> Object Store  ( <code>OStore</code>) to store an authenticated <code>User</code> instance.</p>\\n<pre><code>export const OSK: OStoreStart = {\\n  USER: { value: null },\\n};\\nexport interface OSKI extends KeyObsValueReset {\\n  USER: ObsValueReset;\\n}\\nconst OS: OStore&lt;OSKI&gt; = new OStore&lt;OSKI&gt;(OSK);\\n</code></pre>\\n<p>The application will also use a reference an <code>Observable&lt;boolean&gt;</code> that notifies whether the user is authenticated.</p>\\n<pre><code>const isAuthenticated$: Observable&lt;boolean&gt; \\n</code></pre>\\n<p>We wish to derive this <code>Observable</code> reference from the <code>USER</code> state in our object store.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We will pipe the value emitted by the <code>USER</code> <code>obs</code> <code>Observable</code> through <code>map</code> where we map it to a <code>boolean</code> value. </p>\\n<pre><code>const isAuthenticated$: Observable&lt;boolean&gt; = OS.S.USER.obs.pipe(\\n  map((r) =&gt; {\\n    return !!r;\\n  })\\n);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>When we update the value of <code>USER</code> to a non <code>null</code> value, <code>true</code> is logged. When <code>USER</code> is set to <code>null</code> false is logged:</p>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\' \\n  description=\'Derived Reactive Observable State with Slice\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/slice-derived-reactive-observable-state\'>\\n</fs-link-preview></p>\\n","summary":"Derived Reactive Observable State with Slice.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/11/2021","headerImage":"water-2986837_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-2986837_1920.jpg","title":"Derived Reactive Observable State with Slice","readingTime":1,"wordCount":182},{"category":"Tasks","type":"task","md5":"31a0c11037b8c2f4f3ed9b9025e28900","filename":"getting-a-snapshot-of-a-slice-object-store-value.md","path":"tasks/slice/getting-a-snapshot-of-a-slice-object-store-value.md","id":"tasks--slice--getting-a-snapshot-of-a-slice-object-store-value","markdown":"\\nWe\'ve created a minimal Slice Object Store ( `OStore`) and we want to get a snapshot of the current `IS_AUTHENTICATED` value.\\n\\nThis is the object store implmentation:\\n```\\nimport { ObsValueReset, OStore, OStoreStart } from \\"@fireflysemantics/slice\\";\\n\\nconst START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\n\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\n\\nconst OS: OStore<ISTART> = new OStore(START);\\n```\\n\\n# Approach\\n\\n```\\nconst snapshot = OS.snapshot(OS.S.IS_AUTHENTICATED);\\n```\\n\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Getting a Snapshot of a Slice Object Store Value\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/slice-object-store-snapshot\\">\\n</fs-link-preview>","html":"<p>We&#39;ve created a minimal Slice Object Store ( <code>OStore</code>) and we want to get a snapshot of the current <code>IS_AUTHENTICATED</code> value.</p>\\n<p>This is the object store implmentation:</p>\\n<pre><code>import { ObsValueReset, OStore, OStoreStart } from &quot;@fireflysemantics/slice&quot;;\\n\\nconst START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\n\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\n\\nconst OS: OStore&lt;ISTART&gt; = new OStore(START);\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>const snapshot = OS.snapshot(OS.S.IS_AUTHENTICATED);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Getting a Snapshot of a Slice Object Store Value\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/slice-object-store-snapshot\'>\\n</fs-link-preview></p>\\n","summary":"Getting a Snapshot of a Slice Object Store Value.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"3/31/2021","headerImage":"insect-3994951_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/insect-3994951_1920.jpg","title":"Getting a Snapshot of a Slice Object Store Value","readingTime":1,"wordCount":100},{"category":"Tasks","type":"task","md5":"e8d9167913d3d99414989cf2b6148cf6","filename":"observing-currently-active-entities-with-slice.md","path":"tasks/slice/observing-currently-active-entities-with-slice.md","id":"tasks--slice--observing-currently-active-entities-with-slice","markdown":"\\nWe have created an entity store `( EStore<Todo> )` for `Todo` entities, and we want to monitor which `Todo` entities are currently active using RxJS `Observable<Map<Todo>>`.\\n\\n# Approach\\n\\n## Model\\n\\nOur `Todo` class:\\n```\\nexport class Todo {\\n    constructor(\\n        public complete: boolean, \\n        public title: string,\\n        public  gid?:string) {}\\n}\\n```\\n\\nImport EStore and create an EStore<Todo> instance.\\n\\n```\\nimport { EStore } from \'@fireflysemantics/slice\';\\nimport { Observable } from \'rxjs\';\\n\\nconst es = new EStore<Todo>();\\n\\n```\\n\\nPost two Todo instances to the store and also set them as active.\\n```\\nconst todo1 = new Todo(false, \\"Finish it!\\");\\nconst todo2 = new Todo(false, \\"Just do it!\\");\\n\\nes.post(todo1);\\nes.post(todo2);\\nes.addActive(todo1);\\nes.addActive(todo2);\\n\\nconst active1 = es.active.get(todo1.gid);\\n//console.log(active1);\\n\\nlet active$: Observable<Map<string, Todo>> = es.observeActive();\\nactive$.subscribe(m => m.forEach(a => console.log(\\"ACTIVE TODO: \\", a)));\\n```\\n\\nWe see that the console logs the active entities:\\n\\nAfter deleting an entity:\\n```\\nconsole.log(\\"DELETING ACTIVE ENTITY TODO1\\");\\nes.deleteActive(todo1);\\n```\\n\\nThe console logs the remaining active entity ( `todo2` ).\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice EStore Configuration Demo\\" \\n  description=\\"Observing the Currently Active Entities with Slice\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-slice-active-entity-fs?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We have created an entity store <code>( EStore&lt;Todo&gt; )</code> for <code>Todo</code> entities, and we want to monitor which <code>Todo</code> entities are currently active using RxJS <code>Observable&lt;Map&lt;Todo&gt;&gt;</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'model\'>Model</h2>\\n<p>Our <code>Todo</code> class:</p>\\n<pre><code>export class Todo {\\n    constructor(\\n        public complete: boolean, \\n        public title: string,\\n        public  gid?:string) {}\\n}\\n</code></pre>\\n<p>Import EStore and create an EStore<Todo> instance.</p>\\n<pre><code>import { EStore } from &#39;@fireflysemantics/slice&#39;;\\nimport { Observable } from &#39;rxjs&#39;;\\n\\nconst es = new EStore&lt;Todo&gt;();\\n</code></pre>\\n<p>Post two Todo instances to the store and also set them as active.</p>\\n<pre><code>const todo1 = new Todo(false, &quot;Finish it!&quot;);\\nconst todo2 = new Todo(false, &quot;Just do it!&quot;);\\n\\nes.post(todo1);\\nes.post(todo2);\\nes.addActive(todo1);\\nes.addActive(todo2);\\n\\nconst active1 = es.active.get(todo1.gid);\\n//console.log(active1);\\n\\nlet active$: Observable&lt;Map&lt;string, Todo&gt;&gt; = es.observeActive();\\nactive$.subscribe(m =&gt; m.forEach(a =&gt; console.log(&quot;ACTIVE TODO: &quot;, a)));\\n</code></pre>\\n<p>We see that the console logs the active entities:</p>\\n<p>After deleting an entity:</p>\\n<pre><code>console.log(&quot;DELETING ACTIVE ENTITY TODO1&quot;);\\nes.deleteActive(todo1);\\n</code></pre>\\n<p>The console logs the remaining active entity ( <code>todo2</code> ).</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice EStore Configuration Demo\' \\n  description=\'Observing the Currently Active Entities with Slice\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-slice-active-entity-fs?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Observing the Currently Active Entities with Slice.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/11/2021","headerImage":"cobweb-959578_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/cobweb-959578_1920.jpg","title":"Observing the Currently Active Entities with Slice","readingTime":2,"wordCount":212},{"category":"Tasks","type":"task","md5":"a899bf120fde22d6c038537d2a757db6","filename":"observing-the-count-of-items-in-a-firefly-semantics-slice-entity-store.md","path":"tasks/slice/observing-the-count-of-items-in-a-firefly-semantics-slice-entity-store.md","id":"tasks--slice--observing-the-count-of-items-in-a-firefly-semantics-slice-entity-store","markdown":"\\nWe have `Product` instances that we are adding to a shopping cart that is backed by a Firefly Semantics Slice Entity Store (`EStore`).\\n\\nAs the Widget instances are added to the cart we wish to display an updated `count` of the items.\\n\\n[Here is a YouTube demo.](https://youtu.be/5kqr_XW2QuI)\\n\\n# Approach\\n\\nThe Firefly Semantics Entity Store has a `count()` `Observable<number>` reference that we can `subscribe` to in order to receive the updated `count`.\\n\\n```\\ninterface Product {\\nid: string;\\nname: string;\\n}\\nconst P1: Product = {\\n    id: \'1\',\\n    name: \'Soap\',\\n};\\nconst P2: Product = {\\n    id: \'1\',\\n    name: \'Soap\',\\n};\\nconst cart: EStore<Product> = new EStore<Product>();\\ncart.count().subscribe((count) => console.log(count));\\ncart.post(P1);\\ncart.post(P2);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Observing the Count of Items in a Firefly Semantics Slice Entity Store\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-ut2hbk\\">\\n</fs-link-preview>","html":"<p>We have <code>Product</code> instances that we are adding to a shopping cart that is backed by a Firefly Semantics Slice Entity Store (<code>EStore</code>).</p>\\n<p>As the Widget instances are added to the cart we wish to display an updated <code>count</code> of the items.</p>\\n<p><a href=\'https://youtu.be/5kqr_XW2QuI\'>Here is a YouTube demo.</a></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The Firefly Semantics Entity Store has a <code>count()</code> <code>Observable&lt;number&gt;</code> reference that we can <code>subscribe</code> to in order to receive the updated <code>count</code>.</p>\\n<pre><code>interface Product {\\nid: string;\\nname: string;\\n}\\nconst P1: Product = {\\n    id: &#39;1&#39;,\\n    name: &#39;Soap&#39;,\\n};\\nconst P2: Product = {\\n    id: &#39;1&#39;,\\n    name: &#39;Soap&#39;,\\n};\\nconst cart: EStore&lt;Product&gt; = new EStore&lt;Product&gt;();\\ncart.count().subscribe((count) =&gt; console.log(count));\\ncart.post(P1);\\ncart.post(P2);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Observing the Count of Items in a Firefly Semantics Slice Entity Store\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-ut2hbk\'>\\n</fs-link-preview></p>\\n","summary":"Observing the Count of Items in a Firefly Semantics Slice Entity Store.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/21/2022","headerImage":"pexels-pixabay-63309.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/pexels-pixabay-63309.jpg","title":"Observing the Count of Items in a Firefly Semantics Slice Entity Store","readingTime":1,"wordCount":158},{"category":"Tasks","type":"task","md5":"b97eea8208edeb8afe56344fe231bc9d","filename":"reactive-event-driven-actions-with-firefly-semantics-slice.md","path":"tasks/slice/reactive-event-driven-actions-with-firefly-semantics-slice.md","id":"tasks--slice--reactive-event-driven-actions-with-firefly-semantics-slice","markdown":"\\nIf a user visits our app and the user is already signed in, then we want to redirect the user to the `/app` route.\\n\\nWe will be using a [Firefly Semantics Slice Object Store](https://www.npmjs.com/package/@fireflysemantics/slice) to implement the reactive event handling.\\n\\n# Approach\\n\\nThe below `onAuthRedirectToApplication` utility method takes a `route` argument and directs to it when the user is already signed in.\\n\\n```\\n/**\\n * Redirect the user to the application\\n * when the user is authenticated.\\n * @param route\\n */\\npublic onAuthRedirectToApplication(route:string) {\\nthis.s.OS.S.IS_AUTHENTICATED.obs.subscribe(auth => {\\n    auth && this.r.navigate([route])\\n    })\\n}\\n\\n```\\n\\nNote that when the application loads it should check whether the user is signed in, and if so perform a `put` on the Slice Object Store instance modeling the `IS_AUTHENTICATED` state. For example:\\n```\\nthis.s.OS.put(this.s.OS.S.IS_AUTHENTICATED, true)\\n```","html":"<p>If a user visits our app and the user is already signed in, then we want to redirect the user to the <code>/app</code> route.</p>\\n<p>We will be using a <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice Object Store</a> to implement the reactive event handling.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The below <code>onAuthRedirectToApplication</code> utility method takes a <code>route</code> argument and directs to it when the user is already signed in.</p>\\n<pre><code>/**\\n * Redirect the user to the application\\n * when the user is authenticated.\\n * @param route\\n */\\npublic onAuthRedirectToApplication(route:string) {\\nthis.s.OS.S.IS_AUTHENTICATED.obs.subscribe(auth =&gt; {\\n    auth &amp;&amp; this.r.navigate([route])\\n    })\\n}\\n</code></pre>\\n<p>Note that when the application loads it should check whether the user is signed in, and if so perform a <code>put</code> on the Slice Object Store instance modeling the <code>IS_AUTHENTICATED</code> state. For example:</p>\\n<pre><code>this.s.OS.put(this.s.OS.S.IS_AUTHENTICATED, true)\\n</code></pre>\\n","summary":"Reactive Event Driven Actions with Firefly Semantics Slice .","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/11/2021","headerImage":"jumping-spider-1130449_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jumping-spider-1130449_1920.jpg","title":"Reactive Event Driven Actions with Firefly Semantics Slice","readingTime":1,"wordCount":141},{"category":"Tasks","type":"task","md5":"705502fec43c93e4a12ac27471d5f98a","filename":"setting-and-observing-firefly-semantics-slice-entity-store-queries.md","path":"tasks/slice/setting-and-observing-firefly-semantics-slice-entity-store-queries.md","id":"tasks--slice--setting-and-observing-firefly-semantics-slice-entity-store-queries","markdown":"\\nWe have a search field in our application and we need a central place to store the query in the search field and the ability to react to updates to it.\\n\\n[Here is a YouTube demo.](https://youtu.be/_L5ya1CWaYU)\\n\\n# Approach\\n\\nUse the `query` property on a Firefly Semantics Slice Entity Store instance.\\n\\n```\\nconst searchStore: EStore<any> = new EStore<any>();\\nsearchStore.query = \'javascript\';\\nsearchStore.observeQuery().subscribe((q) => console.log(q));\\n```\\n\\n# Heads Up\\n\\nIf you are going to be using the entity store search property observable in your application, it\'s usually a good idea to initialize it to something, even just something blank.\\n\\nThe reason for this is that if the `observeQuery()` observable is used with something like `combineLatest` from RxJS where we combine multiple observables, the `combineLatest` call will not fire until the `query` property is initialized with something.\\n\\nSo for example if we did this:\\n```\\nconst searchStore: EStore<any> = new EStore<any>();\\nconst query$:Observable<string> = searchStore.observeQuery()\\nconst result$ = combineLatest([query$, todos$])...\\n```\\n\\nThe `result$` will not emit anything until we set `searchStore.query` to a value. \\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Setting and Observing Firefly Semantics Slice Entity Store Queries\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-fxxbmy\\">\\n</fs-link-preview>","html":"<p>We have a search field in our application and we need a central place to store the query in the search field and the ability to react to updates to it.</p>\\n<p><a href=\'https://youtu.be/_L5ya1CWaYU\'>Here is a YouTube demo.</a></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use the <code>query</code> property on a Firefly Semantics Slice Entity Store instance.</p>\\n<pre><code>const searchStore: EStore&lt;any&gt; = new EStore&lt;any&gt;();\\nsearchStore.query = &#39;javascript&#39;;\\nsearchStore.observeQuery().subscribe((q) =&gt; console.log(q));\\n</code></pre>\\n<h1 id=\'heads-up\'>Heads Up</h1>\\n<p>If you are going to be using the entity store search property observable in your application, it&#39;s usually a good idea to initialize it to something, even just something blank.</p>\\n<p>The reason for this is that if the <code>observeQuery()</code> observable is used with something like <code>combineLatest</code> from RxJS where we combine multiple observables, the <code>combineLatest</code> call will not fire until the <code>query</code> property is initialized with something.</p>\\n<p>So for example if we did this:</p>\\n<pre><code>const searchStore: EStore&lt;any&gt; = new EStore&lt;any&gt;();\\nconst query$:Observable&lt;string&gt; = searchStore.observeQuery()\\nconst result$ = combineLatest([query$, todos$])...\\n</code></pre>\\n<p>The <code>result$</code> will not emit anything until we set <code>searchStore.query</code> to a value. </p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Setting and Observing Firefly Semantics Slice Entity Store Queries\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-fxxbmy\'>\\n</fs-link-preview></p>\\n","summary":"Setting and Observing Firefly Semantics Slice Entity Store Queries.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/12/2022","headerImage":"lizard-1128263_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lizard-1128263_1920.jpg","title":"Setting and Observing Firefly Semantics Slice Entity Store Queries","readingTime":2,"wordCount":219},{"category":"Tasks","type":"task","md5":"20a6123302d761d999cb7e0412b1b479","filename":"taking-a-count-snapshot-of-a-firefly-semantics-slice-entity-store.md","path":"tasks/slice/taking-a-count-snapshot-of-a-firefly-semantics-slice-entity-store.md","id":"tasks--slice--taking-a-count-snapshot-of-a-firefly-semantics-slice-entity-store","markdown":"\\nWe have Product instances that we are adding to a shopping cart that is backed by a Firefly Semantics Slice Entity Store (EStore).\\nAs the Widget we want a snapshot of the number of instances in the cart.\\n\\n[Here is a YouTube demo.](https://youtu.be/n37sz4LPV08)\\n\\n# Approach\\n\\nThe Firefly Semantics Entity Store has a `countSnapshot():number `method that we can call to get the `count` of the number of entities in the store.\\n\\n```\\ninterface Product {\\nid: string;\\nname: string;\\n}\\nconst P1: Product = {\\n    id: \'1\',\\n    name: \'Soap\',\\n};\\nconst P2: Product = {\\n    id: \'1\',\\n    name: \'Soap\',\\n};\\nconst cart: EStore<Product> = new EStore<Product>();\\ncart.post(P1);\\ncart.post(P2);\\nconst count = cart.countSnapshot();\\nconsole.log(count);\\n// Logs 2 \\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Taking a Count Snapshot of a Firefly Semantics Slice Entity Store\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-1bpy1j\\">\\n</fs-link-preview>\\n","html":"<p>We have Product instances that we are adding to a shopping cart that is backed by a Firefly Semantics Slice Entity Store (EStore).\\nAs the Widget we want a snapshot of the number of instances in the cart.</p>\\n<p><a href=\'https://youtu.be/n37sz4LPV08\'>Here is a YouTube demo.</a></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The Firefly Semantics Entity Store has a <code>countSnapshot():number </code>method that we can call to get the <code>count</code> of the number of entities in the store.</p>\\n<pre><code>interface Product {\\nid: string;\\nname: string;\\n}\\nconst P1: Product = {\\n    id: &#39;1&#39;,\\n    name: &#39;Soap&#39;,\\n};\\nconst P2: Product = {\\n    id: &#39;1&#39;,\\n    name: &#39;Soap&#39;,\\n};\\nconst cart: EStore&lt;Product&gt; = new EStore&lt;Product&gt;();\\ncart.post(P1);\\ncart.post(P2);\\nconst count = cart.countSnapshot();\\nconsole.log(count);\\n// Logs 2 \\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Taking a Count Snapshot of a Firefly Semantics Slice Entity Store\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-1bpy1j\'>\\n</fs-link-preview></p>\\n","summary":"Taking a Count Snapshot of a Firefly Semantics Slice Entity Store.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/28/2022","headerImage":"bridesmaid-4088351_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bridesmaid-4088351_1920.jpg","title":"Taking a Count Snapshot of a Firefly Semantics Slice Entity Store","readingTime":1,"wordCount":158},{"category":"Tasks","type":"task","md5":"4b4b4b7c2b1495b3519c92516f79ca0b","filename":"taking-a-query-snapshot-of-a-firefly-semantics-slice-entity-store.md","path":"tasks/slice/taking-a-query-snapshot-of-a-firefly-semantics-slice-entity-store.md","id":"tasks--slice--taking-a-query-snapshot-of-a-firefly-semantics-slice-entity-store","markdown":"\\nWe have a Firefly Semantics Slice Entity Store (`EStore`) that we are using to also store queries that we are executing against its contents.\\n\\nWe wish to take a `snapshot` of the `query`.\\n\\n[Here is a YouTube demo.](https://youtu.be/AFk5p0pNxSk)\\n\\n# Approach\\n\\nSimply use the getter for the `query` attached to the `EStore\xa0`.\\n```\\nsearchStore.query = \'angular\';\\nconst query = searchStore.query;\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Taking a Query Snapshot of a Firefly Semantics Slice Entity\xa0Store\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-gtm7ev\\">\\n</fs-link-preview>\\n","html":"<p>We have a Firefly Semantics Slice Entity Store (<code>EStore</code>) that we are using to also store queries that we are executing against its contents.</p>\\n<p>We wish to take a <code>snapshot</code> of the <code>query</code>.</p>\\n<p><a href=\'https://youtu.be/AFk5p0pNxSk\'>Here is a YouTube demo.</a></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Simply use the getter for the <code>query</code> attached to the <code>EStore\xa0</code>.</p>\\n<pre><code>searchStore.query = &#39;angular&#39;;\\nconst query = searchStore.query;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Taking a Query Snapshot of a Firefly Semantics Slice Entity\xa0Store\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-gtm7ev\'>\\n</fs-link-preview></p>\\n","summary":"Taking a Query Snapshot of a Firefly Semantics Slice Entity\xa0Store.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/28/2022","headerImage":"owl-3184032_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/owl-3184032_1920.jpg","title":"Taking a Query Snapshot of a Firefly Semantics Slice Entity\xa0Store","readingTime":1,"wordCount":103},{"category":"Tasks","type":"task","md5":"f0ad4443e0b9f158382263ece48a41e9","filename":"typing-fireflysemantics-slice-object-store-observables.md","path":"tasks/slice/typing-fireflysemantics-slice-object-store-observables.md","id":"tasks--slice--typing-fireflysemantics-slice-object-store-observables","markdown":"\\nWe model `IS_AUTHENTICATED` in our Firefly Semantics Slice Object Store (`OStore`).\\n\\n```\\nconst START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore<ISTART> = new OStore(START);\\n```\\n\\nAnd we can access the corresponding `Observable` like this:\\n\\n```\\nOS.S.IS_AUTHENTICATED.obs\\n```\\n\\nBut it will emit as an `Observable<any>`, and we want it to emit as `Observable<boolean>`.\\n\\n# Approach\\n\\n[Just create a proxy or alias as demonstrated in this article.](https://developer.fireflysemantics.com/tasks/tasks--slice--creating-proxies-to-slice-object-store-observables)\\n\\n```\\n//=================================\\n// ALIASES\\n//=================================\\n\\nconst isAuthenticated$: Observable<boolean> = OS.S.IS_AUTHENTICATED.obs;\\n```\\n\\nNow `isAuthenitcated$` will emit as `Observable<boolean>`.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Slice Demo\\"\\n  description=\\"Typing Firefly Semantics Object Store Observables\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typing-slice-object-store-observables\\">\\n</fs-link-preview>","html":"<p>We model <code>IS_AUTHENTICATED</code> in our Firefly Semantics Slice Object Store (<code>OStore</code>).</p>\\n<pre><code>const START: OStoreStart = {\\n  IS_AUTHENTICATED: { value: false }\\n};\\ninterface ISTART {\\n  IS_AUTHENTICATED: ObsValueReset;\\n}\\nlet OS: OStore&lt;ISTART&gt; = new OStore(START);\\n</code></pre>\\n<p>And we can access the corresponding <code>Observable</code> like this:</p>\\n<pre><code>OS.S.IS_AUTHENTICATED.obs\\n</code></pre>\\n<p>But it will emit as an <code>Observable&lt;any&gt;</code>, and we want it to emit as <code>Observable&lt;boolean&gt;</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p><a href=\'https://developer.fireflysemantics.com/tasks/tasks--slice--creating-proxies-to-slice-object-store-observables\'>Just create a proxy or alias as demonstrated in this article.</a></p>\\n<pre><code>//=================================\\n// ALIASES\\n//=================================\\n\\nconst isAuthenticated$: Observable&lt;boolean&gt; = OS.S.IS_AUTHENTICATED.obs;\\n</code></pre>\\n<p>Now <code>isAuthenitcated$</code> will emit as <code>Observable&lt;boolean&gt;</code>.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Slice Demo\'\\n  description=\'Typing Firefly Semantics Object Store Observables\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typing-slice-object-store-observables\'>\\n</fs-link-preview></p>\\n","summary":"Typing Firefly Semantics Slice Object Store Observables.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/12/2021","headerImage":"gecko-800887_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/gecko-800887_1920.jpg","title":"Typing Firefly Semantics Slice Object Store Observables","readingTime":1,"wordCount":140},{"category":"Tasks","type":"task","md5":"32d755b23d2d9479492101755721995c","filename":"unsubscribing-from-firefly-semantics-slice-object-store-observables-in-angular.md","path":"tasks/slice/unsubscribing-from-firefly-semantics-slice-object-store-observables-in-angular.md","id":"tasks--slice--unsubscribing-from-firefly-semantics-slice-object-store-observables-in-angular","markdown":"\\nWe access our CSV data via a Slice Object Store observable like this:\\n```\\nthis.s.os.S.CSV_DATA.obs.subscribe(data=>console.log(data))\\n```\\nWe want to automatically `unsubscribe` when the component is destroyed.\\n\\n# Approach\\n\\nUse the library [@ngneat/until-destroy](https://www.npmjs.com/package/@ngneat/until-destroy):\\n```\\nnpm i @ngneat/until-destroy\\n```\\n\\nDecorate the component with `@UntilDestroy()`:\\n```\\n@UntilDestroy()\\n@Component({\\n...\\n})\\n```\\n\\nAnd `pipe` through `untilDestroy`:\\n```\\nthis.s.os.S.CSV_DATA.obs.pipe(untilDestroyed(this)).subscribe(...)\\n```\\n\\nThe `Subscription` instance will now be automatically `unsubscribed`.\\n","html":"<p>We access our CSV data via a Slice Object Store observable like this:</p>\\n<pre><code>this.s.os.S.CSV_DATA.obs.subscribe(data=&gt;console.log(data))\\n</code></pre>\\n<p>We want to automatically <code>unsubscribe</code> when the component is destroyed.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use the library <a href=\'https://www.npmjs.com/package/@ngneat/until-destroy\'>@ngneat/until-destroy</a>:</p>\\n<pre><code>npm i @ngneat/until-destroy\\n</code></pre>\\n<p>Decorate the component with <code>@UntilDestroy()</code>:</p>\\n<pre><code>@UntilDestroy()\\n@Component({\\n...\\n})\\n</code></pre>\\n<p>And <code>pipe</code> through <code>untilDestroy</code>:</p>\\n<pre><code>this.s.os.S.CSV_DATA.obs.pipe(untilDestroyed(this)).subscribe(...)\\n</code></pre>\\n<p>The <code>Subscription</code> instance will now be automatically <code>unsubscribed</code>.</p>\\n","summary":"Unsubscribing From Firefly Semantics Slice Object Store Observables in Angular.","tags":["Slice","JavaScript","TypeScript"],"tagString":"Slice, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/24/2021","headerImage":"wal-1302757_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/wal-1302757_1920.jpg","title":"Unsubscribing From Firefly Semantics Slice Object Store Observables in Angular","readingTime":1,"wordCount":83},{"category":"Tasks","type":"task","md5":"1a30bce634d8635eda9de85f3d667b6e","filename":"creating-npm-css-packages-with-superflycss.md","path":"tasks/superflycss/creating-npm-css-packages-with-superflycss.md","id":"tasks--superflycss--creating-npm-css-packages-with-superflycss","markdown":"\\nWe want the `font face rule` for `saira` in a package that is NPM installable.\\n\\nThe name of the package will be `@fireflysemantics/css-saira-font`.\\n\\n# Approach\\n\\nFirst install `@superflycss/cli`:\\n\\n```\\nnpm i -g @superflycss/cli\\n```\\n\\nCreate a new project for NPM package.\\n```\\nsfc new saira-font-package\\ncd saira-font-package\\n```\\n\\nThen `npm i @superflycss/utilities-fonts`, as we will be importing the `saira` font utility from there.\\n\\nReplace the content in `src/main/css/index.css` with the `saira` font import such that the file looks like this:\\n\\n```\\n@import \\"@superflycss/utilities-fonts/google/saira\\";\\n```\\n\\nTry running `sfc b` and have a look at `target/main/css/index.css`.  You will see the font face rules and utilities for the `saira` font are generated.\\n\\nNow we will create the package install scripts. Replace `package.json` with this:\\n\\n```\\n{\\n\\"name\\": \\"@fireflysemantics/css-saira-font\\",\\n\\"version\\": \\"1.0.0\\",\\n\\"description\\": \\"CSS Saira Font Package\\",\\n\\"scripts\\": {\\n    \\"i\\": \\"npm install -g del-cli && npm install -g @jsdevtools/version-bump-prompt && npm install -g npm-install-peers && npm i -g @superflycss/cli\\",\\n    \\"b\\": \\"sfc b\\",\\n    \\"s\\": \\"sfc s\\",\\n    \\"d\\": \\"sfc d\\",\\n    \\"p\\": \\"bump patch && del target && sfc b && cp package.json target/main/css/ && cd target/main/css && npm publish\\"\\n    },\\n    \\"main\\": \\"index.css\\",\\n    \\"keywords\\": [\\n        \\"css\\",\\n        \\"npm\\"\\n    ],\\n    \\"license\\": \\"MIT\\",\\n    \\"devDependencies\\": {\\n        \\"@superflycss/utilities-fonts\\": \\"^4.0.4\\"\\n    }\\n}\\n```\\n\\nThe script `p` will copy `package.json` into `target/main/css` and then run `npm publish`.\\n\\nThus now we can just run `npm run p` to publish the package.\\n\\nOnce published we can NPM install it like this:\\n```\\nnpm i @fireflysemantics/css-saira-font\\n```\\n\\nTo use the package with Angular see [Importing CSS from NPM Packages With Angular](https://developer.fireflysemantics.com/tasks/tasks--angular--importing-css-from-npm-packages-with-angular).","html":"<p>We want the <code>font face rule</code> for <code>saira</code> in a package that is NPM installable.</p>\\n<p>The name of the package will be <code>@fireflysemantics/css-saira-font</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First install <code>@superflycss/cli</code>:</p>\\n<pre><code>npm i -g @superflycss/cli\\n</code></pre>\\n<p>Create a new project for NPM package.</p>\\n<pre><code>sfc new saira-font-package\\ncd saira-font-package\\n</code></pre>\\n<p>Then <code>npm i @superflycss/utilities-fonts</code>, as we will be importing the <code>saira</code> font utility from there.</p>\\n<p>Replace the content in <code>src/main/css/index.css</code> with the <code>saira</code> font import such that the file looks like this:</p>\\n<pre><code>@import &quot;@superflycss/utilities-fonts/google/saira&quot;;\\n</code></pre>\\n<p>Try running <code>sfc b</code> and have a look at <code>target/main/css/index.css</code>.  You will see the font face rules and utilities for the <code>saira</code> font are generated.</p>\\n<p>Now we will create the package install scripts. Replace <code>package.json</code> with this:</p>\\n<pre><code>{\\n&quot;name&quot;: &quot;@fireflysemantics/css-saira-font&quot;,\\n&quot;version&quot;: &quot;1.0.0&quot;,\\n&quot;description&quot;: &quot;CSS Saira Font Package&quot;,\\n&quot;scripts&quot;: {\\n    &quot;i&quot;: &quot;npm install -g del-cli &amp;&amp; npm install -g @jsdevtools/version-bump-prompt &amp;&amp; npm install -g npm-install-peers &amp;&amp; npm i -g @superflycss/cli&quot;,\\n    &quot;b&quot;: &quot;sfc b&quot;,\\n    &quot;s&quot;: &quot;sfc s&quot;,\\n    &quot;d&quot;: &quot;sfc d&quot;,\\n    &quot;p&quot;: &quot;bump patch &amp;&amp; del target &amp;&amp; sfc b &amp;&amp; cp package.json target/main/css/ &amp;&amp; cd target/main/css &amp;&amp; npm publish&quot;\\n    },\\n    &quot;main&quot;: &quot;index.css&quot;,\\n    &quot;keywords&quot;: [\\n        &quot;css&quot;,\\n        &quot;npm&quot;\\n    ],\\n    &quot;license&quot;: &quot;MIT&quot;,\\n    &quot;devDependencies&quot;: {\\n        &quot;@superflycss/utilities-fonts&quot;: &quot;^4.0.4&quot;\\n    }\\n}\\n</code></pre>\\n<p>The script <code>p</code> will copy <code>package.json</code> into <code>target/main/css</code> and then run <code>npm publish</code>.</p>\\n<p>Thus now we can just run <code>npm run p</code> to publish the package.</p>\\n<p>Once published we can NPM install it like this:</p>\\n<pre><code>npm i @fireflysemantics/css-saira-font\\n</code></pre>\\n<p>To use the package with Angular see <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--importing-css-from-npm-packages-with-angular\'>Importing CSS from NPM Packages With Angular</a>.</p>\\n","summary":"Ten Second Guide to Prototyping With SuperflyCSS.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"4/10/2021","headerImage":"elephant-660058_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/elephant-660058_1920.jpg","title":"Creating NPM CSS Packages with SuperflyCSS","readingTime":2,"wordCount":292},{"category":"Tasks","type":"task","md5":"028c73d2922b96e49a7497a9f02ae213","filename":"generating-google-font-previews-with-superflycss.md","path":"tasks/superflycss/generating-google-font-previews-with-superflycss.md","id":"tasks--superflycss--generating-google-font-previews-with-superflycss","markdown":"\\nWe want this fixture rendered with every single Google Font at normal weight.\\n\\n```\\n<h1>The Font Family is {{ font }}</h1>\\n```\\n\\n# Approach\\n\\nInstall the [SuperflyCSS CLI](https://www.npmjs.com/package/@superflycss/cli):\\n\\n```\\nnpm i @superflycss/cli\\n```\\n\\nThen create a prototyping project:\\n\\n```\\nsfc new p\\ncd p\\n```\\n\\nInstall the [superflycss/utilities-fonts](https://www.npmjs.com/package/@superflycss/utilities-fonts/v/3.3.6) package:\\n\\n```\\nnpm i @superflycss/utilities-fonts\\n```\\n\\nImport all Google Font utilities by updating `src/test/css/index.css` such that it looks like this:\\n\\n```\\n@import \\"../../main/css/\\";\\n@import \'@superflycss/utilities-fonts\'\\n```\\n\\nAlso update `src/test/html/index.html` such that the body element contains this:\\n\\n\x3c!--\\n\\n <fs-gist gistURL=\\"https://gist.github.com/fireflysemantics/b8d24fc05d22e03acb8821cbe5750127#file-index-html\\">\\n  </fs-gist>\\n--\x3e\\n\\n```\\n<body style=\\"margin: 4rem;\\">\\n    {% for style in\\n    [\'abeezee\',\'abel\',\'abhaya-libre\',\'abril-fatface\',\'aclonica\',\'acme\',\'actor\',\'adamina\',\'advent-pro\',\'aguafina-script\',\'akronim\',\'aladin\',\'alata\',\'alatsi\',\'aldrich\',\'alef\',\'alegreya\',\'alegreya-sc\',\'alegreya-sans\',\'alegreya-sans-sc\',\'aleo\',\'alex-brush\',\'alfa-slab-one\',\'alice\',\'alike\',\'alike-angular\',\'allan\',\'allerta\',\'allerta-stencil\',\'allura\',\'almarai\',\'almendra\',\'almendra-display\',\'almendra-sc\',\'amarante\',\'amaranth\',\'amatic-sc\',\'amethysta\',\'amiko\',\'amiri\',\'amita\',\'anaheim\',\'andada\',\'andika\',\'andika-new-basic\',\'angkor\',\'annie-use-your-telescope\',\'anonymous-pro\',\'antic\',\'antic-didone\',\'antic-slab\',\'anton\',\'arapey\',\'arbutus\',\'arbutus-slab\',\'architects-daughter\',\'archivo\',\'archivo-black\',\'archivo-narrow\',\'aref-ruqaa\',\'arima-madurai\',\'arimo\',\'arizonia\',\'armata\',\'arsenal\',\'artifika\',\'arvo\',\'arya\',\'asap\',\'asap-condensed\',\'asar\',\'asset\',\'assistant\',\'astloch\',\'asul\',\'athiti\',\'atma\',\'atomic-age\',\'aubrey\',\'audiowide\',\'autour-one\',\'average\',\'average-sans\',\'averia-gruesa-libre\',\'averia-libre\',\'averia-sans-libre\',\'averia-serif-libre\',\'b612\',\'b612-mono\',\'bad-script\',\'bahiana\',\'bahianita\',\'bai-jamjuree\',\'baloo-2\',\'baloo-bhai-2\',\'baloo-bhaina-2\',\'baloo-chettan-2\',\'baloo-da-2\',\'baloo-paaji-2\',\'baloo-tamma-2\',\'baloo-tammudu-2\',\'baloo-thambi-2\',\'balsamiq-sans\',\'balthazar\',\'bangers\',\'barlow\',\'barlow-condensed\',\'barlow-semi-condensed\',\'barriecito\',\'barrio\',\'basic\',\'baskervville\',\'battambang\',\'baumans\',\'bayon\',\'be-vietnam\',\'bebas-neue\',\'belgrano\',\'bellefair\',\'belleza\',\'bellota\',\'bellota-text\',\'benchnine\',\'bentham\',\'berkshire-swash\',\'beth-ellen\',\'bevan\',\'big-shoulders-display\',\'big-shoulders-inline-display\',\'big-shoulders-inline-text\',\'big-shoulders-stencil-display\',\'big-shoulders-stencil-text\',\'big-shoulders-text\',\'bigelow-rules\',\'bigshot-one\',\'bilbo\',\'bilbo-swash-caps\',\'biorhyme\',\'biorhyme-expanded\',\'biryani\',\'bitter\',\'black-and-white-picture\',\'black-han-sans\',\'black-ops-one\',\'blinker\',\'bokor\',\'bonbon\',\'boogaloo\',\'bowlby-one\',\'bowlby-one-sc\',\'brawler\',\'bree-serif\',\'bubblegum-sans\',\'bubbler-one\',\'buda\',\'buenard\',\'bungee\',\'bungee-hairline\',\'bungee-inline\',\'bungee-outline\',\'bungee-shade\',\'butcherman\',\'butterfly-kids\',\'cabin\',\'cabin-condensed\',\'cabin-sketch\',\'caesar-dressing\',\'cagliostro\',\'cairo\',\'caladea\',\'calistoga\',\'calligraffitti\',\'cambay\',\'cambo\',\'candal\',\'cantarell\',\'cantata-one\',\'cantora-one\',\'capriola\',\'cardo\',\'carme\',\'carrois-gothic\',\'carrois-gothic-sc\',\'carter-one\',\'castoro\',\'catamaran\',\'caudex\',\'caveat\',\'caveat-brush\',\'cedarville-cursive\',\'ceviche-one\',\'chakra-petch\',\'changa\',\'changa-one\',\'chango\',\'charm\',\'charmonman\',\'chathura\',\'chau-philomene-one\',\'chela-one\',\'chelsea-market\',\'chenla\',\'cherry-cream-soda\',\'cherry-swash\',\'chewy\',\'chicle\',\'chilanka\',\'chivo\',\'chonburi\',\'cinzel\',\'cinzel-decorative\',\'clicker-script\',\'coda\',\'coda-caption\',\'codystar\',\'coiny\',\'combo\',\'comfortaa\',\'comic-neue\',\'coming-soon\',\'commissioner\',\'concert-one\',\'condiment\',\'content\',\'contrail-one\',\'convergence\',\'cookie\',\'copse\',\'corben\',\'cormorant\',\'cormorant-garamond\',\'cormorant-infant\',\'cormorant-sc\',\'cormorant-unicase\',\'cormorant-upright\',\'courgette\',\'courier-prime\',\'cousine\',\'coustard\',\'covered-by-your-grace\',\'crafty-girls\',\'creepster\',\'crete-round\',\'crimson-pro\',\'crimson-text\',\'croissant-one\',\'crushed\',\'cuprum\',\'cute-font\',\'cutive\',\'cutive-mono\',\'dm-mono\',\'dm-sans\',\'dm-serif-display\',\'dm-serif-text\',\'damion\',\'dancing-script\',\'dangrek\',\'darker-grotesque\',\'david-libre\',\'dawning-of-a-new-day\',\'days-one\',\'dekko\',\'delius\',\'delius-swash-caps\',\'delius-unicase\',\'della-respira\',\'denk-one\',\'devonshire\',\'dhurjati\',\'didact-gothic\',\'diplomata\',\'diplomata-sc\',\'do-hyeon\',\'dokdo\',\'domine\',\'donegal-one\',\'doppio-one\',\'dorsa\',\'dosis\',\'dr-sugiyama\',\'duru-sans\',\'dynalight\',\'eb-garamond\',\'eagle-lake\',\'east-sea-dokdo\',\'eater\',\'economica\',\'eczar\',\'el-messiri\',\'electrolize\',\'elsie\',\'elsie-swash-caps\',\'emblema-one\',\'emilys-candy\',\'encode-sans\',\'encode-sans-condensed\',\'encode-sans-expanded\',\'encode-sans-semi-condensed\',\'encode-sans-semi-expanded\',\'engagement\',\'englebert\',\'enriqueta\',\'epilogue\',\'erica-one\',\'esteban\',\'euphoria-script\',\'ewert\',\'exo\',\'exo-2\',\'expletus-sans\',\'fahkwang\',\'fanwood-text\',\'farro\',\'farsan\',\'fascinate\',\'fascinate-inline\',\'faster-one\',\'fasthand\',\'fauna-one\',\'faustina\',\'federant\',\'federo\',\'felipa\',\'fenix\',\'finger-paint\',\'fira-code\',\'fira-mono\',\'fira-sans\',\'fira-sans-condensed\',\'fira-sans-extra-condensed\',\'fjalla-one\',\'fjord-one\',\'flamenco\',\'flavors\',\'fondamento\',\'fontdiner-swanky\',\'forum\',\'francois-one\',\'frank-ruhl-libre\',\'freckle-face\',\'fredericka-the-great\',\'fredoka-one\',\'freehand\',\'fresca\',\'frijole\',\'fruktur\',\'fugaz-one\',\'gfs-didot\',\'gfs-neohellenic\',\'gabriela\',\'gaegu\',\'gafata\',\'galada\',\'galdeano\',\'galindo\',\'gamja-flower\',\'gayathri\',\'gelasio\',\'gentium-basic\',\'gentium-book-basic\',\'geo\',\'geostar\',\'geostar-fill\',\'germania-one\',\'gidugu\',\'gilda-display\',\'girassol\',\'give-you-glory\',\'glass-antiqua\',\'glegoo\',\'gloria-hallelujah\',\'goblin-one\',\'gochi-hand\',\'goldman\',\'gorditas\',\'gothic-a1\',\'gotu\',\'goudy-bookletter-1911\',\'graduate\',\'grand-hotel\',\'grandstander\',\'gravitas-one\',\'great-vibes\',\'grenze\',\'grenze-gotisch\',\'griffy\',\'gruppo\',\'gudea\',\'gugi\',\'gupter\',\'gurajada\',\'habibi\',\'halant\',\'hammersmith-one\',\'hanalei\',\'hanalei-fill\',\'handlee\',\'hanuman\',\'happy-monkey\',\'harmattan\',\'headland-one\',\'heebo\',\'henny-penny\',\'hepta-slab\',\'herr-von-muellerhoff\',\'hi-melody\',\'hind\',\'hind-guntur\',\'hind-madurai\',\'hind-siliguri\',\'hind-vadodara\',\'holtwood-one-sc\',\'homemade-apple\',\'homenaje\',\'ibm-plex-mono\',\'ibm-plex-sans\',\'ibm-plex-sans-condensed\',\'ibm-plex-serif\',\'im-fell-dw-pica\',\'im-fell-dw-pica-sc\',\'im-fell-double-pica\',\'im-fell-double-pica-sc\',\'im-fell-english\',\'im-fell-english-sc\',\'im-fell-french-canon\',\'im-fell-french-canon-sc\',\'im-fell-great-primer\',\'im-fell-great-primer-sc\',\'ibarra-real-nova\',\'iceberg\',\'iceland\',\'imprima\',\'inconsolata\',\'inder\',\'indie-flower\',\'inika\',\'inknut-antiqua\',\'inria-sans\',\'inria-serif\',\'inter\',\'irish-grover\',\'istok-web\',\'italiana\',\'italianno\',\'itim\',\'jacques-francois\',\'jacques-francois-shadow\',\'jaldi\',\'jetbrains-mono\',\'jim-nightshade\',\'jockey-one\',\'jolly-lodger\',\'jomhuria\',\'jomolhari\',\'josefin-sans\',\'josefin-slab\',\'jost\',\'joti-one\',\'jua\',\'judson\',\'julee\',\'julius-sans-one\',\'junge\',\'jura\',\'just-another-hand\',\'just-me-again-down-here\',\'k2d\',\'kadwa\',\'kalam\',\'kameron\',\'kanit\',\'kantumruy\',\'karla\',\'karma\',\'katibeh\',\'kaushan-script\',\'kavivanar\',\'kavoon\',\'kdam-thmor\',\'keania-one\',\'kelly-slab\',\'kenia\',\'khand\',\'khmer\',\'khula\',\'kirang-haerang\',\'kite-one\',\'knewave\',\'koho\',\'kodchasan\',\'kosugi\',\'kosugi-maru\',\'kotta-one\',\'koulen\',\'kranky\',\'kreon\',\'kristi\',\'krona-one\',\'krub\',\'kufam\',\'kulim-park\',\'kumar-one\',\'kumar-one-outline\',\'kumbh-sans\',\'kurale\',\'la-belle-aurore\',\'lacquer\',\'laila\',\'lakki-reddy\',\'lalezar\',\'lancelot\',\'langar\',\'lateef\',\'lato\',\'league-script\',\'leckerli-one\',\'ledger\',\'lekton\',\'lemon\',\'lemonada\',\'lexend-deca\',\'lexend-exa\',\'lexend-giga\',\'lexend-mega\',\'lexend-peta\',\'lexend-tera\',\'lexend-zetta\',\'libre-barcode-128\',\'libre-barcode-128-text\',\'libre-barcode-39\',\'libre-barcode-39-extended\',\'libre-barcode-39-extended-text\',\'libre-barcode-39-text\',\'libre-barcode-ean13-text\',\'libre-baskerville\',\'libre-caslon-display\',\'libre-caslon-text\',\'libre-franklin\',\'life-savers\',\'lilita-one\',\'lily-script-one\',\'limelight\',\'linden-hill\',\'literata\',\'liu-jian-mao-cao\',\'livvic\',\'lobster\',\'lobster-two\',\'londrina-outline\',\'londrina-shadow\',\'londrina-sketch\',\'londrina-solid\',\'long-cang\',\'lora\',\'love-ya-like-a-sister\',\'loved-by-the-king\',\'lovers-quarrel\',\'luckiest-guy\',\'lusitana\',\'lustria\',\'m-plus-1p\',\'m-plus-rounded-1c\',\'ma-shan-zheng\',\'macondo\',\'macondo-swash-caps\',\'mada\',\'magra\',\'maiden-orange\',\'maitree\',\'major-mono-display\',\'mako\',\'mali\',\'mallanna\',\'mandali\',\'manjari\',\'manrope\',\'mansalva\',\'manuale\',\'marcellus\',\'marcellus-sc\',\'marck-script\',\'margarine\',\'markazi-text\',\'marko-one\',\'marmelad\',\'martel\',\'martel-sans\',\'marvel\',\'mate\',\'mate-sc\',\'maven-pro\',\'mclaren\',\'meddon\',\'medievalsharp\',\'medula-one\',\'meera-inimai\',\'megrim\',\'meie-script\',\'merienda\',\'merienda-one\',\'merriweather\',\'merriweather-sans\',\'metal\',\'metal-mania\',\'metamorphous\',\'metrophobic\',\'michroma\',\'milonga\',\'miltonian\',\'miltonian-tattoo\',\'mina\',\'miniver\',\'miriam-libre\',\'mirza\',\'miss-fajardose\',\'mitr\',\'modak\',\'modern-antiqua\',\'mogra\',\'molengo\',\'molle\',\'monda\',\'monofett\',\'monoton\',\'monsieur-la-doulaise\',\'montaga\',\'montez\',\'montserrat\',\'montserrat-alternates\',\'montserrat-subrayada\',\'moul\',\'moulpali\',\'mountains-of-christmas\',\'mouse-memoirs\',\'mr-bedfort\',\'mr-dafoe\',\'mr-de-haviland\',\'mrs-saint-delafield\',\'mrs-sheppards\',\'mukta\',\'mukta-mahee\',\'mukta-malar\',\'mukta-vaani\',\'mulish\',\'museomoderno\',\'mystery-quest\',\'ntr\',\'nanum-brush-script\',\'nanum-gothic\',\'nanum-gothic-coding\',\'nanum-myeongjo\',\'nanum-pen-script\',\'nerko-one\',\'neucha\',\'neuton\',\'new-rocker\',\'news-cycle\',\'niconne\',\'niramit\',\'nixie-one\',\'nobile\',\'nokora\',\'norican\',\'nosifer\',\'notable\',\'nothing-you-could-do\',\'noticia-text\',\'noto-sans\',\'noto-sans-hk\',\'noto-sans-jp\',\'noto-sans-kr\',\'noto-sans-sc\',\'noto-sans-tc\',\'noto-serif\',\'noto-serif-jp\',\'noto-serif-kr\',\'noto-serif-sc\',\'noto-serif-tc\',\'nova-cut\',\'nova-flat\',\'nova-mono\',\'nova-oval\',\'nova-round\',\'nova-script\',\'nova-slim\',\'nova-square\',\'numans\',\'nunito\',\'nunito-sans\',\'odibee-sans\',\'odor-mean-chey\',\'offside\',\'old-standard-tt\',\'oldenburg\',\'oleo-script\',\'oleo-script-swash-caps\',\'open-sans\',\'open-sans-condensed\',\'oranienbaum\',\'orbitron\',\'oregano\',\'orienta\',\'original-surfer\',\'oswald\',\'over-the-rainbow\',\'overlock\',\'overlock-sc\',\'overpass\',\'overpass-mono\',\'ovo\',\'oxanium\',\'oxygen\',\'oxygen-mono\',\'pt-mono\',\'pt-sans\',\'pt-sans-caption\',\'pt-sans-narrow\',\'pt-serif\',\'pt-serif-caption\',\'pacifico\',\'padauk\',\'palanquin\',\'palanquin-dark\',\'pangolin\',\'paprika\',\'parisienne\',\'passero-one\',\'passion-one\',\'pathway-gothic-one\',\'patrick-hand\',\'patrick-hand-sc\',\'pattaya\',\'patua-one\',\'pavanam\',\'paytone-one\',\'peddana\',\'peralta\',\'permanent-marker\',\'petit-formal-script\',\'petrona\',\'philosopher\',\'piazzolla\',\'piedra\',\'pinyon-script\',\'pirata-one\',\'plaster\',\'play\',\'playball\',\'playfair-display\',\'playfair-display-sc\',\'podkova\',\'poiret-one\',\'poller-one\',\'poly\',\'pompiere\',\'pontano-sans\',\'poor-story\',\'poppins\',\'port-lligat-sans\',\'port-lligat-slab\',\'pragati-narrow\',\'prata\',\'preahvihear\',\'press-start-2p\',\'pridi\',\'princess-sofia\',\'prociono\',\'prompt\',\'prosto-one\',\'proza-libre\',\'public-sans\',\'puritan\',\'purple-purse\',\'quando\',\'quantico\',\'quattrocento\',\'quattrocento-sans\',\'questrial\',\'quicksand\',\'quintessential\',\'qwigley\',\'racing-sans-one\',\'radley\',\'rajdhani\',\'rakkas\',\'raleway\',\'raleway-dots\',\'ramabhadra\',\'ramaraja\',\'rambla\',\'rammetto-one\',\'ranchers\',\'rancho\',\'ranga\',\'rasa\',\'rationale\',\'ravi-prakash\',\'recursive\',\'red-hat-display\',\'red-hat-text\',\'red-rose\',\'redressed\',\'reem-kufi\',\'reenie-beanie\',\'revalia\',\'rhodium-libre\',\'ribeye\',\'ribeye-marrow\',\'righteous\',\'risque\',\'roboto\',\'roboto-condensed\',\'roboto-mono\',\'roboto-slab\',\'rochester\',\'rock-salt\',\'rokkitt\',\'romanesco\',\'ropa-sans\',\'rosario\',\'rosarivo\',\'rouge-script\',\'rowdies\',\'rozha-one\',\'rubik\',\'rubik-mono-one\',\'ruda\',\'rufina\',\'ruge-boogie\',\'ruluko\',\'rum-raisin\',\'ruslan-display\',\'russo-one\',\'ruthie\',\'rye\',\'sacramento\',\'sahitya\',\'sail\',\'saira\',\'saira-condensed\',\'saira-extra-condensed\',\'saira-semi-condensed\',\'saira-stencil-one\',\'salsa\',\'sanchez\',\'sancreek\',\'sansita\',\'sansita-swashed\',\'sarabun\',\'sarala\',\'sarina\',\'sarpanch\',\'satisfy\',\'sawarabi-gothic\',\'sawarabi-mincho\',\'scada\',\'scheherazade\',\'schoolbell\',\'scope-one\',\'seaweed-script\',\'secular-one\',\'sedgwick-ave\',\'sedgwick-ave-display\',\'sen\',\'sevillana\',\'seymour-one\',\'shadows-into-light\',\'shadows-into-light-two\',\'shanti\',\'share\',\'share-tech\',\'share-tech-mono\',\'shojumaru\',\'short-stack\',\'shrikhand\',\'siemreap\',\'sigmar-one\',\'signika\',\'signika-negative\',\'simonetta\',\'single-day\',\'sintony\',\'sirin-stencil\',\'six-caps\',\'skranji\',\'slabo-13px\',\'slabo-27px\',\'slackey\',\'smokum\',\'smythe\',\'sniglet\',\'snippet\',\'snowburst-one\',\'sofadi-one\',\'sofia\',\'solway\',\'song-myung\',\'sonsie-one\',\'sora\',\'sorts-mill-goudy\',\'source-code-pro\',\'source-sans-pro\',\'source-serif-pro\',\'space-grotesk\',\'space-mono\',\'spartan\',\'special-elite\',\'spectral\',\'spectral-sc\',\'spicy-rice\',\'spinnaker\',\'spirax\',\'squada-one\',\'sree-krushnadevaraya\',\'sriracha\',\'srisakdi\',\'staatliches\',\'stalemate\',\'stalinist-one\',\'stardos-stencil\',\'stint-ultra-condensed\',\'stint-ultra-expanded\',\'stoke\',\'strait\',\'stylish\',\'sue-ellen-francisco\',\'suez-one\',\'sulphur-point\',\'sumana\',\'sunflower\',\'sunshiney\',\'supermercado-one\',\'sura\',\'suranna\',\'suravaram\',\'suwannaphum\',\'swanky-and-moo-moo\',\'syncopate\',\'syne\',\'syne-mono\',\'syne-tactile\',\'tajawal\',\'tangerine\',\'taprom\',\'tauri\',\'taviraj\',\'teko\',\'telex\',\'tenali-ramakrishna\',\'tenor-sans\',\'text-me-one\',\'texturina\',\'thasadith\',\'the-girl-next-door\',\'tienne\',\'tillana\',\'timmana\',\'tinos\',\'titan-one\',\'titillium-web\',\'tomorrow\',\'trade-winds\',\'trirong\',\'trispace\',\'trocchi\',\'trochut\',\'trykker\',\'tulpen-one\',\'turret-road\',\'ubuntu\',\'ubuntu-condensed\',\'ubuntu-mono\',\'ultra\',\'uncial-antiqua\',\'underdog\',\'unica-one\',\'unifrakturcook\',\'unifrakturmaguntia\',\'unkempt\',\'unlock\',\'unna\',\'vt323\',\'vampiro-one\',\'varela\',\'varela-round\',\'varta\',\'vast-shadow\',\'vesper-libre\',\'viaoda-libre\',\'vibes\',\'vibur\',\'vidaloka\',\'viga\',\'voces\',\'volkhov\',\'vollkorn\',\'vollkorn-sc\',\'voltaire\',\'waiting-for-the-sunrise\',\'wallpoet\',\'walter-turncoat\',\'warnes\',\'wellfleet\',\'wendy-one\',\'wire-one\',\'work-sans\',\'xanh-mono\',\'yanone-kaffeesatz\',\'yantramanav\',\'yatra-one\',\'yellowtail\',\'yeon-sung\',\'yeseva-one\',\'yesteryear\',\'yrsa\',\'zcool-kuaile\',\'zcool-qingke-huangyou\',\'zcool-xiaowei\',\'zeyada\',\'zhi-mang-xing\',\'zilla-slab\',\'zilla-slab-highlight\']\\n    %}\\n    <h1 style=\\"margin:1rem;\\" class=\\"u-font-{{style}}-400\\">Heading For {{style}} </h1>\\n    {%- endfor %}\\n</body>\\n```\\n\\nStart the live reload server:\\n\\n```\\nsfc s\\n```\\n\\nThe [SuperflyCSS CLI](https://www.npmjs.com/package/@superflycss/cli) will now render all the h1 element preview of all Google Fonts.\\n","html":"<p>We want this fixture rendered with every single Google Font at normal weight.</p>\\n<pre><code>&lt;h1&gt;The Font Family is {{ font }}&lt;/h1&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Install the <a href=\'https://www.npmjs.com/package/@superflycss/cli\'>SuperflyCSS CLI</a>:</p>\\n<pre><code>npm i @superflycss/cli\\n</code></pre>\\n<p>Then create a prototyping project:</p>\\n<pre><code>sfc new p\\ncd p\\n</code></pre>\\n<p>Install the <a href=\'https://www.npmjs.com/package/@superflycss/utilities-fonts/v/3.3.6\'>superflycss/utilities-fonts</a> package:</p>\\n<pre><code>npm i @superflycss/utilities-fonts\\n</code></pre>\\n<p>Import all Google Font utilities by updating <code>src/test/css/index.css</code> such that it looks like this:</p>\\n<pre><code>@import &quot;../../main/css/&quot;;\\n@import &#39;@superflycss/utilities-fonts&#39;\\n</code></pre>\\n<p>Also update <code>src/test/html/index.html</code> such that the body element contains this:</p>\\n\x3c!--\\n\\n <fs-gist gistURL=\'https://gist.github.com/fireflysemantics/b8d24fc05d22e03acb8821cbe5750127#file-index-html\'>\\n  </fs-gist>\\n--\x3e\\n\\n<pre><code>&lt;body style=&quot;margin: 4rem;&quot;&gt;\\n    {% for style in\\n    [&#39;abeezee&#39;,&#39;abel&#39;,&#39;abhaya-libre&#39;,&#39;abril-fatface&#39;,&#39;aclonica&#39;,&#39;acme&#39;,&#39;actor&#39;,&#39;adamina&#39;,&#39;advent-pro&#39;,&#39;aguafina-script&#39;,&#39;akronim&#39;,&#39;aladin&#39;,&#39;alata&#39;,&#39;alatsi&#39;,&#39;aldrich&#39;,&#39;alef&#39;,&#39;alegreya&#39;,&#39;alegreya-sc&#39;,&#39;alegreya-sans&#39;,&#39;alegreya-sans-sc&#39;,&#39;aleo&#39;,&#39;alex-brush&#39;,&#39;alfa-slab-one&#39;,&#39;alice&#39;,&#39;alike&#39;,&#39;alike-angular&#39;,&#39;allan&#39;,&#39;allerta&#39;,&#39;allerta-stencil&#39;,&#39;allura&#39;,&#39;almarai&#39;,&#39;almendra&#39;,&#39;almendra-display&#39;,&#39;almendra-sc&#39;,&#39;amarante&#39;,&#39;amaranth&#39;,&#39;amatic-sc&#39;,&#39;amethysta&#39;,&#39;amiko&#39;,&#39;amiri&#39;,&#39;amita&#39;,&#39;anaheim&#39;,&#39;andada&#39;,&#39;andika&#39;,&#39;andika-new-basic&#39;,&#39;angkor&#39;,&#39;annie-use-your-telescope&#39;,&#39;anonymous-pro&#39;,&#39;antic&#39;,&#39;antic-didone&#39;,&#39;antic-slab&#39;,&#39;anton&#39;,&#39;arapey&#39;,&#39;arbutus&#39;,&#39;arbutus-slab&#39;,&#39;architects-daughter&#39;,&#39;archivo&#39;,&#39;archivo-black&#39;,&#39;archivo-narrow&#39;,&#39;aref-ruqaa&#39;,&#39;arima-madurai&#39;,&#39;arimo&#39;,&#39;arizonia&#39;,&#39;armata&#39;,&#39;arsenal&#39;,&#39;artifika&#39;,&#39;arvo&#39;,&#39;arya&#39;,&#39;asap&#39;,&#39;asap-condensed&#39;,&#39;asar&#39;,&#39;asset&#39;,&#39;assistant&#39;,&#39;astloch&#39;,&#39;asul&#39;,&#39;athiti&#39;,&#39;atma&#39;,&#39;atomic-age&#39;,&#39;aubrey&#39;,&#39;audiowide&#39;,&#39;autour-one&#39;,&#39;average&#39;,&#39;average-sans&#39;,&#39;averia-gruesa-libre&#39;,&#39;averia-libre&#39;,&#39;averia-sans-libre&#39;,&#39;averia-serif-libre&#39;,&#39;b612&#39;,&#39;b612-mono&#39;,&#39;bad-script&#39;,&#39;bahiana&#39;,&#39;bahianita&#39;,&#39;bai-jamjuree&#39;,&#39;baloo-2&#39;,&#39;baloo-bhai-2&#39;,&#39;baloo-bhaina-2&#39;,&#39;baloo-chettan-2&#39;,&#39;baloo-da-2&#39;,&#39;baloo-paaji-2&#39;,&#39;baloo-tamma-2&#39;,&#39;baloo-tammudu-2&#39;,&#39;baloo-thambi-2&#39;,&#39;balsamiq-sans&#39;,&#39;balthazar&#39;,&#39;bangers&#39;,&#39;barlow&#39;,&#39;barlow-condensed&#39;,&#39;barlow-semi-condensed&#39;,&#39;barriecito&#39;,&#39;barrio&#39;,&#39;basic&#39;,&#39;baskervville&#39;,&#39;battambang&#39;,&#39;baumans&#39;,&#39;bayon&#39;,&#39;be-vietnam&#39;,&#39;bebas-neue&#39;,&#39;belgrano&#39;,&#39;bellefair&#39;,&#39;belleza&#39;,&#39;bellota&#39;,&#39;bellota-text&#39;,&#39;benchnine&#39;,&#39;bentham&#39;,&#39;berkshire-swash&#39;,&#39;beth-ellen&#39;,&#39;bevan&#39;,&#39;big-shoulders-display&#39;,&#39;big-shoulders-inline-display&#39;,&#39;big-shoulders-inline-text&#39;,&#39;big-shoulders-stencil-display&#39;,&#39;big-shoulders-stencil-text&#39;,&#39;big-shoulders-text&#39;,&#39;bigelow-rules&#39;,&#39;bigshot-one&#39;,&#39;bilbo&#39;,&#39;bilbo-swash-caps&#39;,&#39;biorhyme&#39;,&#39;biorhyme-expanded&#39;,&#39;biryani&#39;,&#39;bitter&#39;,&#39;black-and-white-picture&#39;,&#39;black-han-sans&#39;,&#39;black-ops-one&#39;,&#39;blinker&#39;,&#39;bokor&#39;,&#39;bonbon&#39;,&#39;boogaloo&#39;,&#39;bowlby-one&#39;,&#39;bowlby-one-sc&#39;,&#39;brawler&#39;,&#39;bree-serif&#39;,&#39;bubblegum-sans&#39;,&#39;bubbler-one&#39;,&#39;buda&#39;,&#39;buenard&#39;,&#39;bungee&#39;,&#39;bungee-hairline&#39;,&#39;bungee-inline&#39;,&#39;bungee-outline&#39;,&#39;bungee-shade&#39;,&#39;butcherman&#39;,&#39;butterfly-kids&#39;,&#39;cabin&#39;,&#39;cabin-condensed&#39;,&#39;cabin-sketch&#39;,&#39;caesar-dressing&#39;,&#39;cagliostro&#39;,&#39;cairo&#39;,&#39;caladea&#39;,&#39;calistoga&#39;,&#39;calligraffitti&#39;,&#39;cambay&#39;,&#39;cambo&#39;,&#39;candal&#39;,&#39;cantarell&#39;,&#39;cantata-one&#39;,&#39;cantora-one&#39;,&#39;capriola&#39;,&#39;cardo&#39;,&#39;carme&#39;,&#39;carrois-gothic&#39;,&#39;carrois-gothic-sc&#39;,&#39;carter-one&#39;,&#39;castoro&#39;,&#39;catamaran&#39;,&#39;caudex&#39;,&#39;caveat&#39;,&#39;caveat-brush&#39;,&#39;cedarville-cursive&#39;,&#39;ceviche-one&#39;,&#39;chakra-petch&#39;,&#39;changa&#39;,&#39;changa-one&#39;,&#39;chango&#39;,&#39;charm&#39;,&#39;charmonman&#39;,&#39;chathura&#39;,&#39;chau-philomene-one&#39;,&#39;chela-one&#39;,&#39;chelsea-market&#39;,&#39;chenla&#39;,&#39;cherry-cream-soda&#39;,&#39;cherry-swash&#39;,&#39;chewy&#39;,&#39;chicle&#39;,&#39;chilanka&#39;,&#39;chivo&#39;,&#39;chonburi&#39;,&#39;cinzel&#39;,&#39;cinzel-decorative&#39;,&#39;clicker-script&#39;,&#39;coda&#39;,&#39;coda-caption&#39;,&#39;codystar&#39;,&#39;coiny&#39;,&#39;combo&#39;,&#39;comfortaa&#39;,&#39;comic-neue&#39;,&#39;coming-soon&#39;,&#39;commissioner&#39;,&#39;concert-one&#39;,&#39;condiment&#39;,&#39;content&#39;,&#39;contrail-one&#39;,&#39;convergence&#39;,&#39;cookie&#39;,&#39;copse&#39;,&#39;corben&#39;,&#39;cormorant&#39;,&#39;cormorant-garamond&#39;,&#39;cormorant-infant&#39;,&#39;cormorant-sc&#39;,&#39;cormorant-unicase&#39;,&#39;cormorant-upright&#39;,&#39;courgette&#39;,&#39;courier-prime&#39;,&#39;cousine&#39;,&#39;coustard&#39;,&#39;covered-by-your-grace&#39;,&#39;crafty-girls&#39;,&#39;creepster&#39;,&#39;crete-round&#39;,&#39;crimson-pro&#39;,&#39;crimson-text&#39;,&#39;croissant-one&#39;,&#39;crushed&#39;,&#39;cuprum&#39;,&#39;cute-font&#39;,&#39;cutive&#39;,&#39;cutive-mono&#39;,&#39;dm-mono&#39;,&#39;dm-sans&#39;,&#39;dm-serif-display&#39;,&#39;dm-serif-text&#39;,&#39;damion&#39;,&#39;dancing-script&#39;,&#39;dangrek&#39;,&#39;darker-grotesque&#39;,&#39;david-libre&#39;,&#39;dawning-of-a-new-day&#39;,&#39;days-one&#39;,&#39;dekko&#39;,&#39;delius&#39;,&#39;delius-swash-caps&#39;,&#39;delius-unicase&#39;,&#39;della-respira&#39;,&#39;denk-one&#39;,&#39;devonshire&#39;,&#39;dhurjati&#39;,&#39;didact-gothic&#39;,&#39;diplomata&#39;,&#39;diplomata-sc&#39;,&#39;do-hyeon&#39;,&#39;dokdo&#39;,&#39;domine&#39;,&#39;donegal-one&#39;,&#39;doppio-one&#39;,&#39;dorsa&#39;,&#39;dosis&#39;,&#39;dr-sugiyama&#39;,&#39;duru-sans&#39;,&#39;dynalight&#39;,&#39;eb-garamond&#39;,&#39;eagle-lake&#39;,&#39;east-sea-dokdo&#39;,&#39;eater&#39;,&#39;economica&#39;,&#39;eczar&#39;,&#39;el-messiri&#39;,&#39;electrolize&#39;,&#39;elsie&#39;,&#39;elsie-swash-caps&#39;,&#39;emblema-one&#39;,&#39;emilys-candy&#39;,&#39;encode-sans&#39;,&#39;encode-sans-condensed&#39;,&#39;encode-sans-expanded&#39;,&#39;encode-sans-semi-condensed&#39;,&#39;encode-sans-semi-expanded&#39;,&#39;engagement&#39;,&#39;englebert&#39;,&#39;enriqueta&#39;,&#39;epilogue&#39;,&#39;erica-one&#39;,&#39;esteban&#39;,&#39;euphoria-script&#39;,&#39;ewert&#39;,&#39;exo&#39;,&#39;exo-2&#39;,&#39;expletus-sans&#39;,&#39;fahkwang&#39;,&#39;fanwood-text&#39;,&#39;farro&#39;,&#39;farsan&#39;,&#39;fascinate&#39;,&#39;fascinate-inline&#39;,&#39;faster-one&#39;,&#39;fasthand&#39;,&#39;fauna-one&#39;,&#39;faustina&#39;,&#39;federant&#39;,&#39;federo&#39;,&#39;felipa&#39;,&#39;fenix&#39;,&#39;finger-paint&#39;,&#39;fira-code&#39;,&#39;fira-mono&#39;,&#39;fira-sans&#39;,&#39;fira-sans-condensed&#39;,&#39;fira-sans-extra-condensed&#39;,&#39;fjalla-one&#39;,&#39;fjord-one&#39;,&#39;flamenco&#39;,&#39;flavors&#39;,&#39;fondamento&#39;,&#39;fontdiner-swanky&#39;,&#39;forum&#39;,&#39;francois-one&#39;,&#39;frank-ruhl-libre&#39;,&#39;freckle-face&#39;,&#39;fredericka-the-great&#39;,&#39;fredoka-one&#39;,&#39;freehand&#39;,&#39;fresca&#39;,&#39;frijole&#39;,&#39;fruktur&#39;,&#39;fugaz-one&#39;,&#39;gfs-didot&#39;,&#39;gfs-neohellenic&#39;,&#39;gabriela&#39;,&#39;gaegu&#39;,&#39;gafata&#39;,&#39;galada&#39;,&#39;galdeano&#39;,&#39;galindo&#39;,&#39;gamja-flower&#39;,&#39;gayathri&#39;,&#39;gelasio&#39;,&#39;gentium-basic&#39;,&#39;gentium-book-basic&#39;,&#39;geo&#39;,&#39;geostar&#39;,&#39;geostar-fill&#39;,&#39;germania-one&#39;,&#39;gidugu&#39;,&#39;gilda-display&#39;,&#39;girassol&#39;,&#39;give-you-glory&#39;,&#39;glass-antiqua&#39;,&#39;glegoo&#39;,&#39;gloria-hallelujah&#39;,&#39;goblin-one&#39;,&#39;gochi-hand&#39;,&#39;goldman&#39;,&#39;gorditas&#39;,&#39;gothic-a1&#39;,&#39;gotu&#39;,&#39;goudy-bookletter-1911&#39;,&#39;graduate&#39;,&#39;grand-hotel&#39;,&#39;grandstander&#39;,&#39;gravitas-one&#39;,&#39;great-vibes&#39;,&#39;grenze&#39;,&#39;grenze-gotisch&#39;,&#39;griffy&#39;,&#39;gruppo&#39;,&#39;gudea&#39;,&#39;gugi&#39;,&#39;gupter&#39;,&#39;gurajada&#39;,&#39;habibi&#39;,&#39;halant&#39;,&#39;hammersmith-one&#39;,&#39;hanalei&#39;,&#39;hanalei-fill&#39;,&#39;handlee&#39;,&#39;hanuman&#39;,&#39;happy-monkey&#39;,&#39;harmattan&#39;,&#39;headland-one&#39;,&#39;heebo&#39;,&#39;henny-penny&#39;,&#39;hepta-slab&#39;,&#39;herr-von-muellerhoff&#39;,&#39;hi-melody&#39;,&#39;hind&#39;,&#39;hind-guntur&#39;,&#39;hind-madurai&#39;,&#39;hind-siliguri&#39;,&#39;hind-vadodara&#39;,&#39;holtwood-one-sc&#39;,&#39;homemade-apple&#39;,&#39;homenaje&#39;,&#39;ibm-plex-mono&#39;,&#39;ibm-plex-sans&#39;,&#39;ibm-plex-sans-condensed&#39;,&#39;ibm-plex-serif&#39;,&#39;im-fell-dw-pica&#39;,&#39;im-fell-dw-pica-sc&#39;,&#39;im-fell-double-pica&#39;,&#39;im-fell-double-pica-sc&#39;,&#39;im-fell-english&#39;,&#39;im-fell-english-sc&#39;,&#39;im-fell-french-canon&#39;,&#39;im-fell-french-canon-sc&#39;,&#39;im-fell-great-primer&#39;,&#39;im-fell-great-primer-sc&#39;,&#39;ibarra-real-nova&#39;,&#39;iceberg&#39;,&#39;iceland&#39;,&#39;imprima&#39;,&#39;inconsolata&#39;,&#39;inder&#39;,&#39;indie-flower&#39;,&#39;inika&#39;,&#39;inknut-antiqua&#39;,&#39;inria-sans&#39;,&#39;inria-serif&#39;,&#39;inter&#39;,&#39;irish-grover&#39;,&#39;istok-web&#39;,&#39;italiana&#39;,&#39;italianno&#39;,&#39;itim&#39;,&#39;jacques-francois&#39;,&#39;jacques-francois-shadow&#39;,&#39;jaldi&#39;,&#39;jetbrains-mono&#39;,&#39;jim-nightshade&#39;,&#39;jockey-one&#39;,&#39;jolly-lodger&#39;,&#39;jomhuria&#39;,&#39;jomolhari&#39;,&#39;josefin-sans&#39;,&#39;josefin-slab&#39;,&#39;jost&#39;,&#39;joti-one&#39;,&#39;jua&#39;,&#39;judson&#39;,&#39;julee&#39;,&#39;julius-sans-one&#39;,&#39;junge&#39;,&#39;jura&#39;,&#39;just-another-hand&#39;,&#39;just-me-again-down-here&#39;,&#39;k2d&#39;,&#39;kadwa&#39;,&#39;kalam&#39;,&#39;kameron&#39;,&#39;kanit&#39;,&#39;kantumruy&#39;,&#39;karla&#39;,&#39;karma&#39;,&#39;katibeh&#39;,&#39;kaushan-script&#39;,&#39;kavivanar&#39;,&#39;kavoon&#39;,&#39;kdam-thmor&#39;,&#39;keania-one&#39;,&#39;kelly-slab&#39;,&#39;kenia&#39;,&#39;khand&#39;,&#39;khmer&#39;,&#39;khula&#39;,&#39;kirang-haerang&#39;,&#39;kite-one&#39;,&#39;knewave&#39;,&#39;koho&#39;,&#39;kodchasan&#39;,&#39;kosugi&#39;,&#39;kosugi-maru&#39;,&#39;kotta-one&#39;,&#39;koulen&#39;,&#39;kranky&#39;,&#39;kreon&#39;,&#39;kristi&#39;,&#39;krona-one&#39;,&#39;krub&#39;,&#39;kufam&#39;,&#39;kulim-park&#39;,&#39;kumar-one&#39;,&#39;kumar-one-outline&#39;,&#39;kumbh-sans&#39;,&#39;kurale&#39;,&#39;la-belle-aurore&#39;,&#39;lacquer&#39;,&#39;laila&#39;,&#39;lakki-reddy&#39;,&#39;lalezar&#39;,&#39;lancelot&#39;,&#39;langar&#39;,&#39;lateef&#39;,&#39;lato&#39;,&#39;league-script&#39;,&#39;leckerli-one&#39;,&#39;ledger&#39;,&#39;lekton&#39;,&#39;lemon&#39;,&#39;lemonada&#39;,&#39;lexend-deca&#39;,&#39;lexend-exa&#39;,&#39;lexend-giga&#39;,&#39;lexend-mega&#39;,&#39;lexend-peta&#39;,&#39;lexend-tera&#39;,&#39;lexend-zetta&#39;,&#39;libre-barcode-128&#39;,&#39;libre-barcode-128-text&#39;,&#39;libre-barcode-39&#39;,&#39;libre-barcode-39-extended&#39;,&#39;libre-barcode-39-extended-text&#39;,&#39;libre-barcode-39-text&#39;,&#39;libre-barcode-ean13-text&#39;,&#39;libre-baskerville&#39;,&#39;libre-caslon-display&#39;,&#39;libre-caslon-text&#39;,&#39;libre-franklin&#39;,&#39;life-savers&#39;,&#39;lilita-one&#39;,&#39;lily-script-one&#39;,&#39;limelight&#39;,&#39;linden-hill&#39;,&#39;literata&#39;,&#39;liu-jian-mao-cao&#39;,&#39;livvic&#39;,&#39;lobster&#39;,&#39;lobster-two&#39;,&#39;londrina-outline&#39;,&#39;londrina-shadow&#39;,&#39;londrina-sketch&#39;,&#39;londrina-solid&#39;,&#39;long-cang&#39;,&#39;lora&#39;,&#39;love-ya-like-a-sister&#39;,&#39;loved-by-the-king&#39;,&#39;lovers-quarrel&#39;,&#39;luckiest-guy&#39;,&#39;lusitana&#39;,&#39;lustria&#39;,&#39;m-plus-1p&#39;,&#39;m-plus-rounded-1c&#39;,&#39;ma-shan-zheng&#39;,&#39;macondo&#39;,&#39;macondo-swash-caps&#39;,&#39;mada&#39;,&#39;magra&#39;,&#39;maiden-orange&#39;,&#39;maitree&#39;,&#39;major-mono-display&#39;,&#39;mako&#39;,&#39;mali&#39;,&#39;mallanna&#39;,&#39;mandali&#39;,&#39;manjari&#39;,&#39;manrope&#39;,&#39;mansalva&#39;,&#39;manuale&#39;,&#39;marcellus&#39;,&#39;marcellus-sc&#39;,&#39;marck-script&#39;,&#39;margarine&#39;,&#39;markazi-text&#39;,&#39;marko-one&#39;,&#39;marmelad&#39;,&#39;martel&#39;,&#39;martel-sans&#39;,&#39;marvel&#39;,&#39;mate&#39;,&#39;mate-sc&#39;,&#39;maven-pro&#39;,&#39;mclaren&#39;,&#39;meddon&#39;,&#39;medievalsharp&#39;,&#39;medula-one&#39;,&#39;meera-inimai&#39;,&#39;megrim&#39;,&#39;meie-script&#39;,&#39;merienda&#39;,&#39;merienda-one&#39;,&#39;merriweather&#39;,&#39;merriweather-sans&#39;,&#39;metal&#39;,&#39;metal-mania&#39;,&#39;metamorphous&#39;,&#39;metrophobic&#39;,&#39;michroma&#39;,&#39;milonga&#39;,&#39;miltonian&#39;,&#39;miltonian-tattoo&#39;,&#39;mina&#39;,&#39;miniver&#39;,&#39;miriam-libre&#39;,&#39;mirza&#39;,&#39;miss-fajardose&#39;,&#39;mitr&#39;,&#39;modak&#39;,&#39;modern-antiqua&#39;,&#39;mogra&#39;,&#39;molengo&#39;,&#39;molle&#39;,&#39;monda&#39;,&#39;monofett&#39;,&#39;monoton&#39;,&#39;monsieur-la-doulaise&#39;,&#39;montaga&#39;,&#39;montez&#39;,&#39;montserrat&#39;,&#39;montserrat-alternates&#39;,&#39;montserrat-subrayada&#39;,&#39;moul&#39;,&#39;moulpali&#39;,&#39;mountains-of-christmas&#39;,&#39;mouse-memoirs&#39;,&#39;mr-bedfort&#39;,&#39;mr-dafoe&#39;,&#39;mr-de-haviland&#39;,&#39;mrs-saint-delafield&#39;,&#39;mrs-sheppards&#39;,&#39;mukta&#39;,&#39;mukta-mahee&#39;,&#39;mukta-malar&#39;,&#39;mukta-vaani&#39;,&#39;mulish&#39;,&#39;museomoderno&#39;,&#39;mystery-quest&#39;,&#39;ntr&#39;,&#39;nanum-brush-script&#39;,&#39;nanum-gothic&#39;,&#39;nanum-gothic-coding&#39;,&#39;nanum-myeongjo&#39;,&#39;nanum-pen-script&#39;,&#39;nerko-one&#39;,&#39;neucha&#39;,&#39;neuton&#39;,&#39;new-rocker&#39;,&#39;news-cycle&#39;,&#39;niconne&#39;,&#39;niramit&#39;,&#39;nixie-one&#39;,&#39;nobile&#39;,&#39;nokora&#39;,&#39;norican&#39;,&#39;nosifer&#39;,&#39;notable&#39;,&#39;nothing-you-could-do&#39;,&#39;noticia-text&#39;,&#39;noto-sans&#39;,&#39;noto-sans-hk&#39;,&#39;noto-sans-jp&#39;,&#39;noto-sans-kr&#39;,&#39;noto-sans-sc&#39;,&#39;noto-sans-tc&#39;,&#39;noto-serif&#39;,&#39;noto-serif-jp&#39;,&#39;noto-serif-kr&#39;,&#39;noto-serif-sc&#39;,&#39;noto-serif-tc&#39;,&#39;nova-cut&#39;,&#39;nova-flat&#39;,&#39;nova-mono&#39;,&#39;nova-oval&#39;,&#39;nova-round&#39;,&#39;nova-script&#39;,&#39;nova-slim&#39;,&#39;nova-square&#39;,&#39;numans&#39;,&#39;nunito&#39;,&#39;nunito-sans&#39;,&#39;odibee-sans&#39;,&#39;odor-mean-chey&#39;,&#39;offside&#39;,&#39;old-standard-tt&#39;,&#39;oldenburg&#39;,&#39;oleo-script&#39;,&#39;oleo-script-swash-caps&#39;,&#39;open-sans&#39;,&#39;open-sans-condensed&#39;,&#39;oranienbaum&#39;,&#39;orbitron&#39;,&#39;oregano&#39;,&#39;orienta&#39;,&#39;original-surfer&#39;,&#39;oswald&#39;,&#39;over-the-rainbow&#39;,&#39;overlock&#39;,&#39;overlock-sc&#39;,&#39;overpass&#39;,&#39;overpass-mono&#39;,&#39;ovo&#39;,&#39;oxanium&#39;,&#39;oxygen&#39;,&#39;oxygen-mono&#39;,&#39;pt-mono&#39;,&#39;pt-sans&#39;,&#39;pt-sans-caption&#39;,&#39;pt-sans-narrow&#39;,&#39;pt-serif&#39;,&#39;pt-serif-caption&#39;,&#39;pacifico&#39;,&#39;padauk&#39;,&#39;palanquin&#39;,&#39;palanquin-dark&#39;,&#39;pangolin&#39;,&#39;paprika&#39;,&#39;parisienne&#39;,&#39;passero-one&#39;,&#39;passion-one&#39;,&#39;pathway-gothic-one&#39;,&#39;patrick-hand&#39;,&#39;patrick-hand-sc&#39;,&#39;pattaya&#39;,&#39;patua-one&#39;,&#39;pavanam&#39;,&#39;paytone-one&#39;,&#39;peddana&#39;,&#39;peralta&#39;,&#39;permanent-marker&#39;,&#39;petit-formal-script&#39;,&#39;petrona&#39;,&#39;philosopher&#39;,&#39;piazzolla&#39;,&#39;piedra&#39;,&#39;pinyon-script&#39;,&#39;pirata-one&#39;,&#39;plaster&#39;,&#39;play&#39;,&#39;playball&#39;,&#39;playfair-display&#39;,&#39;playfair-display-sc&#39;,&#39;podkova&#39;,&#39;poiret-one&#39;,&#39;poller-one&#39;,&#39;poly&#39;,&#39;pompiere&#39;,&#39;pontano-sans&#39;,&#39;poor-story&#39;,&#39;poppins&#39;,&#39;port-lligat-sans&#39;,&#39;port-lligat-slab&#39;,&#39;pragati-narrow&#39;,&#39;prata&#39;,&#39;preahvihear&#39;,&#39;press-start-2p&#39;,&#39;pridi&#39;,&#39;princess-sofia&#39;,&#39;prociono&#39;,&#39;prompt&#39;,&#39;prosto-one&#39;,&#39;proza-libre&#39;,&#39;public-sans&#39;,&#39;puritan&#39;,&#39;purple-purse&#39;,&#39;quando&#39;,&#39;quantico&#39;,&#39;quattrocento&#39;,&#39;quattrocento-sans&#39;,&#39;questrial&#39;,&#39;quicksand&#39;,&#39;quintessential&#39;,&#39;qwigley&#39;,&#39;racing-sans-one&#39;,&#39;radley&#39;,&#39;rajdhani&#39;,&#39;rakkas&#39;,&#39;raleway&#39;,&#39;raleway-dots&#39;,&#39;ramabhadra&#39;,&#39;ramaraja&#39;,&#39;rambla&#39;,&#39;rammetto-one&#39;,&#39;ranchers&#39;,&#39;rancho&#39;,&#39;ranga&#39;,&#39;rasa&#39;,&#39;rationale&#39;,&#39;ravi-prakash&#39;,&#39;recursive&#39;,&#39;red-hat-display&#39;,&#39;red-hat-text&#39;,&#39;red-rose&#39;,&#39;redressed&#39;,&#39;reem-kufi&#39;,&#39;reenie-beanie&#39;,&#39;revalia&#39;,&#39;rhodium-libre&#39;,&#39;ribeye&#39;,&#39;ribeye-marrow&#39;,&#39;righteous&#39;,&#39;risque&#39;,&#39;roboto&#39;,&#39;roboto-condensed&#39;,&#39;roboto-mono&#39;,&#39;roboto-slab&#39;,&#39;rochester&#39;,&#39;rock-salt&#39;,&#39;rokkitt&#39;,&#39;romanesco&#39;,&#39;ropa-sans&#39;,&#39;rosario&#39;,&#39;rosarivo&#39;,&#39;rouge-script&#39;,&#39;rowdies&#39;,&#39;rozha-one&#39;,&#39;rubik&#39;,&#39;rubik-mono-one&#39;,&#39;ruda&#39;,&#39;rufina&#39;,&#39;ruge-boogie&#39;,&#39;ruluko&#39;,&#39;rum-raisin&#39;,&#39;ruslan-display&#39;,&#39;russo-one&#39;,&#39;ruthie&#39;,&#39;rye&#39;,&#39;sacramento&#39;,&#39;sahitya&#39;,&#39;sail&#39;,&#39;saira&#39;,&#39;saira-condensed&#39;,&#39;saira-extra-condensed&#39;,&#39;saira-semi-condensed&#39;,&#39;saira-stencil-one&#39;,&#39;salsa&#39;,&#39;sanchez&#39;,&#39;sancreek&#39;,&#39;sansita&#39;,&#39;sansita-swashed&#39;,&#39;sarabun&#39;,&#39;sarala&#39;,&#39;sarina&#39;,&#39;sarpanch&#39;,&#39;satisfy&#39;,&#39;sawarabi-gothic&#39;,&#39;sawarabi-mincho&#39;,&#39;scada&#39;,&#39;scheherazade&#39;,&#39;schoolbell&#39;,&#39;scope-one&#39;,&#39;seaweed-script&#39;,&#39;secular-one&#39;,&#39;sedgwick-ave&#39;,&#39;sedgwick-ave-display&#39;,&#39;sen&#39;,&#39;sevillana&#39;,&#39;seymour-one&#39;,&#39;shadows-into-light&#39;,&#39;shadows-into-light-two&#39;,&#39;shanti&#39;,&#39;share&#39;,&#39;share-tech&#39;,&#39;share-tech-mono&#39;,&#39;shojumaru&#39;,&#39;short-stack&#39;,&#39;shrikhand&#39;,&#39;siemreap&#39;,&#39;sigmar-one&#39;,&#39;signika&#39;,&#39;signika-negative&#39;,&#39;simonetta&#39;,&#39;single-day&#39;,&#39;sintony&#39;,&#39;sirin-stencil&#39;,&#39;six-caps&#39;,&#39;skranji&#39;,&#39;slabo-13px&#39;,&#39;slabo-27px&#39;,&#39;slackey&#39;,&#39;smokum&#39;,&#39;smythe&#39;,&#39;sniglet&#39;,&#39;snippet&#39;,&#39;snowburst-one&#39;,&#39;sofadi-one&#39;,&#39;sofia&#39;,&#39;solway&#39;,&#39;song-myung&#39;,&#39;sonsie-one&#39;,&#39;sora&#39;,&#39;sorts-mill-goudy&#39;,&#39;source-code-pro&#39;,&#39;source-sans-pro&#39;,&#39;source-serif-pro&#39;,&#39;space-grotesk&#39;,&#39;space-mono&#39;,&#39;spartan&#39;,&#39;special-elite&#39;,&#39;spectral&#39;,&#39;spectral-sc&#39;,&#39;spicy-rice&#39;,&#39;spinnaker&#39;,&#39;spirax&#39;,&#39;squada-one&#39;,&#39;sree-krushnadevaraya&#39;,&#39;sriracha&#39;,&#39;srisakdi&#39;,&#39;staatliches&#39;,&#39;stalemate&#39;,&#39;stalinist-one&#39;,&#39;stardos-stencil&#39;,&#39;stint-ultra-condensed&#39;,&#39;stint-ultra-expanded&#39;,&#39;stoke&#39;,&#39;strait&#39;,&#39;stylish&#39;,&#39;sue-ellen-francisco&#39;,&#39;suez-one&#39;,&#39;sulphur-point&#39;,&#39;sumana&#39;,&#39;sunflower&#39;,&#39;sunshiney&#39;,&#39;supermercado-one&#39;,&#39;sura&#39;,&#39;suranna&#39;,&#39;suravaram&#39;,&#39;suwannaphum&#39;,&#39;swanky-and-moo-moo&#39;,&#39;syncopate&#39;,&#39;syne&#39;,&#39;syne-mono&#39;,&#39;syne-tactile&#39;,&#39;tajawal&#39;,&#39;tangerine&#39;,&#39;taprom&#39;,&#39;tauri&#39;,&#39;taviraj&#39;,&#39;teko&#39;,&#39;telex&#39;,&#39;tenali-ramakrishna&#39;,&#39;tenor-sans&#39;,&#39;text-me-one&#39;,&#39;texturina&#39;,&#39;thasadith&#39;,&#39;the-girl-next-door&#39;,&#39;tienne&#39;,&#39;tillana&#39;,&#39;timmana&#39;,&#39;tinos&#39;,&#39;titan-one&#39;,&#39;titillium-web&#39;,&#39;tomorrow&#39;,&#39;trade-winds&#39;,&#39;trirong&#39;,&#39;trispace&#39;,&#39;trocchi&#39;,&#39;trochut&#39;,&#39;trykker&#39;,&#39;tulpen-one&#39;,&#39;turret-road&#39;,&#39;ubuntu&#39;,&#39;ubuntu-condensed&#39;,&#39;ubuntu-mono&#39;,&#39;ultra&#39;,&#39;uncial-antiqua&#39;,&#39;underdog&#39;,&#39;unica-one&#39;,&#39;unifrakturcook&#39;,&#39;unifrakturmaguntia&#39;,&#39;unkempt&#39;,&#39;unlock&#39;,&#39;unna&#39;,&#39;vt323&#39;,&#39;vampiro-one&#39;,&#39;varela&#39;,&#39;varela-round&#39;,&#39;varta&#39;,&#39;vast-shadow&#39;,&#39;vesper-libre&#39;,&#39;viaoda-libre&#39;,&#39;vibes&#39;,&#39;vibur&#39;,&#39;vidaloka&#39;,&#39;viga&#39;,&#39;voces&#39;,&#39;volkhov&#39;,&#39;vollkorn&#39;,&#39;vollkorn-sc&#39;,&#39;voltaire&#39;,&#39;waiting-for-the-sunrise&#39;,&#39;wallpoet&#39;,&#39;walter-turncoat&#39;,&#39;warnes&#39;,&#39;wellfleet&#39;,&#39;wendy-one&#39;,&#39;wire-one&#39;,&#39;work-sans&#39;,&#39;xanh-mono&#39;,&#39;yanone-kaffeesatz&#39;,&#39;yantramanav&#39;,&#39;yatra-one&#39;,&#39;yellowtail&#39;,&#39;yeon-sung&#39;,&#39;yeseva-one&#39;,&#39;yesteryear&#39;,&#39;yrsa&#39;,&#39;zcool-kuaile&#39;,&#39;zcool-qingke-huangyou&#39;,&#39;zcool-xiaowei&#39;,&#39;zeyada&#39;,&#39;zhi-mang-xing&#39;,&#39;zilla-slab&#39;,&#39;zilla-slab-highlight&#39;]\\n    %}\\n    &lt;h1 style=&quot;margin:1rem;&quot; class=&quot;u-font-{{style}}-400&quot;&gt;Heading For {{style}} &lt;/h1&gt;\\n    {%- endfor %}\\n&lt;/body&gt;\\n</code></pre>\\n<p>Start the live reload server:</p>\\n<pre><code>sfc s\\n</code></pre>\\n<p>The <a href=\'https://www.npmjs.com/package/@superflycss/cli\'>SuperflyCSS CLI</a> will now render all the h1 element preview of all Google Fonts.</p>\\n","summary":"Generating Google Font Previews with SuperflyCSS.","tags":["SuperflyCSS","CSS","HTML"],"tagString":"SuperflyCSS, CSS, HTML","author":"Ole Ersoy","date":"4/11/2021","headerImage":"dahlia-3551658.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dahlia-3551658.jpg","title":"Generating Google Font Previews with SuperflyCSS","readingTime":10,"wordCount":1896},{"category":"Tasks","type":"task","md5":"f6815685e33d9b5a57e4a117acbd0dce","filename":"ten-second-guide-to-prototyping-with-superfly-css.md","path":"tasks/superflycss/ten-second-guide-to-prototyping-with-superfly-css.md","id":"tasks--superflycss--ten-second-guide-to-prototyping-with-superfly-css","markdown":"\\nWe have offline codepen alternatives like WebMaker, but these can be limiting.  Therefore we want a local environment thats quick to setup and affords us a CSS Ecosystem to both pull from and publish to.\\n\\n# Approach\\n\\nInstall the [@superflycss/cli](https://www.npmjs.com/package/@superflycss/cli), create a new project, and start the live reload server:\\n```\\nnpm i -g @superflycss/cli\\nsfc new project\\ncd project\\nsfc serve \\n```\\n\\nTake a look at the `src/test/html/index.html` file in vscode:\\n```\\ncode src/test/html/index.html\\n```\\n\\nNotice that it contains a link element importing `bootstrap 4` via CDN. \\n\\nYou can now make changes to this file or the css content in `src/main/css` or `src/test/css` and see these changes live reloaded. Happy prototyping!\\n\\n# Want More?\\nThis setup allows you to add [SuperflyCSS](https://github.com/superflycss/superflycss) packages and build these into your main css file on the fly.\\n\\nIt generates the project and start html template for you. \\n\\nThere\u2019s a lot more like standardized project layout, nunjucks templating support, CSS minification, etc. \\n\\nExplore the CLI documentation and superflycss uber repository to learn more.","html":"<p>We have offline codepen alternatives like WebMaker, but these can be limiting.  Therefore we want a local environment thats quick to setup and affords us a CSS Ecosystem to both pull from and publish to.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Install the <a href=\'https://www.npmjs.com/package/@superflycss/cli\'>@superflycss/cli</a>, create a new project, and start the live reload server:</p>\\n<pre><code>npm i -g @superflycss/cli\\nsfc new project\\ncd project\\nsfc serve \\n</code></pre>\\n<p>Take a look at the <code>src/test/html/index.html</code> file in vscode:</p>\\n<pre><code>code src/test/html/index.html\\n</code></pre>\\n<p>Notice that it contains a link element importing <code>bootstrap 4</code> via CDN. </p>\\n<p>You can now make changes to this file or the css content in <code>src/main/css</code> or <code>src/test/css</code> and see these changes live reloaded. Happy prototyping!</p>\\n<h1 id=\'want-more\'>Want More?</h1>\\n<p>This setup allows you to add <a href=\'https://github.com/superflycss/superflycss\'>SuperflyCSS</a> packages and build these into your main css file on the fly.</p>\\n<p>It generates the project and start html template for you. </p>\\n<p>There\u2019s a lot more like standardized project layout, nunjucks templating support, CSS minification, etc. </p>\\n<p>Explore the CLI documentation and superflycss uber repository to learn more.</p>\\n","summary":"Ten Second Guide to Prototyping With SuperflyCSS.","tags":["CSS","HTML"],"tagString":"CSS, HTML","author":"Ole Ersoy","date":"4/10/2021","headerImage":"water-lily-1592793_1920.png","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-lily-1592793_1920.png","title":"Ten Second Guide to Prototyping With SuperflyCSS","readingTime":1,"wordCount":190},{"category":"Tasks","type":"task","md5":"6948885fa2ba4828bb0c021fb3f2b2e4","filename":"using-nunjucks-loops-with-superflycss.md","path":"tasks/superflycss/using-nunjucks-loops-with-superflycss.md","id":"tasks--superflycss--using-nunjucks-loops-with-superflycss","markdown":"We have these CSS border style variants:\\n\\n```\\n[\'none\',\'dotted\',\'dashed\',\'solid\',\'double\',\\n \'groove\',\'ridge\',\'inset\',\'outset\',\'initial\',\'inherit\']\\n```\\n\\nWe want to see what they look like when applied to a black border with with `2px`.\\n\\n# Approach\\n\\nInstall the [@superflycss/cli](https://www.npmjs.com/package/@superflycss/cli), create a new project, and start the live reload server:\\n```\\nnpm i -g @superflycss/cli\\nsfc new project\\ncd project\\nsfc serve \\n```\\n\\nEdit the prototype `src/test/html/index.html` template and add the nunjucks loop over the border style:\\n\\n```\\n<body style=\\"margin: 4rem;\\">\\n    <h1>Start Prototyping!</h1>\\n\\n    {% for style in\\n    [\'none\',\'dotted\',\'dashed\',\'solid\',\'double\',\'groove\',\'ridge\',\'inset\',\'outset\',\'initial\',\'inherit\'] %}\\n    <div style=\\"border-width: 2px; \\n                    margin-bottom: 1rem; \\n                    width: 40px; \\n                    height: 20px;\\n                    border-style: {{style}}\\"\\n        ;> </div>\\n    {%- endfor %}\\n</body>\\n```\\n\\nStart the live reload server `sfc s`.\\nWe can now see what styles look like.","html":"<p>We have these CSS border style variants:</p>\\n<pre><code>[&#39;none&#39;,&#39;dotted&#39;,&#39;dashed&#39;,&#39;solid&#39;,&#39;double&#39;,\\n &#39;groove&#39;,&#39;ridge&#39;,&#39;inset&#39;,&#39;outset&#39;,&#39;initial&#39;,&#39;inherit&#39;]\\n</code></pre>\\n<p>We want to see what they look like when applied to a black border with with <code>2px</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Install the <a href=\'https://www.npmjs.com/package/@superflycss/cli\'>@superflycss/cli</a>, create a new project, and start the live reload server:</p>\\n<pre><code>npm i -g @superflycss/cli\\nsfc new project\\ncd project\\nsfc serve \\n</code></pre>\\n<p>Edit the prototype <code>src/test/html/index.html</code> template and add the nunjucks loop over the border style:</p>\\n<pre><code>&lt;body style=&quot;margin: 4rem;&quot;&gt;\\n    &lt;h1&gt;Start Prototyping!&lt;/h1&gt;\\n\\n    {% for style in\\n    [&#39;none&#39;,&#39;dotted&#39;,&#39;dashed&#39;,&#39;solid&#39;,&#39;double&#39;,&#39;groove&#39;,&#39;ridge&#39;,&#39;inset&#39;,&#39;outset&#39;,&#39;initial&#39;,&#39;inherit&#39;] %}\\n    &lt;div style=&quot;border-width: 2px; \\n                    margin-bottom: 1rem; \\n                    width: 40px; \\n                    height: 20px;\\n                    border-style: {{style}}&quot;\\n        ;&gt; &lt;/div&gt;\\n    {%- endfor %}\\n&lt;/body&gt;\\n</code></pre>\\n<p>Start the live reload server <code>sfc s</code>.\\nWe can now see what styles look like.</p>\\n","summary":"Using NunJucks Loops with SuperflyCSS.","tags":["SuperflyCSS","CSS","HTML"],"tagString":"SuperflyCSS, CSS, HTML","author":"Ole Ersoy","date":"4/11/2021","headerImage":"earth-1245707_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/earth-1245707_1920.jpg","title":"Using NunJucks Loops with SuperflyCSS","readingTime":1,"wordCount":142},{"category":"Tasks","type":"task","md5":"21adfae4d4a48e0f78222b245a5b96f7","filename":"responsive-css-alterable-svg-logo.md","path":"tasks/svg/responsive-css-alterable-svg-logo.md","id":"tasks--svg--responsive-css-alterable-svg-logo","markdown":"\\nWe want a Responsive SVG Square as our Logo that we can inline in any HTML element. It should:\\n\\n- Change the fill color using the class Square.\\n- Be responsive. Resize itself based on the size of the containing HTML element.\\n\\n# Approach\\n\\nOpen Inkscape and set the document size to `200X200` pixels.\\n\\nCreate a square and set the dimensions to `200X200` pixels and `X`and `Y`to `[0,0]`.\\n\\nMake the color of the square black. Save it as an Optimized SVG file. This is the end result:\\n\\n```\\n<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n\x3c!-- Created with Inkscape (http://www.inkscape.org/) --\x3e\\n<svg width=\\"200\\" height=\\"200\\" version=\\"1.1\\" viewBox=\\"0 0 52.917 52.917\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:cc=\\"http://creativecommons.org/ns#\\" xmlns:dc=\\"http://purl.org/dc/elements/1.1/\\" xmlns:rdf=\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\">\\n <metadata>\\n  <rdf:RDF>\\n   <cc:Work rdf:about=\\"\\">\\n    <dc:format>image/svg+xml</dc:format>\\n    <dc:type rdf:resource=\\"http://purl.org/dc/dcmitype/StillImage\\"/>\\n    <dc:title/>\\n   </cc:Work>\\n  </rdf:RDF>\\n </metadata>\\n <g transform=\\"translate(0 -244.08)\\">\\n  <rect y=\\"244.08\\" width=\\"52.917\\" height=\\"52.917\\" style=\\"fill-opacity:.82838;fill:#000000\\"/>\\n </g>\\n</svg>\\n```\\n\\nMake the following changes to the svg source:\\n\\n- Remove the `<metadata>` container element.\\n- Remove the `width` and `height` attributes on the `svg` element\\n- Put the `class=\\"Square\\"` attribute on the svg element.\\n- Remove any style attributes inside the svg source. This will override any custom colors we add via CSS. In this case we need to remove:\\n\\n```\\nstyle=\\"fill-opacity:.82838;fill:#000000\\"\\n```\\n\\nThen end result should look like this:\\n\\n```\\n<svg class=\\"Square\\" version=\\"1.1\\" viewBox=\\"0 0 52.917 52.917\\" xmlns=\\"http://www.w3.org/2000/svg\\" xmlns:cc=\\"http://creativecommons.org/ns#\\" xmlns:dc=\\"http://purl.org/dc/elements/1.1/\\" xmlns:rdf=\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\">\\n <g transform=\\"translate(0 -244.08)\\">\\n  <rect y=\\"244.08\\" width=\\"52.917\\" height=\\"52.917\\"/>\\n </g>\\n</svg>\\n```\\n\\nNow we can set the fill color to orange using the CSS class:\\n```\\n.Square {\\n   fill: orange;\\n}\\n```\\n\\n[Try it out on codepen.](https://codepen.io/oleersoy/pen/wberqP)\\n\\nIf you change size of the containing div element to `400X400` pixels the square will be twice the size it is now.\\n\\nIf you cut out a piece of the the square so that it allows the background color of the containing html element to \u201cShine Through\u201d, thus the color of the cutout can be controlled by the background color of the html element. [Here\u2019s a demo of the SuperflyCSS Logo.](https://codepen.io/oleersoy/pen/XwgazE)","html":"<p>We want a Responsive SVG Square as our Logo that we can inline in any HTML element. It should:</p>\\n<ul>\\n<li>Change the fill color using the class Square.</li>\\n<li>Be responsive. Resize itself based on the size of the containing HTML element.</li>\\n</ul>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Open Inkscape and set the document size to <code>200X200</code> pixels.</p>\\n<p>Create a square and set the dimensions to <code>200X200</code> pixels and <code>X</code>and <code>Y</code>to <code>[0,0]</code>.</p>\\n<p>Make the color of the square black. Save it as an Optimized SVG file. This is the end result:</p>\\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\\n&lt;!-- Created with Inkscape (http://www.inkscape.org/) --&gt;\\n&lt;svg width=&quot;200&quot; height=&quot;200&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 52.917 52.917&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:cc=&quot;http://creativecommons.org/ns#&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;\\n &lt;metadata&gt;\\n  &lt;rdf:RDF&gt;\\n   &lt;cc:Work rdf:about=&quot;&quot;&gt;\\n    &lt;dc:format&gt;image/svg+xml&lt;/dc:format&gt;\\n    &lt;dc:type rdf:resource=&quot;http://purl.org/dc/dcmitype/StillImage&quot;/&gt;\\n    &lt;dc:title/&gt;\\n   &lt;/cc:Work&gt;\\n  &lt;/rdf:RDF&gt;\\n &lt;/metadata&gt;\\n &lt;g transform=&quot;translate(0 -244.08)&quot;&gt;\\n  &lt;rect y=&quot;244.08&quot; width=&quot;52.917&quot; height=&quot;52.917&quot; style=&quot;fill-opacity:.82838;fill:#000000&quot;/&gt;\\n &lt;/g&gt;\\n&lt;/svg&gt;\\n</code></pre>\\n<p>Make the following changes to the svg source:</p>\\n<ul>\\n<li>Remove the <code>&lt;metadata&gt;</code> container element.</li>\\n<li>Remove the <code>width</code> and <code>height</code> attributes on the <code>svg</code> element</li>\\n<li>Put the <code>class=&quot;Square&quot;</code> attribute on the svg element.</li>\\n<li>Remove any style attributes inside the svg source. This will override any custom colors we add via CSS. In this case we need to remove:</li>\\n</ul>\\n<pre><code>style=&quot;fill-opacity:.82838;fill:#000000&quot;\\n</code></pre>\\n<p>Then end result should look like this:</p>\\n<pre><code>&lt;svg class=&quot;Square&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 52.917 52.917&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:cc=&quot;http://creativecommons.org/ns#&quot; xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot; xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;&gt;\\n &lt;g transform=&quot;translate(0 -244.08)&quot;&gt;\\n  &lt;rect y=&quot;244.08&quot; width=&quot;52.917&quot; height=&quot;52.917&quot;/&gt;\\n &lt;/g&gt;\\n&lt;/svg&gt;\\n</code></pre>\\n<p>Now we can set the fill color to orange using the CSS class:</p>\\n<pre><code>.Square {\\n   fill: orange;\\n}\\n</code></pre>\\n<p><a href=\'https://codepen.io/oleersoy/pen/wberqP\'>Try it out on codepen.</a></p>\\n<p>If you change size of the containing div element to <code>400X400</code> pixels the square will be twice the size it is now.</p>\\n<p>If you cut out a piece of the the square so that it allows the background color of the containing html element to \u201cShine Through\u201d, thus the color of the cutout can be controlled by the background color of the html element. <a href=\'https://codepen.io/oleersoy/pen/XwgazE\'>Here\u2019s a demo of the SuperflyCSS Logo.</a></p>\\n","summary":"Responsive CSS Alterable SVG Logo.","tags":["CSS","SVG","Design","Inkscape","Design Thinking"],"tagString":"CSS, SVG, Design, Inkscape, Design Thinking","author":"Ole Ersoy","date":"11/16/2021","headerImage":"chameleon-abstract-378557_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chameleon-abstract-378557_1920.jpg","title":"Responsive CSS Alterable SVG Logo","readingTime":3,"wordCount":445},{"category":"Tasks","type":"task","md5":"8a98ef63ac30809617ef9546392af636","filename":"context-based-property-documentation.md","path":"tasks/typedoc/context-based-property-documentation.md","id":"tasks--typedoc--context-based-property-documentation","markdown":"\\nWithin the [@fireflysemantics/validator](https://github.com/fireflysemantics/validator) interface [ValidationOptions](https://github.com/fireflysemantics/validator/blob/master/projects/fs-validator/src/lib/ValidationOptions.ts) we have the property:\\n\\n```\\nskipErrorGeneration?:boolean \\n```\\n\\nAnd we wish to provide a comment reflecting the context for the use of this property, such that `API` developers and users can understand the purpose of the property.\\n\\n# Approach\\n\\nWe provide a description for the properties use within a single context:\\n\\n```\\n//=====================================\\n// For @IsDefined we want to allow\\n// users to skip error generation in the \\n// event that the validation should not \\n// proceed when the property is not\\n// defined.\\n//=====================================\\nskipErrorGeneration?:boolean \\n```","html":"<p>Within the <a href=\'https://github.com/fireflysemantics/validator\'>@fireflysemantics/validator</a> interface <a href=\'https://github.com/fireflysemantics/validator/blob/master/projects/fs-validator/src/lib/ValidationOptions.ts\'>ValidationOptions</a> we have the property:</p>\\n<pre><code>skipErrorGeneration?:boolean \\n</code></pre>\\n<p>And we wish to provide a comment reflecting the context for the use of this property, such that <code>API</code> developers and users can understand the purpose of the property.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We provide a description for the properties use within a single context:</p>\\n<pre><code>//=====================================\\n// For @IsDefined we want to allow\\n// users to skip error generation in the \\n// event that the validation should not \\n// proceed when the property is not\\n// defined.\\n//=====================================\\nskipErrorGeneration?:boolean \\n</code></pre>\\n","summary":"Context Based Property Documentation.","tags":["typedoc","TypeScript","JavaScript"],"tagString":"typedoc, TypeScript, JavaScript","author":"Ole Ersoy","date":"11/06/2021","headerImage":"safari-21772_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/safari-21772_1920.jpg","title":"Context Based Property Documentation","readingTime":1,"wordCount":101},{"category":"Tasks","type":"task","md5":"307fd30efb772d59a94bdaf3ff4818b6","filename":"generating-typedoc-for-angular-package-format-projects.md","path":"tasks/typedoc/generating-typedoc-for-angular-package-format-projects.md","id":"tasks--typedoc--generating-typedoc-for-angular-package-format-projects","markdown":"\\nWe\'ve created an [Angular Package Format project for our library](https://developer.fireflysemantics.com/tasks/tasks--angular--creating-an-angular-npm-installable-service-library) for our project [fs-validatorts](https://github.com/fireflysemantics/validatorts) and now we want to generate [Typedoc](https://typedoc.org/) into the folder `doc` project root folder.\\n\\n# Approach\\n\\nFirst add `skipLibCheck` to the `compilerOptions` in `tsconfig.json`:\\n\\n```\\n\\"skipLibCheck\\": true,\\n```\\n\\nThen add a `doc` script to `package.json`:\\n\\n```\\n\\"doc\\": \\"rm -fr doc && typedoc --entryPointStrategy expand ./projects/fs-validatorts/src/lib --out doc --exclude **/*.spec.ts\\"\\n```\\n\\nRunning `npm run doc` now produces the Typedoc.  To see the generated documents run:\\n```\\nhttp-server -o doc\\n```\\n\\nAdd an `sdoc` script to run the typedoc generation and serve / open the result in the browser:\\n\\n```\\n\\"sdoc\\": \\"npm run doc && http-server -o doc\\"\\n```","html":"<p>We&#39;ve created an <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--creating-an-angular-npm-installable-service-library\'>Angular Package Format project for our library</a> for our project <a href=\'https://github.com/fireflysemantics/validatorts\'>fs-validatorts</a> and now we want to generate <a href=\'https://typedoc.org/\'>Typedoc</a> into the folder <code>doc</code> project root folder.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First add <code>skipLibCheck</code> to the <code>compilerOptions</code> in <code>tsconfig.json</code>:</p>\\n<pre><code>&quot;skipLibCheck&quot;: true,\\n</code></pre>\\n<p>Then add a <code>doc</code> script to <code>package.json</code>:</p>\\n<pre><code>&quot;doc&quot;: &quot;rm -fr doc &amp;&amp; typedoc --entryPointStrategy expand ./projects/fs-validatorts/src/lib --out doc --exclude **/*.spec.ts&quot;\\n</code></pre>\\n<p>Running <code>npm run doc</code> now produces the Typedoc.  To see the generated documents run:</p>\\n<pre><code>http-server -o doc\\n</code></pre>\\n<p>Add an <code>sdoc</code> script to run the typedoc generation and serve / open the result in the browser:</p>\\n<pre><code>&quot;sdoc&quot;: &quot;npm run doc &amp;&amp; http-server -o doc&quot;\\n</code></pre>\\n","summary":"Generating Typedoc for Angular Package Format Projects.","tags":["typedoc","TypeScript","JavaScript"],"tagString":"typedoc, TypeScript, JavaScript","author":"Ole Ersoy","date":"10/14/2021","headerImage":"flower-5123954_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-5123954_1920.jpg","title":"Generating Typedoc for Angular Package Format Projects","readingTime":1,"wordCount":132},{"category":"Tasks","type":"task","md5":"464179730b32f4c9123e27b33f43d3cb","filename":"better-inheritance-with-the-typescript-override-keyword.md","path":"tasks/typescript/better-inheritance-with-the-typescript-override-keyword.md","id":"tasks--typescript--better-inheritance-with-the-typescript-override-keyword","markdown":"\\nWe have an `abstract` class `Person` that contains a method `display` and we wish to have our `Employee` class extend `Person` while ensuring that `Employee` correctly overrides methods on the `Person` class.\\n\\n# Approach\\n\\nUsing the `override` keyword on the method `display` will ensure that `Person` has this method.\\n\\nThe benefit of this is that if in the future `Person` is refactored changing `display` to for example `identify` then errors will be generated in subclasses that use the override keyword.\\n\\n```\\nabstract class Person {\\n    firstName: string;\\n    lastName: string;\\n    display(): string {\\n        return `${this.firstName} ${this.lastName}`;\\n    }\\n}\\nclass Employee extends Person {\\n    title: string;\\n    override display() {\\n        return `${this.title} ${this.firstName} ${this.lastName}`;\\n   }\\n}\\n```\\n\\nTo make `override` required when subclassing add this to `tsconfig.json`.\\n\\n```\\n{\\n  \\"compilerOptions\\": {\\n    // ...\\n    \\"noImplicitOverride\\": true\\n  }\\n}\\n```\\n\\n# Demo\\n\\nNote that Stackblitz does not yet support the `override` keyword, but hopefully this will be fixed soon.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Better Inheritance with the Typescript Override Keyword\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-wtdkj7?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We have an <code>abstract</code> class <code>Person</code> that contains a method <code>display</code> and we wish to have our <code>Employee</code> class extend <code>Person</code> while ensuring that <code>Employee</code> correctly overrides methods on the <code>Person</code> class.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Using the <code>override</code> keyword on the method <code>display</code> will ensure that <code>Person</code> has this method.</p>\\n<p>The benefit of this is that if in the future <code>Person</code> is refactored changing <code>display</code> to for example <code>identify</code> then errors will be generated in subclasses that use the override keyword.</p>\\n<pre><code>abstract class Person {\\n    firstName: string;\\n    lastName: string;\\n    display(): string {\\n        return `${this.firstName} ${this.lastName}`;\\n    }\\n}\\nclass Employee extends Person {\\n    title: string;\\n    override display() {\\n        return `${this.title} ${this.firstName} ${this.lastName}`;\\n   }\\n}\\n</code></pre>\\n<p>To make <code>override</code> required when subclassing add this to <code>tsconfig.json</code>.</p>\\n<pre><code>{\\n  &quot;compilerOptions&quot;: {\\n    // ...\\n    &quot;noImplicitOverride&quot;: true\\n  }\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>Note that Stackblitz does not yet support the <code>override</code> keyword, but hopefully this will be fixed soon.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Better Inheritance with the Typescript Override Keyword\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-wtdkj7?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Better Inheritance with the Typescript Override Keyword.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"5/22/2022","headerImage":"flower-333643_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-333643_1920.jpg","title":"Better Inheritance with the Typescript Override Keyword","readingTime":1,"wordCount":179},{"category":"Tasks","type":"task","md5":"fadd35eff448a2be172659a6cc53e0b2","filename":"building-immutable-orders-with-typescript.md","path":"tasks/typescript/building-immutable-orders-with-typescript.md","id":"tasks--typescript--building-immutable-orders-with-typescript","markdown":"\\nWe wish to create order instances for SKU `sku123` and with price `$10`. The only thing that will vary for each order is the `quantity`. \\n\\nThe Order class has these properties.\\n```\\nexport class Order {\\n    public readonly sku;\\n    public readonly quantity;\\n    public readonly price;\\n    public readonly total;\\n  }\\n}\\n```\\n\\nThe orders will be built like this:\\n```\\nlet builder = new OrderBuilder();\\nconst order1 = builder.setQuantity(10).setSKU(\'sku123\').setPrice(10).build();\\nconst order2 = builder.setQuantity(20).setSKU(\'sku321\').setPrice(100).build();\\nconsole.log(order1);\\nconsole.log(order2);\\n```\\n\\n# Approach\\n\\nThe full implementation for our immutable Typescript class and the corresponding builder look like this:\\n\\n```\\nexport class Order {\\n  public readonly sku;\\n  public readonly quantity;\\n  public readonly price;\\n  public readonly total;\\n  constructor(builder:OrderBuilder) {\\n    this.sku = builder.sku;\\n    this.quantity = builder.quantity;\\n    this.price = builder.price;\\n    this.total = builder.total;\\n  }\\n}\\n\\nexport class OrderBuilder {\\n  public readonly price:number;\\n  public readonly sku:string;\\n  public quantity:number;\\n  public total:number;\\n  constructor(sku:string, price:number){\\n    this.price = price;\\n    this.sku = sku;\\n  }\\n  setQuantity(quantity: number) {\\n    this.quantity = quantity;\\n    return this;\\n  }\\n  private computeTotal() {\\n    this.total = this.quantity*this.price;\\n  }\\n  build() {\\n    this.computeTotal();\\n    return new Order(this);\\n  }\\n}\\n```\\n\\nWith that implementation we can build two orders with quantities `10` and `20` like this:\\n\\n```\\nlet builder = new OrderBuilder(\'sku123\', 10);\\nconst order1 = builder.setQuantity(10).build();\\nconst order2 = builder.setQuantity(20).build();\\nconsole.log(order1);\\nconsole.log(order2);\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Building Immutable Orders with Typescript\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-builder-fs?file=index.ts\\">\\n</fs-link-preview>\\n\\n# Flexibility\\n\\nSince our builders `sku` and `price` properties are `readonly` we are passing these in via the builders constructor. This means we can not change these properties post builder construction, thus the design is a bit rigid.\\n\\nIf we want to change these properties on the fly we can remove the readonly markers and implement builder setters for sku and price . We can now change these properties on the fly as well, giving us more flexibility. Here is a demo:\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Building Immutable Orders with Typescript -- Flexible\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-builder-flexible-fs?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We wish to create order instances for SKU <code>sku123</code> and with price <code>$10</code>. The only thing that will vary for each order is the <code>quantity</code>. </p>\\n<p>The Order class has these properties.</p>\\n<pre><code>export class Order {\\n    public readonly sku;\\n    public readonly quantity;\\n    public readonly price;\\n    public readonly total;\\n  }\\n}\\n</code></pre>\\n<p>The orders will be built like this:</p>\\n<pre><code>let builder = new OrderBuilder();\\nconst order1 = builder.setQuantity(10).setSKU(&#39;sku123&#39;).setPrice(10).build();\\nconst order2 = builder.setQuantity(20).setSKU(&#39;sku321&#39;).setPrice(100).build();\\nconsole.log(order1);\\nconsole.log(order2);\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The full implementation for our immutable Typescript class and the corresponding builder look like this:</p>\\n<pre><code>export class Order {\\n  public readonly sku;\\n  public readonly quantity;\\n  public readonly price;\\n  public readonly total;\\n  constructor(builder:OrderBuilder) {\\n    this.sku = builder.sku;\\n    this.quantity = builder.quantity;\\n    this.price = builder.price;\\n    this.total = builder.total;\\n  }\\n}\\n\\nexport class OrderBuilder {\\n  public readonly price:number;\\n  public readonly sku:string;\\n  public quantity:number;\\n  public total:number;\\n  constructor(sku:string, price:number){\\n    this.price = price;\\n    this.sku = sku;\\n  }\\n  setQuantity(quantity: number) {\\n    this.quantity = quantity;\\n    return this;\\n  }\\n  private computeTotal() {\\n    this.total = this.quantity*this.price;\\n  }\\n  build() {\\n    this.computeTotal();\\n    return new Order(this);\\n  }\\n}\\n</code></pre>\\n<p>With that implementation we can build two orders with quantities <code>10</code> and <code>20</code> like this:</p>\\n<pre><code>let builder = new OrderBuilder(&#39;sku123&#39;, 10);\\nconst order1 = builder.setQuantity(10).build();\\nconst order2 = builder.setQuantity(20).build();\\nconsole.log(order1);\\nconsole.log(order2);\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Building Immutable Orders with Typescript\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-builder-fs?file=index.ts\'>\\n</fs-link-preview></p>\\n<h1 id=\'flexibility\'>Flexibility</h1>\\n<p>Since our builders <code>sku</code> and <code>price</code> properties are <code>readonly</code> we are passing these in via the builders constructor. This means we can not change these properties post builder construction, thus the design is a bit rigid.</p>\\n<p>If we want to change these properties on the fly we can remove the readonly markers and implement builder setters for sku and price . We can now change these properties on the fly as well, giving us more flexibility. Here is a demo:</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Building Immutable Orders with Typescript -- Flexible\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-builder-flexible-fs?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Building Immutable Orders with Typescript.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"3/14/2021","headerImage":"spacex-YSvUYqf9Mjk-unsplash.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/spacex-YSvUYqf9Mjk-unsplash.jpg","title":"Building Immutable Orders with Typescript","readingTime":2,"wordCount":381},{"category":"Tasks","type":"task","md5":"92031caeb752c7e0b53c0bb6b21c7765","filename":"checking-that-a-predicate-is-true-for-all-typescript-array-elements.md","path":"tasks/typescript/checking-that-a-predicate-is-true-for-all-typescript-array-elements.md","id":"tasks--typescript--checking-that-a-predicate-is-true-for-all-typescript-array-elements","markdown":"\\nWe have an array of elements `[1,2,\'a\']`, and we want to see whether all of the elements in the array are numbers.\\n\\n# Approach\\n\\nThis approach uses [@fireflysemantics/validatorts](https://github.com/fireflysemantics/validatorts) to check whether the array element is a number:\\n```\\nlet arr: any[] = [1, 2, \'a\'];\\nfunction allNumbersPredicate(v: any, index: number, array: any[]):boolean {\\n   console.log(`is number ${isNumber(v).value}`);\\n   return isNumber(v).value;\\n}\\nconsole.log(`All numbers:? ${arr.every(allNumbersPredicate)}`);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Checking that a Predicate is True for All Typescript Array Elements\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-rblicc\\">\\n</fs-link-preview>","html":"<p>We have an array of elements <code>[1,2,&#39;a&#39;]</code>, and we want to see whether all of the elements in the array are numbers.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>This approach uses <a href=\'https://github.com/fireflysemantics/validatorts\'>@fireflysemantics/validatorts</a> to check whether the array element is a number:</p>\\n<pre><code>let arr: any[] = [1, 2, &#39;a&#39;];\\nfunction allNumbersPredicate(v: any, index: number, array: any[]):boolean {\\n   console.log(`is number ${isNumber(v).value}`);\\n   return isNumber(v).value;\\n}\\nconsole.log(`All numbers:? ${arr.every(allNumbersPredicate)}`);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Checking that a Predicate is True for All Typescript Array Elements\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-rblicc\'>\\n</fs-link-preview></p>\\n","summary":"Checking that a Predicate is True for All Typescript Array Elements.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"11/01/2021","headerImage":"whale-1417883_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/whale-1417883_1920.jpg","title":"Checking that a Predicate is True for All Typescript Array Elements","readingTime":1,"wordCount":118},{"category":"Tasks","type":"task","md5":"8ff8d7a713627a79819068e0651b979d","filename":"combining-default-and-custom-ptions-in-typescript.md","path":"tasks/typescript/combining-default-and-custom-ptions-in-typescript.md","id":"tasks--typescript--combining-default-and-custom-ptions-in-typescript","markdown":"\\nWe have a `RANGE_DEFAULT_OPTIONS` object:\\n```\\nconst RANGE_DEFAULT_OPTIONS = { min: 0, max: 100 }\\n```\\nAnd we want to use the defaults unless the API overrides them:\\n```\\nexport function range(value:number, options:any) {\\n   ...\\n}\\n```\\n\\n# Approach\\n\\n```\\noptions = { ...RANGE_DEFAULT_OPTIONS, ...options }\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Combining Default and Custom Options in Typescript\\" \\n  description=\\"Combining Default and Custom Options in Typescript\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-xtmvbi\\">\\n</fs-link-preview>","html":"<p>We have a <code>RANGE_DEFAULT_OPTIONS</code> object:</p>\\n<pre><code>const RANGE_DEFAULT_OPTIONS = { min: 0, max: 100 }\\n</code></pre>\\n<p>And we want to use the defaults unless the API overrides them:</p>\\n<pre><code>export function range(value:number, options:any) {\\n   ...\\n}\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>options = { ...RANGE_DEFAULT_OPTIONS, ...options }\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Combining Default and Custom Options in Typescript\' \\n  description=\'Combining Default and Custom Options in Typescript\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-xtmvbi\'>\\n</fs-link-preview></p>\\n","summary":"Combining Default and Custom Options in Typescript.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"11/01/2021","headerImage":"zebra-1845897_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/zebra-1845897_1920.jpg","title":"Combining Default and Custom Options in Typescript","readingTime":1,"wordCount":76},{"category":"Tasks","type":"task","md5":"df6c3c0ca3f4e12c43420f66996ced21","filename":"creating-an-untyped-npm-module.md","path":"tasks/typescript/creating-an-untyped-npm-module.md","id":"tasks--typescript--creating-an-untyped-npm-module","markdown":"\\nWe wish to create a simple javascript function that will be used to test the integration and use of NPM modules without Typescript type definitions.\\n\\n\\n# Approach\\n\\n## package.json\\n\\nCreate the project folder and initialize the project:\\n```\\nmkdir untyped-npm-module\\ncd untyped-npm-module\\nnpm init -y\\n```\\n\\nThis creates `package.json`. \\n\\nI set the license property to Public Domain.\\n\\n## index.js\\n\\n```\\ntouch index.js . Contents:\\nexports.hello = function ( name_) {\\n    return `Hello ${name}!!`;\\n};\\n```\\nThen we publish:\\n```\\nnpm publish -access public\\n```\\n\\nAnd now it\u2019s on NPM.  You can install it by running:\\n\\n```\\nnpm i untyped-npm-module\\n```","html":"<p>We wish to create a simple javascript function that will be used to test the integration and use of NPM modules without Typescript type definitions.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'packagejson\'>package.json</h2>\\n<p>Create the project folder and initialize the project:</p>\\n<pre><code>mkdir untyped-npm-module\\ncd untyped-npm-module\\nnpm init -y\\n</code></pre>\\n<p>This creates <code>package.json</code>. </p>\\n<p>I set the license property to Public Domain.</p>\\n<h2 id=\'indexjs\'>index.js</h2>\\n<pre><code>touch index.js . Contents:\\nexports.hello = function ( name_) {\\n    return `Hello ${name}!!`;\\n};\\n</code></pre>\\n<p>Then we publish:</p>\\n<pre><code>npm publish -access public\\n</code></pre>\\n<p>And now it\u2019s on NPM.  You can install it by running:</p>\\n<pre><code>npm i untyped-npm-module\\n</code></pre>\\n","summary":"Creating an Untyped NPM Module.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/18/2021","headerImage":"jellyfish-1327113_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1327113_1920.jpg","title":"Creating an Untyped NPM Module","readingTime":1,"wordCount":96},{"category":"Tasks","type":"task","md5":"281cd94e79389bc27dcb85fcc5d02eb6","filename":"deciding-when-to-use-constructor-initialization-for-object-instances-with-typescript.md","path":"tasks/typescript/deciding-when-to-use-constructor-initialization-for-object-instances-with-typescript.md","id":"tasks--typescript--deciding-when-to-use-constructor-initialization-for-object-instances-with-typescript","markdown":"\\nWe have the following object:\\n```\\nconst c = {\\n   members: [\'1\', \'2\']\\n}\\n```\\nAnd we want to make it an instance of the class:\\n```\\nclass Members {\\n    members: string[];\\n    log() {\\n    this.members.forEach(m=>{\\n        console.log(m);\\n    })\\n  }\\n}\\n```\\nCan we just do:\\n```\\nconst c2:Members = c;\\n```\\n?\\n# Answer\\n\\n\\nWe can\u2019t do this because the class Members contains the method `log()`.\\n\\nIf we remove that function from the class then this work:\\n```\\nconst c2:Members = c;\\n```\\n\\n[Use this technique when the Class contains functions](https://developer.fireflysemantics.com/tasks/tasks--typescript--typescript-class-constructor-self-initialization)","html":"<p>We have the following object:</p>\\n<pre><code>const c = {\\n   members: [&#39;1&#39;, &#39;2&#39;]\\n}\\n</code></pre>\\n<p>And we want to make it an instance of the class:</p>\\n<pre><code>class Members {\\n    members: string[];\\n    log() {\\n    this.members.forEach(m=&gt;{\\n        console.log(m);\\n    })\\n  }\\n}\\n</code></pre>\\n<p>Can we just do:</p>\\n<pre><code>const c2:Members = c;\\n</code></pre>\\n<p>?</p>\\n<h1 id=\'answer\'>Answer</h1>\\n<p>We can\u2019t do this because the class Members contains the method <code>log()</code>.</p>\\n<p>If we remove that function from the class then this work:</p>\\n<pre><code>const c2:Members = c;\\n</code></pre>\\n<p><a href=\'https://developer.fireflysemantics.com/tasks/tasks--typescript--typescript-class-constructor-self-initialization\'>Use this technique when the Class contains functions</a></p>\\n","summary":"Typescript Class Constructor Self Initialization.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"10/09/2021","headerImage":"investment-5241253_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/investment-5241253_1920.jpg","title":"Typescript Class Constructor Self Initialization","readingTime":1,"wordCount":90},{"category":"Tasks","type":"task","md5":"7a4387dd3176a5a5780094ebae6f9cbc","filename":"declaring-a-typescript-function-type.md","path":"tasks/typescript/declaring-a-typescript-function-type.md","id":"tasks--typescript--declaring-a-typescript-function-type","markdown":"\\nWe want to declare the function return `type` of our Typescript higher order function (Function that returns a function).\\n\\n# Approach\\n\\nAs an example we will declare the Angular Schematics `Rule` type:\\n```\\ndeclare type Rule = (tree: Tree, context: SchematicContext) =>\\nTree | Observable<Tree> | Rule | void;\\n```\\n\\nNow we can declare our function return type:\\n```\\nfunction returnRule():Rule }{...}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Getting the Values from a Typescript Enum Demo\\" \\n  description=\\"Declaring a Typescript Function Type\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/angular-schematics-rule-type-fs?file=index.ts\\">\\n</fs-link-preview>\\n\\n# Bonus\\n\\nBonus\\n```\\n/**\\n * A type for a function that accepts multiple number arguments\\n * and returns a number.\\n */\\nexport declare type NArgFunction = (parameters:number[])=>number\\n```","html":"<p>We want to declare the function return <code>type</code> of our Typescript higher order function (Function that returns a function).</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>As an example we will declare the Angular Schematics <code>Rule</code> type:</p>\\n<pre><code>declare type Rule = (tree: Tree, context: SchematicContext) =&gt;\\nTree | Observable&lt;Tree&gt; | Rule | void;\\n</code></pre>\\n<p>Now we can declare our function return type:</p>\\n<pre><code>function returnRule():Rule }{...}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Getting the Values from a Typescript Enum Demo\' \\n  description=\'Declaring a Typescript Function Type\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/angular-schematics-rule-type-fs?file=index.ts\'>\\n</fs-link-preview></p>\\n<h1 id=\'bonus\'>Bonus</h1>\\n<p>Bonus</p>\\n<pre><code>/**\\n * A type for a function that accepts multiple number arguments\\n * and returns a number.\\n */\\nexport declare type NArgFunction = (parameters:number[])=&gt;number\\n</code></pre>\\n","summary":"Declaring a Typescript Function Type.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/19/2021","headerImage":"emerald-4641424_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/emerald-4641424_1920.jpg","title":"Declaring a Typescript Function Type","readingTime":1,"wordCount":124},{"category":"Tasks","type":"task","md5":"38db539f5ef93ca46c8110393e343db7","filename":"defining-types-with-typescript-omit.md","path":"tasks/typescript/defining-types-with-typescript-omit.md","id":"tasks--typescript--defining-types-with-typescript-omit","markdown":"\\nWe have a `Todo` interface.\\n\\n```\\ninterface Todo { \\n    title: string;\\n    description: string;\\n    completed: boolean;\\n    createdAt: number;\\n}\\n```\\n\\nAnd we also want to create a `TodoPreview` interface containing only the following properties.\\n\\n```\\ninterface TodoPreview { \\n    title: string;\\n    completed: boolean;\\n}\\n```\\n\\nIn other words it omits the `description` and `createdAt` properties from the `Todo` interface.\\n\\n# Approach\\n\\nUse `Omit` to exclude the `description` and `createdAt` properties from Todo.\\n\\n```\\ntype TodoPreview = Omit<Todo, \\"description\\" | \\"createdAt\\">;\\n```\\n\\nNow we can use the type.\\n\\n```\\nconst todo: TodoPreview = {\\n    title: \\"Complete me!\\",\\n    completed: false\\n};\\n```\\n\\nNote that if we try to declare the other properties in `Todo` VSCode will lint the error.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Defining Types with Typescript Omit\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-guuxxp?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We have a <code>Todo</code> interface.</p>\\n<pre><code>interface Todo { \\n    title: string;\\n    description: string;\\n    completed: boolean;\\n    createdAt: number;\\n}\\n</code></pre>\\n<p>And we also want to create a <code>TodoPreview</code> interface containing only the following properties.</p>\\n<pre><code>interface TodoPreview { \\n    title: string;\\n    completed: boolean;\\n}\\n</code></pre>\\n<p>In other words it omits the <code>description</code> and <code>createdAt</code> properties from the <code>Todo</code> interface.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Use <code>Omit</code> to exclude the <code>description</code> and <code>createdAt</code> properties from Todo.</p>\\n<pre><code>type TodoPreview = Omit&lt;Todo, &quot;description&quot; | &quot;createdAt&quot;&gt;;\\n</code></pre>\\n<p>Now we can use the type.</p>\\n<pre><code>const todo: TodoPreview = {\\n    title: &quot;Complete me!&quot;,\\n    completed: false\\n};\\n</code></pre>\\n<p>Note that if we try to declare the other properties in <code>Todo</code> VSCode will lint the error.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Defining Types with Typescript Omit\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-guuxxp?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Defining Types with Typescript Omit.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"6/29/2022","headerImage":"hd-wallpaper-6538890_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/hd-wallpaper-6538890_1920.jpg","title":"Defining Types with Typescript Omit","readingTime":1,"wordCount":136},{"category":"Tasks","type":"task","md5":"556ebbc0bffde7575807a1823d9fd190","filename":"getting-the-values-from-a-typescript-enum.md","path":"tasks/typescript/getting-the-values-from-a-typescript-enum.md","id":"tasks--typescript--getting-the-values-from-a-typescript-enum","markdown":"We have an `enum`:\\n\\n```\\nenum Values {\\n    v1 = \'v1\',\\n    v2 = \'v2\'\\n}\\n```\\n\\nWe want to get the values in `v1` and `v2` in the form `string[]`.\\n\\n# Approach\\n```\\nenum Values {\\n    v1 = \'v1\',\\n    v2 = \'v2\'\\n}\\nlet values:string[] = Object.keys(Values).map(key => Values[key]).filter(k => !(parseInt(k) >= 0)\\nconsole.log(values);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Getting the Values from a Typescript Enum Demo\\" \\n  description=\\"Demonstrates How to Get Values from a Typescript Enum\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-enum-values\\">\\n</fs-link-preview>\\n\\n# Typescript Design\\n\\nWould be nice if Typescript gave us a utility for this. Something like:\\n```\\nconst values:Array<T> = Enum.values<T>(enum);\\n```\\n\\nThis is the [Typescript Feature Request](https://github.com/Microsoft/TypeScript/issues/17198).","html":"<p>We have an <code>enum</code>:</p>\\n<pre><code>enum Values {\\n    v1 = &#39;v1&#39;,\\n    v2 = &#39;v2&#39;\\n}\\n</code></pre>\\n<p>We want to get the values in <code>v1</code> and <code>v2</code> in the form <code>string[]</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>enum Values {\\n    v1 = &#39;v1&#39;,\\n    v2 = &#39;v2&#39;\\n}\\nlet values:string[] = Object.keys(Values).map(key =&gt; Values[key]).filter(k =&gt; !(parseInt(k) &gt;= 0)\\nconsole.log(values);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Getting the Values from a Typescript Enum Demo\' \\n  description=\'Demonstrates How to Get Values from a Typescript Enum\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-enum-values\'>\\n</fs-link-preview></p>\\n<h1 id=\'typescript-design\'>Typescript Design</h1>\\n<p>Would be nice if Typescript gave us a utility for this. Something like:</p>\\n<pre><code>const values:Array&lt;T&gt; = Enum.values&lt;T&gt;(enum);\\n</code></pre>\\n<p>This is the <a href=\'https://github.com/Microsoft/TypeScript/issues/17198\'>Typescript Feature Request</a>.</p>\\n","summary":"Getting the Values from a Typescript Enum.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"dandelion-2817950_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-2817950_1920.jpg","title":"Getting the Values from a Typescript Enum","readingTime":1,"wordCount":131},{"category":"Tasks","type":"task","md5":"322718b846ca8dfc47d8c8d80475674f","filename":"moving-from-node-require-imports-typescript-imports.md","path":"tasks/typescript/moving-from-node-require-imports-typescript-imports.md","id":"tasks--typescript--moving-from-node-require-imports-typescript-imports","markdown":"\\nWe currently require `fs` like this in node:\\n\\n```\\nconst fs = require(\'fs\');\\n```\\n\\nWe are wondering what the equivalent Typescript version is?\\n\\n# Approach\\n\\nWith Typescript, after running:\\n\\n```\\nnpm install --save-dev @types/node \\n```\\n\\nWe can import the specific function we want from the `fs` library with a destructured import like this:\\n```\\nimport { writeFileSync } from \u2018fs\';\\n```\\n\\nSince we are now only importing what we need, the remaining parts of the library can be shaved off by tools like Webpack and Rollup.","html":"<p>We currently require <code>fs</code> like this in node:</p>\\n<pre><code>const fs = require(&#39;fs&#39;);\\n</code></pre>\\n<p>We are wondering what the equivalent Typescript version is?</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>With Typescript, after running:</p>\\n<pre><code>npm install --save-dev @types/node \\n</code></pre>\\n<p>We can import the specific function we want from the <code>fs</code> library with a destructured import like this:</p>\\n<pre><code>import { writeFileSync } from \u2018fs&#39;;\\n</code></pre>\\n<p>Since we are now only importing what we need, the remaining parts of the library can be shaved off by tools like Webpack and Rollup.</p>\\n","summary":"Moving from Node Require Imports to Typescript Imports.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"balloons-1615032_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/balloons-1615032_1920.jpg","title":"Moving from Node Require Imports to Typescript Imports","readingTime":1,"wordCount":79},{"category":"Tasks","type":"task","md5":"8411cd67ecee12f7c4e1a08883798b7d","filename":"typescript-class-constructor-parameter-declarations.md","path":"tasks/typescript/typescript-class-constructor-parameter-declarations.md","id":"tasks--typescript--typescript-class-constructor-parameter-declarations","markdown":"\\nWe went to avoid assigning parameters within the typescript class `constructor` like this:\\n\\n```\\nconstructor(p:number) {\\n   this.p = p\\n}\\n```\\n\\n# Approach\\n\\nDeclare the property within the constructor using a modifier (`public, private, protected`):\\n```\\nclass Test1 {\\n    constructor(\\n      public p1:string;\\n      public p2:string;\\n ) {}\\n}\\n\\nconsole.log(new Test1(\'1\', \'2\'));\\n```\\n\\nIf we don\'t use a modifier that property assignment does not take place and we get an empty object.\\n\\n```\\nclass Test2 {\\n  constructor(p1: string, p2: string) {}\\n}\\n//Properties are missing\\nconsole.log(new Test2(\'1\', \'2\'));\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Typescript Class Constructor Parameter Declarations\\" \\n  description=\\"Class Constructor Parameter Declarations\\"\\n\\tdomain=\\"stackblitz.com\\"\\n  url=\\"https://stackblitz.com/edit/typescript-class-initialization-dy1cs7\\">\\n</fs-link-preview>","html":"<p>We went to avoid assigning parameters within the typescript class <code>constructor</code> like this:</p>\\n<pre><code>constructor(p:number) {\\n   this.p = p\\n}\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Declare the property within the constructor using a modifier (<code>public, private, protected</code>):</p>\\n<pre><code>class Test1 {\\n    constructor(\\n      public p1:string;\\n      public p2:string;\\n ) {}\\n}\\n\\nconsole.log(new Test1(&#39;1&#39;, &#39;2&#39;));\\n</code></pre>\\n<p>If we don&#39;t use a modifier that property assignment does not take place and we get an empty object.</p>\\n<pre><code>class Test2 {\\n  constructor(p1: string, p2: string) {}\\n}\\n//Properties are missing\\nconsole.log(new Test2(&#39;1&#39;, &#39;2&#39;));\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Typescript Class Constructor Parameter Declarations\' \\n  description=\'Class Constructor Parameter Declarations\'\\n    domain=\'stackblitz.com\'\\n  url=\'https://stackblitz.com/edit/typescript-class-initialization-dy1cs7\'>\\n</fs-link-preview></p>\\n","summary":"Typescript Class Constructor Self Initialization.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"10/09/2021","headerImage":"flowers-843584_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flowers-843584_1920.jpg","title":"Typescript Class Constructor Parameter Declarations","readingTime":1,"wordCount":122},{"category":"Tasks","type":"task","md5":"bfc3b89f7aa8eba75e6dfcb427c509b1","filename":"typescript-class-constructor-self-initialization.md","path":"tasks/typescript/typescript-class-constructor-self-initialization.md","id":"tasks--typescript--typescript-class-constructor-self-initialization","markdown":"\\nWe have object instances coming in over the wire with this shape:\\n\\n```\\n{ p1:\\"hello\\", p2:\\"you\\" };\\n```\\n\\nWe want to initialize our class Test with the properties from that instance.\\n\\n# Approach\\n\\nFirst we define our class:\\n```\\nclass Test {\\n    p1:string;\\n    p2:string;\\n    constructor(t?:any) {\\n        if (t) {\\n            Object.assign(this, t);\\n        }\\n    }\\n}\\n```\\nNotice that we use Object.assign in the constructor to assign the instance it takes to this. Here\u2019s an initialization demo:\\n\\n```\\nlet o={p1:\\"hello\\", p2:\\"you\\" };\\nlet n = new Test(o);\\nconsole.log(n);\\n```\\n\\nNote that if we have a non string property, for example a `d:Date` property like this:\\n\\n```\\nclass Test3 {\\n  p: string;\\n  d: Date;\\n  constructor(t: any) {\\n    Object.assign(this, t);\\n    this.d = new Date(t.d);\\n  }\\n}\\nlet o3 = { p: \'hello\', d: \'2010-12-20\' };\\nlet n3 = new Test3(o2);\\nconsole.log(n3);\\n```\\n\\nThen we should convert this property manually:\\n```\\nthis.d = new Date(t.d);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Typescript Class Constructor Self Initialization\\" \\n  description=\\"Class constructor self initialization\\"\\n\\tdomain=\\"stackblitz.com\\"\\n  url=\\"https://stackblitz.com/edit/typescript-class-initialization-nsspnz\\">\\n</fs-link-preview>","html":"<p>We have object instances coming in over the wire with this shape:</p>\\n<pre><code>{ p1:&quot;hello&quot;, p2:&quot;you&quot; };\\n</code></pre>\\n<p>We want to initialize our class Test with the properties from that instance.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>First we define our class:</p>\\n<pre><code>class Test {\\n    p1:string;\\n    p2:string;\\n    constructor(t?:any) {\\n        if (t) {\\n            Object.assign(this, t);\\n        }\\n    }\\n}\\n</code></pre>\\n<p>Notice that we use Object.assign in the constructor to assign the instance it takes to this. Here\u2019s an initialization demo:</p>\\n<pre><code>let o={p1:&quot;hello&quot;, p2:&quot;you&quot; };\\nlet n = new Test(o);\\nconsole.log(n);\\n</code></pre>\\n<p>Note that if we have a non string property, for example a <code>d:Date</code> property like this:</p>\\n<pre><code>class Test3 {\\n  p: string;\\n  d: Date;\\n  constructor(t: any) {\\n    Object.assign(this, t);\\n    this.d = new Date(t.d);\\n  }\\n}\\nlet o3 = { p: &#39;hello&#39;, d: &#39;2010-12-20&#39; };\\nlet n3 = new Test3(o2);\\nconsole.log(n3);\\n</code></pre>\\n<p>Then we should convert this property manually:</p>\\n<pre><code>this.d = new Date(t.d);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Typescript Class Constructor Self Initialization\' \\n  description=\'Class constructor self initialization\'\\n    domain=\'stackblitz.com\'\\n  url=\'https://stackblitz.com/edit/typescript-class-initialization-nsspnz\'>\\n</fs-link-preview></p>\\n","summary":"Typescript Class Constructor Self Initialization.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"10/09/2021","headerImage":"silvery-mother-of-pearl-butterfly-877121_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/silvery-mother-of-pearl-butterfly-877121_1920.jpg","title":"Typescript Class Constructor Self Initialization","readingTime":1,"wordCount":190},{"category":"Tasks","type":"task","md5":"9be68c726af60904950eebb4d46ba9ec","filename":"typescript-exception-free-error-handling.md","path":"tasks/typescript/typescript-exception-free-error-handling.md","id":"tasks--typescript--typescript-exception-free-error-handling","markdown":"\\nIn the article [The Power of the Simplest Possible Example](https://developer.fireflysemantics.com/blogs/blogs--design--the-power-of-the-simplest-possible-example) we implemented the median function per the illustration of the method used to calculate it.\\n\\nHere we will be adding error handling without using exceptions.\\n\\n# Approach\\n\\n## Error Function Type\\n\\nError strings will be created by functions that have the signature:\\n\\n```\\nexport type MessageFunctionType = (args?: string[]) => string;\\n```\\n\\n## Result Object\\n\\nWe\u2019ll create a class to contain the result and errors if there are any.\\n\\n```\\n/**\\n * The result of the calculation.\\n */\\nexport class Result<E> {\\n    public message?:string\\n    constructor(\\n        public value: E | undefined,\\n        public error?: MessageFunctionType,\\n        public parameters?: string[]\\n    ) { \\n        if (error) {\\n            this.message = this.error!(parameters)\\n        }\\n    }\\n}\\n```\\n\\nIn the event of an error the error property is assigned the function of type MessageFunctionType . The error property can be used in a switch statement to select the type of error that occurred.\\n\\n## Errors\\n\\nWe will define two types of errors. The first indicates that no array was passed in to the `median` function. The second indicates that one of the values in the array was not a number:\\n\\n```\\nexport interface IMedianErrors {\\n    ARRAY_ARGUMENT_NOT_DEFINED: MessageFunctionType;\\n    ARRAY_VALUE_NOT_A_NUMBER: MessageFunctionType;\\n}\\n```\\n\\nAnd the implementation for the interface looks like this:\\n\\n```\\nexport const MEDIAN_ERRORS: IMedianErrors = \\n{\\n   ARRAY_ARGUMENT_NOT_DEFINED: (arr?: string[]) => {\\n      return `The array argument for the median function was missing.`;\\n},\\n    ARRAY_VALUE_NOT_A_NUMBER: (arr?: string[]) => {\\n       return `The array ${ arr && arr.toString() } contains values that are not numbers.`;\\n}\\n};\\n```\\n\\n## Median Function Implementation\\n\\nWe are now communicating both the result and any errors that occurred using a `MedianResult` instance:\\n\\n```\\n/**\\n * @param arr The set of numbers\\n */\\nexport function median(arr?: any[]): MedianResult {\\n  //=============================\\n  // MISSING ARRAY\\n  //=============================\\n  if (!arr) {\\n    const result = new MedianResult(\\n      NaN,\\n      MEDIAN_ERRORS.ARRAY_ARGUMENT_NOT_DEFINED,\\n      []\\n    );\\n    return result;\\n  }\\n  //=============================\\n  // NON NUMERIC VALUES\\n  //=============================\\n  let numeric = true;\\n  arr &&\\n    arr.forEach((n) => {\\n      if (!isNumeric(n.toString(), {})) {\\n        numeric = false;\\n      }\\n    });\\n  if (!numeric) {\\n    const result = new MedianResult(\\n      undefined,\\n      MEDIAN_ERRORS.ARRAY_VALUE_NOT_A_NUMBER,\\n      arr.map((e) => e.toString())\\n    );\\n    return result;\\n  }\\n\\n  if (!(arr && arr.length)) {\\n    //=============================\\n    // EMPTY ARRAY\\n    //=============================\\n    const result = new MedianResult(undefined);\\n    return result;\\n  } else {\\n    //=============================\\n    // LENGHT OF 1\\n    //=============================\\n    if (arr.length == 1) {\\n      const result = new MedianResult(arr[0]);\\n      return result;\\n    }\\n    //=============================\\n    // PROCESS EVEN OR ODD SET OF NUMBERS\\n    //=============================\\n    const mid = Math.floor(arr.length / 2);\\n    const sorted = [...arr].sort((a, b) => a - b);\\n    const m =\\n      arr.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\\n    const result = new MedianResult(m);\\n    return result;\\n  }\\n}\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Typescript Exception Free Function Error Handling\\" \\n  description=\\"Typescript Exception Free Function Error Handling\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-peejzw\\">\\n</fs-link-preview>\\n","html":"<p>In the article <a href=\'https://developer.fireflysemantics.com/blogs/blogs--design--the-power-of-the-simplest-possible-example\'>The Power of the Simplest Possible Example</a> we implemented the median function per the illustration of the method used to calculate it.</p>\\n<p>Here we will be adding error handling without using exceptions.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'error-function-type\'>Error Function Type</h2>\\n<p>Error strings will be created by functions that have the signature:</p>\\n<pre><code>export type MessageFunctionType = (args?: string[]) =&gt; string;\\n</code></pre>\\n<h2 id=\'result-object\'>Result Object</h2>\\n<p>We\u2019ll create a class to contain the result and errors if there are any.</p>\\n<pre><code>/**\\n * The result of the calculation.\\n */\\nexport class Result&lt;E&gt; {\\n    public message?:string\\n    constructor(\\n        public value: E | undefined,\\n        public error?: MessageFunctionType,\\n        public parameters?: string[]\\n    ) { \\n        if (error) {\\n            this.message = this.error!(parameters)\\n        }\\n    }\\n}\\n</code></pre>\\n<p>In the event of an error the error property is assigned the function of type MessageFunctionType . The error property can be used in a switch statement to select the type of error that occurred.</p>\\n<h2 id=\'errors\'>Errors</h2>\\n<p>We will define two types of errors. The first indicates that no array was passed in to the <code>median</code> function. The second indicates that one of the values in the array was not a number:</p>\\n<pre><code>export interface IMedianErrors {\\n    ARRAY_ARGUMENT_NOT_DEFINED: MessageFunctionType;\\n    ARRAY_VALUE_NOT_A_NUMBER: MessageFunctionType;\\n}\\n</code></pre>\\n<p>And the implementation for the interface looks like this:</p>\\n<pre><code>export const MEDIAN_ERRORS: IMedianErrors = \\n{\\n   ARRAY_ARGUMENT_NOT_DEFINED: (arr?: string[]) =&gt; {\\n      return `The array argument for the median function was missing.`;\\n},\\n    ARRAY_VALUE_NOT_A_NUMBER: (arr?: string[]) =&gt; {\\n       return `The array ${ arr &amp;&amp; arr.toString() } contains values that are not numbers.`;\\n}\\n};\\n</code></pre>\\n<h2 id=\'median-function-implementation\'>Median Function Implementation</h2>\\n<p>We are now communicating both the result and any errors that occurred using a <code>MedianResult</code> instance:</p>\\n<pre><code>/**\\n * @param arr The set of numbers\\n */\\nexport function median(arr?: any[]): MedianResult {\\n  //=============================\\n  // MISSING ARRAY\\n  //=============================\\n  if (!arr) {\\n    const result = new MedianResult(\\n      NaN,\\n      MEDIAN_ERRORS.ARRAY_ARGUMENT_NOT_DEFINED,\\n      []\\n    );\\n    return result;\\n  }\\n  //=============================\\n  // NON NUMERIC VALUES\\n  //=============================\\n  let numeric = true;\\n  arr &amp;&amp;\\n    arr.forEach((n) =&gt; {\\n      if (!isNumeric(n.toString(), {})) {\\n        numeric = false;\\n      }\\n    });\\n  if (!numeric) {\\n    const result = new MedianResult(\\n      undefined,\\n      MEDIAN_ERRORS.ARRAY_VALUE_NOT_A_NUMBER,\\n      arr.map((e) =&gt; e.toString())\\n    );\\n    return result;\\n  }\\n\\n  if (!(arr &amp;&amp; arr.length)) {\\n    //=============================\\n    // EMPTY ARRAY\\n    //=============================\\n    const result = new MedianResult(undefined);\\n    return result;\\n  } else {\\n    //=============================\\n    // LENGHT OF 1\\n    //=============================\\n    if (arr.length == 1) {\\n      const result = new MedianResult(arr[0]);\\n      return result;\\n    }\\n    //=============================\\n    // PROCESS EVEN OR ODD SET OF NUMBERS\\n    //=============================\\n    const mid = Math.floor(arr.length / 2);\\n    const sorted = [...arr].sort((a, b) =&gt; a - b);\\n    const m =\\n      arr.length % 2 !== 0 ? sorted[mid] : (sorted[mid - 1] + sorted[mid]) / 2;\\n    const result = new MedianResult(m);\\n    return result;\\n  }\\n}\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Typescript Exception Free Function Error Handling\' \\n  description=\'Typescript Exception Free Function Error Handling\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-peejzw\'>\\n</fs-link-preview></p>\\n","summary":"Typescript Exception Free Function Error Handling.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"10/01/2021","headerImage":"gecko-2159922_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/gecko-2159922_1920.jpg","title":"Typescript Exception Free Function Error Handling","readingTime":3,"wordCount":423},{"category":"Tasks","type":"task","md5":"28e790345c8c491ab077ba3941eaf2fa","filename":"typescript-rest-and-spread-operator.md","path":"tasks/typescript/typescript-rest-and-spread-operator.md","id":"tasks--typescript--typescript-rest-and-spread-operator","markdown":"\\n\\nWe wish to have a function where we can pass in any number of arguments and add them together. So for example:\\n```\\nsum(1,2)\\n```\\nor\\n\\n```\\nsum(1,2,3)\\n```\\n\\nAlso we want another function where we can `subtract` the first argument from the `sum` of the rest. Like this:\\n\\n```\\naddThenSubtract(1,2,3) // Result would be 4\\naddThenSubtract(1,2,3,4) // Result would be 8\\n```\\n\\nThe SPREAD operator is also expressed as `...`. We will see this used when we implement `addThenSubtract`.\\n\\n# Approach\\n\\n## Sum\\n\\nWe implement `sum` like this.\\n```\\nfunction sum(...arr: number[]): number {\\n        let sum = 0;\\n        arr.forEach((v) => {\\n        sum += v;\\n    });\\n    return sum;\\n}\\n```\\n\\nThe REST `\u2026` operator collects all the arguments into an an array arr for us, and we then calculate the sum.\\n\\n## addThenSubtract\\n\\nHere we can subtract the first argument from the sum of the rest.\\n\\n```\\n/**\\n * @param subtract Subract this number from the numbers added\\n * @param add Add tese numbers together\\n */\\nfunction addThenSubtract(subtract: number, ...add: number[]) {\\n    console.log(`subtract ${subtract}`);\\n    console.log(`add ${add}`);\\n    const total = sum(...add);\\n    return total - subtract;\\n}\\n```\\n\\nNote that when we call `sum` we use an operator that looks like the REST operator `...` . In this context it\u2019s a SPREAD operator. It takes the values in the `add` array and spreads them out. So if we pass in `[1,2,3]` it will become `1,2,3`.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Typescript Rest and Spread Operator\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-bufg3e?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We wish to have a function where we can pass in any number of arguments and add them together. So for example:</p>\\n<pre><code>sum(1,2)\\n</code></pre>\\n<p>or</p>\\n<pre><code>sum(1,2,3)\\n</code></pre>\\n<p>Also we want another function where we can <code>subtract</code> the first argument from the <code>sum</code> of the rest. Like this:</p>\\n<pre><code>addThenSubtract(1,2,3) // Result would be 4\\naddThenSubtract(1,2,3,4) // Result would be 8\\n</code></pre>\\n<p>The SPREAD operator is also expressed as <code>...</code>. We will see this used when we implement <code>addThenSubtract</code>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'sum\'>Sum</h2>\\n<p>We implement <code>sum</code> like this.</p>\\n<pre><code>function sum(...arr: number[]): number {\\n        let sum = 0;\\n        arr.forEach((v) =&gt; {\\n        sum += v;\\n    });\\n    return sum;\\n}\\n</code></pre>\\n<p>The REST <code>\u2026</code> operator collects all the arguments into an an array arr for us, and we then calculate the sum.</p>\\n<h2 id=\'addthensubtract\'>addThenSubtract</h2>\\n<p>Here we can subtract the first argument from the sum of the rest.</p>\\n<pre><code>/**\\n * @param subtract Subract this number from the numbers added\\n * @param add Add tese numbers together\\n */\\nfunction addThenSubtract(subtract: number, ...add: number[]) {\\n    console.log(`subtract ${subtract}`);\\n    console.log(`add ${add}`);\\n    const total = sum(...add);\\n    return total - subtract;\\n}\\n</code></pre>\\n<p>Note that when we call <code>sum</code> we use an operator that looks like the REST operator <code>...</code> . In this context it\u2019s a SPREAD operator. It takes the values in the <code>add</code> array and spreads them out. So if we pass in <code>[1,2,3]</code> it will become <code>1,2,3</code>.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Typescript Rest and Spread Operator\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-bufg3e?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Typescript Rest and Spread Operator.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"5/22/2022","headerImage":"flower-333643_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/flower-333643_1920.jpg","title":"Typescript Rest and Spread Operator","readingTime":2,"wordCount":262},{"category":"Tasks","type":"task","md5":"7acbe6dd2f0f2096410743025509771d","filename":"unqiuely-key-values-with-typescript-indexable-types.md","path":"tasks/typescript/unqiuely-key-values-with-typescript-indexable-types.md","id":"tasks--typescript--unqiuely-key-values-with-typescript-indexable-types","markdown":"\\nWe want an `Enum` like data structure containing error codes.\\n\\nWe want to be able to use `Object.keys()` to get the keys and `Object.values` to get the values.\\n\\nThis is an example:\\n\\n```\\nconst errorTypes: ErrorTypes =\\n{\\n    DATA_ERROR: \'Data Error\',\\n    NETWORK_ERROR: \'Network Error\'\\n}\\n```\\n\\n# Approach\\n\\nIn order to define `ErrorTypes` we we will use a [Typescript Indexable Type](https://developer.fireflysemantics.com/concepts/concepts--typescript--typescript-indexable-types).\\n\\n```\\nexport interface ErrorTypes {\\n  [key: string]: string;\\n}\\n```\\n\\nNow we can get the `keys` and `values` like this:\\n\\n```\\nconst keys = Object.keys(errorTypes);\\nconsole.log(`The keys are ${keys}`);\\n\\nconst values = Object.values(errorTypes);\\nconsole.log(`The values are ${values}`);\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Uniquely Keyed Values With Typescript Indexable Types\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-indexable-error-type\\">\\n</fs-link-preview>","html":"<p>We want an <code>Enum</code> like data structure containing error codes.</p>\\n<p>We want to be able to use <code>Object.keys()</code> to get the keys and <code>Object.values</code> to get the values.</p>\\n<p>This is an example:</p>\\n<pre><code>const errorTypes: ErrorTypes =\\n{\\n    DATA_ERROR: &#39;Data Error&#39;,\\n    NETWORK_ERROR: &#39;Network Error&#39;\\n}\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In order to define <code>ErrorTypes</code> we we will use a <a href=\'https://developer.fireflysemantics.com/concepts/concepts--typescript--typescript-indexable-types\'>Typescript Indexable Type</a>.</p>\\n<pre><code>export interface ErrorTypes {\\n  [key: string]: string;\\n}\\n</code></pre>\\n<p>Now we can get the <code>keys</code> and <code>values</code> like this:</p>\\n<pre><code>const keys = Object.keys(errorTypes);\\nconsole.log(`The keys are ${keys}`);\\n\\nconst values = Object.values(errorTypes);\\nconsole.log(`The values are ${values}`);\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Uniquely Keyed Values With Typescript Indexable Types\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-indexable-error-type\'>\\n</fs-link-preview></p>\\n","summary":"Uniquely Keyed Values With Typescript Indexable Types.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"3/30/2021","headerImage":"dandelion-5182632_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/dandelion-5182632_1920.jpg","title":"Uniquely Keyed Values With Typescript Indexable Types","readingTime":1,"wordCount":143},{"category":"Tasks","type":"task","md5":"5755514e79175386ab28194b6bbb3b27","filename":"using-vanilla-npm-modules-with-typescript.md","path":"tasks/typescript/using-vanilla-npm-modules-with-typescript.md","id":"tasks--typescript--using-vanilla-npm-modules-with-typescript","markdown":"\\nWe occasionally come across [NPM modules without type definitions](https://developer.fireflysemantics.com/tasks/tasks--typescript--creating-an-untyped-npm-module).\\n\\nWe want to use these in our Typescript project, but typescript barks at us when we try to `import hello`.  Specifically we get this error:\\n\\n```\\nCould not find a declaration file for module \u2018untyped-npm-module\u2019. \u2018~/typescriptexperiment/untyped-npm-module/index.js\u2019 implicitly has an \u2018any\u2019 type.\\nTry `npm install @types/untyped-npm-module` if it exists or add a new declaration (.d.ts) file containing `declare module \u2018untyped-npm-module\u2019;`ts(7016)\\n```\\n\\nSo we need to add a declaration file.\\n\\n# Approach\\n\\n```\\nmkdir -p src/@types/untyped-npm-module\\ntouch src/@types/untyped-npm-module/index.d.ts\\n```\\n\\nThen within `index.d.ts` add:\\n\\n```\\ndeclare module \'untyped-npm-module\' {\\n    export function hello(name: string): string;\\n}\\n```\\n\\nAnd now it works:\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Using Vanilla NPM Javascript Modules With Typescript\\"\\n  \\tdomain=\\"stackblitz.com\\"\\n    url=\\"https://stackblitz.com/edit/typescript-untyped-npm-module-ts?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We occasionally come across <a href=\'https://developer.fireflysemantics.com/tasks/tasks--typescript--creating-an-untyped-npm-module\'>NPM modules without type definitions</a>.</p>\\n<p>We want to use these in our Typescript project, but typescript barks at us when we try to <code>import hello</code>.  Specifically we get this error:</p>\\n<pre><code>Could not find a declaration file for module \u2018untyped-npm-module\u2019. \u2018~/typescriptexperiment/untyped-npm-module/index.js\u2019 implicitly has an \u2018any\u2019 type.\\nTry `npm install @types/untyped-npm-module` if it exists or add a new declaration (.d.ts) file containing `declare module \u2018untyped-npm-module\u2019;`ts(7016)\\n</code></pre>\\n<p>So we need to add a declaration file.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>mkdir -p src/@types/untyped-npm-module\\ntouch src/@types/untyped-npm-module/index.d.ts\\n</code></pre>\\n<p>Then within <code>index.d.ts</code> add:</p>\\n<pre><code>declare module &#39;untyped-npm-module&#39; {\\n    export function hello(name: string): string;\\n}\\n</code></pre>\\n<p>And now it works:</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Using Vanilla NPM Javascript Modules With Typescript\'\\n      domain=\'stackblitz.com\'\\n    url=\'https://stackblitz.com/edit/typescript-untyped-npm-module-ts?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Using Vanilla NPM Javascript Modules With Typescript.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/14/2021","headerImage":"jellyfish-1973738_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1973738_1280.jpg","title":"Using Vanilla NPM Javascript Modules With Typescript","readingTime":1,"wordCount":183},{"category":"Tasks","type":"task","md5":"38eaa1a7910693e260a23e5be285fc0a","filename":"creating-the-firefly-semantics-font-logo.md","path":"tasks/ux/creating-the-firefly-semantics-font-logo.md","id":"tasks--ux--creating-the-firefly-semantics-font-logo","markdown":"\\nWe at **Firefly Semantics** wanted the simplest possible way to change our logo size and color in HTML documents or our web applications.\\n\\nWe also want to make it dead simple for partners to display our logo.\\n\\n# Approach\\n\\nWe generated a font from our logo SVG using [IcoMoon App - Icon Font, SVG, PDF & PNG Generator](https://icomoon.io/app/#/select)\\n\\nNow all that is needed is to include a link to the font css:\\n\\n```\\n<link rel=\\"stylesheet\\" href=\\"https://fireflysemantics.github.io/logo/font/style.css\\">\\n```\\n\\nAnd the logo in red on a black background can be displayed like this:\\n\\n```\\n<div style=\\"background-color: #000000\\">\\n<i style=\\"color: red; \\n          font-size: 8rem;\\"\\n    class=\\"icon-fs-logo\\"></i>\\n</div>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\" title=\\"Stackblitz Demo\\" \\n  description=\\"Creating the Firefly Semantics Font Logo .\\" domain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/firefly-semantics-font-logo\\">\\n</fs-link-preview>","html":"<p>We at <strong>Firefly Semantics</strong> wanted the simplest possible way to change our logo size and color in HTML documents or our web applications.</p>\\n<p>We also want to make it dead simple for partners to display our logo.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>We generated a font from our logo SVG using <a href=\'https://icomoon.io/app/#/select\'>IcoMoon App - Icon Font, SVG, PDF &amp; PNG Generator</a></p>\\n<p>Now all that is needed is to include a link to the font css:</p>\\n<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://fireflysemantics.github.io/logo/font/style.css&quot;&gt;\\n</code></pre>\\n<p>And the logo in red on a black background can be displayed like this:</p>\\n<pre><code>&lt;div style=&quot;background-color: #000000&quot;&gt;\\n&lt;i style=&quot;color: red; \\n          font-size: 8rem;&quot;\\n    class=&quot;icon-fs-logo&quot;&gt;&lt;/i&gt;\\n&lt;/div&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\' title=\'Stackblitz Demo\' \\n  description=\'Creating the Firefly Semantics Font Logo .\' domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/firefly-semantics-font-logo\'>\\n</fs-link-preview></p>\\n","summary":"Creating the Firefly Semantics Font Logo.","tags":["UX"],"tagString":"UX","author":"Ole Ersoy","date":"3/13/2022","headerImage":"chrysanthemum-1332994_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/chrysanthemum-1332994_1920.jpg","title":"Creating the Firefly Semantics Font Logo","readingTime":1,"wordCount":156},{"category":"Tasks","type":"task","md5":"89c73a61559ccc59f97c132f31c8646e","filename":"fireflly-semantics-validator-api-basics.md","path":"tasks/validator/fireflly-semantics-validator-api-basics.md","id":"tasks--validator--fireflly-semantics-validator-api-basics","markdown":"\\nWe have a `PurchaseOrder `class that has been annotated with [Firefly Semantics Validator](https://www.npmjs.com/package/@fireflysemantics/validator) decorators.\\n\\n```\\nimport {\\n  IfValid,\\n  IsAfterInstant,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from \'@fireflysemantics/validator\';\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(\'purchaseDate\')\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(\'purchaseDate\')\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(o: any) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, o);\\n  }\\n}\\n```\\n\\nNow we want to learn how to use the [Firefly Semantics ValidatorAPI](https://fireflysemantics.github.io/validator/modules/validate.html) to validate:\\n\\n- A single property\\n- A single `PurchaseOrder` instance.\\n- Multiple `PurchaseOder` instances.\\n\\n# Approach\\n\\nCreate a new `PurchaseOrder` instance:\\n\\n```\\nconst po: PurchaseOrder = new PurchaseOrder(\\n{\\nsku: \'skuABC\',\\nid: \'123\',\\npurchaseDate: new Date(\'2021-11-22\'),\\nreceiptDate: new Date(\'2021-11-28\'),\\nquantity: 2,\\n});\\n```\\n\\n\\n## Single Purchase Order Property Validation\\n\\n```\\nlet valid: boolean = validateProperty(po, \'sku\');\\nassert.equal(valid, true, \'valid should be true\');\\npo.sku = null;\\nvalid = validateProperty(po, \'sku\');\\nassert.equal(valid, false, \'valid should be false\');\\n```\\n\\n\\n## Single Purchase Order Instance Validation\\n\\nTo validate a single instance we use `validate` :\\n\\n```\\nconst OE: ObjectErrors = validate(po);\\nlet errors: ValidationError[] = OE.errors;\\nassert.equal(OE.valid, false, \'valid should be false\');\\nassert.equal(\\nerrors.length,\\n1,\\n\'There should be one error for the SKU property\'\\n);\\n//console.log(errors[0].message);\\nassert.equal(\\nerrors[0].message.includes(\'sku\'),\\ntrue,\\n\'The invalid property is the sku propertyy\'\\n);\\n```\\n\\n## Validation of Multiple Purchase Order Instances\\n\\nTo validate multiple instances we place them in an array and use `validateN([po1, po2, po3])`:\\n\\n```\\nconst OES: ObjectErrors[] = validateN([po]);\\n//console.log(OES);\\nassert.equal(OES.length, 1, \'There should be one error\');\\nassert.equal(OES[0].valid, false, \'Valid should be false\');\\nerrors = OES[0].errors;\\nassert.equal(\\nerrors.length,\\n1,\\n\'There should be one error for the SKU property\'\\n);\\n//console.log(errors[0].message);\\nassert.equal(\\nerrors[0].message.includes(\'sku\'),\\ntrue,\\n\'The invalid property is the sku property\'\\n);\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Firefly Semantics Validator API Basics.\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-ejc43s\\">\\n</fs-link-preview>","html":"<p>We have a <code>PurchaseOrder </code>class that has been annotated with <a href=\'https://www.npmjs.com/package/@fireflysemantics/validator\'>Firefly Semantics Validator</a> decorators.</p>\\n<pre><code>import {\\n  IfValid,\\n  IsAfterInstant,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from &#39;@fireflysemantics/validator&#39;;\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(&#39;purchaseDate&#39;)\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(&#39;purchaseDate&#39;)\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(o: any) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, o);\\n  }\\n}\\n</code></pre>\\n<p>Now we want to learn how to use the <a href=\'https://fireflysemantics.github.io/validator/modules/validate.html\'>Firefly Semantics ValidatorAPI</a> to validate:</p>\\n<ul>\\n<li>A single property</li>\\n<li>A single <code>PurchaseOrder</code> instance.</li>\\n<li>Multiple <code>PurchaseOder</code> instances.</li>\\n</ul>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create a new <code>PurchaseOrder</code> instance:</p>\\n<pre><code>const po: PurchaseOrder = new PurchaseOrder(\\n{\\nsku: &#39;skuABC&#39;,\\nid: &#39;123&#39;,\\npurchaseDate: new Date(&#39;2021-11-22&#39;),\\nreceiptDate: new Date(&#39;2021-11-28&#39;),\\nquantity: 2,\\n});\\n</code></pre>\\n<h2 id=\'single-purchase-order-property-validation\'>Single Purchase Order Property Validation</h2>\\n<pre><code>let valid: boolean = validateProperty(po, &#39;sku&#39;);\\nassert.equal(valid, true, &#39;valid should be true&#39;);\\npo.sku = null;\\nvalid = validateProperty(po, &#39;sku&#39;);\\nassert.equal(valid, false, &#39;valid should be false&#39;);\\n</code></pre>\\n<h2 id=\'single-purchase-order-instance-validation\'>Single Purchase Order Instance Validation</h2>\\n<p>To validate a single instance we use <code>validate</code> :</p>\\n<pre><code>const OE: ObjectErrors = validate(po);\\nlet errors: ValidationError[] = OE.errors;\\nassert.equal(OE.valid, false, &#39;valid should be false&#39;);\\nassert.equal(\\nerrors.length,\\n1,\\n&#39;There should be one error for the SKU property&#39;\\n);\\n//console.log(errors[0].message);\\nassert.equal(\\nerrors[0].message.includes(&#39;sku&#39;),\\ntrue,\\n&#39;The invalid property is the sku propertyy&#39;\\n);\\n</code></pre>\\n<h2 id=\'validation-of-multiple-purchase-order-instances\'>Validation of Multiple Purchase Order Instances</h2>\\n<p>To validate multiple instances we place them in an array and use <code>validateN([po1, po2, po3])</code>:</p>\\n<pre><code>const OES: ObjectErrors[] = validateN([po]);\\n//console.log(OES);\\nassert.equal(OES.length, 1, &#39;There should be one error&#39;);\\nassert.equal(OES[0].valid, false, &#39;Valid should be false&#39;);\\nerrors = OES[0].errors;\\nassert.equal(\\nerrors.length,\\n1,\\n&#39;There should be one error for the SKU property&#39;\\n);\\n//console.log(errors[0].message);\\nassert.equal(\\nerrors[0].message.includes(&#39;sku&#39;),\\ntrue,\\n&#39;The invalid property is the sku property&#39;\\n);\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Firefly Semantics Validator API Basics.\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-ejc43s\'>\\n</fs-link-preview></p>\\n","summary":"Firefly Semantics Validator API Basics.","tags":["JavaScript","TypeScript","Validator"],"tagString":"JavaScript, TypeScript, Validator","author":"Ole Ersoy","date":"11/13/2021","headerImage":"whale-shark-281497_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/whale-shark-281497_1920.jpg","title":"Firefly Semantics Validator API Basics","readingTime":2,"wordCount":358},{"category":"Tasks","type":"task","md5":"8e13190a6bd538474590c19431e12cea","filename":"minimizing-validation-noise-with-firefly-semantics-validator.md","path":"tasks/validator/minimizing-validation-noise-with-firefly-semantics-validator.md","id":"tasks--validator--minimizing-validation-noise-with-firefly-semantics-validator","markdown":"\\nThe [Firefly Semantics Validator](https://www.npmjs.com/package/@fireflysemantics/validator) package provides decorators that are used to validate your typescript model class instances.\\n\\nFeatures that minimize validation noise are:\\n- Progressive Validation\\n- Cross Property Filtered Validation\\n\\nWe will illustrate how these are applied with a decorated PurchaseOrder class:\\n\\n```\\nimport {\\n  IfValid,\\n  IsAfterInstant,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from \'@fireflysemantics/validator\';\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(\'purchaseDate\')\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(\'purchaseDate\')\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(o: any) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, o);\\n  }\\n}\\n```\\n\\nWe want to learn how to use these features.\\n\\n# Approach\\n\\n## Progressive Validation\\n\\nIf the `@IsDefined` decorator validation on the `sku` property fails, the rest of the decorators on the `sku` property will not fire.\\n\\nThat is what progressive validation is. \\n\\nIt minimizes validation noise. Here\u2019s an example:\\n```\\nlet valid: boolean = validateProperty(po, \'sku\');\\nassert.equal(valid, true, \'valid should be true\');\\npo.sku = null;\\nvalid = validateProperty(po, \'sku\');\\nassert.equal(valid, false, \'valid should be false\');\\nlet oe: ObjectErrors = validate(po);\\nlet errors: ValidationError[] = oe.errors;\\nassert.equal(errors.length, 1, \'There should only be one error\');\\n```\\n\\n## Cross Property Filtered Validation\\n\\nThe `@IsAfterInstant(\u2018purchaseDate\u2019)` decorator checks that the `purchaseDate` comes before the `receiptDate`.\\n\\nHowever we only want to perform the check if the `purchaseDate` property is valid.\\nThat is what the `@IfValid(\u2018purchaseDate\u2019)` does. If the `purchaseDate` property is invalid, then `receiptDate` validation will not proceed, as only the `@IfValid` annotation will fire.\\n```\\npo.sku = \'sku\';\\npo.purchaseDate = null;\\nvalid = validateProperty(po, \'purchaseDate\');\\nassert.equal(valid, false, \'valid should be false\');\\noe = validate(po);\\nerrors = oe.errors;\\nassert.equal(errors.length, 2, \'There should only be two errors\');\\n```\\n\\nSo in the above case only two `ValidationError` instances are created. One for the `@IsDefined` decorator on the `purchaseDate` property and one for the `@IfValid` decorator on the `receiptDate` property.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Minimizing Validation Noise with Firefly Semantics Validator.\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-jz2jqb\\">\\n</fs-link-preview>","html":"<p>The <a href=\'https://www.npmjs.com/package/@fireflysemantics/validator\'>Firefly Semantics Validator</a> package provides decorators that are used to validate your typescript model class instances.</p>\\n<p>Features that minimize validation noise are:</p>\\n<ul>\\n<li>Progressive Validation</li>\\n<li>Cross Property Filtered Validation</li>\\n</ul>\\n<p>We will illustrate how these are applied with a decorated PurchaseOrder class:</p>\\n<pre><code>import {\\n  IfValid,\\n  IsAfterInstant,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from &#39;@fireflysemantics/validator&#39;;\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(&#39;purchaseDate&#39;)\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(&#39;purchaseDate&#39;)\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(o: any) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, o);\\n  }\\n}\\n</code></pre>\\n<p>We want to learn how to use these features.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'progressive-validation\'>Progressive Validation</h2>\\n<p>If the <code>@IsDefined</code> decorator validation on the <code>sku</code> property fails, the rest of the decorators on the <code>sku</code> property will not fire.</p>\\n<p>That is what progressive validation is. </p>\\n<p>It minimizes validation noise. Here\u2019s an example:</p>\\n<pre><code>let valid: boolean = validateProperty(po, &#39;sku&#39;);\\nassert.equal(valid, true, &#39;valid should be true&#39;);\\npo.sku = null;\\nvalid = validateProperty(po, &#39;sku&#39;);\\nassert.equal(valid, false, &#39;valid should be false&#39;);\\nlet oe: ObjectErrors = validate(po);\\nlet errors: ValidationError[] = oe.errors;\\nassert.equal(errors.length, 1, &#39;There should only be one error&#39;);\\n</code></pre>\\n<h2 id=\'cross-property-filtered-validation\'>Cross Property Filtered Validation</h2>\\n<p>The <code>@IsAfterInstant(\u2018purchaseDate\u2019)</code> decorator checks that the <code>purchaseDate</code> comes before the <code>receiptDate</code>.</p>\\n<p>However we only want to perform the check if the <code>purchaseDate</code> property is valid.\\nThat is what the <code>@IfValid(\u2018purchaseDate\u2019)</code> does. If the <code>purchaseDate</code> property is invalid, then <code>receiptDate</code> validation will not proceed, as only the <code>@IfValid</code> annotation will fire.</p>\\n<pre><code>po.sku = &#39;sku&#39;;\\npo.purchaseDate = null;\\nvalid = validateProperty(po, &#39;purchaseDate&#39;);\\nassert.equal(valid, false, &#39;valid should be false&#39;);\\noe = validate(po);\\nerrors = oe.errors;\\nassert.equal(errors.length, 2, &#39;There should only be two errors&#39;);\\n</code></pre>\\n<p>So in the above case only two <code>ValidationError</code> instances are created. One for the <code>@IsDefined</code> decorator on the <code>purchaseDate</code> property and one for the <code>@IfValid</code> decorator on the <code>receiptDate</code> property.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Minimizing Validation Noise with Firefly Semantics Validator.\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-jz2jqb\'>\\n</fs-link-preview></p>\\n","summary":"Minimizing Validation Noise with Firefly Semantics Validator.","tags":["JavaScript","TypeScript","Validator"],"tagString":"JavaScript, TypeScript, Validator","author":"Ole Ersoy","date":"11/13/2021","headerImage":"elephant-5647723_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/elephant-5647723_1920.jpg","title":"Minimizing Validation Noise with Firefly Semantics Validator","readingTime":2,"wordCount":357},{"category":"Tasks","type":"task","md5":"fbb49d7271fad9ab902d28bae012d6d4","filename":"validating-master-data-entities-with-firefly-semantics-validator.md","path":"tasks/validator/validating-master-data-entities-with-firefly-semantics-validator.md","id":"tasks--validator--validating-master-data-entities-with-firefly-semantics-validator","markdown":"\\nWe have `MasterData` entities annotated with [Firefly Semantics Validator](https://www.npmjs.com/package/@fireflysemantics/validator) annotations:\\n\\n```\\n/**\\n * The Master Data\\n */\\nexport class MasterData {\\n  gid?: string;\\n  id?: string;\\n\\n  @IsString()\\n  @IsDefined()\\n  public sku!: string;\\n  @IsString()\\n  @IsDefined()\\n  public supplier!: string;\\n  @IsString()\\n  @IsDefined()\\n  public location!: string;\\n  @IsNumber()\\n  @IsDefined()\\n  public safetyStock: number = 0;\\n  @IsNumber()\\n  @IsDefined()\\n  public leadTimeDays!: number;\\n  public orderSize: number = 1;\\n\\n  constructor(md?: any) {\\n    if (md) {\\n      Object.assign(this, md);\\n    }\\n  }\\n}\\n```\\nWe want to batch validate the instances, and for each property that is invalid we will produce an instance of the following `EntityError` interface:\\n\\n```\\n/**\\n * Interface for Entity error reporting.\\n */\\nexport interface EntityError {\\n    id: string;\\n    property: string;\\n    value: string;\\n    type: string;\\n    message: string;\\n}\\n```\\n\\n# Approach\\n\\nIn order to demo the approach we will create 2 `MasterData` objects:\\n\\n```\\n//=============================================\\n// Missing leadTimeDays\\n//=============================================\\nconst md1: any = {\\n  sku: \'sk2\',\\n  supplier: \'s2\',\\n  location: \'l2\',\\n  safetyStock: 10,\\n  orderSize: 4,\\n};\\n\\n//=============================================\\n// Missing orderSize\\n//=============================================\\nconst md2: any = {\\n  sku: \'sk2\',\\n  supplier: \'s2\',\\n  location: \'l2\',\\n  safetyStock: 10,\\n  leadTimeDays: 15,\\n};\\n```\\n\\nThe first is missing the `leadTimeDays` property and the second is missing the `orderSize` property.\\n\\nWe then create 2 `MasterData` instances using the properties and put them in an array:\\n\\n```\\nconst MD1 = new MasterData(md1);\\nconst MD2 = new MasterData(md2);\\nconst MDS = [MD1, MD2];\\n```\\n\\nWe validate the error using the [Firefly Semantics Validator](https://www.npmjs.com/package/@fireflysemantics/validator) `validateEntities` function:\\n\\n```\\nconst EES: EntityError[] = validateEntities(MDS, \'sku\');\\n```\\n\\nNote that the second argument `sku` is the name of the property that maps to the `id` property of the `EntityError` interface.\\n\\nThat produces 2 `EntityError` instances.  One for each property that is invalid:\\n\\n```\\n[\\n   {\\n      \\"id\\":\\"sk2\\",\\n      \\"property\\":\\"leadTimeDays\\",\\n      \\"message\\":\\"The value contained by leadTimeDays, undefined, should not be null or undefined\\",\\n      \\"value\\": undefined,\\n      \\"type\\":\\"MasterData\\"\\n   },\\n   {\\n      \\"id\\":\\"sk2\\",\\n      \\"property\\":\\"orderSize\\",\\n      \\"message\\":\\"The value contained by orderSize, undefined, should not be null or undefined\\",\\n      \\"value\\": undefined,\\n      \\"type\\":\\"MasterData\\"\\n   }\\n]\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Validating MasterData Entities with Firefly Semantics Validator.\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-mw4tns?file=ValidateMasterData.ts\\">\\n</fs-link-preview>","html":"<p>We have <code>MasterData</code> entities annotated with <a href=\'https://www.npmjs.com/package/@fireflysemantics/validator\'>Firefly Semantics Validator</a> annotations:</p>\\n<pre><code>/**\\n * The Master Data\\n */\\nexport class MasterData {\\n  gid?: string;\\n  id?: string;\\n\\n  @IsString()\\n  @IsDefined()\\n  public sku!: string;\\n  @IsString()\\n  @IsDefined()\\n  public supplier!: string;\\n  @IsString()\\n  @IsDefined()\\n  public location!: string;\\n  @IsNumber()\\n  @IsDefined()\\n  public safetyStock: number = 0;\\n  @IsNumber()\\n  @IsDefined()\\n  public leadTimeDays!: number;\\n  public orderSize: number = 1;\\n\\n  constructor(md?: any) {\\n    if (md) {\\n      Object.assign(this, md);\\n    }\\n  }\\n}\\n</code></pre>\\n<p>We want to batch validate the instances, and for each property that is invalid we will produce an instance of the following <code>EntityError</code> interface:</p>\\n<pre><code>/**\\n * Interface for Entity error reporting.\\n */\\nexport interface EntityError {\\n    id: string;\\n    property: string;\\n    value: string;\\n    type: string;\\n    message: string;\\n}\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>In order to demo the approach we will create 2 <code>MasterData</code> objects:</p>\\n<pre><code>//=============================================\\n// Missing leadTimeDays\\n//=============================================\\nconst md1: any = {\\n  sku: &#39;sk2&#39;,\\n  supplier: &#39;s2&#39;,\\n  location: &#39;l2&#39;,\\n  safetyStock: 10,\\n  orderSize: 4,\\n};\\n\\n//=============================================\\n// Missing orderSize\\n//=============================================\\nconst md2: any = {\\n  sku: &#39;sk2&#39;,\\n  supplier: &#39;s2&#39;,\\n  location: &#39;l2&#39;,\\n  safetyStock: 10,\\n  leadTimeDays: 15,\\n};\\n</code></pre>\\n<p>The first is missing the <code>leadTimeDays</code> property and the second is missing the <code>orderSize</code> property.</p>\\n<p>We then create 2 <code>MasterData</code> instances using the properties and put them in an array:</p>\\n<pre><code>const MD1 = new MasterData(md1);\\nconst MD2 = new MasterData(md2);\\nconst MDS = [MD1, MD2];\\n</code></pre>\\n<p>We validate the error using the <a href=\'https://www.npmjs.com/package/@fireflysemantics/validator\'>Firefly Semantics Validator</a> <code>validateEntities</code> function:</p>\\n<pre><code>const EES: EntityError[] = validateEntities(MDS, &#39;sku&#39;);\\n</code></pre>\\n<p>Note that the second argument <code>sku</code> is the name of the property that maps to the <code>id</code> property of the <code>EntityError</code> interface.</p>\\n<p>That produces 2 <code>EntityError</code> instances.  One for each property that is invalid:</p>\\n<pre><code>[\\n   {\\n      &quot;id&quot;:&quot;sk2&quot;,\\n      &quot;property&quot;:&quot;leadTimeDays&quot;,\\n      &quot;message&quot;:&quot;The value contained by leadTimeDays, undefined, should not be null or undefined&quot;,\\n      &quot;value&quot;: undefined,\\n      &quot;type&quot;:&quot;MasterData&quot;\\n   },\\n   {\\n      &quot;id&quot;:&quot;sk2&quot;,\\n      &quot;property&quot;:&quot;orderSize&quot;,\\n      &quot;message&quot;:&quot;The value contained by orderSize, undefined, should not be null or undefined&quot;,\\n      &quot;value&quot;: undefined,\\n      &quot;type&quot;:&quot;MasterData&quot;\\n   }\\n]\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Validating MasterData Entities with Firefly Semantics Validator.\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-mw4tns?file=ValidateMasterData.ts\'>\\n</fs-link-preview></p>\\n","summary":"Validating MasterData Entities with Firefly Semantics Validator.","tags":["JavaScript","TypeScript","Validator"],"tagString":"JavaScript, TypeScript, Validator","author":"Ole Ersoy","date":"3/3/2022","headerImage":"bird-5073270_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/bird-5073270_1920.jpg","title":"Validating MasterData Entities with Firefly Semantics Validator","readingTime":2,"wordCount":335},{"category":"Tasks","type":"task","md5":"216a5b1990b96a06a1063741afca6463","filename":"validating-typescript-business-entities-with-firefly-semantics-validator.md","path":"tasks/validator/validating-typescript-business-entities-with-firefly-semantics-validator.md","id":"tasks--validator--validating-typescript-business-entities-with-firefly-semantics-validator","markdown":"\\nWe have PurchaseOrderDTO instances coming in over the wire [as described here](https://developer.fireflysemantics.com/tasks/tasks--validator--validating-typescript-data-transfer-objects-with-firefly-semantics-validator).\\n\\nWe wish to construct `PurchaseOrder` instances using the `PurchaseOrderDTO` instances and then validate the following:\\n\\n- The `quantity` is an integer\\nBoth the `purchaseDate` and the `receiptDate` are Date instances.\\nThe `purchaseDate` comes before the `receiptDate`\\nThe `receiptDate` will only be validated if the `purchaseDate` is valid. This functionality is provided by the `@IfValid` decorator and prevents validation noise.\\n\\n# Approach\\n\\nAfter the `PurchaseOrderDTO` has been validated we drop it in to a `PurchaseOrder` constructor. The `PurchaseOrder` business entity  class is defined below:\\n\\n```\\nimport {\\n  IfValid,\\n  IsAfterInstant,\\n  IsNumber,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from \'@fireflysemantics/validator\';\\nimport { PurchaseOrderDTO } from \'./PurchaseOrderDTO\';\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(\'purchaseDate\')\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(\'purchaseDate\')\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(dto: PurchaseOrderDTO) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, dto);\\n    this.purchaseDate = new Date(dto.purchaseDate);\\n    this.receiptDate = new Date(dto.receiptDate);\\n    this.quantity = parseInt(dto.quantity);\\n  }\\n}\\n```\\n\\nWe use `Object.assign` to set the `sku` and `id` properties as these are string typed and can be mapped directly.\\n\\nWe create typed instances of the variables:\\n- `quantity`\\n- `receiptDate`\\n- `purchaseDates`\\n\\nAfter `PurchaseOrder` instance construction we can validate the instance like this:\\n\\n```\\nconst poDTO1: PurchaseOrderDTO = new PurchaseOrderDTO({});\\nconst poInvalid: PurchaseOrder = new PurchaseOrder(poDTO1);\\nconst poInValid: ObjectErrors = validate(poInvalid);\\nconst errors: ValidationError[] = poInValid.errors;\\nassert.equal(poInValid.errors.length, 5, \'There should be 5 errors\');\\n```\\n\\n\\nIn this case we can see that 5 errors are generated. One for each property.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Validating Typescript Business Entities with Firefly Semantics Validator.\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-ijafxn\\">\\n</fs-link-preview>","html":"<p>We have PurchaseOrderDTO instances coming in over the wire <a href=\'https://developer.fireflysemantics.com/tasks/tasks--validator--validating-typescript-data-transfer-objects-with-firefly-semantics-validator\'>as described here</a>.</p>\\n<p>We wish to construct <code>PurchaseOrder</code> instances using the <code>PurchaseOrderDTO</code> instances and then validate the following:</p>\\n<ul>\\n<li>The <code>quantity</code> is an integer\\nBoth the <code>purchaseDate</code> and the <code>receiptDate</code> are Date instances.\\nThe <code>purchaseDate</code> comes before the <code>receiptDate</code>\\nThe <code>receiptDate</code> will only be validated if the <code>purchaseDate</code> is valid. This functionality is provided by the <code>@IfValid</code> decorator and prevents validation noise.</li>\\n</ul>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>After the <code>PurchaseOrderDTO</code> has been validated we drop it in to a <code>PurchaseOrder</code> constructor. The <code>PurchaseOrder</code> business entity  class is defined below:</p>\\n<pre><code>import {\\n  IfValid,\\n  IsAfterInstant,\\n  IsNumber,\\n  IsDate,\\n  IsDefined,\\n  IsString,\\n  IsInt,\\n} from &#39;@fireflysemantics/validator&#39;;\\nimport { PurchaseOrderDTO } from &#39;./PurchaseOrderDTO&#39;;\\n\\nexport class PurchaseOrder {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsDate()\\n  @IsDefined()\\n  purchaseDate: Date;\\n\\n  @IsAfterInstant(&#39;purchaseDate&#39;)\\n  @IsDate()\\n  @IsDefined()\\n  @IfValid(&#39;purchaseDate&#39;)\\n  receiptDate: Date;\\n\\n  @IsInt()\\n  @IsDefined()\\n  quantity: number;\\n  constructor(dto: PurchaseOrderDTO) {\\n    //===================================\\n    // Initialize the sku and id properties\\n    // with Object.assign\\n    //===================================\\n    Object.assign(this, dto);\\n    this.purchaseDate = new Date(dto.purchaseDate);\\n    this.receiptDate = new Date(dto.receiptDate);\\n    this.quantity = parseInt(dto.quantity);\\n  }\\n}\\n</code></pre>\\n<p>We use <code>Object.assign</code> to set the <code>sku</code> and <code>id</code> properties as these are string typed and can be mapped directly.</p>\\n<p>We create typed instances of the variables:</p>\\n<ul>\\n<li><code>quantity</code></li>\\n<li><code>receiptDate</code></li>\\n<li><code>purchaseDates</code></li>\\n</ul>\\n<p>After <code>PurchaseOrder</code> instance construction we can validate the instance like this:</p>\\n<pre><code>const poDTO1: PurchaseOrderDTO = new PurchaseOrderDTO({});\\nconst poInvalid: PurchaseOrder = new PurchaseOrder(poDTO1);\\nconst poInValid: ObjectErrors = validate(poInvalid);\\nconst errors: ValidationError[] = poInValid.errors;\\nassert.equal(poInValid.errors.length, 5, &#39;There should be 5 errors&#39;);\\n</code></pre>\\n<p>In this case we can see that 5 errors are generated. One for each property.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Validating Typescript Business Entities with Firefly Semantics Validator.\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-ijafxn\'>\\n</fs-link-preview></p>\\n","summary":"Validating Typescript Business Entities with Firefly Semantics Validator.","tags":["JavaScript","TypeScript","Validator"],"tagString":"JavaScript, TypeScript, Validator","author":"Ole Ersoy","date":"11/12/2021","headerImage":"crocodile-195783.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/crocodile-195783.jpg","title":"Validating Typescript Business Entities with Firefly Semantics Validator","readingTime":2,"wordCount":311},{"category":"Tasks","type":"task","md5":"4e108322c4277afa58caf827904716ee","filename":"validating-typescript-data-transfer-objects-with-firefly-semantics-validator.md","path":"tasks/validator/validating-typescript-data-transfer-objects-with-firefly-semantics-validator.md","id":"tasks--validator--validating-typescript-data-transfer-objects-with-firefly-semantics-validator","markdown":"\\nWe are receiving data transfer object instances with a `PurchaseOrderDTO` type and we need to validate them using [Firefly Semantics Validator](https://www.npmjs.com/package/@fireflysemantics/validator).\\n\\n# Approach\\n\\n\\nThe `PurchaseOrderDTO` has been annotated with Firefly Semantics Validator validation annotations as follows:\\n\\n```\\nimport {\\n  IsNumberString,\\n  IsISODateString,\\n  IsDefined,\\n  IsString,\\n} from \'@fireflysemantics/validator\';\\n\\nexport class PurchaseOrderDTO {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsISODateString()\\n  @IsString()\\n  @IsDefined()\\n  purchaseDate: string;\\n\\n  @IsISODateString()\\n  @IsString()\\n  @IsDefined()\\n  receiptDate: string;\\n\\n  @IsNumberString()\\n  @IsString()\\n  @IsDefined()\\n  quantity: string;\\n  constructor(o: any) {\\n    Object.assign(this, o);\\n  }\\n}\\n```\\n\\nWe will create an instance an validate it:\\n\\n```\\nconst poDTOValid: PurchaseOrderDTO = new PurchaseOrderDTO(\\n{\\n    sku: \'skuABC\',\\n    id: \'123\',\\n    purchaseDate: \'2021-11-22\',\\n    receiptDate: \'2021-11-28\',\\n    quantity: \'2\',\\n});\\nconst oeValid: ObjectErrors = validate(poDTOValid);\\nassert.equal(oeValid.errors.length, 0, \'There should be 0 errors\');\\n```\\n\\n\\nIn this case there are no errors, as all the properties are valid.\\n\\nLets create another instance with no valid properties:\\n\\n```\\nconst poDTOInvalid1: PurchaseOrderDTO = new PurchaseOrderDTO({});\\nconst oeInvalid: ObjectErrors = validate(poDTOInvalid1);\\nassert.equal(oeInvalid.errors.length, 5, \'There should be 5 errors\');\\n```\\n\\nIn this case the @IsDefined annotation is triggered 5 times, creating 5 `ValidationError` error instances.\\n\\n# Demo\\n\\n<fs-link-preview \\n  imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n\\ttitle=\\"Stackblitz Demo\\" \\n  description=\\"Validating Typescript Data Transfer Objects with Firefly Semantics Validator.\\"\\n\\tdomain=\\"stackblitz.com\\" \\n  url=\\"https://stackblitz.com/edit/typescript-vixbqp?file=index.ts\\">\\n</fs-link-preview>","html":"<p>We are receiving data transfer object instances with a <code>PurchaseOrderDTO</code> type and we need to validate them using <a href=\'https://www.npmjs.com/package/@fireflysemantics/validator\'>Firefly Semantics Validator</a>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>The <code>PurchaseOrderDTO</code> has been annotated with Firefly Semantics Validator validation annotations as follows:</p>\\n<pre><code>import {\\n  IsNumberString,\\n  IsISODateString,\\n  IsDefined,\\n  IsString,\\n} from &#39;@fireflysemantics/validator&#39;;\\n\\nexport class PurchaseOrderDTO {\\n  @IsString()\\n  @IsDefined()\\n  id: string;\\n  @IsString()\\n  @IsDefined()\\n  sku: string;\\n\\n  @IsISODateString()\\n  @IsString()\\n  @IsDefined()\\n  purchaseDate: string;\\n\\n  @IsISODateString()\\n  @IsString()\\n  @IsDefined()\\n  receiptDate: string;\\n\\n  @IsNumberString()\\n  @IsString()\\n  @IsDefined()\\n  quantity: string;\\n  constructor(o: any) {\\n    Object.assign(this, o);\\n  }\\n}\\n</code></pre>\\n<p>We will create an instance an validate it:</p>\\n<pre><code>const poDTOValid: PurchaseOrderDTO = new PurchaseOrderDTO(\\n{\\n    sku: &#39;skuABC&#39;,\\n    id: &#39;123&#39;,\\n    purchaseDate: &#39;2021-11-22&#39;,\\n    receiptDate: &#39;2021-11-28&#39;,\\n    quantity: &#39;2&#39;,\\n});\\nconst oeValid: ObjectErrors = validate(poDTOValid);\\nassert.equal(oeValid.errors.length, 0, &#39;There should be 0 errors&#39;);\\n</code></pre>\\n<p>In this case there are no errors, as all the properties are valid.</p>\\n<p>Lets create another instance with no valid properties:</p>\\n<pre><code>const poDTOInvalid1: PurchaseOrderDTO = new PurchaseOrderDTO({});\\nconst oeInvalid: ObjectErrors = validate(poDTOInvalid1);\\nassert.equal(oeInvalid.errors.length, 5, &#39;There should be 5 errors&#39;);\\n</code></pre>\\n<p>In this case the @IsDefined annotation is triggered 5 times, creating 5 <code>ValidationError</code> error instances.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n  imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n    title=\'Stackblitz Demo\' \\n  description=\'Validating Typescript Data Transfer Objects with Firefly Semantics Validator.\'\\n    domain=\'stackblitz.com\' \\n  url=\'https://stackblitz.com/edit/typescript-vixbqp?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Validating Typescript Data Transfer Objects with Firefly Semantics Validator.","tags":["JavaScript","TypeScript","Validator"],"tagString":"JavaScript, TypeScript, Validator","author":"Ole Ersoy","date":"11/12/2021","headerImage":"animal-2905840_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/animal-2905840_1920.jpg","title":"Validating Typescript Data Transfer Objects with Firefly Semantics Validator","readingTime":2,"wordCount":225},{"category":"Tasks","type":"task","md5":"a9382603f8c174f1585c1a6667414182","filename":"dependency-management-for-angular-package-format-modules.md","path":"tasks/verdaccio/dependency-management-for-angular-package-format-modules.md","id":"tasks--verdaccio--dependency-management-for-angular-package-format-modules","markdown":"\\nWe have setup an Angular Workspace containing two library projects:\\n\\n- @fireflysemantics/forecasting\\n- @fireflysemantics/optimization\\n\\nBoth are Angular Package Format libraries. The library `@fireflysemantics/forecasting` has `@fireflysemantics/optimization` as a peer dependency.\\n\\nWhenever we publish updates of `@fireflysemantics/optimization` to **Verdaccio** we want those updates to be available within the `@fireflysemantics/forecasting` library.\\n\\nWe want to manage this using NPM Scripts.\\n\\nFor general instructions on how to create an Angular Package Format library see [Creating an Angular NPM Installable Service Library](https://developer.fireflysemantics.com/tasks/tasks--angular--creating-an-angular-npm-installable-service-library).\\n\\nFor instructions on how to setup Verdaccio see [Installing and Testing Verdaccio ](https://developer.fireflysemantics.com/tasks/tasks--verdaccio--installing-and-testing-verdaccio).\\n\\n# Approach\\n\\nBoth libraries reside in a workspace called `fs-modules`. \\n\\nWill create an `fs-module-dependencies` package containing the `@fireflysemantics/optimization` peer dependency project.\\n```\\nmkdir fs-modules-dependencies\\ncd fs-modules-dependencies\\nnpm init -y\\n```\\n\\nUpdate `package.json` to look like this:\\n```\\n{\\n   \\"name\\": \\"@fireflysemantics/fs-modules-dependencies\\",\\n   \\"publishConfig\\": {\\n       \\"access\\": \\"restricted\\",\\n       \\"registry\\": \\"http://localhost:4873\\"\\n},\\n  \\"scripts\\": {\\n    \\"ig\\": \\"npm install -g @jsdevtools/version-bump-prompt\\",\\n    \\"bp\\": \\"bump patch\\",\\n    \\"p\\": \\"npm run bp && npm publish && cd ../fs-modules && npm run i\\"\\n  },\\n\\"dependencies\\": {\\n    \\"@fireflysemantics/optimization\\": \\"*\\"\\n},\\n\\"version\\": \\"1.0.0\\",\\n\\"description\\": \\"\\",\\n\\"main\\": \\"index.js\\",\\n\\"scripts\\": {\\n    \\"ig\\": \\"npm install -g @jsdevtools/version-bump-prompt\\",\\n    \\"bp\\": \\"bump patch\\",\\n    \\"p\\": \\"npm run bp && npm publish\\"\\n},\\n\\"keywords\\": [],\\n\\"author\\": \\"Ole Ersoy\\"\\n}\\n```\\n\\nAnytime we want to publish an update to this project we run `npm run p`.\\n\\n\\nNotice that the `ig` ( Install Global ) script allows us to install the global package `@jsdevtools/version-bump-promt` we are using for bumping the semantic version of the `@fireflysemantics/fs-modules-dependencies` project.\\n\\nAlso notice that we have set the semantic version of `@fireflysemantics/optimization` to `*`. \\n\\nDoing this causes NPM to always look for the latest version when we install `@fireflysemantics/fs-modules-dependencies` in `@fireflysemantics/fs-modules`.\\n\\nPublish `@fireflysemantics/fs-module-dependencies` to Verdaccio ( `npm publish` ).\\n\\nThen go into the `fs-modules` project an install it as a dependency.\\n```\\ncd ../fs-modules\\nnpm i @fireflysemantics/fs-modules-dependencies\\n```\\n\\nAlso within fs-modules add a script for installing `@fireflysemantics/fs-modules-dependencies`:\\n```\\n\\"i\\": \\"npm i @fireflysemantics/fs-modules-dependencies\\"\\n```\\n\\nAnytime we run `npm run i` within the `fs-modules` Angular Workspace, it will install the latest version of `@fireflysemantics/optimization` since we set the semantic version of this depenency to `*` within `@fireflysemantics/fs-modules-dependencies`.\\n\\nAlso we can add more peer dependencies that are common to all our modules and as long as the version is set to `*` the latest release will be installed.\\n\\nFor example we also use these in various library projects:\\n- `\\"@fireflysemantics/slice\\": \\"*\\"`\\n- `\\"nanoid\\": \\"*\\"`\\n\\nSo they are included in the `fs-modules-dependencies` depdencies section as well.  \\n\\nRemember to publish `fs-modules-dependencies` each time new peer dependencies are added.\\n\\nIn order to make this simple we have included a publish script `p`:\\n```\\n\\"p\\": \\"npm run bp && npm publish && cd ../fs-modules && npm run i\\"\\n```\\n\\nThus whenever we run `npm run p` from inside the `fs-modules-dependencies` directory, the `fs-modules` project will be updated with the latest set of dependencies.","html":"<p>We have setup an Angular Workspace containing two library projects:</p>\\n<ul>\\n<li>@fireflysemantics/forecasting</li>\\n<li>@fireflysemantics/optimization</li>\\n</ul>\\n<p>Both are Angular Package Format libraries. The library <code>@fireflysemantics/forecasting</code> has <code>@fireflysemantics/optimization</code> as a peer dependency.</p>\\n<p>Whenever we publish updates of <code>@fireflysemantics/optimization</code> to <strong>Verdaccio</strong> we want those updates to be available within the <code>@fireflysemantics/forecasting</code> library.</p>\\n<p>We want to manage this using NPM Scripts.</p>\\n<p>For general instructions on how to create an Angular Package Format library see <a href=\'https://developer.fireflysemantics.com/tasks/tasks--angular--creating-an-angular-npm-installable-service-library\'>Creating an Angular NPM Installable Service Library</a>.</p>\\n<p>For instructions on how to setup Verdaccio see <a href=\'https://developer.fireflysemantics.com/tasks/tasks--verdaccio--installing-and-testing-verdaccio\'>Installing and Testing Verdaccio </a>.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Both libraries reside in a workspace called <code>fs-modules</code>. </p>\\n<p>Will create an <code>fs-module-dependencies</code> package containing the <code>@fireflysemantics/optimization</code> peer dependency project.</p>\\n<pre><code>mkdir fs-modules-dependencies\\ncd fs-modules-dependencies\\nnpm init -y\\n</code></pre>\\n<p>Update <code>package.json</code> to look like this:</p>\\n<pre><code>{\\n   &quot;name&quot;: &quot;@fireflysemantics/fs-modules-dependencies&quot;,\\n   &quot;publishConfig&quot;: {\\n       &quot;access&quot;: &quot;restricted&quot;,\\n       &quot;registry&quot;: &quot;http://localhost:4873&quot;\\n},\\n  &quot;scripts&quot;: {\\n    &quot;ig&quot;: &quot;npm install -g @jsdevtools/version-bump-prompt&quot;,\\n    &quot;bp&quot;: &quot;bump patch&quot;,\\n    &quot;p&quot;: &quot;npm run bp &amp;&amp; npm publish &amp;&amp; cd ../fs-modules &amp;&amp; npm run i&quot;\\n  },\\n&quot;dependencies&quot;: {\\n    &quot;@fireflysemantics/optimization&quot;: &quot;*&quot;\\n},\\n&quot;version&quot;: &quot;1.0.0&quot;,\\n&quot;description&quot;: &quot;&quot;,\\n&quot;main&quot;: &quot;index.js&quot;,\\n&quot;scripts&quot;: {\\n    &quot;ig&quot;: &quot;npm install -g @jsdevtools/version-bump-prompt&quot;,\\n    &quot;bp&quot;: &quot;bump patch&quot;,\\n    &quot;p&quot;: &quot;npm run bp &amp;&amp; npm publish&quot;\\n},\\n&quot;keywords&quot;: [],\\n&quot;author&quot;: &quot;Ole Ersoy&quot;\\n}\\n</code></pre>\\n<p>Anytime we want to publish an update to this project we run <code>npm run p</code>.</p>\\n<p>Notice that the <code>ig</code> ( Install Global ) script allows us to install the global package <code>@jsdevtools/version-bump-promt</code> we are using for bumping the semantic version of the <code>@fireflysemantics/fs-modules-dependencies</code> project.</p>\\n<p>Also notice that we have set the semantic version of <code>@fireflysemantics/optimization</code> to <code>*</code>. </p>\\n<p>Doing this causes NPM to always look for the latest version when we install <code>@fireflysemantics/fs-modules-dependencies</code> in <code>@fireflysemantics/fs-modules</code>.</p>\\n<p>Publish <code>@fireflysemantics/fs-module-dependencies</code> to Verdaccio ( <code>npm publish</code> ).</p>\\n<p>Then go into the <code>fs-modules</code> project an install it as a dependency.</p>\\n<pre><code>cd ../fs-modules\\nnpm i @fireflysemantics/fs-modules-dependencies\\n</code></pre>\\n<p>Also within fs-modules add a script for installing <code>@fireflysemantics/fs-modules-dependencies</code>:</p>\\n<pre><code>&quot;i&quot;: &quot;npm i @fireflysemantics/fs-modules-dependencies&quot;\\n</code></pre>\\n<p>Anytime we run <code>npm run i</code> within the <code>fs-modules</code> Angular Workspace, it will install the latest version of <code>@fireflysemantics/optimization</code> since we set the semantic version of this depenency to <code>*</code> within <code>@fireflysemantics/fs-modules-dependencies</code>.</p>\\n<p>Also we can add more peer dependencies that are common to all our modules and as long as the version is set to <code>*</code> the latest release will be installed.</p>\\n<p>For example we also use these in various library projects:</p>\\n<ul>\\n<li><code>&quot;@fireflysemantics/slice&quot;: &quot;*&quot;</code></li>\\n<li><code>&quot;nanoid&quot;: &quot;*&quot;</code></li>\\n</ul>\\n<p>So they are included in the <code>fs-modules-dependencies</code> depdencies section as well.  </p>\\n<p>Remember to publish <code>fs-modules-dependencies</code> each time new peer dependencies are added.</p>\\n<p>In order to make this simple we have included a publish script <code>p</code>:</p>\\n<pre><code>&quot;p&quot;: &quot;npm run bp &amp;&amp; npm publish &amp;&amp; cd ../fs-modules &amp;&amp; npm run i&quot;\\n</code></pre>\\n<p>Thus whenever we run <code>npm run p</code> from inside the <code>fs-modules-dependencies</code> directory, the <code>fs-modules</code> project will be updated with the latest set of dependencies.</p>\\n","summary":"Dependency Management for Angular Package Format Modules.","tags":["Angular","JavaScript","TypeScript","Verdaccio"],"tagString":"Angular, JavaScript, TypeScript, Verdaccio","author":"Ole Ersoy","date":"3/06/2021","headerImage":"color-pop-5650322_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/color-pop-5650322_1920.jpg","title":"Dependency Management for Angular Package Format Modules","readingTime":3,"wordCount":518},{"category":"Tasks","type":"task","md5":"49f6337aea6bef4f728e4846f0862264","filename":"installing-and-testing-verdaccio.md","path":"tasks/verdaccio/installing-and-testing-verdaccio.md","id":"tasks--verdaccio--installing-and-testing-verdaccio","markdown":"\\nWe want to use [Verdaccio](https://www.npmjs.com/package/verdaccio) for our local NPM Packages.\\n\\n# Approach\\n\\n```\\nnpm install -g verdaccio\\n```\\n\\nExecute the CLI command:\\n\\n```\\nverdaccio warn --- config file  - /home/.config/verdaccio/config.yaml warn --- http address - http://localhost:4873/ - verdaccio/3.0.0\\n```\\n\\nSet Verdaccio as the local registry:\\n```\\nnpm set registry http://localhost:4873/\\n```\\n\\nOr use the http option when installing:\\n```\\nnpm install --registry http://localhost:4873\\n```\\n\\nStart Verdaccio by running:\\n```\\nverdaccio\\n```\\n\\nYou should see the following printed on the console:\\n```\\n warn --- config file  - /home/ole/.config/verdaccio/config.yaml\\n warn --- Verdaccio started\\n warn --- Plugin successfully loaded: verdaccio-htpasswd\\n warn --- Plugin successfully loaded: verdaccio-audit\\n warn --- http address - http://localhost:4873/ - verdaccio/4.4.0\\n```\\n\\nAdd yourself as a user:\\n```\\nnpm adduser --registry http://localhost:4873\\n```\\n\\n# Testing\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/jellyfish-1327113_1920.jpg\\"\\n  \\ttitle=\\"Creating an Untyped NPM Module\\" \\n    description=\\"Creating an Untyped NPM Module\\"\\n  \\tdomain=\\"developer.fireflysemantics.com\\" \\n    url=\\"https://developer.fireflysemantics.com/tasks/tasks--typescript--creating-an-untyped-npm-module\\">\\n</fs-link-preview>\\n\\n```\\nnpm publish\\n```\\n\\nVisit `http://localhost:4873`\\n\\n\\nYou should see your package published.\\n\\nNow install the package in a local project:\\n```\\nmkdir testinstall\\ncd testinstall\\nnpm init -y\\nnpm install -S untyped-npm-module\\n```\\n\\nYou should see untyped-npm-module installed and the install should be logged on the Verdaccio console:\\n```\\nhttp <-- 200, user: ole(127.0.0.1), req: \'GET /untyped-npm-module/-/untyped-npm-module-1.1.1.tgz\', bytes: 0/338\\n http <-- 200, user: ole(127.0.0.1), req: \'GET /untyped-npm-module/-/untyped-npm-module-1.1.1.tgz\', bytes: 0/338\\n ```\\n\\n# Bonus\\n\\nIf you want to make sure that you only publish your package to Verdaccio include the following in the `package.json` file:\\n```\\n\\"publishConfig\\":{\\n    \\"access\\": \\"restricted\\",\\n    \\"registry\\":\\"http://localhost:4873\\"\\n}\\n```\\n\\nNote that in order for this to work the package has to be scoped . For example Firefly Semantics packages are scoped with `@fireflysemantics/`. \\n\\nSo for example Slice is has the name:\\n```\\n@fireflysemantics/slice\\n```\\n\\n# Switching Back to NPM\\n\\nIf you need to publish a package to NPM you must set the registry to NPM again. Run:\\n```\\nnpm config set registry https://registry.npmjs.org/\\n```\\n\\n# Resetting the Database\\n\\nStop verdaccio with `ctrl+c`.\\n\\nGo to your settings. In my case they are located in:\\n```\\n~/.config/verdaccio/config.yaml\\n```\\n\\nLook for the storage location. My configuration looks like this:\\n```\\n# path to a directory with all packages\\nstorage: /home/ole/.local/share/verdaccio/storage\\n```\\n\\nRemove all the packages in the storage directory:\\n```\\nrm -fr ~/.local/share/verdaccio/storage/\\n```\\n\\nStart verdaccio:\\n```\\nverdaccio\\n```\\n\\nVisit:\\n```\\nhttp://localhost:4873/\\n```\\nIt should tell you that no packages are installed.\\nLogin again in order to be able to publish to verdaccio:\\n```\\nnpm adduser --registry http://localhost:4873\\n```","html":"<p>We want to use <a href=\'https://www.npmjs.com/package/verdaccio\'>Verdaccio</a> for our local NPM Packages.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<pre><code>npm install -g verdaccio\\n</code></pre>\\n<p>Execute the CLI command:</p>\\n<pre><code>verdaccio warn --- config file  - /home/.config/verdaccio/config.yaml warn --- http address - http://localhost:4873/ - verdaccio/3.0.0\\n</code></pre>\\n<p>Set Verdaccio as the local registry:</p>\\n<pre><code>npm set registry http://localhost:4873/\\n</code></pre>\\n<p>Or use the http option when installing:</p>\\n<pre><code>npm install --registry http://localhost:4873\\n</code></pre>\\n<p>Start Verdaccio by running:</p>\\n<pre><code>verdaccio\\n</code></pre>\\n<p>You should see the following printed on the console:</p>\\n<pre><code> warn --- config file  - /home/ole/.config/verdaccio/config.yaml\\n warn --- Verdaccio started\\n warn --- Plugin successfully loaded: verdaccio-htpasswd\\n warn --- Plugin successfully loaded: verdaccio-audit\\n warn --- http address - http://localhost:4873/ - verdaccio/4.4.0\\n</code></pre>\\n<p>Add yourself as a user:</p>\\n<pre><code>npm adduser --registry http://localhost:4873\\n</code></pre>\\n<h1 id=\'testing\'>Testing</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/jellyfish-1327113_1920.jpg\'\\n      title=\'Creating an Untyped NPM Module\' \\n    description=\'Creating an Untyped NPM Module\'\\n      domain=\'developer.fireflysemantics.com\' \\n    url=\'https://developer.fireflysemantics.com/tasks/tasks--typescript--creating-an-untyped-npm-module\'>\\n</fs-link-preview></p>\\n<pre><code>npm publish\\n</code></pre>\\n<p>Visit <code>http://localhost:4873</code></p>\\n<p>You should see your package published.</p>\\n<p>Now install the package in a local project:</p>\\n<pre><code>mkdir testinstall\\ncd testinstall\\nnpm init -y\\nnpm install -S untyped-npm-module\\n</code></pre>\\n<p>You should see untyped-npm-module installed and the install should be logged on the Verdaccio console:</p>\\n<pre><code>http &lt;-- 200, user: ole(127.0.0.1), req: &#39;GET /untyped-npm-module/-/untyped-npm-module-1.1.1.tgz&#39;, bytes: 0/338\\n http &lt;-- 200, user: ole(127.0.0.1), req: &#39;GET /untyped-npm-module/-/untyped-npm-module-1.1.1.tgz&#39;, bytes: 0/338\\n</code></pre>\\n<h1 id=\'bonus\'>Bonus</h1>\\n<p>If you want to make sure that you only publish your package to Verdaccio include the following in the <code>package.json</code> file:</p>\\n<pre><code>&quot;publishConfig&quot;:{\\n    &quot;access&quot;: &quot;restricted&quot;,\\n    &quot;registry&quot;:&quot;http://localhost:4873&quot;\\n}\\n</code></pre>\\n<p>Note that in order for this to work the package has to be scoped . For example Firefly Semantics packages are scoped with <code>@fireflysemantics/</code>. </p>\\n<p>So for example Slice is has the name:</p>\\n<pre><code>@fireflysemantics/slice\\n</code></pre>\\n<h1 id=\'switching-back-to-npm\'>Switching Back to NPM</h1>\\n<p>If you need to publish a package to NPM you must set the registry to NPM again. Run:</p>\\n<pre><code>npm config set registry https://registry.npmjs.org/\\n</code></pre>\\n<h1 id=\'resetting-the-database\'>Resetting the Database</h1>\\n<p>Stop verdaccio with <code>ctrl+c</code>.</p>\\n<p>Go to your settings. In my case they are located in:</p>\\n<pre><code>~/.config/verdaccio/config.yaml\\n</code></pre>\\n<p>Look for the storage location. My configuration looks like this:</p>\\n<pre><code># path to a directory with all packages\\nstorage: /home/ole/.local/share/verdaccio/storage\\n</code></pre>\\n<p>Remove all the packages in the storage directory:</p>\\n<pre><code>rm -fr ~/.local/share/verdaccio/storage/\\n</code></pre>\\n<p>Start verdaccio:</p>\\n<pre><code>verdaccio\\n</code></pre>\\n<p>Visit:</p>\\n<pre><code>http://localhost:4873/\\n</code></pre>\\n<p>It should tell you that no packages are installed.\\nLogin again in order to be able to publish to verdaccio:</p>\\n<pre><code>npm adduser --registry http://localhost:4873\\n</code></pre>\\n","summary":"Installing and Testing Verdaccio.","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/24/2021","headerImage":"e.jpeg","headerImageURL":"https://fireflysemantics.github.io/i/developer/e.jpeg","title":"Installing and Testing Verdaccio","readingTime":3,"wordCount":457},{"category":"Tasks","type":"task","md5":"902f635bcc98c6ab1397b705b9d15465","filename":"adding-multiple-line-comments-simultaneously-in-vscode.md","path":"tasks/vscode/adding-multiple-line-comments-simultaneously-in-vscode.md","id":"tasks--vscode--adding-multiple-line-comments-simultaneously-in-vscode","markdown":"\\nWe want to add multiple line comments simultaneously on selected lines.\\n\\n# Approach\\n\\nSelect a block of code and use `Ctrl+K+C`.\\n\\nUse `ctrl+k+u` to uncomment the code.\\n\\n","html":"<p>We want to add multiple line comments simultaneously on selected lines.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Select a block of code and use <code>Ctrl+K+C</code>.</p>\\n<p>Use <code>ctrl+k+u</code> to uncomment the code.</p>\\n","summary":"Adding Multiple Line Comments Simultaneously In VSCode.","tags":["VSCode"],"tagString":"VSCode","author":"Ole Ersoy","date":"5/11/2022","headerImage":"millipede-346182_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/millipede-346182_1920.jpg","title":"Adding Multiple Line Comments Simultaneously In VSCode","readingTime":1,"wordCount":30},{"category":"Tasks","type":"task","md5":"d6b555adfc70d4e32272fa59bc012bf7","filename":"instant-html-boilerplate-in-vscode-with-emmet.md","path":"tasks/vscode/instant-html-boilerplate-in-vscode-with-emmet.md","id":"tasks--vscode--instant-html-boilerplate-in-vscode-with-emmet","markdown":"\\nWe want to produce the following html boilerplate:\\n\\n```\\n<!DOCTYPE html>\\n<html lang=\\"en\\">\\n<head>\\n    <meta charset=\\"UTF-8\\">\\n    <meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1.0\\">\\n    <title>Document</title>\\n</head>\\n<body>    \\n</body>\\n</html>\\n```\\n\\n# Approach\\n\\nCreate an empty `index.html` document. Place the cursor inside the `html` editor content and type `!`. You will get content selection dialog that looks like this:\\n\\n<img alt=\'instant html in vscode\' src=\'https://fireflysemantics.github.io/i/developer/instant-html-vscode.png\'>\\n\\n\\nSelect that and now the html start boilerplate is ready to go!\\n\\n# Bonus\\n\\nWhat you need more!? [Fine here\u2019s the emmet cheatsheet](https://docs.emmet.io/cheat-sheet/).","html":"<p>We want to produce the following html boilerplate:</p>\\n<pre><code>&lt;!DOCTYPE html&gt;\\n&lt;html lang=&quot;en&quot;&gt;\\n&lt;head&gt;\\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\\n    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;\\n    &lt;title&gt;Document&lt;/title&gt;\\n&lt;/head&gt;\\n&lt;body&gt;    \\n&lt;/body&gt;\\n&lt;/html&gt;\\n</code></pre>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Create an empty <code>index.html</code> document. Place the cursor inside the <code>html</code> editor content and type <code>!</code>. You will get content selection dialog that looks like this:</p>\\n<img alt=\'instant html in vscode\' src=\'https://fireflysemantics.github.io/i/developer/instant-html-vscode.png\'>\\n\\n\\n<p>Select that and now the html start boilerplate is ready to go!</p>\\n<h1 id=\'bonus\'>Bonus</h1>\\n<p>What you need more!? <a href=\'https://docs.emmet.io/cheat-sheet/\'>Fine here\u2019s the emmet cheatsheet</a>.</p>\\n","summary":"Instant HTML Boilerplate in VSCode With Emmet.","tags":["HTML","VSCode"],"tagString":"HTML, VSCode","author":"Ole Ersoy","date":"1/15/2021","headerImage":"light-bulb-4514505_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/light-bulb-4514505_1920.jpg","title":"Instant HTML Boilerplate in VSCode With Emmet","readingTime":1,"wordCount":109},{"category":"Tasks","type":"task","md5":"f76379e12efc8559ed4e47b31c4481a9","filename":"switching-themes-in-vscode.md","path":"tasks/vscode/switching-themes-in-vscode.md","id":"tasks--vscode--switching-themes-in-vscode","markdown":"\\nWe want to preview themes we have installed in VSCode.\\n\\n# Approach\\n\\n## MacOS\\n\\nOpen the Color Theme picker with `Code > Preferences > Color Theme` ( Or press `\u2318K \u2318T`)\\n\\nUse the cursor keys to preview the themes and then press enter to select the one you like.\\n\\n## Windows\\n\\nOpen the Color Theme picker with `File > Preferences > Color Theme` ( Or press `Ctrl+K Ctrl+T`).","html":"<p>We want to preview themes we have installed in VSCode.</p>\\n<h1 id=\'approach\'>Approach</h1>\\n<h2 id=\'macos\'>MacOS</h2>\\n<p>Open the Color Theme picker with <code>Code &gt; Preferences &gt; Color Theme</code> ( Or press <code>\u2318K \u2318T</code>)</p>\\n<p>Use the cursor keys to preview the themes and then press enter to select the one you like.</p>\\n<h2 id=\'windows\'>Windows</h2>\\n<p>Open the Color Theme picker with <code>File &gt; Preferences &gt; Color Theme</code> ( Or press <code>Ctrl+K Ctrl+T</code>).</p>\\n","summary":"Switching Themes in VSCode.","tags":["VSCode"],"tagString":"VSCode","author":"Ole Ersoy","date":"5/11/2022","headerImage":"snake-1285354_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/snake-1285354_1920.jpg","title":"Switching Themes in VSCode","readingTime":1,"wordCount":61},{"category":"Tasks","type":"task","md5":"8a05d0056adcfeb2428359874ca3953f","filename":"creating-link-previews-with-the-fs-link-preview-web-component.md","path":"tasks/web-component/creating-link-previews-with-the-fs-link-preview-web-component.md","id":"tasks--web-component--creating-link-previews-with-the-fs-link-preview-web-component","markdown":"\\nWe want create a link preview with a:\\n- `title`\\n- `description`\\n- `image`\\n- `domain`\\n- `url`\\n\\nThis is an example:\\n\\n<fs-link-preview imageURL=\\"https://raw.githubusercontent.com/fireflysemantics/slice/master/logo/slicelogo.png\\"\\n\\t\\ttitle=\\"@fireflysemantics/slice\\" \\n    description=\\"Lightweight Reactive Web Application State Management\\"\\n\\t\\tdomain=\\"www.npmjs.com\\" url=\\"https://www.npmjs.com/package/@fireflysemantics/slice\\">\\n</fs-link-preview>\\n\\n# Approach\\n\\nInclude [fs-link-preview](https://github.com/fireflysemantics/fs-link-preview) via CDN like this in your html page:\\n\\n\\n```\\n<script src=\\"https://unpkg.com/@fireflysemantics/fs-link-preview\\"><\/script>\\n```\\n\\nThen markup the element as is illustrated in this example:\\n\\n```\\n<fs-link-preview \\n\\n    imageURL=\\"https://raw.githubusercontent.com/fireflysemantics/slice/master/logo/slicelogo.png\\"\\n\\t\\t\\n    title=\\"@fireflysemantics/slice\\" \\n    \\n    description=\\"Lightweight Reactive Web Application State Management\\"\\n\\t\\t\\n    domain=\\"www.npmjs.com\\" \\n    \\n    url=\\"https://www.npmjs.com/package/@fireflysemantics/slice\\">\\n</fs-link-preview>\\n```\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Creating Link Previews With the Firefly Semantics fs-link-preview Web Component\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/typescript-fs-link-preview?file=index.html\\">\\n</fs-link-preview>","html":"<p>We want create a link preview with a:</p>\\n<ul>\\n<li><code>title</code></li>\\n<li><code>description</code></li>\\n<li><code>image</code></li>\\n<li><code>domain</code></li>\\n<li><code>url</code></li>\\n</ul>\\n<p>This is an example:</p>\\n<p><fs-link-preview imageURL=\'https://raw.githubusercontent.com/fireflysemantics/slice/master/logo/slicelogo.png\'\\n        title=\'@fireflysemantics/slice\' \\n    description=\'Lightweight Reactive Web Application State Management\'\\n        domain=\'www.npmjs.com\' url=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>\\n</fs-link-preview></p>\\n<h1 id=\'approach\'>Approach</h1>\\n<p>Include <a href=\'https://github.com/fireflysemantics/fs-link-preview\'>fs-link-preview</a> via CDN like this in your html page:</p>\\n<pre><code>&lt;script src=&quot;https://unpkg.com/@fireflysemantics/fs-link-preview&quot;&gt;&lt;/script&gt;\\n</code></pre>\\n<p>Then markup the element as is illustrated in this example:</p>\\n<pre><code>&lt;fs-link-preview \\n\\n    imageURL=&quot;https://raw.githubusercontent.com/fireflysemantics/slice/master/logo/slicelogo.png&quot;\\n        \\n    title=&quot;@fireflysemantics/slice&quot; \\n    \\n    description=&quot;Lightweight Reactive Web Application State Management&quot;\\n        \\n    domain=&quot;www.npmjs.com&quot; \\n    \\n    url=&quot;https://www.npmjs.com/package/@fireflysemantics/slice&quot;&gt;\\n&lt;/fs-link-preview&gt;\\n</code></pre>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Creating Link Previews With the Firefly Semantics fs-link-preview Web Component\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/typescript-fs-link-preview?file=index.html\'>\\n</fs-link-preview></p>\\n","summary":"Creating Link Previews With the Firefly Semantics fs-link-preview Web Component.","tags":["Web Component","HTML","JavaScript","TypeScript"],"tagString":"Web Component, HTML, JavaScript, TypeScript","author":"Ole Ersoy","date":"4/22/2021","headerImage":"volcano-2235125_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/volcano-2235125_1920.jpg","title":"Creating Link Previews With the Firefly Semantics fs-link-preview Web Component","readingTime":1,"wordCount":182}],"formulas":[],"concepts":[{"category":"Concepts","type":"concept","md5":"2ed8f9a83c2149bd516deea122c98eea","filename":"angular-view.md","path":"concepts/angular/angular-view.md","id":"concepts--angular--angular-view","markdown":"\\nThe **View** is something we route to. For example suppose our `HomeComponent` is routed to like this:\\n\\n```\\npath:\'home\', component: HomeComponent\\n```\\n\\nThe template rendered by the `HomeComponent` is the **View**.\\n\\n## Architectural Analysis\\n\\nThe **View** is the internal data structure that a component uses to represent itself and perform change detection.\\n\\nFor example for our `AppComponent` will have an `AppComponentView` that corresponds to the `<app-component>` dom element (declared component selector).\\n\\nIf that element is routed to then that\u2019s a View.\\n\\nWhen creating a components dynamically using a factory the View or Host View can be imperatively accessed like this:\\n\\n```\\nhelloComponentRef:ComponentRef = helloComponentFactory.create();\\nview: ViewRef = helloComponentRef.hostView;\\n```","html":"<p>The <strong>View</strong> is something we route to. For example suppose our <code>HomeComponent</code> is routed to like this:</p>\\n<pre><code>path:&#39;home&#39;, component: HomeComponent\\n</code></pre>\\n<p>The template rendered by the <code>HomeComponent</code> is the <strong>View</strong>.</p>\\n<h2 id=\'architectural-analysis\'>Architectural Analysis</h2>\\n<p>The <strong>View</strong> is the internal data structure that a component uses to represent itself and perform change detection.</p>\\n<p>For example for our <code>AppComponent</code> will have an <code>AppComponentView</code> that corresponds to the <code>&lt;app-component&gt;</code> dom element (declared component selector).</p>\\n<p>If that element is routed to then that\u2019s a View.</p>\\n<p>When creating a components dynamically using a factory the View or Host View can be imperatively accessed like this:</p>\\n<pre><code>helloComponentRef:ComponentRef = helloComponentFactory.create();\\nview: ViewRef = helloComponentRef.hostView;\\n</code></pre>\\n","summary":"Angular View.","tags":["Angular","JavaScript"],"tagString":"Angular, JavaScript","author":"Ole Ersoy","date":"5/2/2020","headerImage":"sunflower-1643794_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/sunflower-1643794_1920.jpg","title":"Angular View","readingTime":1,"wordCount":108},{"category":"Concepts","type":"concept","md5":"da3daaf2f406d45f21c9c3b0cc006318","filename":"what-is-an-angular-view-container.md","path":"concepts/angular/what-is-an-angular-view-container.md","id":"concepts--angular--what-is-an-angular-view-container","markdown":"\\nThe ViewContainer provides an API that makes changes or dynamic updates to an View safe. It contains two types of Views:\\n\\n- **Embedded**: Views created from a TemplateRef instance.\\n- **Host**: Views created using a component factory.\\n\\nAny element can serve as a `ViewContainer`, but it\u2019s usually implemented via `<ng-container #viewcontainer></ng-container>` as it is rendered as a comment and will not introduce additional DOM elements.\\n\\nTo get a reference to the `ViewContainer` within your AppComponent annotate the reference like this:\\n```\\nexport class AppComponent implements AfterViewChecked {\\n       @ViewChild(\'viewcontainer\', {read: ViewContainerRef}) viewContainer: ViewContainerRef;\\n}\\n```\\n\\nYou can also constructor inject a `ViewContainerRef` like this:\\n```\\nconstructor(private vc: ViewContainerRef) {  }\\n```\\n\\nIn this case the `ViewContainerRef` will use the component host element as the insertion point for any embedded or host views.","html":"<p>The ViewContainer provides an API that makes changes or dynamic updates to an View safe. It contains two types of Views:</p>\\n<ul>\\n<li><strong>Embedded</strong>: Views created from a TemplateRef instance.</li>\\n<li><strong>Host</strong>: Views created using a component factory.</li>\\n</ul>\\n<p>Any element can serve as a <code>ViewContainer</code>, but it\u2019s usually implemented via <code>&lt;ng-container #viewcontainer&gt;&lt;/ng-container&gt;</code> as it is rendered as a comment and will not introduce additional DOM elements.</p>\\n<p>To get a reference to the <code>ViewContainer</code> within your AppComponent annotate the reference like this:</p>\\n<pre><code>export class AppComponent implements AfterViewChecked {\\n       @ViewChild(&#39;viewcontainer&#39;, {read: ViewContainerRef}) viewContainer: ViewContainerRef;\\n}\\n</code></pre>\\n<p>You can also constructor inject a <code>ViewContainerRef</code> like this:</p>\\n<pre><code>constructor(private vc: ViewContainerRef) {  }\\n</code></pre>\\n<p>In this case the <code>ViewContainerRef</code> will use the component host element as the insertion point for any embedded or host views.</p>\\n","summary":"What is an Angular View Container?","tags":["Angular","JavaScript","TypeScript"],"tagString":"Angular, JavaScript, TypeScript","author":"Ole Ersoy","date":"2/19/2021","headerImage":"hot-air-balloon-2-3648832_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/hot-air-balloon-2-3648832_1920.jpg","title":"What is an Angular View Container?","readingTime":1,"wordCount":127},{"category":"Concepts","type":"concept","md5":"821b1ecabe3ab77775da32c79a7e3236","filename":"understanding-blockchain-block-signature-is.md","path":"concepts/blockchain/understanding-blockchain-block-signature-is.md","id":"concepts--blockchain--understanding-blockchain-block-signature-is","markdown":"\\nEach `block` in a `blockchain` has a unique signature.  A fingerprint.\\n\\nWhen [explaining what a blockchain block is](https://developer.fireflysemantics.com/concepts/concepts--blockchain--understanding-what-a-blockchain-block-is) we produced the signature using the `SHA256` algorithm\\n\\nThere are other algorithms like `MD5` that are commonly used to identify anything digital.\\n\\nFor example suppose I send you a file.  How do you know that the file was not tampered with in transmission?\\n\\nI could also send you the signature.  It will be a long number like:\\n\\n```\\n2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\\n```\\n\\nThat\'s the signature of `hello` using the `SHA256` encryption algorithm.\\n\\nYou can try it yourself here:\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Understanding What a Block Chain Block Signature Is\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/crypto-js-sha256-demo\\">\\n</fs-link-preview>\\n\\nIf you type `hello` into the field you will get the signature shown above.\\n\\nSo with that we can digitally sign anything.  When we share the signature we are proving that what we are sharing was not tampered with.","html":"<p>Each <code>block</code> in a <code>blockchain</code> has a unique signature.  A fingerprint.</p>\\n<p>When <a href=\'https://developer.fireflysemantics.com/concepts/concepts--blockchain--understanding-what-a-blockchain-block-is\'>explaining what a blockchain block is</a> we produced the signature using the <code>SHA256</code> algorithm</p>\\n<p>There are other algorithms like <code>MD5</code> that are commonly used to identify anything digital.</p>\\n<p>For example suppose I send you a file.  How do you know that the file was not tampered with in transmission?</p>\\n<p>I could also send you the signature.  It will be a long number like:</p>\\n<pre><code>2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\\n</code></pre>\\n<p>That&#39;s the signature of <code>hello</code> using the <code>SHA256</code> encryption algorithm.</p>\\n<p>You can try it yourself here:</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Understanding What a Block Chain Block Signature Is\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/crypto-js-sha256-demo\'>\\n</fs-link-preview></p>\\n<p>If you type <code>hello</code> into the field you will get the signature shown above.</p>\\n<p>So with that we can digitally sign anything.  When we share the signature we are proving that what we are sharing was not tampered with.</p>\\n","summary":"Understanding What a Blockchain Block Signature Is.","tags":["JavaScript","TypeScript","Crypto","Blockchain"],"tagString":"JavaScript, TypeScript, Crypto, Blockchain","author":"Ole Ersoy","date":"2/26/2021","headerImage":"finger-2081169_1280.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/finger-2081169_1280.jpg","title":"Understanding What a Blockchain Block Signature Is","readingTime":1,"wordCount":184},{"category":"Concepts","type":"concept","md5":"663016d34f7f7b10a4c49823e196dca0","filename":"understanding-what-a-blockchain-block-is.md","path":"concepts/blockchain/understanding-what-a-blockchain-block-is.md","id":"concepts--blockchain--understanding-what-a-blockchain-block-is","markdown":"\\nA blockchain block contains the following:\\n\\n- Transaction Data\\n- A cryptographic hash ( fingerprint / signature ) of it\u2019s content\\n- A nonce value ( A random number used for cryptographic computation )\\n- The hash of the previous block\\n- A time stamp of a recent verified transaction\\n\\nLets look at an example. We will use the NPM Packages [CryptoJS](https://www.npmjs.com/package/crypto-js) and [NanoID](https://www.npmjs.com/package/nanoid) to generate the signature and nonce.\\n\\nHere\u2019s our block (The properties are readonly and immutable - once set they are locked):\\n```\\nimport { SHA256 } from \\"crypto-js\\";\\nimport { nanoid } from \\"nanoid\\";\\nclass Block {\\n   constructor(\\n      public readonly index: number,\\n      public readonly timestamp: string,\\n      public readonly data: any,\\n      public readonly precedingHash: string,\\n      public readonly nonce?: string) {\\n        this.nonce = this.nonce ? this.nonce : nanoid();\\n      }\\n      signature() {\\n        return SHA256(\\n            this.index + \\n            this.precedingHash +\\n            this.timestamp +\\n            this.nonce +\\n            JSON.stringify(this.data)).toString();\\n       }\\n}\\n```\\nLets create two blocks with the same data. They should have the same signature:\\n```\\nconst transactionData = {\\nsender: \\"Ole Ersoy\\",\\nrecipient: \\"Satoshi Nakamoto\\",\\nquantity: 1\\n};\\nconst block1 = new Block(0, \\"02/02/2021\\", transactionData, \\"0\\", \\"nonce\\");\\nconst block2 = new Block(0, \\"02/02/2021\\", transactionData, \\"0\\", \\"nonce\\");\\nconsole.log(`Signature of Block 1: ${block1.signature()}`);\\nconsole.log(`Signature of Block 2: ${block2.signature()}`);\\n```\\n\\nSo we see that a Block has a unique signature that is determined by what it contains. \\n\\nThe fact that the properties are locked / immutable and now signed by the signature makes it very difficult to tamper with a block.\\n\\n# Demo\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Understanding What a Blockchain Block\xa0Is\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/blockchain-block\\">\\n</fs-link-preview>\\n","html":"<p>A blockchain block contains the following:</p>\\n<ul>\\n<li>Transaction Data</li>\\n<li>A cryptographic hash ( fingerprint / signature ) of it\u2019s content</li>\\n<li>A nonce value ( A random number used for cryptographic computation )</li>\\n<li>The hash of the previous block</li>\\n<li>A time stamp of a recent verified transaction</li>\\n</ul>\\n<p>Lets look at an example. We will use the NPM Packages <a href=\'https://www.npmjs.com/package/crypto-js\'>CryptoJS</a> and <a href=\'https://www.npmjs.com/package/nanoid\'>NanoID</a> to generate the signature and nonce.</p>\\n<p>Here\u2019s our block (The properties are readonly and immutable - once set they are locked):</p>\\n<pre><code>import { SHA256 } from &quot;crypto-js&quot;;\\nimport { nanoid } from &quot;nanoid&quot;;\\nclass Block {\\n   constructor(\\n      public readonly index: number,\\n      public readonly timestamp: string,\\n      public readonly data: any,\\n      public readonly precedingHash: string,\\n      public readonly nonce?: string) {\\n        this.nonce = this.nonce ? this.nonce : nanoid();\\n      }\\n      signature() {\\n        return SHA256(\\n            this.index + \\n            this.precedingHash +\\n            this.timestamp +\\n            this.nonce +\\n            JSON.stringify(this.data)).toString();\\n       }\\n}\\n</code></pre>\\n<p>Lets create two blocks with the same data. They should have the same signature:</p>\\n<pre><code>const transactionData = {\\nsender: &quot;Ole Ersoy&quot;,\\nrecipient: &quot;Satoshi Nakamoto&quot;,\\nquantity: 1\\n};\\nconst block1 = new Block(0, &quot;02/02/2021&quot;, transactionData, &quot;0&quot;, &quot;nonce&quot;);\\nconst block2 = new Block(0, &quot;02/02/2021&quot;, transactionData, &quot;0&quot;, &quot;nonce&quot;);\\nconsole.log(`Signature of Block 1: ${block1.signature()}`);\\nconsole.log(`Signature of Block 2: ${block2.signature()}`);\\n</code></pre>\\n<p>So we see that a Block has a unique signature that is determined by what it contains. </p>\\n<p>The fact that the properties are locked / immutable and now signed by the signature makes it very difficult to tamper with a block.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Understanding What a Blockchain Block\xa0Is\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/blockchain-block\'>\\n</fs-link-preview></p>\\n","summary":"Understanding What a Blockchain Block\xa0Is.","tags":["JavaScript","TypeScript","Crypto","Blockchain"],"tagString":"JavaScript, TypeScript, Crypto, Blockchain","author":"Ole Ersoy","date":"2/26/2021","headerImage":"jellyfish-1167756_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jellyfish-1167756_1920.jpg","title":"Understanding What a Blockchain Block\xa0Is","readingTime":2,"wordCount":282},{"category":"Concepts","type":"concept","md5":"11ac4bab32ba609e6c0a80f2c32aad91","filename":"understanding-the-rxjs-observable-contract.md","path":"concepts/rxjs/understanding-the-rxjs-observable-contract.md","id":"concepts--rxjs--understanding-the-rxjs-observable-contract","markdown":"\\nAn `Observable<E>` can emit zero or more values of type `E` . \\n\\nThe `E` typed values can be mouse click events, price updates on a stock, etc., and are emitted until the observable stream completes or errors out.\\n\\nThe `Observable` does not have to complete or error out.  Both are optional and mutually exclusive. \\n\\n\\nBoth completion and erroring out end the Observable<E> lifecycle, and no more values will be emitted.\\n\\n# Demo\\n\\nIn the below demo we use of to create an `Observable<string>` of the greeting `Hola!`.\\n\\nWith this subscription it logs `Hola!` and completes:\\n```\\nlet emitAndComplete: Observable<string> = of(\\"Hola!\\");\\nconst subscription: Subscription = emitAndComplete.subscribe(\\n    greeting => console.log(greeting),\\n    () => console.log(\\"Oh oh - we received an error\\"),\\n    () => console.log(\\"Finito!\\")\\n);\\n```\\n\\nWith this subscription it logs the error, and neither emits or completes:\\n```\\nlet catchMeIfYouCan: Observable<string> = throwError(\\"Catch me if you can\\");\\ncatchMeIfYouCan.subscribe(\\n    () => console.log(\\"Next handler will not execute\\"),\\n    e => console.error(e),\\n    () => console.log(\\"Completion handler will not execute\\")\\n);\\n```\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"Understanding The RxJs Observable Contract\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/rxjs-contract?file=index.ts\\">\\n</fs-link-preview>\\n","html":"<p>An <code>Observable&lt;E&gt;</code> can emit zero or more values of type <code>E</code> . </p>\\n<p>The <code>E</code> typed values can be mouse click events, price updates on a stock, etc., and are emitted until the observable stream completes or errors out.</p>\\n<p>The <code>Observable</code> does not have to complete or error out.  Both are optional and mutually exclusive. </p>\\n<p>Both completion and erroring out end the Observable<E> lifecycle, and no more values will be emitted.</p>\\n<h1 id=\'demo\'>Demo</h1>\\n<p>In the below demo we use of to create an <code>Observable&lt;string&gt;</code> of the greeting <code>Hola!</code>.</p>\\n<p>With this subscription it logs <code>Hola!</code> and completes:</p>\\n<pre><code>let emitAndComplete: Observable&lt;string&gt; = of(&quot;Hola!&quot;);\\nconst subscription: Subscription = emitAndComplete.subscribe(\\n    greeting =&gt; console.log(greeting),\\n    () =&gt; console.log(&quot;Oh oh - we received an error&quot;),\\n    () =&gt; console.log(&quot;Finito!&quot;)\\n);\\n</code></pre>\\n<p>With this subscription it logs the error, and neither emits or completes:</p>\\n<pre><code>let catchMeIfYouCan: Observable&lt;string&gt; = throwError(&quot;Catch me if you can&quot;);\\ncatchMeIfYouCan.subscribe(\\n    () =&gt; console.log(&quot;Next handler will not execute&quot;),\\n    e =&gt; console.error(e),\\n    () =&gt; console.log(&quot;Completion handler will not execute&quot;)\\n);\\n</code></pre>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'Understanding The RxJs Observable Contract\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/rxjs-contract?file=index.ts\'>\\n</fs-link-preview></p>\\n","summary":"Understanding The RxJs Observable Contract.","tags":["JavaScript","RxJs","TypeScript"],"tagString":"JavaScript, RxJs, TypeScript","author":"Ole Ersoy","date":"2/22/2021","headerImage":"leopard-2895448_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/leopard-2895448_1920.jpg","title":"Understanding The RxJs Observable Contract","readingTime":2,"wordCount":201},{"category":"Concepts","type":"concept","md5":"620ae66c586452b20f94c1437a82022e","filename":"what-is-reactive-state-management.md","path":"concepts/slice/what-is-reactive-state-management.md","id":"concepts--slice--what-is-reactive-state-management","markdown":"\\n**Reactive State** is state that updates continuously in response to specific events and is `Observable`.\\n\\nLets develop a real world Typescript Stackblitz example using the [Firefly Semantic Reactive Entity Store](https://www.npmjs.com/package/@fireflysemantics/slice).\\n\\nIf doing this from scratch make sure to add [Firefly Semantics Slice](https://www.npmjs.com/package/@fireflysemantics/slice) to the dependencies of the Stackblitz.\\n\\n<fs-link-preview \\n    imageURL=\\"https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\\"\\n  \\ttitle=\\"Stackblitz Demo\\" \\n    description=\\"What is Reactive State Management\\"\\n  \\tdomain=\\"stackblitz.com\\" \\n    url=\\"https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-7t7tpl\\">\\n</fs-link-preview>\\n\\nThe entity store will be populated with `Todo` instances:\\n\\n```\\ninterface Todo {\\ngid?: string;\\nid?: string;\\ncomplete: boolean;\\ntitle: string;\\n}\\n```\\n\\nEach time we add a new `Todo` to the store, the store will respond reactively by updating the `count` observable tied to it.\\n\\nThe function used to observe the count updates looks like this:\\n\\n```\\nfunction countSubscription(c) {\\n    console.log(`The current Todo count is ${c}`);\\n}\\n```\\n\\nAnd we observe the stores `count` `Observable` like this:\\n\\nThe `Todo` instances we will be adding are as follows:\\n\\n```\\nconst TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: \'You complete me!\',\\n};\\nconst TODO2: Todo = {\\n   id: TODO_ID_2,\\n   complete: true,\\n   title: \'You completed me!\',\\n};\\n```\\n\\n\\nEach time a `Todo` is added the `count` will update and we will see a logging notification. Initially this will be logged:\\n```\\nTodo entity count: 0\\n```\\n\\nThat logging statement is triggered when the our `countSubscription()` function is subscribed to the `count` `Observable`.\\n\\nLets add the first Todo:\\n```\\ntodoStore.post(TODO1);\\n```\\n\\nWe now see that `Todo entity count: 1` is logged.\\n\\nLets add the second one:\\n```\\ntodoStore.post(TODO2);\\n```\\n\\nWe now see that `Todo entity count: 2` is logged.\\n\\nWe can imagine this being used in for example a shopping cart where we want to update and display the number of items in the cart reactively as they are added.","html":"<p><strong>Reactive State</strong> is state that updates continuously in response to specific events and is <code>Observable</code>.</p>\\n<p>Lets develop a real world Typescript Stackblitz example using the <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantic Reactive Entity Store</a>.</p>\\n<p>If doing this from scratch make sure to add <a href=\'https://www.npmjs.com/package/@fireflysemantics/slice\'>Firefly Semantics Slice</a> to the dependencies of the Stackblitz.</p>\\n<p><fs-link-preview \\n    imageURL=\'https://fireflysemantics.github.io/i/developer/stackblitz.jpeg\'\\n      title=\'Stackblitz Demo\' \\n    description=\'What is Reactive State Management\'\\n      domain=\'stackblitz.com\' \\n    url=\'https://stackblitz.com/edit/firefly-semantics-slice-entity-guide-7t7tpl\'>\\n</fs-link-preview></p>\\n<p>The entity store will be populated with <code>Todo</code> instances:</p>\\n<pre><code>interface Todo {\\ngid?: string;\\nid?: string;\\ncomplete: boolean;\\ntitle: string;\\n}\\n</code></pre>\\n<p>Each time we add a new <code>Todo</code> to the store, the store will respond reactively by updating the <code>count</code> observable tied to it.</p>\\n<p>The function used to observe the count updates looks like this:</p>\\n<pre><code>function countSubscription(c) {\\n    console.log(`The current Todo count is ${c}`);\\n}\\n</code></pre>\\n<p>And we observe the stores <code>count</code> <code>Observable</code> like this:</p>\\n<p>The <code>Todo</code> instances we will be adding are as follows:</p>\\n<pre><code>const TODO1: Todo = {\\n    id: TODO_ID_1,\\n    complete: false,\\n    title: &#39;You complete me!&#39;,\\n};\\nconst TODO2: Todo = {\\n   id: TODO_ID_2,\\n   complete: true,\\n   title: &#39;You completed me!&#39;,\\n};\\n</code></pre>\\n<p>Each time a <code>Todo</code> is added the <code>count</code> will update and we will see a logging notification. Initially this will be logged:</p>\\n<pre><code>Todo entity count: 0\\n</code></pre>\\n<p>That logging statement is triggered when the our <code>countSubscription()</code> function is subscribed to the <code>count</code> <code>Observable</code>.</p>\\n<p>Lets add the first Todo:</p>\\n<pre><code>todoStore.post(TODO1);\\n</code></pre>\\n<p>We now see that <code>Todo entity count: 1</code> is logged.</p>\\n<p>Lets add the second one:</p>\\n<pre><code>todoStore.post(TODO2);\\n</code></pre>\\n<p>We now see that <code>Todo entity count: 2</code> is logged.</p>\\n<p>We can imagine this being used in for example a shopping cart where we want to update and display the number of items in the cart reactively as they are added.</p>\\n","summary":"What is Reactive State Management","tags":["JavaScript","RxJs","TypeScript","Slice"],"tagString":"JavaScript, RxJs, TypeScript, Slice","author":"Ole Ersoy","date":"4/26/2022","headerImage":"jelly-fish-4012255_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/jelly-fish-4012255_1920.jpg","title":"What is Reactive State Management","readingTime":2,"wordCount":314},{"category":"Concepts","type":"concept","md5":"6cfe645766ff96935da32d04d4ecd767","filename":"the-value-of-typescript.md","path":"concepts/typescript/the-value-of-typescript.md","id":"concepts--typescript--the-value-of-typescript","markdown":"\\nWe have an array of functions that validate data.  \\n\\nWe\'ve defined an function type signature for the validators that looks like this:\\n\\n```\\nexport type ValidationFunctionSignature = ( dataMap: Map<number, CsvSelectionData> ) => IndexedMetaError | null\\n```\\n\\nAll the functions must be designed according to this signature.\\n\\nWe can then create an array of the functions:\\n\\n```\\n/**\\n * Sequenced array of validators\\n */\\nvalidators: ValidationFunctionSignature[] = [validateKeyValues,validateUniqueKeys]\\n```\\n\\nNow suppose we change the return type of `validateKeyValues` to boolean.  So it\'s defined like this:\\n\\n```\\nfunction validateKeyValues(...):boolean\\n```\\n\\nVSCode will now immediately notice that `validateKeyValues` no longer conforms to the `ValidationFunctionSignature` and flag it as an error.\\n","html":"<p>We have an array of functions that validate data.  </p>\\n<p>We&#39;ve defined an function type signature for the validators that looks like this:</p>\\n<pre><code>export type ValidationFunctionSignature = ( dataMap: Map&lt;number, CsvSelectionData&gt; ) =&gt; IndexedMetaError | null\\n</code></pre>\\n<p>All the functions must be designed according to this signature.</p>\\n<p>We can then create an array of the functions:</p>\\n<pre><code>/**\\n * Sequenced array of validators\\n */\\nvalidators: ValidationFunctionSignature[] = [validateKeyValues,validateUniqueKeys]\\n</code></pre>\\n<p>Now suppose we change the return type of <code>validateKeyValues</code> to boolean.  So it&#39;s defined like this:</p>\\n<pre><code>function validateKeyValues(...):boolean\\n</code></pre>\\n<p>VSCode will now immediately notice that <code>validateKeyValues</code> no longer conforms to the <code>ValidationFunctionSignature</code> and flag it as an error.</p>\\n","summary":"The Value of Typescript.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"4/10/2021","headerImage":"eagle-4130966_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/eagle-4130966_1920.jpg","title":"The Value of Typescript","readingTime":1,"wordCount":98},{"category":"Concepts","type":"concept","md5":"fc15f48dd1e6cac667cbceccb7050b3e","filename":"typescript-indexable-types.md","path":"concepts/typescript/typescript-indexable-types.md","id":"concepts--typescript--typescript-indexable-types","markdown":"\\nTypescript and Javascript support indexing by number as in arrays and by `string` as in associative arrays or `Object` ( `{}` ) instances.\\n\\nTypescript Indexable Types allow us to be explicit about the key signature.  \\n\\n# Examples\\n\\n## Associate Array\\n\\n```\\ninterface KeyBoolean {\\n    [key: string]: boolean\\n}\\n```\\n\\nObjects implementing this interface will have a key of type `string` and the values will be of type `boolean`.\\n\\n```\\nlet kv: KeyBoolean = {\'FOCUSED\': true, \'BLURRED\':false};\\nconsole.log(kv); // { FOCUSED: true, FOCUSED: false }\\n```\\n\\nFor maximum flexibility with respect to values keyed use any as the type:\\n```\\ninterface KeyAny {\\n    [key: string]: any\\n}\\n\\n\\nlet ka:KeyAny = {};\\nka.dateOfBirth = new Date(0);\\nka.firstName = \'Mozart\';\\n```\\n\\n## Function Signature\\n\\nThis function takes a `peopleObject` argument\\nthat maps a person string ID to the person:\\n```\\nfunction objectArgument(peopleObject: { [key: string]: Person })\\n```\\n\\n## Positional Indexer\\n```\\ninterface Elements {\\n    [key:number]: string;\\n}\\n\\nlet e:Elements = [\'Hydrogen\', \'Helium\', \'Lithium\'];\\nconsole.log(e);   //[\'Hydrogen\', \'Helium\', \'Lithium\']\\nconsole.log(e[0]; //Hydrogen \\n//This is the same as declaring:\\nlet e:string[] = [\'Hydrogen\', \'Helium\', \'Lithium\'];\\n```\\n\\nFor positional indexers we can include additional properties that are part of the array prototype:\\n\\n```\\ninterface Elements {\\n    [index: number]: string;\\n    length: number;\\n    push(): number;\\n    pop(): string;\\n}\\n```","html":"<p>Typescript and Javascript support indexing by number as in arrays and by <code>string</code> as in associative arrays or <code>Object</code> ( <code>{}</code> ) instances.</p>\\n<p>Typescript Indexable Types allow us to be explicit about the key signature.  </p>\\n<h1 id=\'examples\'>Examples</h1>\\n<h2 id=\'associate-array\'>Associate Array</h2>\\n<pre><code>interface KeyBoolean {\\n    [key: string]: boolean\\n}\\n</code></pre>\\n<p>Objects implementing this interface will have a key of type <code>string</code> and the values will be of type <code>boolean</code>.</p>\\n<pre><code>let kv: KeyBoolean = {&#39;FOCUSED&#39;: true, &#39;BLURRED&#39;:false};\\nconsole.log(kv); // { FOCUSED: true, FOCUSED: false }\\n</code></pre>\\n<p>For maximum flexibility with respect to values keyed use any as the type:</p>\\n<pre><code>interface KeyAny {\\n    [key: string]: any\\n}\\n\\n\\nlet ka:KeyAny = {};\\nka.dateOfBirth = new Date(0);\\nka.firstName = &#39;Mozart&#39;;\\n</code></pre>\\n<h2 id=\'function-signature\'>Function Signature</h2>\\n<p>This function takes a <code>peopleObject</code> argument\\nthat maps a person string ID to the person:</p>\\n<pre><code>function objectArgument(peopleObject: { [key: string]: Person })\\n</code></pre>\\n<h2 id=\'positional-indexer\'>Positional Indexer</h2>\\n<pre><code>interface Elements {\\n    [key:number]: string;\\n}\\n\\nlet e:Elements = [&#39;Hydrogen&#39;, &#39;Helium&#39;, &#39;Lithium&#39;];\\nconsole.log(e);   //[&#39;Hydrogen&#39;, &#39;Helium&#39;, &#39;Lithium&#39;]\\nconsole.log(e[0]; //Hydrogen \\n//This is the same as declaring:\\nlet e:string[] = [&#39;Hydrogen&#39;, &#39;Helium&#39;, &#39;Lithium&#39;];\\n</code></pre>\\n<p>For positional indexers we can include additional properties that are part of the array prototype:</p>\\n<pre><code>interface Elements {\\n    [index: number]: string;\\n    length: number;\\n    push(): number;\\n    pop(): string;\\n}\\n</code></pre>\\n","summary":"Typescript Indexable Types.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"2/22/2021","headerImage":"frog-69813_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/frog-69813_1920.jpg","title":"Typescript Indexable Types","readingTime":1,"wordCount":187},{"category":"Concepts","type":"concept","md5":"ed19b7001004c729ad19949d8f08ecee","filename":"typescript-partial.md","path":"concepts/typescript/typescript-partial.md","id":"concepts--typescript--typescript-partial","markdown":"\\nA `Partial<T>` lets you pass in partial implementation or an `interface` or `type` as an argument to a function. \\n\\nLets look at a simple example.  Suppose you have a function that updates some product data like this:\\n\\n```\\ninterface Product {\\n   name: string;\\n   description: string;\\n}\\nlet currentProduct: Product = {\\n   name: \\"FS2000\\",\\n   description: \\"Hippie Control\\"\\n};\\nfunction update1(product: Product) {\\n   Object.assign(currentProduct, product);\\n}\\n```\\n\\nWhenever Typescript sees that you are using the `update1` function it wants you to pass in an instance that implements the entire Product interface. \\n\\nPassing in a `Partial` will result in compiler errors.\\n\\nHowever if you let the function know that it should be expecting a `Partial` like this:\\n\\n```\\nfunction update2(product: Partial<Product>) {\\n    Object.assign(currentProduct, product);\\n}\\n```\\n\\nThen no compiler errors are produced and `product` can partially implement the `interface` or `type`.\\n","html":"<p>A <code>Partial&lt;T&gt;</code> lets you pass in partial implementation or an <code>interface</code> or <code>type</code> as an argument to a function. </p>\\n<p>Lets look at a simple example.  Suppose you have a function that updates some product data like this:</p>\\n<pre><code>interface Product {\\n   name: string;\\n   description: string;\\n}\\nlet currentProduct: Product = {\\n   name: &quot;FS2000&quot;,\\n   description: &quot;Hippie Control&quot;\\n};\\nfunction update1(product: Product) {\\n   Object.assign(currentProduct, product);\\n}\\n</code></pre>\\n<p>Whenever Typescript sees that you are using the <code>update1</code> function it wants you to pass in an instance that implements the entire Product interface. </p>\\n<p>Passing in a <code>Partial</code> will result in compiler errors.</p>\\n<p>However if you let the function know that it should be expecting a <code>Partial</code> like this:</p>\\n<pre><code>function update2(product: Partial&lt;Product&gt;) {\\n    Object.assign(currentProduct, product);\\n}\\n</code></pre>\\n<p>Then no compiler errors are produced and <code>product</code> can partially implement the <code>interface</code> or <code>type</code>.</p>\\n","summary":"Typescript Partial.","tags":["JavaScript","TypeScript"],"tagString":"JavaScript, TypeScript","author":"Ole Ersoy","date":"5/2/2020","headerImage":"lemon-2014_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/lemon-2014_1920.jpg","title":"Typecript Partial","readingTime":1,"wordCount":133}],"examples":[{"category":"Examples","type":"example","md5":"21c81ce85327470edb119cdbc3ea50cc","filename":"minimal-angular-service.md","path":"examples/angular/minimal-angular-service.md","id":"examples--angular--minimal-angular-service","markdown":"\\n```\\nimport { Injectable } from \\"@angular/core\\";\\n\\n@Injectable({\\n  providedIn: \\"root\\"\\n})\\nexport class TodoService {\\n  constructor() {}\\n}\\n```","html":"<pre><code>import { Injectable } from &quot;@angular/core&quot;;\\n\\n@Injectable({\\n  providedIn: &quot;root&quot;\\n})\\nexport class TodoService {\\n  constructor() {}\\n}\\n</code></pre>\\n","summary":"Minimal Angular Service.","tags":["Angular","TypeScript","JavaScript"],"tagString":"Angular, TypeScript, JavaScript","author":"Ole Ersoy","date":"3/11/2021","headerImage":"coffee-171653_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/coffee-171653_1920.jpg","title":"Minimal Angular Service","readingTime":1,"wordCount":12},{"category":"Examples","type":"example","md5":"9e9c8771286a6a4e951d84d2d41341ec","filename":"minial-angular-slice-object-store-state-service.md","path":"examples/slice/minial-angular-slice-object-store-state-service.md","id":"examples--slice--minial-angular-slice-object-store-state-service","markdown":"\\n```\\nimport { Injectable } from \\"@angular/core\\";\\nimport { KeyObsValueReset, ObsValueReset, OStore, OStoreStart } from \'@fireflysemantics/slice\'\\nimport { Observable } from \\"rxjs\\";\\n\\nconst START: OStoreStart = {\\n    IS_TOS_ACCEPTED: { value: false }\\n}\\n\\ninterface ISTART extends KeyObsValueReset {\\n    IS_TOS_ACCEPTED: ObsValueReset\\n}\\n\\n@Injectable({\\n    providedIn: \\"root\\"\\n})\\nexport class StateService {\\n    constructor() { }\\n    public OS: OStore<ISTART> = new OStore(START)\\n    public isTOSAccepted$:Observable<boolean> = this.OS.S.IS_TOS_ACCEPTED.obs\\n}\\n```","html":"<pre><code>import { Injectable } from &quot;@angular/core&quot;;\\nimport { KeyObsValueReset, ObsValueReset, OStore, OStoreStart } from &#39;@fireflysemantics/slice&#39;\\nimport { Observable } from &quot;rxjs&quot;;\\n\\nconst START: OStoreStart = {\\n    IS_TOS_ACCEPTED: { value: false }\\n}\\n\\ninterface ISTART extends KeyObsValueReset {\\n    IS_TOS_ACCEPTED: ObsValueReset\\n}\\n\\n@Injectable({\\n    providedIn: &quot;root&quot;\\n})\\nexport class StateService {\\n    constructor() { }\\n    public OS: OStore&lt;ISTART&gt; = new OStore(START)\\n    public isTOSAccepted$:Observable&lt;boolean&gt; = this.OS.S.IS_TOS_ACCEPTED.obs\\n}\\n</code></pre>\\n","summary":"Minimal Angular Slice Object Store State Service.","tags":["Angular","Slice","TypeScript","JavaScript"],"tagString":"Angular, Slice, TypeScript, JavaScript","author":"Ole Ersoy","date":"3/12/2021","headerImage":"iceland-1979445_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/iceland-1979445_1920.jpg","title":"Minimal Angular Slice Object Store State Service","readingTime":1,"wordCount":52},{"category":"Examples","type":"example","md5":"65c0cd81a46625f9e9ac2db2bf1a61b4","filename":"minimal-slice-object-store.md","path":"examples/slice/minimal-slice-object-store.md","id":"examples--slice--minimal-slice-object-store","markdown":"\\n```\\nimport { ObsValueReset, OStore, OStoreStart } from \'@fireflysemantics/slice\'\\nconst START:OStoreStart = {\\n   K1: { value: \'V1\'  }\\n}\\ninterface ISTART {  \\n    K1: ObsValueReset\\n}\\nlet OS:OStore<ISTART> = new OStore(START)\\n```","html":"<pre><code>import { ObsValueReset, OStore, OStoreStart } from &#39;@fireflysemantics/slice&#39;\\nconst START:OStoreStart = {\\n   K1: { value: &#39;V1&#39;  }\\n}\\ninterface ISTART {  \\n    K1: ObsValueReset\\n}\\nlet OS:OStore&lt;ISTART&gt; = new OStore(START)\\n</code></pre>\\n","summary":"Minimal Slice Object Store.","tags":["Slice","TypeScript","JavaScript"],"tagString":"Slice, TypeScript, JavaScript","author":"Ole Ersoy","date":"3/11/2021","headerImage":"water-747618_1920.jpg","headerImageURL":"https://fireflysemantics.github.io/i/developer/water-747618_1920.jpg","title":"Minimal Slice Object Store","readingTime":1,"wordCount":24}]}}');let pj=(()=>{class e{constructor(e){this.r=e,e.events.pipe(Yu(e=>e instanceof _h),C(e=>e.url)).subscribe(e=>{gtag&&gtag("event",e,{event_category:"APP_NAVIGATION"})})}}return e.\u0275fac=function(t){return new(t||e)(ho(Yg))},e.\u0275prov=ue({factory:function(){return new e(ho(Yg))},token:e,providedIn:"root"}),e})();const uj=function(){return["Guides","Tasks","Concepts","Examples"]};let hj=(()=>{class e{constructor(e,t,n){this.seo=e,this.s=t,this.a=n,this.content=dj,e.setTitle(RD),e.addTags(qD.GLOBAL_META_TAGS_KEY),t.init(this.content)}}return e.\u0275fac=function(t){return new(t||e)(ja(rD),ja(oD),ja(pj))},e.\u0275cmp=We({type:e,selectors:[["app-root"]],decls:4,vars:2,consts:[[3,"menus"],[1,"Outlet","MinimumPadding"]],template:function(e,t){1&e&&(Pa(0,"fs-toolbar",0),Ma(1,"body"),Ma(2,"main",1),Pa(3,"router-outlet"),Fa(),Fa()),2&e&&Ra("menus",Wl(1,uj))},directives:[xD,ef],styles:[""]}),e})(),mj=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=Ge({type:e,bootstrap:[hj]}),e.\u0275inj=he({providers:[],imports:[[wu,FD,ow,$O,yk,cj,ZA,HO]]}),e})();(function(){if(Zc)throw new Error("Cannot enable prod mode after platform setup.");Qc=!1})(),yu().bootstrapModule(mj).catch(e=>console.error(e))}},e=>{"use strict";e(e.s=417)}]);